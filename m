Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 2166FEAEB7
	for <lists+openrisc@lfdr.de>; Thu, 31 Oct 2019 12:21:30 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 036CC2077F;
	Thu, 31 Oct 2019 12:21:30 +0100 (CET)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id A365D20740
 for <openrisc@lists.librecores.org>; Tue, 29 Oct 2019 07:49:50 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=Y//J7ajRC33vT7WRdo9HmDkxMP7T4Bv/HYKk+dDUgbA=; b=k8Lr/asQo+pvyPBKu88ZeCBRL6
 r52fGWtEYStVV89q0MukjdTGLs0OZ6lfotw7BeZ08t5cwet8eHOo7oQw1w2Lx5bWzBRzEG61SYe9G
 TT6+lwZ9QH81LOYJ48xaM+Nnhq8AJ1h8VDrk48FgVE1uGbg8wtpJWB0q7DqbiZEoApUArr8VeRc8C
 WGkWItBZtPcxvx963ThOuPXM0KJIAtTi9YlA2ivZ4aY1JavX476HwPE3d4ODOoc/oFepXekdYvtER
 sauF6w7bO4Iemz+0h8uVysJDmQODI6vgjxtwDAB3K5o3eGNlKQQoXKy2SJQgu5i0VJQHDBFIqw6j8
 IwCkEO9Q==;
Received: from [2001:4bb8:18c:c7d:c70:4a89:bc61:2] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iPLJt-000498-OC; Tue, 29 Oct 2019 06:49:34 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Tue, 29 Oct 2019 07:48:31 +0100
Message-Id: <20191029064834.23438-19-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191029064834.23438-1-hch@lst.de>
References: <20191029064834.23438-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Thu, 31 Oct 2019 12:21:19 +0100
Subject: [OpenRISC] [PATCH 18/21] riscv: use the generic ioremap code
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, Paul Walmsley <paul.walmsley@sifive.com>,
 linux-mips@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 linux-mtd@lists.infradead.org, linux-alpha@vger.kernel.org,
 sparclinux@vger.kernel.org, nios2-dev@lists.rocketboards.org,
 linux-riscv@lists.infradead.org, linux-snps-arc@lists.infradead.org,
 linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VXNlIHRoZSBnZW5lcmljIGlvcmVtYXAgY29kZSBpbnN0ZWFkIG9mIHByb3ZpZGluZyBhIGxvY2Fs
IHZlcnNpb24uCk5vdGUgdGhhdCB0aGlzIHJlbGllcyBvbiB0aGUgYXNtLWdlbmVyaWMgbm8tb3Ag
ZGVmaW5pdGlvbiBvZgpwZ3Byb3Rfbm9uY2FjaGVkLgoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0b3Bo
IEhlbGx3aWcgPGhjaEBsc3QuZGU+ClJldmlld2VkLWJ5OiBQYXVsIFdhbG1zbGV5IDxwYXVsLndh
bG1zbGV5QHNpZml2ZS5jb20+ClRlc3RlZC1ieTogUGF1bCBXYWxtc2xleSA8cGF1bC53YWxtc2xl
eUBzaWZpdmUuY29tPiAjIHJ2MzIsIHJ2NjQgYm9vdApBY2tlZC1ieTogUGF1bCBXYWxtc2xleSA8
cGF1bC53YWxtc2xleUBzaWZpdmUuY29tPiAjIGFyY2gvcmlzY3YKLS0tCiBhcmNoL3Jpc2N2L0tj
b25maWcgICAgICAgICAgICAgICB8ICAxICsKIGFyY2gvcmlzY3YvaW5jbHVkZS9hc20vaW8uaCAg
ICAgIHwgIDMgLS0KIGFyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS5oIHwgIDYgKysrCiBh
cmNoL3Jpc2N2L21tL01ha2VmaWxlICAgICAgICAgICB8ICAxIC0KIGFyY2gvcmlzY3YvbW0vaW9y
ZW1hcC5jICAgICAgICAgIHwgODQgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDUg
ZmlsZXMgY2hhbmdlZCwgNyBpbnNlcnRpb25zKCspLCA4OCBkZWxldGlvbnMoLSkKIGRlbGV0ZSBt
b2RlIDEwMDY0NCBhcmNoL3Jpc2N2L21tL2lvcmVtYXAuYwoKZGlmZiAtLWdpdCBhL2FyY2gvcmlz
Y3YvS2NvbmZpZyBiL2FyY2gvcmlzY3YvS2NvbmZpZwppbmRleCA4ZWViYmM4ODYwYmIuLmEwMmU5
MWVkNzQ3YSAxMDA2NDQKLS0tIGEvYXJjaC9yaXNjdi9LY29uZmlnCisrKyBiL2FyY2gvcmlzY3Yv
S2NvbmZpZwpAQCAtMzAsNiArMzAsNyBAQCBjb25maWcgUklTQ1YKIAlzZWxlY3QgR0VORVJJQ19T
VFJOTEVOX1VTRVIKIAlzZWxlY3QgR0VORVJJQ19TTVBfSURMRV9USFJFQUQKIAlzZWxlY3QgR0VO
RVJJQ19BVE9NSUM2NCBpZiAhNjRCSVQKKwlzZWxlY3QgR0VORVJJQ19JT1JFTUFQCiAJc2VsZWN0
IEhBVkVfQVJDSF9BVURJVFNZU0NBTEwKIAlzZWxlY3QgSEFWRV9BU01fTU9EVkVSU0lPTlMKIAlz
ZWxlY3QgSEFWRV9NRU1CTE9DS19OT0RFX01BUApkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9pbmNs
dWRlL2FzbS9pby5oIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9pby5oCmluZGV4IGMxZGU2ODc1
Y2M3Ny4uZGY0Yzg4MTJmZjY0IDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL2lv
LmgKKysrIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9pby5oCkBAIC0xNCw5ICsxNCw2IEBACiAj
aW5jbHVkZSA8bGludXgvdHlwZXMuaD4KICNpbmNsdWRlIDxhc20vbW1pb3diLmg+CiAKLWV4dGVy
biB2b2lkIF9faW9tZW0gKmlvcmVtYXAocGh5c19hZGRyX3Qgb2Zmc2V0LCB1bnNpZ25lZCBsb25n
IHNpemUpOwotZXh0ZXJuIHZvaWQgaW91bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9tZW0gKmFkZHIp
OwotCiAvKiBHZW5lcmljIElPIHJlYWQvd3JpdGUuICBUaGVzZSBwZXJmb3JtIG5hdGl2ZS1lbmRp
YW4gYWNjZXNzZXMuICovCiAjZGVmaW5lIF9fcmF3X3dyaXRlYiBfX3Jhd193cml0ZWIKIHN0YXRp
YyBpbmxpbmUgdm9pZCBfX3Jhd193cml0ZWIodTggdmFsLCB2b2xhdGlsZSB2b2lkIF9faW9tZW0g
KmFkZHIpCmRpZmYgLS1naXQgYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2Fy
Y2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IDAzNTJmMjBjMjlmNC4uOWZkOGE2
YjI3NjcwIDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysg
Yi9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtNjEsNiArNjEsMTIgQEAKIAog
I2RlZmluZSBQQUdFX1RBQkxFCQlfX3BncHJvdChfUEFHRV9UQUJMRSkKIAorLyoKKyAqIFRoZSBS
SVNDLVYgSVNBIGRvZXNuJ3QgeWV0IHNwZWNpZnkgaG93IHRvIHF1ZXJ5IG9yIG1vZGlmeSBQTUFz
LCBzbyB3ZSBjYW4ndAorICogY2hhbmdlIHRoZSBwcm9wZXJ0aWVzIG9mIG1lbW9yeSByZWdpb25z
LgorICovCisjZGVmaW5lIF9QQUdFX0lPUkVNQVAgX1BBR0VfS0VSTkVMCisKIGV4dGVybiBwZ2Rf
dCBzd2FwcGVyX3BnX2RpcltdOwogCiAvKiBNQVBfUFJJVkFURSBwZXJtaXNzaW9uczogeHdyIChj
b3B5LW9uLXdyaXRlKSAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9tbS9NYWtlZmlsZSBiL2Fy
Y2gvcmlzY3YvbW0vTWFrZWZpbGUKaW5kZXggOWQ5YTE3MzM1Njg2Li5iM2EzNTZjODBjMWYgMTAw
NjQ0Ci0tLSBhL2FyY2gvcmlzY3YvbW0vTWFrZWZpbGUKKysrIGIvYXJjaC9yaXNjdi9tbS9NYWtl
ZmlsZQpAQCAtOCw3ICs4LDYgQEAgZW5kaWYKIG9iai15ICs9IGluaXQubwogb2JqLXkgKz0gZmF1
bHQubwogb2JqLXkgKz0gZXh0YWJsZS5vCi1vYmoteSArPSBpb3JlbWFwLm8KIG9iai15ICs9IGNh
Y2hlZmx1c2gubwogb2JqLXkgKz0gY29udGV4dC5vCiBvYmoteSArPSBzaWZpdmVfbDJfY2FjaGUu
bwpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9tbS9pb3JlbWFwLmMgYi9hcmNoL3Jpc2N2L21tL2lv
cmVtYXAuYwpkZWxldGVkIGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggYWM2MjFkZGI0NWMwLi4wMDAw
MDAwMDAwMDAKLS0tIGEvYXJjaC9yaXNjdi9tbS9pb3JlbWFwLmMKKysrIC9kZXYvbnVsbApAQCAt
MSw4NCArMCwwIEBACi0vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5Ci0v
KgotICogKEMpIENvcHlyaWdodCAxOTk1IDE5OTYgTGludXMgVG9ydmFsZHMKLSAqIChDKSBDb3B5
cmlnaHQgMjAxMiBSZWdlbnRzIG9mIHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEKLSAqLwot
Ci0jaW5jbHVkZSA8bGludXgvZXhwb3J0Lmg+Ci0jaW5jbHVkZSA8bGludXgvbW0uaD4KLSNpbmNs
dWRlIDxsaW51eC92bWFsbG9jLmg+Ci0jaW5jbHVkZSA8bGludXgvaW8uaD4KLQotI2luY2x1ZGUg
PGFzbS9wZ3RhYmxlLmg+Ci0KLS8qCi0gKiBSZW1hcCBhbiBhcmJpdHJhcnkgcGh5c2ljYWwgYWRk
cmVzcyBzcGFjZSBpbnRvIHRoZSBrZXJuZWwgdmlydHVhbAotICogYWRkcmVzcyBzcGFjZS4gTmVl
ZGVkIHdoZW4gdGhlIGtlcm5lbCB3YW50cyB0byBhY2Nlc3MgaGlnaCBhZGRyZXNzZXMKLSAqIGRp
cmVjdGx5LgotICoKLSAqIE5PVEUhIFdlIG5lZWQgdG8gYWxsb3cgbm9uLXBhZ2UtYWxpZ25lZCBt
YXBwaW5ncyB0b286IHdlIHdpbGwgb2J2aW91c2x5Ci0gKiBoYXZlIHRvIGNvbnZlcnQgdGhlbSBp
bnRvIGFuIG9mZnNldCBpbiBhIHBhZ2UtYWxpZ25lZCBtYXBwaW5nLCBidXQgdGhlCi0gKiBjYWxs
ZXIgc2hvdWxkbid0IG5lZWQgdG8ga25vdyB0aGF0IHNtYWxsIGRldGFpbC4KLSAqLwotc3RhdGlj
IHZvaWQgX19pb21lbSAqX19pb3JlbWFwX2NhbGxlcihwaHlzX2FkZHJfdCBhZGRyLCBzaXplX3Qg
c2l6ZSwKLQlwZ3Byb3RfdCBwcm90LCB2b2lkICpjYWxsZXIpCi17Ci0JcGh5c19hZGRyX3QgbGFz
dF9hZGRyOwotCXVuc2lnbmVkIGxvbmcgb2Zmc2V0LCB2YWRkcjsKLQlzdHJ1Y3Qgdm1fc3RydWN0
ICphcmVhOwotCi0JLyogRGlzYWxsb3cgd3JhcC1hcm91bmQgb3IgemVybyBzaXplICovCi0JbGFz
dF9hZGRyID0gYWRkciArIHNpemUgLSAxOwotCWlmICghc2l6ZSB8fCBsYXN0X2FkZHIgPCBhZGRy
KQotCQlyZXR1cm4gTlVMTDsKLQotCS8qIFBhZ2UtYWxpZ24gbWFwcGluZ3MgKi8KLQlvZmZzZXQg
PSBhZGRyICYgKH5QQUdFX01BU0spOwotCWFkZHIgLT0gb2Zmc2V0OwotCXNpemUgPSBQQUdFX0FM
SUdOKHNpemUgKyBvZmZzZXQpOwotCi0JYXJlYSA9IGdldF92bV9hcmVhX2NhbGxlcihzaXplLCBW
TV9JT1JFTUFQLCBjYWxsZXIpOwotCWlmICghYXJlYSkKLQkJcmV0dXJuIE5VTEw7Ci0JdmFkZHIg
PSAodW5zaWduZWQgbG9uZylhcmVhLT5hZGRyOwotCi0JaWYgKGlvcmVtYXBfcGFnZV9yYW5nZSh2
YWRkciwgdmFkZHIgKyBzaXplLCBhZGRyLCBwcm90KSkgewotCQlmcmVlX3ZtX2FyZWEoYXJlYSk7
Ci0JCXJldHVybiBOVUxMOwotCX0KLQotCXJldHVybiAodm9pZCBfX2lvbWVtICopKHZhZGRyICsg
b2Zmc2V0KTsKLX0KLQotLyoKLSAqIGlvcmVtYXAgICAgIC0gICBtYXAgYnVzIG1lbW9yeSBpbnRv
IENQVSBzcGFjZQotICogQG9mZnNldDogICAgYnVzIGFkZHJlc3Mgb2YgdGhlIG1lbW9yeQotICog
QHNpemU6ICAgICAgc2l6ZSBvZiB0aGUgcmVzb3VyY2UgdG8gbWFwCi0gKgotICogaW9yZW1hcCBw
ZXJmb3JtcyBhIHBsYXRmb3JtIHNwZWNpZmljIHNlcXVlbmNlIG9mIG9wZXJhdGlvbnMgdG8KLSAq
IG1ha2UgYnVzIG1lbW9yeSBDUFUgYWNjZXNzaWJsZSB2aWEgdGhlIHJlYWRiL3JlYWR3L3JlYWRs
L3dyaXRlYi8KLSAqIHdyaXRldy93cml0ZWwgZnVuY3Rpb25zIGFuZCB0aGUgb3RoZXIgbW1pbyBo
ZWxwZXJzLiBUaGUgcmV0dXJuZWQKLSAqIGFkZHJlc3MgaXMgbm90IGd1YXJhbnRlZWQgdG8gYmUg
dXNhYmxlIGRpcmVjdGx5IGFzIGEgdmlydHVhbAotICogYWRkcmVzcy4KLSAqCi0gKiBNdXN0IGJl
IGZyZWVkIHdpdGggaW91bm1hcC4KLSAqLwotdm9pZCBfX2lvbWVtICppb3JlbWFwKHBoeXNfYWRk
cl90IG9mZnNldCwgdW5zaWduZWQgbG9uZyBzaXplKQotewotCXJldHVybiBfX2lvcmVtYXBfY2Fs
bGVyKG9mZnNldCwgc2l6ZSwgUEFHRV9LRVJORUwsCi0JCV9fYnVpbHRpbl9yZXR1cm5fYWRkcmVz
cygwKSk7Ci19Ci1FWFBPUlRfU1lNQk9MKGlvcmVtYXApOwotCi0KLS8qKgotICogaW91bm1hcCAt
IEZyZWUgYSBJTyByZW1hcHBpbmcKLSAqIEBhZGRyOiB2aXJ0dWFsIGFkZHJlc3MgZnJvbSBpb3Jl
bWFwXyoKLSAqCi0gKiBDYWxsZXIgbXVzdCBlbnN1cmUgdGhlcmUgaXMgb25seSBvbmUgdW5tYXBw
aW5nIGZvciB0aGUgc2FtZSBwb2ludGVyLgotICovCi12b2lkIGlvdW5tYXAodm9sYXRpbGUgdm9p
ZCBfX2lvbWVtICphZGRyKQotewotCXZ1bm1hcCgodm9pZCAqKSgodW5zaWduZWQgbG9uZylhZGRy
ICYgUEFHRV9NQVNLKSk7Ci19Ci1FWFBPUlRfU1lNQk9MKGlvdW5tYXApOwotLSAKMi4yMC4xCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBt
YWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5s
aWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
