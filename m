Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 31386470EC9
	for <lists+openrisc@lfdr.de>; Sat, 11 Dec 2021 00:35:35 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id E15F8242B9;
	Sat, 11 Dec 2021 00:35:34 +0100 (CET)
Received: from mail-pl1-f169.google.com (mail-pl1-f169.google.com
 [209.85.214.169])
 by mail.librecores.org (Postfix) with ESMTPS id 5BDF5242AC
 for <openrisc@lists.librecores.org>; Sat, 11 Dec 2021 00:35:33 +0100 (CET)
Received: by mail-pl1-f169.google.com with SMTP id z6so7278678plk.6
 for <openrisc@lists.librecores.org>; Fri, 10 Dec 2021 15:35:33 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=gOuwfxwcGLCVTW9p2YsGSGRxD61AZk7nGELhxFzTHPs=;
 b=oSxUr0Vx9ecXDENz4Kgv9ofXL/21Ju4nbZiFxCxFSppEZcR11QykwDoj1HkqP/uWbD
 34jWD5UQdy1MULgAcs5k6vWkYdr6BhyN4WdFYyK3K4DT8wzkI9hWQ0zoNQw1kGmrM0mf
 lwFjZtU7sxyBRviNqH1VmYE14Zn3ERhOpbs0PZ+TfR0UPgoUAzRvGnMWe3Kfq9iavZKw
 UkTN9hHDKd/rSiJMTqMxm6W7YufR9oBDEr2V4v0/i7XeFItnck943IPj7UjvKpTGHN1P
 zcnh98Nc/RUEzHNjOX13QnVa9NGCYaZcHyilwGu8DcpopQMXUWkTaJy2NfAL+Yvj+QuG
 Qq1Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=gOuwfxwcGLCVTW9p2YsGSGRxD61AZk7nGELhxFzTHPs=;
 b=l9c6hfimpVPzNIRCLObwkTd/tpQBJgthzejoGa8fCXf+Nv5u+vzBef0MIEPaf4nU8l
 5ZwwGbsocgP18x9LndXGAM4E4eaCtnou/rnImM5jV2vROPpSrwppxz1kf9fhApq7Brxr
 LehjZn50wlFknuBahEawTVH+jxzxVRyxqEqezywFcEqaTzyonew1CqfG+bHBXnbBY4qP
 xcEaSIzew49Lak18SUydZFkGTR65qWXvDC50GBb6ApYLWYjsb6ZSc+09Kk55t0CgUnia
 QSRd+wm0fLShsw6llVtbfNp9Mgz1IclWMgn1jkRfbF0omudprzdqLPlNBL4F66W6KymR
 aqjg==
X-Gm-Message-State: AOAM533j3c4yu7Jb8tLTm618UFuVagurAcy5b19O0i4OtPIrFkw4lIYQ
 d0SeHhJtFyuvYhEYrSm5bQk=
X-Google-Smtp-Source: ABdhPJyk6Bdkylm3UZ8j275wziJ0uGsnIU4AR6mAM8QkhYqCUOY36C/+KSqw+y92dd0uiK3wwE77Xw==
X-Received: by 2002:a17:902:cec4:b0:141:cfa1:f7e with SMTP id
 d4-20020a170902cec400b00141cfa10f7emr77445728plg.13.1639179331546; 
 Fri, 10 Dec 2021 15:35:31 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id y191sm2754711pfb.124.2021.12.10.15.35.30
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 10 Dec 2021 15:35:30 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Sat, 11 Dec 2021 08:34:52 +0900
Message-Id: <20211210233456.4146479-10-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20211210233456.4146479-1-shorne@gmail.com>
References: <20211210233456.4146479-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v3 09/13] or1k: Linux ABI
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

LS0tCiBzeXNkZXBzL29yMWsvbnB0bC9iaXRzL3B0aHJlYWR0eXBlcy1hcmNoLmggICAgfCAgNDgg
KysrKysrKysKIHN5c2RlcHMvb3Ixay9ucHRsL3B0aHJlYWRkZWYuaCAgICAgICAgICAgICAgICB8
ICAzNiArKysrKysKIHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvYml0cy9wcm9jZnMuaCAg
ICB8ICAzOCArKysrKysKIHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvZ2V0Y29udGV4dC5T
ICAgICB8ICA3MiArKysrKysrKysrKwogc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9tYWtl
Y29udGV4dC5jICAgIHwgIDc3ICsrKysrKysrKysrKwogc3lzZGVwcy91bml4L3N5c3YvbGludXgv
b3Ixay9zZXRjb250ZXh0LlMgICAgIHwgMTA4ICsrKysrKysrKysrKysrKysKIHN5c2RlcHMvdW5p
eC9zeXN2L2xpbnV4L29yMWsvc2lnY29udGV4dGluZm8uaCB8ICAyOCArKysrKwogc3lzZGVwcy91
bml4L3N5c3YvbGludXgvb3Ixay9zd2FwY29udGV4dC5TICAgIHwgMTE2ICsrKysrKysrKysrKysr
KysrKwogc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zeXMvdWNvbnRleHQuaCAgIHwgIDUz
ICsrKysrKysrCiBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmggICAgICAg
fCAgIDEgKwogc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5bSAgIHwg
IDI2ICsrKysKIDExIGZpbGVzIGNoYW5nZWQsIDYwMyBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgc3lzZGVwcy9vcjFrL25wdGwvYml0cy9wdGhyZWFkdHlwZXMtYXJjaC5oCiBjcmVh
dGUgbW9kZSAxMDA2NDQgc3lzZGVwcy9vcjFrL25wdGwvcHRocmVhZGRlZi5oCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9iaXRzL3Byb2Nmcy5oCiBjcmVh
dGUgbW9kZSAxMDA2NDQgc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9nZXRjb250ZXh0LlMK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL21ha2Vjb250
ZXh0LmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3Nl
dGNvbnRleHQuUwogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29y
MWsvc2lnY29udGV4dGluZm8uaAogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvdW5peC9zeXN2
L2xpbnV4L29yMWsvc3dhcGNvbnRleHQuUwogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvdW5p
eC9zeXN2L2xpbnV4L29yMWsvc3lzL3Vjb250ZXh0LmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNk
ZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBz
eXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3Vjb250ZXh0X2kuc3ltCgpkaWZmIC0tZ2l0IGEv
c3lzZGVwcy9vcjFrL25wdGwvYml0cy9wdGhyZWFkdHlwZXMtYXJjaC5oIGIvc3lzZGVwcy9vcjFr
L25wdGwvYml0cy9wdGhyZWFkdHlwZXMtYXJjaC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDAwMDAwMDAwMDAuLjU2YTYyYTcxNjEKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsv
bnB0bC9iaXRzL3B0aHJlYWR0eXBlcy1hcmNoLmgKQEAgLTAsMCArMSw0OCBAQAorLyogTWFjaGlu
ZS1zcGVjaWZpYyBwdGhyZWFkIHR5cGUgbGF5b3V0cy4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBD
b3B5cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlz
IGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJh
cnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBt
b2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGlj
CisgICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9u
OyBlaXRoZXIKKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRp
b24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmli
dXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQg
QU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1F
UkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0
aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxz
LgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2Vy
IEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7
IGlmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKwor
I2lmbmRlZiBfQklUU19QVEhSRUFEVFlQRVNfSAorI2RlZmluZSBfQklUU19QVEhSRUFEVFlQRVNf
SAkxCisKKyNpbmNsdWRlIDxiaXRzL3dvcmRzaXplLmg+CisKKy8qIE9wYXF1ZSB1bmlvbiBzaXpl
cyBmb3I6CisgICAgIHB0aHJlYWRfYXR0cl90IC0gaW50ZXJuYWxseSBwdGhyZWFkX2F0dHIKKyAg
ICAgcHRocmVhZF9tdXRleF90IC0gaW50ZXJuYWxseSBfX3B0aHJlYWRfbXV0ZXhfcworICAgICBw
dGhyZWFkX211dGV4YXR0cl90IC0gaW50ZXJuYWxseSBwdGhyZWFkX211dGV4YXR0cgorICAgICBw
dGhyZWFkX2NvbmRfdCAtIGludGVybmFsbHkgX19wdGhyZWFkX2NvbmRfcworICAgICBwdGhyZWFk
X2NvbmRhdHRyX3QgLSBpbnRlcm5hbGx5IHB0aHJlYWRfY29uZGF0dHIKKyAgICAgcHRocmVhZF9y
d2xvY2tfdCAtIGludGVybmFsbHkgX19wdGhyZWFkX3J3bG9ja19hcmNoX3QKKyAgICAgcHRocmVh
ZF9yd2xvY2thdHRyX3QgLSBpbnRlcm5hbGx5IHB0aHJlYWRfcndsb2NrYXR0cgorICAgICBwdGhy
ZWFkX2JhcnJpZXJfdCAtIGludGVybmFsbHkgcHRocmVhZF9iYXJyaWVyCisgICAgIHB0aHJlYWRf
YmFycmllcmF0dHJfdCAtIGludGVybmFsbHkgcHRocmVhZF9iYXJyaWVyYXR0ciAgKi8KKworI2Rl
ZmluZSBfX1NJWkVPRl9QVEhSRUFEX0FUVFJfVCAzMgorI2RlZmluZSBfX1NJWkVPRl9QVEhSRUFE
X01VVEVYX1QgMzIKKyNkZWZpbmUgX19TSVpFT0ZfUFRIUkVBRF9NVVRFWEFUVFJfVCA0CisjZGVm
aW5lIF9fU0laRU9GX1BUSFJFQURfQ09ORF9UIDQ4CisjZGVmaW5lIF9fU0laRU9GX1BUSFJFQURf
Q09OREFUVFJfVCA0CisjZGVmaW5lIF9fU0laRU9GX1BUSFJFQURfUldMT0NLX1QgNDQKKyNkZWZp
bmUgX19TSVpFT0ZfUFRIUkVBRF9SV0xPQ0tBVFRSX1QgOAorI2RlZmluZSBfX1NJWkVPRl9QVEhS
RUFEX0JBUlJJRVJfVCAyMAorI2RlZmluZSBfX1NJWkVPRl9QVEhSRUFEX0JBUlJJRVJBVFRSX1Qg
NAorCisjZGVmaW5lIF9fTE9DS19BTElHTk1FTlQKKyNkZWZpbmUgX19PTkNFX0FMSUdOTUVOVAor
CisjZW5kaWYJLyogYml0cy9wdGhyZWFkdHlwZXMuaCAqLwpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9v
cjFrL25wdGwvcHRocmVhZGRlZi5oIGIvc3lzZGVwcy9vcjFrL25wdGwvcHRocmVhZGRlZi5oCm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLmQxNzkxOGVhMTEKLS0tIC9kZXYv
bnVsbAorKysgYi9zeXNkZXBzL29yMWsvbnB0bC9wdGhyZWFkZGVmLmgKQEAgLTAsMCArMSwzNiBA
QAorLyogcHRocmVhZCBtYWNoaW5lIHBhcmFtZXRlciBkZWZpbml0aW9ucy4gIE9wZW5SSVNDIHZl
cnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJ
bmMuCisKKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5LgorCisgICBU
aGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBp
dCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIg
R2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcworICAgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3
YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDIuMSBvZiB0aGUKKyAgIExpY2Vuc2UsIG9y
IChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisKKyAgIFRoZSBHTlUgQyBMaWJy
YXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisg
ICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJy
YW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQ
VVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZv
ciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2Yg
dGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUg
R05VIEMgTGlicmFyeTsgaWYgbm90LCBzZWUKKyAgIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vu
c2VzLz4uICAqLworCisvKiBEZWZhdWx0IHN0YWNrIHNpemUuICAqLworI2RlZmluZSBBUkNIX1NU
QUNLX0RFRkFVTFRfU0laRSAoMiAqIDEwMjQgKiAxMDI0KQorCisvKiBNaW5pbXVtIGd1YXJkIHNp
emUuICAqLworI2RlZmluZSBBUkNIX01JTl9HVUFSRF9TSVpFIDAKKworLyogUmVxdWlyZWQgc3Rh
Y2sgcG9pbnRlciBhbGlnbm1lbnQgYXQgYmVnaW5uaW5nLiAgKi8KKyNkZWZpbmUgU1RBQ0tfQUxJ
R04gMTYKKworLyogTWluaW1hbCBzdGFjayBzaXplIGFmdGVyIGFsbG9jYXRpbmcgdGhyZWFkIGRl
c2NyaXB0b3IgYW5kIGd1YXJkIHNpemUuICAqLworI2RlZmluZSBNSU5JTUFMX1JFU1RfU1RBQ0sg
MjA0OAorCisvKiBBbGlnbm1lbnQgcmVxdWlyZW1lbnQgZm9yIFRDQi4gIE5lZWRzIHRvIGJlID49
IHRvIFNUQUNLX0FMSUdOLiAgKi8KKyNkZWZpbmUgVENCX0FMSUdOTUVOVCAzMgorCisvKiBMb2Nh
dGlvbiBvZiBjdXJyZW50IHN0YWNrIGZyYW1lLiAgKi8KKyNkZWZpbmUgQ1VSUkVOVF9TVEFDS19G
UkFNRSBfX2J1aWx0aW5fZnJhbWVfYWRkcmVzcyAoMCkKZGlmZiAtLWdpdCBhL3N5c2RlcHMvdW5p
eC9zeXN2L2xpbnV4L29yMWsvYml0cy9wcm9jZnMuaCBiL3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4
L29yMWsvYml0cy9wcm9jZnMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAw
Li5iNTBjOTJlZmIxCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgv
b3Ixay9iaXRzL3Byb2Nmcy5oCkBAIC0wLDAgKzEsMzggQEAKKy8qIFR5cGVzIGZvciByZWdpc3Rl
cnMgZm9yIHN5cy9wcm9jZnMuaC4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMp
IDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFy
dCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBz
b2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5k
ZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNl
IGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAg
IHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRl
ciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUg
aG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZ
OyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElU
WSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBM
ZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ug
c2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVi
bGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2Vl
CisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2lmbmRlZiBfU1lT
X1BST0NGU19ICisjIGVycm9yICJOZXZlciBpbmNsdWRlIDxiaXRzL3Byb2Nmcy5oPiBkaXJlY3Rs
eTsgdXNlIDxzeXMvcHJvY2ZzLmg+IGluc3RlYWQuIgorI2VuZGlmCisKKyNpbmNsdWRlIDxzeXMv
dWNvbnRleHQuaD4KKworI2RlZmluZSBFTEZfTkdSRUcgX19OR1JFRworCisvKiBUeXBlIGZvciBh
IGdlbmVyYWwtcHVycG9zZSByZWdpc3Rlci4gICovCit0eXBlZGVmIHVuc2lnbmVkIGxvbmcgaW50
IGVsZl9ncmVnX3Q7CisKKy8qIEFuZCB0aGUgYXJyYXkgb2YgZ2VuZXJhbC1wdXJwb3NlIHJlZ2lz
dGVycy4gIFdlIGNvdWxkIGhhdmUgdXNlZCBgc3RydWN0CisgICB1c2VyX3JlZ3MnIGRpcmVjdGx5
LCBidXQgdHJhZGl0aW9uIHNheXMgdGhhdCB0aGUgcmVnaXN0ZXIgc2V0IGlzIGFuIGFycmF5LAor
ICAgd2hpY2ggZG9lcyBoYXZlIHNvbWUgcGVjdWxpYXIgc2VtYW50aWNzLCBzbyBsZWF2ZSBpdCB0
aGF0IHdheS4KKyAgIEdEQiB1c2VzIHRoaXMgZm9yIHBydHJhY2UgR0VUUkVHU0VULCBvbiBPcGVu
UklTQyB0aGUgcmVnc2V0IGNvbnRhaW5zIDMyCisgICBncHJzIHRoZSBQQyBhbmQgdGhlIFNSLCAz
NCBsb25ncy4gICovCit0eXBlZGVmIGVsZl9ncmVnX3QgZWxmX2dyZWdzZXRfdFszNF07CisKKy8q
IFJlZ2lzdGVyIHNldCBmb3IgdGhlIGZsb2F0aW5nLXBvaW50IHJlZ2lzdGVycy4gICovCit0eXBl
ZGVmIGVsZl9ncmVnX3QgZWxmX2ZwcmVnc2V0X3RbMzJdOwpkaWZmIC0tZ2l0IGEvc3lzZGVwcy91
bml4L3N5c3YvbGludXgvb3Ixay9nZXRjb250ZXh0LlMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51
eC9vcjFrL2dldGNvbnRleHQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAw
Li40YzJlNjRkYjdhCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgv
b3Ixay9nZXRjb250ZXh0LlMKQEAgLTAsMCArMSw3MiBAQAorLyogU2F2ZSBjdXJyZW50IGNvbnRl
eHQuICBPcGVuUklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdh
cmUgRm91bmRhdGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExp
YnJhcnkuCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4g
cmVkaXN0cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0
aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkg
dGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0
aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAg
VGhlIEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxs
IGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRo
ZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1Ig
QSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVi
bGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2Vp
dmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBh
bG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3
LmdudS5vcmcvbGljZW5zZXMvPi4gICovCisKKyNpbmNsdWRlIDxzeXNkZXAuaD4KKyNpbmNsdWRl
ICJ1Y29udGV4dF9pLmgiCisKKy8qIGludCBnZXRjb250ZXh0ICh1Y29udGV4dF90ICp1Y3ApCisK
KyAgIFJldHVybnMgMCBvbiBzdWNjZXNzIC0xIGFuZCBlcnJubyBvbiBmYWlsdXJlLgorICovCisJ
LnRleHQKK0VOVFJZKF9fZ2V0Y29udGV4dCkKKwkvKiBTdG9yZSByMSwgdGhlIHN0YWNrIHBvaW50
ZXIuICAqLworCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgIDEqNCkocjMpLCByMQorCS8qIFN0
b3JlIHIyLCB0aGUgZnJhbWUgcG9pbnRlci4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQg
KyAgMio0KShyMyksIHIyCisJLyogU3RvcmUgcjksIHRoZSBsaW5rIHJlZ2lzdGVyLiAgKi8KKwls
LnN3CShVQ09OVEVYVF9NQ09OVEVYVCArICA5KjQpKHIzKSwgcjkKKwkvKiBTdG9yZSByOSB0byBy
ZWdbMTFdIHRvbywgYXMgd2UgbmVlZCB0d28gbGlua3MgZm9yIG1ha2Vjb250ZXh0LiAgKi8KKwls
LnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDExKjQpKHIzKSwgcjkKKwkvKiBTdG9yZSByMTAsIHRo
ZSBUTFMgcmVnaXN0ZXIuICAqLworCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMTAqNCkocjMp
LCByMTAKKwkvKiBTdG9yZSByMTQtcjMwIGV2ZW4sIGNhbGxlZSBzYXZlZCByZWdpc3RlcnMuICAq
LworCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMTQqNCkocjMpLCByMTQKKwlsLnN3CShVQ09O
VEVYVF9NQ09OVEVYVCArIDE2KjQpKHIzKSwgcjE2CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQg
KyAxOCo0KShyMyksIHIxOAorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMjAqNCkocjMpLCBy
MjAKKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDIyKjQpKHIzKSwgcjIyCisJbC5zdwkoVUNP
TlRFWFRfTUNPTlRFWFQgKyAyNCo0KShyMyksIHIyNAorCWwuc3cJKFVDT05URVhUX01DT05URVhU
ICsgMjYqNCkocjMpLCByMjYKKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDI4KjQpKHIzKSwg
cjI4CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAzMCo0KShyMyksIHIzMAorCisJLyogR2V0
IHNpZ25hbCBtYXNrLiAgKi8KKwkvKiBydF9zaWdwcm9jbWFzayAoU0lHX0JMT0NLLCBOVUxMLCAm
dWNwLT51Y19zaWdtYXNrLCBfTlNJRzgpICovCisJbC5vcmkJcjYsIHIwLCBfTlNJRzgKKwlsLmFk
ZGkJcjUsIHIzLCBVQ09OVEVYVF9TSUdNQVNLCisJbC5vcmkJcjQsIHIwLCAwCisJbC5vcmkJcjMs
IHIwLCBTSUdfQkxPQ0sKKwlsLm9yaQlyMTEsIHIwLCBTWVNfaWZ5IChydF9zaWdwcm9jbWFzaykK
KwkvKiBEbyB0aGUgc3lzY2FsbC4gICovCisJbC5zeXMJMQorCSBsLm5vcAorCisJLyogaWYgLTQw
OTYgPCByZXQgPCAwIGhvbGRzLCBpdCdzIGFuIGVycm9yICovCisJbC5zZmdldWkgcjExLCAweGYw
MDEKKwlsLmJmCTFmCisJIGwubm9wCisKKwlsLmpyCXI5CisJIGwub3JpIHIxMSwgcjAsIDAKKwor
MToJbC5qCV9fc3lzY2FsbF9lcnJvcgorCSBsLm9yaQlyMywgcjExLCAwCisKK0VORChfX2dldGNv
bnRleHQpCit3ZWFrX2FsaWFzKF9fZ2V0Y29udGV4dCwgZ2V0Y29udGV4dCkKZGlmZiAtLWdpdCBh
L3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvbWFrZWNvbnRleHQuYyBiL3N5c2RlcHMvdW5p
eC9zeXN2L2xpbnV4L29yMWsvbWFrZWNvbnRleHQuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRl
eCAwMDAwMDAwMDAwLi4zZGQ0MTM0YTZiCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4
L3N5c3YvbGludXgvb3Ixay9tYWtlY29udGV4dC5jCkBAIC0wLDAgKzEsNzcgQEAKKy8qIENyZWF0
ZSBuZXcgY29udGV4dC4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEg
RnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0
aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2Fy
ZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhl
IHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1
Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNp
b24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJz
aW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0
aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRo
b3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBG
SVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIg
R2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxk
IGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisg
ICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisgICA8
aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2luY2x1ZGUgPHN5c2RlcC5o
PgorI2luY2x1ZGUgPHN0ZGFyZy5oPgorI2luY2x1ZGUgPHN0ZGludC5oPgorI2luY2x1ZGUgPHVj
b250ZXh0Lmg+CisKKy8qIG1ha2Vjb250ZXh0IHNldHMgdXAgYSBzdGFjayBhbmQgdGhlIHJlZ2lz
dGVycyBmb3IgdGhlCisgICB1c2VyIGNvbnRleHQuICBUaGUgc3RhY2sgbG9va3MgbGlrZSB0aGlz
OgorCisJCSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKKwkJfCBwYWRkaW5nIGFzIHJlcXVpcmVk
ICAgfAorCQkrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisgICAgc3AgLT4gICAgICAgfCBwYXJh
bWV0ZXJzIDcgdG8gbiAgICAgfAorCQkrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisKKyAgIFRo
ZSByZWdpc3RlcnMgYXJlIHNldCB1cCBsaWtlIHRoaXM6CisgICAgIHIzLXI4ICA6IHBhcmFtZXRl
cnMgMSB0byA2CisgICAgIHIxNCAgICA6IHVjX2xpbmsKKyAgICAgcjEgICAgIDogc3RhY2sgcG9p
bnRlcgorICAgICByMiAgICAgOiBmcmFtZSBwb2ludGVyLCBzZXQgdG8gTlVMTAorKi8KK3ZvaWQK
K19fbWFrZWNvbnRleHQgKHVjb250ZXh0X3QgKnVjcCwgdm9pZCAoKmZ1bmMpICh2b2lkKSwgaW50
IGFyZ2MsIC4uLikKK3sKKyAgZXh0ZXJuIHZvaWQgX19zdGFydGNvbnRleHQgKHZvaWQpOworICB1
bnNpZ25lZCBsb25nIGludCAqc3A7CisgIHZhX2xpc3QgYXA7CisgIGludCBpOworCisgIHNwID0g
KHVuc2lnbmVkIGxvbmcgaW50ICopCisgICAgKCh1aW50cHRyX3QpIHVjcC0+dWNfc3RhY2suc3Nf
c3AgKyB1Y3AtPnVjX3N0YWNrLnNzX3NpemUpOworCisgIC8qIEFsbG9jYXRlIHN0YWNrIGFyZ3Vt
ZW50cy4gICovCisgIHNwIC09IGFyZ2MgPCA2ID8gMCA6IGFyZ2MgLSA2OworCisgIC8qIEtlZXAg
dGhlIHN0YWNrIGFsaWduZWQuICAqLworICBzcCA9ICh1bnNpZ25lZCBsb25nIGludCAqKSAoKCh1
aW50cHRyX3QpIHNwKSAmIC00TCk7CisKKyAgLyogS2VlcCB1Y19saW5rIGluIHIxNC4gICovCisg
IHVjcC0+dWNfbWNvbnRleHQuX19ncHJzWzE0XSA9ICh1aW50cHRyX3QpIHVjcC0+dWNfbGluazsK
KyAgLyogUmV0dXJuIGFkZHJlc3MgcG9pbnRzIHRvIGZ1bmN0aW9uIF9fc3RhcnRjb250ZXh0LiAg
Ki8KKyAgdWNwLT51Y19tY29udGV4dC5fX2dwcnNbOV0gPSAodWludHB0cl90KSAmX19zdGFydGNv
bnRleHQ7CisgIC8qIEZyYW1lIHBvaW50ZXIgaXMgbnVsbC4gICovCisgIHVjcC0+dWNfbWNvbnRl
eHQuX19ncHJzWzJdID0gKHVpbnRwdHJfdCkgMDsKKyAgLyogUmVzdGFydCBpbiB1c2VyLXNwYWNl
IHN0YXJ0aW5nIGF0ICdmdW5jJy4gICovCisgIHVjcC0+dWNfbWNvbnRleHQuX19ncHJzWzExXSA9
ICh1aW50cHRyX3QpIGZ1bmM7CisgIC8qIFNldCBzdGFjayBwb2ludGVyLiAgKi8KKyAgdWNwLT51
Y19tY29udGV4dC5fX2dwcnNbMV0gPSAodWludHB0cl90KSBzcDsKKworICB2YV9zdGFydCAoYXAs
IGFyZ2MpOworICBmb3IgKGkgPSAwOyBpIDwgYXJnYzsgKytpKQorICAgIGlmIChpIDwgNikKKyAg
ICAgIHVjcC0+dWNfbWNvbnRleHQuX19ncHJzW2kgKyAzXSA9IHZhX2FyZyAoYXAsIHVuc2lnbmVk
IGxvbmcgaW50KTsKKyAgICBlbHNlCisgICAgICBzcFtpIC0gNl0gPSB2YV9hcmcgKGFwLCB1bnNp
Z25lZCBsb25nIGludCk7CisKKyAgdmFfZW5kIChhcCk7Cit9CisKK3dlYWtfYWxpYXMgKF9fbWFr
ZWNvbnRleHQsIG1ha2Vjb250ZXh0KQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy91bml4L3N5c3YvbGlu
dXgvb3Ixay9zZXRjb250ZXh0LlMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3NldGNv
bnRleHQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5iNDgwOGQ1NDIy
Ci0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zZXRjb250
ZXh0LlMKQEAgLTAsMCArMSwxMDggQEAKKy8qIFNldCBjdXJyZW50IGNvbnRleHQuICBPcGVuUklT
QyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlv
biwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAg
IFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRl
IGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3Nl
ciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29m
dHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwg
b3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExp
YnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwK
KyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdh
cnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFS
IFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2Ug
Zm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBv
ZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRo
ZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGlj
ZW5zZXMvPi4gICovCisKKyNpbmNsdWRlIDxzeXNkZXAuaD4KKyNpbmNsdWRlICJ1Y29udGV4dF9p
LmgiCisKKy8qIGludCBzZXRjb250ZXh0IChjb25zdCB1Y29udGV4dF90ICp1Y3ApICovCisJLnRl
eHQKK0VOVFJZKF9fc2V0Y29udGV4dCkKKwlsLm9yaQlyMzAsIHIzLCAwCisKKwkvKiBSZXN0b3Jl
IHNpZ25hbCBtYXNrLiAgKi8KKwkvKiBydF9zaWdwcm9jbWFzayAoU0lHX1NFVE1BU0ssICZ1Y3At
PnVjX3NpZ21hc2ssIE5VTEwsIF9OU0lHOCkgKi8KKwlsLm9yaQlyNiwgcjAsIF9OU0lHOAorCWwu
b3JpCXI1LCByMCwgMAorCWwuYWRkaQlyNCwgcjMsIFVDT05URVhUX1NJR01BU0sKKwlsLm9yaQly
MywgcjAsIFNJR19TRVRNQVNLCisJbC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21h
c2spCisJLyogRG8gdGhlIHN5c2NhbGwuICAqLworCWwuc3lzIDEKKwkgbC5ub3AKKworCS8qIGlm
IC00MDk2IDwgcmV0IDwgMCBob2xkcywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwg
MHhmMDAxCisJbC5iZgkxZgorCSBsLm5vcAorCisJLyogUmVzdG9yZSBhcmd1bWVudCByZWdpc3Rl
cnMsIGZvciB0aGUgbWFrZWNvbnRleHQgY2FzZS4gICovCisJbC5sd3oJcjMsIChVQ09OVEVYVF9N
Q09OVEVYVCArICAzKjQpKHIzMCkKKwlsLmx3eglyNCwgKFVDT05URVhUX01DT05URVhUICsgIDQq
NCkocjMwKQorCWwubHd6CXI1LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgNSo0KShyMzApCisJbC5s
d3oJcjYsIChVQ09OVEVYVF9NQ09OVEVYVCArICA2KjQpKHIzMCkKKwlsLmx3eglyNywgKFVDT05U
RVhUX01DT05URVhUICsgIDcqNCkocjMwKQorCWwubHd6CXI4LCAoVUNPTlRFWFRfTUNPTlRFWFQg
KyAgOCo0KShyMzApCisKKwkvKiBSZXN0b3JlIHJlZ2lzdGVycyBzdG9yZWQgaW4gZ2V0Y29udGV4
dC4gICovCisJbC5sd3oJcjEsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMSo0KShyMzApCisJbC5s
d3oJcjIsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMio0KShyMzApCisJbC5sd3oJcjksICAoVUNP
TlRFWFRfTUNPTlRFWFQgKyAgOSo0KShyMzApCisJbC5sd3oJcjEwLCAoVUNPTlRFWFRfTUNPTlRF
WFQgKyAxMCo0KShyMzApCisJbC5sd3oJcjExLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShy
MzApCisJLyogUmVzdG9yZSByMTQtcjMwIGV2ZW4sIGNhbGxlZSBzYXZlZCByZWdpc3RlcnMuICAq
LworCWwubHd6CXIxNCwgKFVDT05URVhUX01DT05URVhUICsgMTQqNCkocjMwKQorCWwubHd6CXIx
NiwgKFVDT05URVhUX01DT05URVhUICsgMTYqNCkocjMwKQorCWwubHd6CXIxOCwgKFVDT05URVhU
X01DT05URVhUICsgMTgqNCkocjMwKQorCWwubHd6CXIyMCwgKFVDT05URVhUX01DT05URVhUICsg
MjAqNCkocjMwKQorCWwubHd6CXIyMiwgKFVDT05URVhUX01DT05URVhUICsgMjIqNCkocjMwKQor
CWwubHd6CXIyNCwgKFVDT05URVhUX01DT05URVhUICsgMjQqNCkocjMwKQorCWwubHd6CXIyNiwg
KFVDT05URVhUX01DT05URVhUICsgMjYqNCkocjMwKQorCWwubHd6CXIyOCwgKFVDT05URVhUX01D
T05URVhUICsgMjgqNCkocjMwKQorCWwubHd6CXIzMCwgKFVDT05URVhUX01DT05URVhUICsgMzAq
NCkocjMwKQorCisJbC5qcglyMTEKKwkgbC5vcmkJcjExLCByMCwgMAorCisxOglsLmoJX19zeXNj
YWxsX2Vycm9yCisJIGwub3JpCXIzLCByMTEsIDAKKworRU5EIChfX3NldGNvbnRleHQpCit3ZWFr
X2FsaWFzIChfX3NldGNvbnRleHQsIHNldGNvbnRleHQpCisKKwkvKiBXZSBhZGQgYSBOT1AgaGVy
ZSBiZWNhdXNlIHdoZW4gdGhlIHVud2luZGVyIGlzIGxvb2tpbmcgZm9yIHRoZQorCSAgIGVuY2xv
c2luZyBmdW5jdGlvbiBvZiB0aGUgbGluayByZWdpc3RlciAocjkpIGFkZHJlc3MgRkRFIGxvb2t1
cCB3aWxsCisJICAgdXNlICckcjkgLSAxJyBmaW5kaW5nIHNldGNvbnRleHQgd2hpY2ggaXMgd3Jv
bmcuICBUaGlzIGlzIGJlY2F1c2UgaW4KKwkgICBtYWtlY29udGV4dCB3ZSBoYXZlIHNldCByOSB0
byB0aGUgc3RhcnQgb2YgJl9fc3RhcnRjb250ZXh0LgorCisJICAgSWYgdGhpcyBOT1AgZGlkIG5v
dCBleGlzdCB0aGUgdW53aW5kZXIgd291bGQgcmVwZWF0ZWRseSBmaW5kCisJICAgX19zZXRjb250
ZXh0J3MgRkRFIGluIGFuIGluZmluaXRlIGxvb3AuICBNb2RpZml5aW5nL2RlbGV0aW5nIHRoZSBi
ZWxvdworCSAgIF9fc3RhcnRjb250ZXh0J3MgRkRFIGhhcyBubyBoZWxwIG9uIHRoaXMuICAqLwor
CWwubm9wCisKK0VOVFJZKF9fc3RhcnRjb250ZXh0KQorCisJbC5vcmkJcjMsIHIxNCwgMAorCWwu
c2ZlcQlyMywgcjAKKwkvKiBJZiB1Y19saW5rIGlzIG5vdCAwIHJlc3VtZSB0aGVyZSwgb3RoZXJ3
aXNlIGV4aXQuICAqLworCWwuYm5mCV9fc2V0Y29udGV4dAorCSBsLm5vcAorCisjaWZkZWYgU0hB
UkVECisJLyogT2J0YWluIGEgcG9pbnRlciB0byAuZ290IGluIHIxNiAqLworCWwuamFsCTB4OAor
CSBsLm1vdmhpIHIxNiwgZ290cGNoaShfR0xPQkFMX09GRlNFVF9UQUJMRV8tNCkKKwlsLm9yaQly
MTYsIHIxNiwgZ290cGNsbyhfR0xPQkFMX09GRlNFVF9UQUJMRV8rMCkKKwlsLmFkZAlyMTYsIHIx
NiwgcjkKKwlsLmx3eglyMTYsIGdvdChleGl0KShyMTYpCisJbC5qcglyMTYKKyNlbHNlCisJbC5q
CWV4aXQKKyNlbmRpZgorCSBsLm5vcAorCitFTkQoX19zdGFydGNvbnRleHQpCmRpZmYgLS1naXQg
YS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3NpZ2NvbnRleHRpbmZvLmggYi9zeXNkZXBz
L3VuaXgvc3lzdi9saW51eC9vcjFrL3NpZ2NvbnRleHRpbmZvLmgKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMC4uZGU5NGI1OTU3OAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2Rl
cHMvdW5peC9zeXN2L2xpbnV4L29yMWsvc2lnY29udGV4dGluZm8uaApAQCAtMCwwICsxLDI4IEBA
CisvKiBQcm9maWxlIGNvdW50ZXIgaGVscGVyIHRvIGdldCBQQyBmcm9tIHNpZ2NvbnRleHQuICBP
cGVuUklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91
bmRhdGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnku
CisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0
cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05V
IExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZy
ZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUgTGlj
ZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdO
VSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVz
ZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBs
aWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJU
SUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExp
Y2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEg
Y29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3
aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5v
cmcvbGljZW5zZXMvPi4gICovCisKKyNpZm5kZWYgX1NJR0NPTlRFWFRJTkZPX0gKKyNkZWZpbmUg
X1NJR0NPTlRFWFRJTkZPX0gKKworc3RhdGljIGlubGluZSB1aW50cHRyX3QKK3NpZ2NvbnRleHRf
Z2V0X3BjIChjb25zdCB1Y29udGV4dF90ICpjdHgpCit7CisgIHJldHVybiBjdHgtPnVjX21jb250
ZXh0Ll9fcGM7Cit9CisKKyNlbmRpZiAvKiBfU0lHQ09OVEVYVElORk9fSCAqLwpkaWZmIC0tZ2l0
IGEvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zd2FwY29udGV4dC5TIGIvc3lzZGVwcy91
bml4L3N5c3YvbGludXgvb3Ixay9zd2FwY29udGV4dC5TCm5ldyBmaWxlIG1vZGUgMTAwNjQ0Cmlu
ZGV4IDAwMDAwMDAwMDAuLjJhY2RjNmQ5YmQKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL3Vu
aXgvc3lzdi9saW51eC9vcjFrL3N3YXBjb250ZXh0LlMKQEAgLTAsMCArMSwxMTYgQEAKKy8qIFN3
YXAgdHdvIGNvbnRleHRzLiAgT3BlblJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykgMjAy
MSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9m
IHRoZSBHTlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3
YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0
aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYXMg
cHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgorICAgdmVy
c2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZl
cnNpb24uCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3Bl
IHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdp
dGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9y
IEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3Nl
ciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91
bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMK
KyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeTsgaWYgbm90LCBzZWUKKyAg
IDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisjaW5jbHVkZSA8c3lzZGVw
Lmg+CisjaW5jbHVkZSAidWNvbnRleHRfaS5oIgorCisvKiBpbnQgc3dhcGNvbnRleHQgKHVjb250
ZXh0X3QgKm91Y3AsIGNvbnN0IHVjb250ZXh0X3QgKnVjcCkgKi8KKwkudGV4dAorRU5UUlkoX19z
d2FwY29udGV4dCkKKworCS8qIFNhbWUgYXMgZ2V0Y29udGV4dC4gICovCisJLyogU3RvcmUgcjEs
IHRoZSBzdGFjayBwb2ludGVyLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArICAxKjQp
KHIzKSwgcjEKKwkvKiBTdG9yZSByMiwgdGhlIGZyYW1lIHBvaW50ZXIuICAqLworCWwuc3cJKFVD
T05URVhUX01DT05URVhUICsgIDIqNCkocjMpLCByMgorCS8qIFN0b3JlIHI5LCB0aGUgbGluayBy
ZWdpc3Rlci4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAgOSo0KShyMyksIHI5CisJ
LyogU3RvcmUgcjkgdG8gcmVnWzExXSB0b28sIGFzIHdlIG5lZWQgdHdvIGxpbmtzIGZvciBtYWtl
Y29udGV4dC4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShyMyksIHI5CisJ
LyogU3RvcmUgcjEwLCB0aGUgVExTIHJlZ2lzdGVyLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09O
VEVYVCArIDEwKjQpKHIzKSwgcjEwCisJLyogU3RvcmUgcjE0LXIzMCBldmVuLCBjYWxsZWUgc2F2
ZWQgcmVnaXN0ZXJzLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDE0KjQpKHIzKSwg
cjE0CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAxNio0KShyMyksIHIxNgorCWwuc3cJKFVD
T05URVhUX01DT05URVhUICsgMTgqNCkocjMpLCByMTgKKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVY
VCArIDIwKjQpKHIzKSwgcjIwCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAyMio0KShyMyks
IHIyMgorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMjQqNCkocjMpLCByMjQKKwlsLnN3CShV
Q09OVEVYVF9NQ09OVEVYVCArIDI2KjQpKHIzKSwgcjI2CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRF
WFQgKyAyOCo0KShyMyksIHIyOAorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMzAqNCkocjMp
LCByMzAKKworCS8qIFN0b3JlIHVjcCB0byBub24tYXJndW1lbnQgc3lzY2FsbCBwcmVzZXJ2ZWQg
cmVnaXN0ZXIuICAqLworCWwub3JpCXIzMCwgcjQsIDAKKworCS8qIEdldCBzaWduYWwgbWFzay4g
ICovCisJLyogcnRfc2lncHJvY21hc2sgKFNJR19CTE9DSywgTlVMTCwgJnVjcC0+dWNfc2lnbWFz
aywgX05TSUc4KSAqLworCWwub3JpCXI2LCByMCwgX05TSUc4CisJbC5hZGRpCXI1LCByMywgVUNP
TlRFWFRfU0lHTUFTSworCWwub3JpCXI0LCByMCwgMAorCWwub3JpCXIzLCByMCwgU0lHX0JMT0NL
CisJbC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21hc2spCisJLyogRG8gdGhlIHN5
c2NhbGwuICAqLworCWwuc3lzCTEKKwkgbC5ub3AKKworCS8qIGlmIC00MDk2IDwgcmV0IDwgMCBo
b2xkcywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwgMHhmMDAxCisJbC5iZgkxZgor
CSBsLm5vcAorCisJLyogU2FtZSBhcyBzZXRjb250ZXh0LiAgKi8KKworCS8qIFJlc3RvcmUgc2ln
bmFsIG1hc2suICAqLworCS8qIHJ0X3NpZ3Byb2NtYXNrIChTSUdfU0VUTUFTSywgJnVjcC0+dWNf
c2lnbWFzaywgTlVMTCwgX05TSUc4KSAqLworCWwub3JpCXI2LCByMCwgX05TSUc4CisJbC5vcmkJ
cjUsIHIwLCAwCisJbC5hZGRpCXI0LCByMzAsIFVDT05URVhUX1NJR01BU0sKKwlsLm9yaQlyMywg
cjAsIFNJR19TRVRNQVNLCisJbC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21hc2sp
CisJLyogRG8gdGhlIHN5c2NhbGwuICAqLworCWwuc3lzIDEKKwkgbC5ub3AKKworCS8qIGlmIC00
MDk2IDwgcmV0IDwgMCBob2xkcywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwgMHhm
MDAxCisJbC5iZgkxZgorCSBsLm5vcAorCisJLyogUmVzdG9yZSBhcmd1bWVudCByZWdpc3RlcnMs
IGZvciB0aGUgbWFrZWNvbnRleHQgY2FzZS4gICovCisJbC5sd3oJcjMsIChVQ09OVEVYVF9NQ09O
VEVYVCArICAzKjQpKHIzMCkKKwlsLmx3eglyNCwgKFVDT05URVhUX01DT05URVhUICsgIDQqNCko
cjMwKQorCWwubHd6CXI1LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgNSo0KShyMzApCisJbC5sd3oJ
cjYsIChVQ09OVEVYVF9NQ09OVEVYVCArICA2KjQpKHIzMCkKKwlsLmx3eglyNywgKFVDT05URVhU
X01DT05URVhUICsgIDcqNCkocjMwKQorCWwubHd6CXI4LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAg
OCo0KShyMzApCisKKwkvKiBSZXN0b3JlIHJlZ2lzdGVycyBzdG9yZWQgaW4gZ2V0Y29udGV4dC4g
ICovCisJbC5sd3oJcjEsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMSo0KShyMzApCisJbC5sd3oJ
cjIsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMio0KShyMzApCisJbC5sd3oJcjksICAoVUNPTlRF
WFRfTUNPTlRFWFQgKyAgOSo0KShyMzApCisJbC5sd3oJcjEwLCAoVUNPTlRFWFRfTUNPTlRFWFQg
KyAxMCo0KShyMzApCisJbC5sd3oJcjExLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShyMzAp
CisJbC5sd3oJcjE0LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxNCo0KShyMzApCisJbC5sd3oJcjE2
LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxNio0KShyMzApCisJbC5sd3oJcjE4LCAoVUNPTlRFWFRf
TUNPTlRFWFQgKyAxOCo0KShyMzApCisJbC5sd3oJcjIwLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAy
MCo0KShyMzApCisJbC5sd3oJcjIyLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAyMio0KShyMzApCisJ
bC5sd3oJcjI0LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAyNCo0KShyMzApCisJbC5sd3oJcjI2LCAo
VUNPTlRFWFRfTUNPTlRFWFQgKyAyNio0KShyMzApCisJbC5sd3oJcjI4LCAoVUNPTlRFWFRfTUNP
TlRFWFQgKyAyOCo0KShyMzApCisJbC5sd3oJcjMwLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAzMCo0
KShyMzApCisKKwlsLmpyCXIxMQorCSBsLm9yaQlyMTEsIHIwLCAwCisKKzE6CWwuaglfX3N5c2Nh
bGxfZXJyb3IKKwkgbC5vcmkJcjMsIHIxMSwgMAorCitFTkQgKF9fc3dhcGNvbnRleHQpCit3ZWFr
X2FsaWFzIChfX3N3YXBjb250ZXh0LCBzd2FwY29udGV4dCkKZGlmZiAtLWdpdCBhL3N5c2RlcHMv
dW5peC9zeXN2L2xpbnV4L29yMWsvc3lzL3Vjb250ZXh0LmggYi9zeXNkZXBzL3VuaXgvc3lzdi9s
aW51eC9vcjFrL3N5cy91Y29udGV4dC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAw
MDAwMDAuLmM0YWVhZDhmOTMKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL3VuaXgvc3lzdi9s
aW51eC9vcjFrL3N5cy91Y29udGV4dC5oCkBAIC0wLDAgKzEsNTMgQEAKKy8qIHVjb250ZXh0X3Qg
ZGVmaW5pdGlvbiwgT3BlblJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykgMjAyMSBGcmVl
IFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBH
TlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5
b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYXMgcHVibGlz
aGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgorICAgdmVyc2lvbiAy
LjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24u
CisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQg
aXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQg
ZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5F
U1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3NlciBHZW5l
cmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91bGQgaGF2
ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExp
Y2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeTsgaWYgbm90LCBzZWUKKyAgIDxodHRw
czovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisvKiBTeXN0ZW0gVi9PcGVuUklTQyBj
b21wbGlhbnQgY29udGV4dCBzd2l0Y2hpbmcgc3VwcG9ydC4gICovCisKKyNpZm5kZWYgX1NZU19V
Q09OVEVYVF9ICisjZGVmaW5lIF9TWVNfVUNPTlRFWFRfSAkxCisKKyNpbmNsdWRlIDxmZWF0dXJl
cy5oPgorCisjaW5jbHVkZSA8Yml0cy90eXBlcy9zaWdzZXRfdC5oPgorI2luY2x1ZGUgPGJpdHMv
dHlwZXMvc3RhY2tfdC5oPgorCisvKiBOdW1iZXIgb2YgZ2VuZXJhbCByZWdpc3RlcnMuICAqLwor
I2RlZmluZSBfX05HUkVHCTMyCisjaWZkZWYgX19VU0VfTUlTQworIyBkZWZpbmUgTkdSRUcJX19O
R1JFRworI2VuZGlmCisKKy8qIENvbnRleHQgdG8gZGVzY3JpYmUgd2hvbGUgcHJvY2Vzc29yIHN0
YXRlLiAgKi8KK3R5cGVkZWYgc3RydWN0CisgIHsKKyAgICB1bnNpZ25lZCBsb25nIGludCBfX2dw
cnNbX19OR1JFR107CisgICAgdW5zaWduZWQgbG9uZyBpbnQgX19wYzsKKyAgICB1bnNpZ25lZCBs
b25nIGludCBfX3NyOworICB9IG1jb250ZXh0X3Q7CisKKy8qIFVzZXJsZXZlbCBjb250ZXh0LiAg
Ki8KK3R5cGVkZWYgc3RydWN0IHVjb250ZXh0X3QKKyAgeworICAgIHVuc2lnbmVkIGxvbmcgaW50
IF9fdWNfZmxhZ3M7CisgICAgc3RydWN0IHVjb250ZXh0X3QgKnVjX2xpbms7CisgICAgc3RhY2tf
dCB1Y19zdGFjazsKKyAgICBtY29udGV4dF90IHVjX21jb250ZXh0OworICAgIHNpZ3NldF90IHVj
X3NpZ21hc2s7CisgIH0gdWNvbnRleHRfdDsKKworI2VuZGlmIC8qIHN5cy91Y29udGV4dC5oICov
CmRpZmYgLS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmggYi9z
eXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmgKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMC4uYzg3MWYxYTAzZAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2Rl
cHMvdW5peC9zeXN2L2xpbnV4L29yMWsvc3lzL3VzZXIuaApAQCAtMCwwICsxIEBACisvKiBUaGlz
IGZpbGUgaXMgbm90IG5lZWRlZCwgYnV0IGluIHByYWN0aWNlIGdkYiBtaWdodCB0cnkgdG8gaW5j
bHVkZSBpdC4gICovCmRpZmYgLS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3Vj
b250ZXh0X2kuc3ltIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5
bQpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5hOGQ0ZGIwODBmCi0tLSAv
ZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5
bQpAQCAtMCwwICsxLDI2IEBACisjaW5jbHVkZSA8aW50dHlwZXMuaD4KKyNpbmNsdWRlIDxzaWdu
YWwuaD4KKyNpbmNsdWRlIDxzdGRkZWYuaD4KKyNpbmNsdWRlIDxzeXMvdWNvbnRleHQuaD4KKwor
LS0gQ29uc3RhbnRzIHVzZWQgYnkgdGhlIHJ0X3NpZ3Byb2NtYXNrIGNhbGwuCisKK1NJR19CTE9D
SworU0lHX1NFVE1BU0sKKworX05TSUc4CQkJCShfTlNJRyAvIDgpCisKKy0tIE9mZnNldHMgb2Yg
dGhlIGZpZWxkcyBpbiB0aGUgdWNvbnRleHRfdCBzdHJ1Y3R1cmUuCisjZGVmaW5lIHVjb250ZXh0
KG1lbWJlcikJb2Zmc2V0b2YgKHVjb250ZXh0X3QsIG1lbWJlcikKKyNkZWZpbmUgc3RhY2sobWVt
YmVyKQkJdWNvbnRleHQgKHVjX3N0YWNrLm1lbWJlcikKKworVUNPTlRFWFRfTElOSwkJCXVjb250
ZXh0ICh1Y19saW5rKQorVUNPTlRFWFRfU1RBQ0sJCQl1Y29udGV4dCAodWNfc3RhY2spCitVQ09O
VEVYVF9NQ09OVEVYVAkJdWNvbnRleHQgKHVjX21jb250ZXh0KQorVUNPTlRFWFRfU0lHTUFTSwkJ
dWNvbnRleHQgKHVjX3NpZ21hc2spCisKK1NUQUNLX1NQCQkJc3RhY2sgKHNzX3NwKQorU1RBQ0tf
U0laRQkJCXN0YWNrIChzc19zaXplKQorU1RBQ0tfRkxBR1MJCQlzdGFjayAoc3NfZmxhZ3MpCisK
K1VDT05URVhUX1NJWkUJCQlzaXplb2YgKHVjb250ZXh0X3QpCi0tIAoyLjMxLjEKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcg
bGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29y
ZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
