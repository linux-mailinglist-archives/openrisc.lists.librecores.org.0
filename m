Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 4324F1D200B
	for <lists+openrisc@lfdr.de>; Wed, 13 May 2020 22:17:48 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 189D720B7E;
	Wed, 13 May 2020 22:17:47 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id A2D0C20ACA
 for <openrisc@lists.librecores.org>; Tue, 12 May 2020 20:46:31 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 47CAC20673;
 Tue, 12 May 2020 18:46:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1589309190;
 bh=AQUJn6mfzeNGdr4PJCFIJ/VJeHCNxPfcmfbaSimbRTk=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=FlkStUOfxg2XidXXkPETlQBTEywMyia/LTgxg4q7Dzwj4/scd/IOqNS0FX4FdPne6
 hdQC26B46vkm/CAAnLsu+j6YvUdXBfTwW3bT3abkPzHmPelfNFfG0LEeFZxv40RUZi
 Cah4ENld4CoU+xFamDONbiLpiwhMjnTGO/VyxIdI=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Tue, 12 May 2020 21:44:17 +0300
Message-Id: <20200512184422.12418-8-rppt@kernel.org>
X-Mailer: git-send-email 2.26.1
In-Reply-To: <20200512184422.12418-1-rppt@kernel.org>
References: <20200512184422.12418-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 13 May 2020 22:17:32 +0200
Subject: [OpenRISC] [PATCH 07/12] x86/mm: simplify init_trampoline() and
 surrounding logic
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Max Filippov <jcmvbkbc@gmail.com>,
 Guo Ren <guoren@kernel.org>, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Vincent Chen <deanbo422@gmail.com>,
 Will Deacon <will@kernel.org>, Greg Ungerer <gerg@linux-m68k.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, Brian Cain <bcain@codeaurora.org>,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>, Mike Rapoport <rppt@linux.ibm.com>,
 Ingo Molnar <mingo@redhat.com>, linux-parisc@vger.kernel.org,
 Mark Salter <msalter@redhat.com>, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Arnd Bergmann <arnd@arndb.de>, linux-alpha@vger.kernel.org,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 Tony Luck <tony.luck@intel.com>, Borislav Petkov <bp@alien8.de>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Chris Zankel <chris@zankel.net>, Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Thomas Gleixner <tglx@linutronix.de>, Richard Weinberger <richard@nod.at>,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKVGhlcmUgYXJlIHRocmVl
IGNhc2VzIGZvciB0aGUgdHJhbXBvbGluZSBpbml0aWFsaXphdGlvbjoKKiAzMi1iaXQgZG9lcyBu
b3RoaW5nCiogNjQtYml0IHdpdGgga2FzbHIgZGlzYWJsZWQgc2ltcGx5IGNvcGllcyBhIFBHRCBl
bnRyeSBmcm9tIHRoZSBkaXJlY3QgbWFwCiAgdG8gdGhlIHRyYW1wb2xpbmUgUEdECiogNjQtYml0
IHdpdGgga2FzbHIgZW5hYmxlZCBtYXBzIHRoZSByZWFsIG1vZGUgdHJhbXBvbGluZSBhdCBQVUQg
bGV2ZWwKClRoZXNlIGNhc2VzIGFyZSBjdXJyZW50bHkgZGlmZmVyZW50aWF0ZWQgYnkgYSBidW5j
aCBvZiBpZmRlZnMgaW5zaWRlCmFzbS9pbmNsdWRlL3BndGFibGUuaCBhbmQgdGhlIGNhc2Ugb2Yg
NjQtYml0cyB3aXRoIGthc2xyIG9uIHVzZXMKcGdkX2luZGV4KCkgaGVscGVyLgoKUmVwbGFjaW5n
IHRoZSBpZmRlZnMgd2l0aCBhIHN0YXRpYyBmdW5jdGlvbiBpbiBhcmNoL3g4Ni9tbS9pbml0LmMg
Z2l2ZXMKY2xlYXJlciBjb2RlIGFuZCBhbGxvd3MgbW92aW5nIHBnZF9pbmRleCgpIHRvIHRoZSBn
ZW5lcmljIGltcGxlbWVudGF0aW9uIGluCmluY2x1ZGUvbGludXgvcGd0YWJsZS5oCgpTaWduZWQt
b2ZmLWJ5OiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+Ci0tLQogYXJjaC94ODYv
aW5jbHVkZS9hc20va2FzbHIuaCAgIHwgIDIgKysKIGFyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFi
bGUuaCB8IDE1ICstLS0tLS0tLS0tLS0tLQogYXJjaC94ODYvaW5jbHVkZS9hc20vc2V0dXAuaCAg
IHwgIDkgKysrKysrKysrCiBhcmNoL3g4Ni9tbS9pbml0LmMgICAgICAgICAgICAgfCAyMiArKysr
KysrKysrKysrKysrKysrKysrCiBhcmNoL3g4Ni9tbS9rYXNsci5jICAgICAgICAgICAgfCAzMyAr
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDUgZmlsZXMgY2hhbmdlZCwgMzUgaW5z
ZXJ0aW9ucygrKSwgNDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVk
ZS9hc20va2FzbHIuaCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL2thc2xyLmgKaW5kZXggZGI3YmEy
ZmViOTQ3Li4wNjQ4MTkwNDY3YmEgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL2th
c2xyLmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va2FzbHIuaApAQCAtNiw4ICs2LDEwIEBA
IHVuc2lnbmVkIGxvbmcga2FzbHJfZ2V0X3JhbmRvbV9sb25nKGNvbnN0IGNoYXIgKnB1cnBvc2Up
OwogCiAjaWZkZWYgQ09ORklHX1JBTkRPTUlaRV9NRU1PUlkKIHZvaWQga2VybmVsX3JhbmRvbWl6
ZV9tZW1vcnkodm9pZCk7Cit2b2lkIGluaXRfdHJhbXBvbGluZV9rYXNscih2b2lkKTsKICNlbHNl
CiBzdGF0aWMgaW5saW5lIHZvaWQga2VybmVsX3JhbmRvbWl6ZV9tZW1vcnkodm9pZCkgeyB9Citz
dGF0aWMgaW5saW5lIHZvaWQgaW5pdF90cmFtcG9saW5lX2thc2xyKHZvaWQpIHt9CiAjZW5kaWYg
LyogQ09ORklHX1JBTkRPTUlaRV9NRU1PUlkgKi8KIAogI2VuZGlmCmRpZmYgLS1naXQgYS9hcmNo
L3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxl
LmgKaW5kZXggZDI0ZjhlMWY3MjUwLi42MzY2MTM2YjBlNDYgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2
L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxl
LmgKQEAgLTEwNzAsMjcgKzEwNzAsMTQgQEAgdm9pZCBpbml0X21lbV9tYXBwaW5nKHZvaWQpOwog
dm9pZCBlYXJseV9hbGxvY19wZ3RfYnVmKHZvaWQpOwogZXh0ZXJuIHZvaWQgbWVtYmxvY2tfZmlu
ZF9kbWFfcmVzZXJ2ZSh2b2lkKTsKIAorCiAjaWZkZWYgQ09ORklHX1g4Nl82NAotLyogUmVhbG1v
ZGUgdHJhbXBvbGluZSBpbml0aWFsaXphdGlvbi4gKi8KIGV4dGVybiBwZ2RfdCB0cmFtcG9saW5l
X3BnZF9lbnRyeTsKLXN0YXRpYyBpbmxpbmUgdm9pZCBfX21lbWluaXQgaW5pdF90cmFtcG9saW5l
X2RlZmF1bHQodm9pZCkKLXsKLQkvKiBEZWZhdWx0IHRyYW1wb2xpbmUgcGdkIHZhbHVlICovCi0J
dHJhbXBvbGluZV9wZ2RfZW50cnkgPSBpbml0X3RvcF9wZ3RbcGdkX2luZGV4KF9fUEFHRV9PRkZT
RVQpXTsKLX0KIAogdm9pZCBfX2luaXQgcG9raW5nX2luaXQodm9pZCk7CiAKIHVuc2lnbmVkIGxv
bmcgaW5pdF9tZW1vcnlfbWFwcGluZyh1bnNpZ25lZCBsb25nIHN0YXJ0LAogCQkJCSAgdW5zaWdu
ZWQgbG9uZyBlbmQsIHBncHJvdF90IHByb3QpOwotCi0jIGlmZGVmIENPTkZJR19SQU5ET01JWkVf
TUVNT1JZCi12b2lkIF9fbWVtaW5pdCBpbml0X3RyYW1wb2xpbmUodm9pZCk7Ci0jIGVsc2UKLSMg
IGRlZmluZSBpbml0X3RyYW1wb2xpbmUgaW5pdF90cmFtcG9saW5lX2RlZmF1bHQKLSMgZW5kaWYK
LSNlbHNlCi1zdGF0aWMgaW5saW5lIHZvaWQgaW5pdF90cmFtcG9saW5lKHZvaWQpIHsgfQogI2Vu
ZGlmCiAKIC8qIGxvY2FsIHB0ZSB1cGRhdGVzIG5lZWQgbm90IHVzZSB4Y2hnIGZvciBsb2NraW5n
ICovCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9zZXR1cC5oIGIvYXJjaC94ODYv
aW5jbHVkZS9hc20vc2V0dXAuaAppbmRleCBlZDhlYzAxMWE5ZmQuLmQ5NWNhY2YyMTBiYiAxMDA2
NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vc2V0dXAuaAorKysgYi9hcmNoL3g4Ni9pbmNs
dWRlL2FzbS9zZXR1cC5oCkBAIC03OCw2ICs3OCwxNSBAQCBzdGF0aWMgaW5saW5lIGJvb2wga2Fz
bHJfZW5hYmxlZCh2b2lkKQogCXJldHVybiAhIShib290X3BhcmFtcy5oZHIubG9hZGZsYWdzICYg
S0FTTFJfRkxBRyk7CiB9CiAKKy8qCisgKiBBcHBseSBubyByYW5kb21pemF0aW9uIGlmIEtBU0xS
IHdhcyBkaXNhYmxlZCBhdCBib290IG9yIGlmIEtBU0FOCisgKiBpcyBlbmFibGVkLiBLQVNBTiBz
aGFkb3cgbWFwcGluZ3MgcmVseSBvbiByZWdpb25zIGJlaW5nIFBHRCBhbGlnbmVkLgorICovCitz
dGF0aWMgaW5saW5lIGJvb2wga2FzbHJfbWVtb3J5X2VuYWJsZWQodm9pZCkKK3sKKwlyZXR1cm4g
a2FzbHJfZW5hYmxlZCgpICYmICFJU19FTkFCTEVEKENPTkZJR19LQVNBTik7Cit9CisKIHN0YXRp
YyBpbmxpbmUgdW5zaWduZWQgbG9uZyBrYXNscl9vZmZzZXQodm9pZCkKIHsKIAlyZXR1cm4gKHVu
c2lnbmVkIGxvbmcpJl90ZXh0IC0gX19TVEFSVF9LRVJORUw7CmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni9tbS9pbml0LmMgYi9hcmNoL3g4Ni9tbS9pbml0LmMKaW5kZXggMjM1ZGQwZTM1NzQxLi5lMjI1
ZWJiMjUxOTcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL2luaXQuYworKysgYi9hcmNoL3g4Ni9t
bS9pbml0LmMKQEAgLTY4Miw2ICs2ODIsMjggQEAgc3RhdGljIHZvaWQgX19pbml0IG1lbW9yeV9t
YXBfYm90dG9tX3VwKHVuc2lnbmVkIGxvbmcgbWFwX3N0YXJ0LAogCX0KIH0KIAorLyoKKyAqIFRo
ZSByZWFsIG1vZGUgdHJhbXBvbGluZSwgd2hpY2ggaXMgcmVxdWlyZWQgZm9yIGJvb3RzdHJhcHBp
bmcgQ1BVcworICogb2NjdXBpZXMgb25seSBhIHNtYWxsIGFyZWEgdW5kZXIgdGhlIGxvdyAxTUIu
ICBTZWUgcmVzZXJ2ZV9yZWFsX21vZGUoKQorICogZm9yIGRldGFpbHMuCisgKgorICogSWYgS0FT
TFIgaXMgZGlzYWJsZWQgdGhlIGZpcnN0IFBHRCBlbnRyeSBvZiB0aGUgZGlyZWN0IG1hcHBpbmcg
aXMgY29waWVkCisgKiB0byBtYXAgdGhlIHJlYWwgbW9kZSB0cmFtcG9saW5lLgorICoKKyAqIElm
IEtBU0xSIGlzIGVuYWJsZWQsIGNvcHkgb25seSB0aGUgUFVEIHdoaWNoIGNvdmVycyB0aGUgbG93
IDFNQgorICogYXJlYS4gVGhpcyBsaW1pdHMgdGhlIHJhbmRvbWl6YXRpb24gZ3JhbnVsYXJpdHkg
dG8gMUdCIGZvciBib3RoIDQtbGV2ZWwKKyAqIGFuZCA1LWxldmVsIHBhZ2luZy4KKyAqLworc3Rh
dGljIHZvaWQgX19pbml0IGluaXRfdHJhbXBvbGluZSh2b2lkKQoreworI2lmZGVmIENPTkZJR19Y
ODZfNjQKKwlpZiAoIWthc2xyX21lbW9yeV9lbmFibGVkKCkpCisJCXRyYW1wb2xpbmVfcGdkX2Vu
dHJ5ID0gaW5pdF90b3BfcGd0W3BnZF9pbmRleChfX1BBR0VfT0ZGU0VUKV07CisJZWxzZQorCQlp
bml0X3RyYW1wb2xpbmVfa2FzbHIoKTsKKyNlbmRpZgorfQorCiB2b2lkIF9faW5pdCBpbml0X21l
bV9tYXBwaW5nKHZvaWQpCiB7CiAJdW5zaWduZWQgbG9uZyBlbmQ7CmRpZmYgLS1naXQgYS9hcmNo
L3g4Ni9tbS9rYXNsci5jIGIvYXJjaC94ODYvbW0va2FzbHIuYwppbmRleCBmYWYwMmUxZTE1MTcu
LmZiNjIwZmQ5ZGFlOSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvbW0va2FzbHIuYworKysgYi9hcmNo
L3g4Ni9tbS9rYXNsci5jCkBAIC02MSwxNSArNjEsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGxvbmcgZ2V0X3BhZGRpbmcoc3RydWN0IGthc2xyX21lbW9yeV9yZWdpb24gKnJlZ2lvbikKIAly
ZXR1cm4gKHJlZ2lvbi0+c2l6ZV90YiA8PCBUQl9TSElGVCk7CiB9CiAKLS8qCi0gKiBBcHBseSBu
byByYW5kb21pemF0aW9uIGlmIEtBU0xSIHdhcyBkaXNhYmxlZCBhdCBib290IG9yIGlmIEtBU0FO
Ci0gKiBpcyBlbmFibGVkLiBLQVNBTiBzaGFkb3cgbWFwcGluZ3MgcmVseSBvbiByZWdpb25zIGJl
aW5nIFBHRCBhbGlnbmVkLgotICovCi1zdGF0aWMgaW5saW5lIGJvb2wga2FzbHJfbWVtb3J5X2Vu
YWJsZWQodm9pZCkKLXsKLQlyZXR1cm4ga2FzbHJfZW5hYmxlZCgpICYmICFJU19FTkFCTEVEKENP
TkZJR19LQVNBTik7Ci19Ci0KIC8qIEluaXRpYWxpemUgYmFzZSBhbmQgcGFkZGluZyBmb3IgZWFj
aCBtZW1vcnkgcmVnaW9uIHJhbmRvbWl6ZWQgd2l0aCBLQVNMUiAqLwogdm9pZCBfX2luaXQga2Vy
bmVsX3JhbmRvbWl6ZV9tZW1vcnkodm9pZCkKIHsKQEAgLTE0OCw3ICsxMzksNyBAQCB2b2lkIF9f
aW5pdCBrZXJuZWxfcmFuZG9taXplX21lbW9yeSh2b2lkKQogCX0KIH0KIAotc3RhdGljIHZvaWQg
X19tZW1pbml0IGluaXRfdHJhbXBvbGluZV9wdWQodm9pZCkKK3ZvaWQgX19tZW1pbml0IGluaXRf
dHJhbXBvbGluZV9rYXNscih2b2lkKQogewogCXB1ZF90ICpwdWRfcGFnZV90cmFtcCwgKnB1ZCwg
KnB1ZF90cmFtcDsKIAlwNGRfdCAqcDRkX3BhZ2VfdHJhbXAsICpwNGQsICpwNGRfdHJhbXA7CkBA
IC0xODksMjUgKzE4MCwzIEBAIHN0YXRpYyB2b2lkIF9fbWVtaW5pdCBpbml0X3RyYW1wb2xpbmVf
cHVkKHZvaWQpCiAJCQlfX3BnZChfS0VSTlBHX1RBQkxFIHwgX19wYShwdWRfcGFnZV90cmFtcCkp
KTsKIAl9CiB9Ci0KLS8qCi0gKiBUaGUgcmVhbCBtb2RlIHRyYW1wb2xpbmUsIHdoaWNoIGlzIHJl
cXVpcmVkIGZvciBib290c3RyYXBwaW5nIENQVXMKLSAqIG9jY3VwaWVzIG9ubHkgYSBzbWFsbCBh
cmVhIHVuZGVyIHRoZSBsb3cgMU1CLiAgU2VlIHJlc2VydmVfcmVhbF9tb2RlKCkKLSAqIGZvciBk
ZXRhaWxzLgotICoKLSAqIElmIEtBU0xSIGlzIGRpc2FibGVkIHRoZSBmaXJzdCBQR0QgZW50cnkg
b2YgdGhlIGRpcmVjdCBtYXBwaW5nIGlzIGNvcGllZAotICogdG8gbWFwIHRoZSByZWFsIG1vZGUg
dHJhbXBvbGluZS4KLSAqCi0gKiBJZiBLQVNMUiBpcyBlbmFibGVkLCBjb3B5IG9ubHkgdGhlIFBV
RCB3aGljaCBjb3ZlcnMgdGhlIGxvdyAxTUIKLSAqIGFyZWEuIFRoaXMgbGltaXRzIHRoZSByYW5k
b21pemF0aW9uIGdyYW51bGFyaXR5IHRvIDFHQiBmb3IgYm90aCA0LWxldmVsCi0gKiBhbmQgNS1s
ZXZlbCBwYWdpbmcuCi0gKi8KLXZvaWQgX19tZW1pbml0IGluaXRfdHJhbXBvbGluZSh2b2lkKQot
ewotCWlmICgha2FzbHJfbWVtb3J5X2VuYWJsZWQoKSkgewotCQlpbml0X3RyYW1wb2xpbmVfZGVm
YXVsdCgpOwotCQlyZXR1cm47Ci0JfQotCi0JaW5pdF90cmFtcG9saW5lX3B1ZCgpOwotfQotLSAK
Mi4yNi4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpP
cGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6
Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
