Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 5671B4B5655
	for <lists+openrisc@lfdr.de>; Mon, 14 Feb 2022 17:35:56 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 3E92424800;
	Mon, 14 Feb 2022 17:35:56 +0100 (CET)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mail.librecores.org (Postfix) with ESMTPS id B80B323FA6
 for <openrisc@lists.librecores.org>; Mon, 14 Feb 2022 17:35:54 +0100 (CET)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id 9A6FB614F1;
 Mon, 14 Feb 2022 16:35:53 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id E10AAC340EF;
 Mon, 14 Feb 2022 16:35:42 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1644856553;
 bh=rSFbUFHYbR/4za9tBP+uUtPbOSoTyakm57XSAj/Auqo=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=OZ4O1gNSNtwwNmiHhjY6IhU0E4BJ5We8XbBhorxEj9WTOfzc8GW6A9wXhW3abITrh
 5VICuXJSDow6iYHC0e3qjJUZrd0nY+ZxgCA70cKABEhGmYygXnXVotyKfOCbgpbVrm
 pGuK4IQR59nad5NN7zMl26jmakL0tF5IsM3zVKvJuUsbgvtw8ymirj23M7AeUqRAbK
 Nb4ZCpdR7LXfqeDbObSioCUxRgm3spWcYhdjYFVER3t9sUGge35gaIcf4USGqAeqIv
 Op0kZQjMjQu+Uf/UqNmdKlInWq80ZiSg5HRmKlo5FLGvtYFTEQ1arJmMBawI+kUcs8
 VAdmt64TVWmMQ==
From: Arnd Bergmann <arnd@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>,
 Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
 linux-mm@kvack.org, linux-api@vger.kernel.org, arnd@arndb.de,
 linux-kernel@vger.kernel.org
Date: Mon, 14 Feb 2022 17:34:39 +0100
Message-Id: <20220214163452.1568807-2-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
In-Reply-To: <20220214163452.1568807-1-arnd@kernel.org>
References: <20220214163452.1568807-1-arnd@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 01/14] uaccess: fix integer overflow on
 access_ok()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: mark.rutland@arm.com, dalias@libc.org, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, peterz@infradead.org, jcmvbkbc@gmail.com,
 guoren@kernel.org, sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, will@kernel.org, ardb@kernel.org,
 linux-s390@vger.kernel.org, bcain@codeaurora.org, mpe@ellerman.id.au,
 deller@gmx.de, x86@kernel.org, linux@armlinux.org.uk,
 linux-csky@vger.kernel.org, mingo@redhat.com,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 hca@linux.ibm.com, linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 green.hu@gmail.com, linux-arm-kernel@lists.infradead.org, monstr@monstr.eu,
 tsbogend@alpha.franken.de, linux-parisc@vger.kernel.org, nickhu@andestech.com,
 linux-mips@vger.kernel.org, stable@vger.kernel.org, dinguyen@kernel.org,
 David Laight <David.Laight@aculab.com>, ebiederm@xmission.com, richard@nod.at,
 akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org, davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KClRocmVlIGFyY2hpdGVjdHVyZXMg
Y2hlY2sgdGhlIGVuZCBvZiBhIHVzZXIgYWNjZXNzIGFnYWluc3QgdGhlCmFkZHJlc3MgbGltaXQg
d2l0aG91dCB0YWtpbmcgYSBwb3NzaWJsZSBvdmVyZmxvdyBpbnRvIGFjY291bnQuClBhc3Npbmcg
YSBuZWdhdGl2ZSBsZW5ndGggb3IgYW5vdGhlciBvdmVyZmxvdyBpbiBoZXJlIHJldHVybnMKc3Vj
Y2VzcyB3aGVuIGl0IHNob3VsZCBub3QuCgpVc2UgdGhlIG1vc3QgY29tbW9uIGNvcnJlY3QgaW1w
bGVtZW50YXRpb24gaGVyZSwgd2hpY2ggb3B0aW1pemVzCmZvciBhIGNvbnN0YW50ICdzaXplJyBh
cmd1bWVudCwgYW5kIHR1cm5zIHRoZSBjb21tb24gY2FzZSBpbnRvIGEKc2luZ2xlIGNvbXBhcmlz
b24uCgpDYzogc3RhYmxlQHZnZXIua2VybmVsLm9yZwpGaXhlczogZGE1NTEyODE5NDdjICgiY3Nr
eTogVXNlciBhY2Nlc3MiKQpGaXhlczogZjY2M2I2MGY1MjE1ICgibWljcm9ibGF6ZTogRml4IHVh
Y2Nlc3Nfb2sgbWFjcm8iKQpGaXhlczogNzU2Nzc0NmUxYzBkICgiSGV4YWdvbjogQWRkIHVzZXIg
YWNjZXNzIGZ1bmN0aW9ucyIpClJlcG9ydGVkLWJ5OiBEYXZpZCBMYWlnaHQgPERhdmlkLkxhaWdo
dEBhY3VsYWIuY29tPgpTaWduZWQtb2ZmLWJ5OiBBcm5kIEJlcmdtYW5uIDxhcm5kQGFybmRiLmRl
PgotLS0KIGFyY2gvY3NreS9pbmNsdWRlL2FzbS91YWNjZXNzLmggICAgICAgfCAgNyArKystLS0t
CiBhcmNoL2hleGFnb24vaW5jbHVkZS9hc20vdWFjY2Vzcy5oICAgIHwgMTggKysrKysrKysrLS0t
LS0tLS0tCiBhcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vdWFjY2Vzcy5oIHwgMTkgKysrKy0t
LS0tLS0tLS0tLS0tLQogMyBmaWxlcyBjaGFuZ2VkLCAxNiBpbnNlcnRpb25zKCspLCAyOCBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vdWFjY2Vzcy5oIGIv
YXJjaC9jc2t5L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRleCBjNDBmMDZlZThkM2UuLmFjNWE1
NGY1N2Q0MCAxMDA2NDQKLS0tIGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAorKysg
Yi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC0zLDE0ICszLDEzIEBACiAjaWZu
ZGVmIF9fQVNNX0NTS1lfVUFDQ0VTU19ICiAjZGVmaW5lIF9fQVNNX0NTS1lfVUFDQ0VTU19ICiAK
LSNkZWZpbmUgdXNlcl9hZGRyX21heCgpIFwKLQkodWFjY2Vzc19rZXJuZWwoKSA/IEtFUk5FTF9E
Uy5zZWcgOiBnZXRfZnMoKS5zZWcpCisjZGVmaW5lIHVzZXJfYWRkcl9tYXgoKSAoY3VycmVudF90
aHJlYWRfaW5mbygpLT5hZGRyX2xpbWl0LnNlZykKIAogc3RhdGljIGlubGluZSBpbnQgX19hY2Nl
c3Nfb2sodW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIHNpemUpCiB7Ci0JdW5zaWdu
ZWQgbG9uZyBsaW1pdCA9IGN1cnJlbnRfdGhyZWFkX2luZm8oKS0+YWRkcl9saW1pdC5zZWc7CisJ
dW5zaWduZWQgbG9uZyBsaW1pdCA9IHVzZXJfYWRkcl9tYXgoKTsKIAotCXJldHVybiAoKGFkZHIg
PCBsaW1pdCkgJiYgKChhZGRyICsgc2l6ZSkgPCBsaW1pdCkpOworCXJldHVybiAoc2l6ZSA8PSBs
aW1pdCkgJiYgKGFkZHIgPD0gKGxpbWl0IC0gc2l6ZSkpOwogfQogI2RlZmluZSBfX2FjY2Vzc19v
ayBfX2FjY2Vzc19vawogCmRpZmYgLS1naXQgYS9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vdWFj
Y2Vzcy5oIGIvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRleCBlZjViZmVm
OGQ0OTAuLjcxOWJhM2YzYzQ1YyAxMDA2NDQKLS0tIGEvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNt
L3VhY2Nlc3MuaAorKysgYi9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC0y
NSwxNyArMjUsMTcgQEAKICAqIFJldHVybnMgdHJ1ZSAobm9uemVybykgaWYgdGhlIG1lbW9yeSBi
bG9jayAqbWF5KiBiZSB2YWxpZCwgZmFsc2UgKHplcm8pCiAgKiBpZiBpdCBpcyBkZWZpbml0ZWx5
IGludmFsaWQuCiAgKgotICogVXNlciBhZGRyZXNzIHNwYWNlIGluIEhleGFnb24sIGxpa2UgeDg2
LCBnb2VzIHRvIDB4YmZmZmZmZmYsIHNvIHRoZQotICogc2ltcGxlIE1TQi1iYXNlZCB0ZXN0cyB1
c2VkIGJ5IE1JUFMgd29uJ3Qgd29yay4gIFNvbWUgZnVydGhlcgotICogb3B0aW1pemF0aW9uIGlz
IHByb2JhYmx5IHBvc3NpYmxlIGhlcmUsIGJ1dCBmb3Igbm93LCBrZWVwIGl0Ci0gKiByZWFzb25h
Ymx5IHNpbXBsZSBhbmQgbm90ICp0b28qIHNsb3cuICBBZnRlciBhbGwsIHdlJ3ZlIGdvdCB0aGUK
LSAqIE1NVSBmb3IgYmFja3VwLgogICovCisjZGVmaW5lIHVhY2Nlc3Nfa2VybmVsKCkgKGdldF9m
cygpLnNlZyA9PSBLRVJORUxfRFMuc2VnKQorI2RlZmluZSB1c2VyX2FkZHJfbWF4KCkgKHVhY2Nl
c3Nfa2VybmVsKCkgPyB+MFVMIDogVEFTS19TSVpFKQogCi0jZGVmaW5lIF9fYWNjZXNzX29rKGFk
ZHIsIHNpemUpIFwKLQkoKGdldF9mcygpLnNlZyA9PSBLRVJORUxfRFMuc2VnKSB8fCBcCi0JKCgo
dW5zaWduZWQgbG9uZylhZGRyIDwgZ2V0X2ZzKCkuc2VnKSAmJiBcCi0JICAodW5zaWduZWQgbG9u
ZylzaXplIDwgKGdldF9mcygpLnNlZyAtICh1bnNpZ25lZCBsb25nKWFkZHIpKSkKK3N0YXRpYyBp
bmxpbmUgaW50IF9fYWNjZXNzX29rKHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBz
aXplKQoreworCXVuc2lnbmVkIGxvbmcgbGltaXQgPSBUQVNLX1NJWkU7CisKKwlyZXR1cm4gKHNp
emUgPD0gbGltaXQpICYmIChhZGRyIDw9IChsaW1pdCAtIHNpemUpKTsKK30KKyNkZWZpbmUgX19h
Y2Nlc3Nfb2sgX19hY2Nlc3Nfb2sKIAogLyoKICAqIFdoZW4gYSBrZXJuZWwtbW9kZSBwYWdlIGZh
dWx0IGlzIHRha2VuLCB0aGUgZmF1bHRpbmcgaW5zdHJ1Y3Rpb24KZGlmZiAtLWdpdCBhL2FyY2gv
bWljcm9ibGF6ZS9pbmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL21pY3JvYmxhemUvaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oCmluZGV4IGQyYThlZjlmODk3OC4uNWI2ZTBlNzc4OGY0IDEwMDY0NAot
LS0gYS9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvbWlj
cm9ibGF6ZS9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAgLTM5LDI0ICszOSwxMyBAQAogCiAjIGRl
ZmluZSB1YWNjZXNzX2tlcm5lbCgpCShnZXRfZnMoKS5zZWcgPT0gS0VSTkVMX0RTLnNlZykKIAot
c3RhdGljIGlubGluZSBpbnQgYWNjZXNzX29rKGNvbnN0IHZvaWQgX191c2VyICphZGRyLCB1bnNp
Z25lZCBsb25nIHNpemUpCitzdGF0aWMgaW5saW5lIGludCBfX2FjY2Vzc19vayh1bnNpZ25lZCBs
b25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgc2l6ZSkKIHsKLQlpZiAoIXNpemUpCi0JCWdvdG8gb2s7
CisJdW5zaWduZWQgbG9uZyBsaW1pdCA9IHVzZXJfYWRkcl9tYXgoKTsKIAotCWlmICgoZ2V0X2Zz
KCkuc2VnIDwgKCh1bnNpZ25lZCBsb25nKWFkZHIpKSB8fAotCQkJKGdldF9mcygpLnNlZyA8ICgo
dW5zaWduZWQgbG9uZylhZGRyICsgc2l6ZSAtIDEpKSkgewotCQlwcl9kZXZlbCgiQUNDRVNTIGZh
aWwgYXQgMHglMDh4IChzaXplIDB4JXgpLCBzZWcgMHglMDh4XG4iLAotCQkJKF9fZm9yY2UgdTMy
KWFkZHIsICh1MzIpc2l6ZSwKLQkJCSh1MzIpZ2V0X2ZzKCkuc2VnKTsKLQkJcmV0dXJuIDA7Ci0J
fQotb2s6Ci0JcHJfZGV2ZWwoIkFDQ0VTUyBPSyBhdCAweCUwOHggKHNpemUgMHgleCksIHNlZyAw
eCUwOHhcbiIsCi0JCQkoX19mb3JjZSB1MzIpYWRkciwgKHUzMilzaXplLAotCQkJKHUzMilnZXRf
ZnMoKS5zZWcpOwotCXJldHVybiAxOworCXJldHVybiAoc2l6ZSA8PSBsaW1pdCkgJiYgKGFkZHIg
PD0gKGxpbWl0IC0gc2l6ZSkpOwogfQorI2RlZmluZSBhY2Nlc3Nfb2soYWRkciwgc2l6ZSkgX19h
Y2Nlc3Nfb2soKHVuc2lnbmVkIGxvbmcpYWRkciwgc2l6ZSkKIAogIyBkZWZpbmUgX19GSVhVUF9T
RUNUSU9OCSIuc2VjdGlvbiAuZml4dXAsXCJheFwiXG4iCiAjIGRlZmluZSBfX0VYX1RBQkxFX1NF
Q1RJT04JIi5zZWN0aW9uIF9fZXhfdGFibGUsXCJhXCJcbiIKLS0gCjIuMjkuMgoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBs
aXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jl
cy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
