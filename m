Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 2BCEC1DE75B
	for <lists+openrisc@lfdr.de>; Fri, 22 May 2020 14:56:52 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id A6C3920BB0;
	Fri, 22 May 2020 14:56:51 +0200 (CEST)
Received: from us-smtp-1.mimecast.com (us-smtp-1.mimecast.com [207.211.31.81])
 by mail.librecores.org (Postfix) with ESMTP id 870CF20B11
 for <openrisc@lists.librecores.org>; Fri, 22 May 2020 14:56:49 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1590152208;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=FY2HE1jIC7sK5DK3+oK5Mb3bTuZ4iAW6Uyd62VmYznM=;
 b=Pw8GlPcvJOWZzhFsHvvdjtyW8xFFu1pAcy47vcXnEjCtal0Mxs7ZQH2Rthtzt0lCrkxtwr
 YJ8oXJhPBWeL8js5f7Kau66A+kWQOxWyDN5OBioWMGsyd85exC3mJpbktcjS1U7qhtnZKu
 OwoMcFsfiZay23ybx/eH1HYgwKwEYFw=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-101-9sGYplinM6-7tVZWGbLhgQ-1; Fri, 22 May 2020 08:56:45 -0400
X-MC-Unique: 9sGYplinM6-7tVZWGbLhgQ-1
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.phx2.redhat.com
 [10.5.11.11])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id C5D0780183C;
 Fri, 22 May 2020 12:56:43 +0000 (UTC)
Received: from oldenburg2.str.redhat.com (ovpn-112-155.ams2.redhat.com
 [10.36.112.155])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id D0D6D649A9;
 Fri, 22 May 2020 12:56:41 +0000 (UTC)
From: Florian Weimer <fweimer@redhat.com>
To: Stafford Horne via Libc-alpha <libc-alpha@sourceware.org>
References: <20200522113633.209664-1-shorne@gmail.com>
 <20200522113633.209664-2-shorne@gmail.com>
Date: Fri, 22 May 2020 14:56:40 +0200
In-Reply-To: <20200522113633.209664-2-shorne@gmail.com> (Stafford Horne via
 Libc-alpha's message of "Fri, 22 May 2020 20:36:33 +0900")
Message-ID: <87eerc3z7b.fsf@oldenburg2.str.redhat.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.3 (gnu/linux)
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.11
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Subject: Re: [OpenRISC] [PATCH 1/1] Initial support for OpenRISC
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>, Christian Svensson <blue@cmd.nu>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

KiBTdGFmZm9yZCBIb3JuZSB2aWEgTGliYy1hbHBoYToKCj4gZGlmZiAtLWdpdCBhL2VsZi9lbGYu
aCBiL2VsZi9lbGYuaAo+IGluZGV4IDUxZTk5Njg0MDUuLjFlOGE4ZTc0YzQgMTAwNjQ0Cj4gLS0t
IGEvZWxmL2VsZi5oCj4gKysrIGIvZWxmL2VsZi5oCj4gQEAgLTQwOTYsNiArNDA5Niw0MyBAQCBl
bnVtCj4gICNkZWZpbmUgUl9BUkNfVExTX0xFX1M5CQkweDRhCj4gICNkZWZpbmUgUl9BUkNfVExT
X0xFXzMyCQkweDRiCj4gIAo+ICsvKiBPcGVuUklTQyAxMDAwIHNwZWNpZmljIHJlbG9jcy4gICov
Cj4gKyNkZWZpbmUgUl9PUjFLX05PTkUJCTAKPiArI2RlZmluZSBSX09SMUtfMzIJCTEKPiArI2Rl
ZmluZSBSX09SMUtfMTYJCTIKPiArI2RlZmluZSBSX09SMUtfOAkJMwo+ICsjZGVmaW5lIFJfT1Ix
S19MT18xNl9JTl9JTlNOCTQKPiArI2RlZmluZSBSX09SMUtfSElfMTZfSU5fSU5TTgk1Cj4gKyNk
ZWZpbmUgUl9PUjFLX0lOU05fUkVMXzI2CTYKPiArI2RlZmluZSBSX09SMUtfR05VX1ZURU5UUlkJ
Nwo+ICsjZGVmaW5lIFJfT1IxS19HTlVfVlRJTkhFUklUCTgKPiArI2RlZmluZSBSX09SMUtfMzJf
UENSRUwJCTkKPiArI2RlZmluZSBSX09SMUtfMTZfUENSRUwJCTEwCj4gKyNkZWZpbmUgUl9PUjFL
XzhfUENSRUwJCTExCj4gKyNkZWZpbmUgUl9PUjFLX0dPVFBDX0hJMTYJMTIKPiArI2RlZmluZSBS
X09SMUtfR09UUENfTE8xNgkxMwo+ICsjZGVmaW5lIFJfT1IxS19HT1QxNgkJMTQKPiArI2RlZmlu
ZSBSX09SMUtfUExUMjYJCTE1Cj4gKyNkZWZpbmUgUl9PUjFLX0dPVE9GRl9ISTE2CTE2Cj4gKyNk
ZWZpbmUgUl9PUjFLX0dPVE9GRl9MTzE2CTE3Cj4gKyNkZWZpbmUgUl9PUjFLX0NPUFkJCTE4Cj4g
KyNkZWZpbmUgUl9PUjFLX0dMT0JfREFUCQkxOQo+ICsjZGVmaW5lIFJfT1IxS19KTVBfU0xPVAkJ
MjAKPiArI2RlZmluZSBSX09SMUtfUkVMQVRJVkUJCTIxCj4gKyNkZWZpbmUgUl9PUjFLX1RMU19H
RF9ISTE2CTIyCj4gKyNkZWZpbmUgUl9PUjFLX1RMU19HRF9MTzE2CTIzCj4gKyNkZWZpbmUgUl9P
UjFLX1RMU19MRE1fSEkxNgkyNAo+ICsjZGVmaW5lIFJfT1IxS19UTFNfTERNX0xPMTYJMjUKPiAr
I2RlZmluZSBSX09SMUtfVExTX0xET19ISTE2CTI2Cj4gKyNkZWZpbmUgUl9PUjFLX1RMU19MRE9f
TE8xNgkyNwo+ICsjZGVmaW5lIFJfT1IxS19UTFNfSUVfSEkxNgkyOAo+ICsjZGVmaW5lIFJfT1Ix
S19UTFNfSUVfTE8xNgkyOQo+ICsjZGVmaW5lIFJfT1IxS19UTFNfTEVfSEkxNgkzMAo+ICsjZGVm
aW5lIFJfT1IxS19UTFNfTEVfTE8xNgkzMQo+ICsjZGVmaW5lIFJfT1IxS19UTFNfVFBPRkYJMzIK
PiArI2RlZmluZSBSX09SMUtfVExTX0RUUE9GRgkzMwo+ICsjZGVmaW5lIFJfT1IxS19UTFNfRFRQ
TU9ECTM0Cj4gKwo+ICBfX0VORF9ERUNMUwoKUGxlYXNlIHBvc3QgdGhpcyBzZXBhcmF0ZWx5LCBp
dCBjYW4gYmUgcmV2aWV3ZWQgYW5kIGdvIGluIGJlZm9yZSB0aGUKYWN0dWFsIHBvcnQgZ29lcyBp
bi4KCj4gZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9JbXBsaWVzIGIvc3lzZGVwcy9vcjFrL0lt
cGxpZXMKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+IGluZGV4IDAwMDAwMDAwMDAuLmZmNjk5Yzdk
ZDUKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lzZGVwcy9vcjFrL0ltcGxpZXMKPiBAQCAtMCww
ICsxLDQgQEAKPiAraW5pdF9hcnJheQo+ICt3b3Jkc2l6ZS0zMgo+ICtpZWVlNzU0L2RibC02NAo+
ICtpZWVlNzU0L2ZsdC0zMgoKVGhlIGluaXRfYXJyYXkgc3ViZGlyZWN0b3J5IGRvZXMgbm90IGV4
aXN0IGFueW1vcmUuCgo+IGRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvYml0cy9lbmRpYW5uZXNz
LmggYi9zeXNkZXBzL29yMWsvYml0cy9lbmRpYW5uZXNzLmgKPiBuZXcgZmlsZSBtb2RlIDEwMDY0
NAo+IGluZGV4IDAwMDAwMDAwMDAuLjk2ZmQ1YWU1ZWYKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIv
c3lzZGVwcy9vcjFrL2JpdHMvZW5kaWFubmVzcy5oCj4gQEAgLTAsMCArMSwxMSBAQAo+ICsjaWZu
ZGVmIF9CSVRTX0VORElBTk5FU1NfSAo+ICsjZGVmaW5lIF9CSVRTX0VORElBTk5FU1NfSCAxCj4g
Kwo+ICsjaWZuZGVmIF9CSVRTX0VORElBTl9ICj4gKyMgZXJyb3IgIk5ldmVyIHVzZSA8Yml0cy9l
bmRpYW5uZXNzLmg+IGRpcmVjdGx5OyBpbmNsdWRlIDxlbmRpYW4uaD4gaW5zdGVhZC4iCj4gKyNl
bmRpZgo+ICsKPiArLyogSFAtUEEgaXMgYmlnLWVuZGlhbi4gICovCj4gKyNkZWZpbmUgX19CWVRF
X09SREVSIF9fQklHX0VORElBTgo+ICsKPiArI2VuZGlmIC8qIGJpdHMvZW5kaWFubmVzcy5oICov
CgpIUC1QQT8KCj4gZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9iaXRzL3NldGptcC5oIGIvc3lz
ZGVwcy9vcjFrL2JpdHMvc2V0am1wLmgKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+IGluZGV4IDAw
MDAwMDAwMDAuLmRkMDdmY2U2OGMKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lzZGVwcy9vcjFr
L2JpdHMvc2V0am1wLmgKPiBAQCAtMCwwICsxLDM2IEBACj4gKy8qIERlZmluZSB0aGUgbWFjaGlu
ZS1kZXBlbmRlbnQgdHlwZSBgam1wX2J1ZicuICBPcGVuUklTQyB2ZXJzaW9uLgo+ICsgICBDb3B5
cmlnaHQgKEMpIDIwMjAgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCj4gKyAgIFRoaXMg
ZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5Lgo+ICsKPiArICAgVGhlIEdOVSBDIExp
YnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCj4g
KyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQ
dWJsaWMKPiArICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91
bmRhdGlvbjsgZWl0aGVyCj4gKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQg
eW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgo+ICsKPiArICAgVGhlIEdOVSBDIExpYnJh
cnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKPiAr
ICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2Fy
cmFudHkgb2YKPiArICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKPiArICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vu
c2UgZm9yIG1vcmUgZGV0YWlscy4KPiArCj4gKyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBh
IGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKPiArICAgTGljZW5zZSBhbG9u
ZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHdyaXRlIHRvIHRoZSBGcmVlCj4gKyAg
IFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4sIDU5IFRlbXBsZSBQbGFjZSwgU3VpdGUgMzMwLCBC
b3N0b24sIE1BCj4gKyAgIDAyMTExLTEzMDcgVVNBLiAgKi8KPiArCj4gKwo+ICsjaWZuZGVmIF9P
UjFLX0JJVFNfU0VUSk1QX0gKPiArI2RlZmluZSBfT1IxS19CSVRTX1NFVEpNUF9IICAxCj4gKwo+
ICsjaWYgIWRlZmluZWQgX1NFVEpNUF9IICYmICFkZWZpbmVkIF9QVEhSRUFEX0gKPiArIyBlcnJv
ciAiTmV2ZXIgaW5jbHVkZSA8Yml0cy9zZXRqbXAuaD4gZGlyZWN0bHk7IHVzZSA8c2V0am1wLmg+
IGluc3RlYWQuIgo+ICsjZW5kaWYKPiArCj4gKyNpZiBkZWZpbmVkIF9fVVNFX01JU0MgfHwgZGVm
aW5lZCBfQVNNCj4gKyMgZGVmaW5lIEpCX1NQICAgICAwICAvKiBHUFIxICovCj4gKyNlbmRpZgoK
SXQncyBvZGQgdG8gZGVmaW5lIHRoaXMgaW4gYW4gaW5zdGFsbGVkIGhlYWRlci4gIEkgdGhpbmsg
aXQncyB1bnVzZWQKYW55d2F5LiAgTG9va3MgbGlrZSB5ZXQgYW5vdGhlciBocHBhIHJlbW5hbnQu
Cgo+IGRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvZGwtbWFjaGluZS5oIGIvc3lzZGVwcy9vcjFr
L2RsLW1hY2hpbmUuaAo+IG5ldyBmaWxlIG1vZGUgMTAwNjQ0Cj4gaW5kZXggMDAwMDAwMDAwMC4u
MGJjZGM5ODg4Ywo+IC0tLSAvZGV2L251bGwKPiArKysgYi9zeXNkZXBzL29yMWsvZGwtbWFjaGlu
ZS5oCj4gQEAgLTAsMCArMSwzMzkgQEAKCj4gK2F1dG8gaW5saW5lIHZvaWQKPiArX19hdHRyaWJ1
dGUgKChhbHdheXNfaW5saW5lKSkKPiArZWxmX21hY2hpbmVfcmVsYSAoc3RydWN0IGxpbmtfbWFw
ICptYXAsIGNvbnN0IEVsZjMyX1JlbGEgKnJlbG9jLAo+ICsgICAgICAgICAgICAgICAgICBjb25z
dCBFbGYzMl9TeW0gKnN5bSwgY29uc3Qgc3RydWN0IHJfZm91bmRfdmVyc2lvbiAqdmVyc2lvbiwK
PiArICAgICAgICAgICAgICAgICAgdm9pZCAqY29uc3QgcmVsb2NfYWRkcl9hcmcsIGludCBza2lw
X2lmdW5jKQo+ICt7Cj4gKyAgRWxmMzJfQWRkciAqY29uc3QgcmVsb2NfYWRkciA9IHJlbG9jX2Fk
ZHJfYXJnOwo+ICsgIGNvbnN0IHVuc2lnbmVkIGludCByX3R5cGUgPSBFTEYzMl9SX1RZUEUgKHJl
bG9jLT5yX2luZm8pOwo+ICsKPiArICBpZiAoX19idWlsdGluX2V4cGVjdCAocl90eXBlID09IFJf
T1IxS19OT05FLCAwKSkKPiArICAgIHJldHVybjsKClBsZWFzZSB1c2UgX19nbGliY19saWtlbHkg
YW5kIF9fZ2xpYmNfdW5saWtlbHkuCgo+ICsgICAgICAgICAgY2FzZSBSX09SMUtfMzI6Cj4gKwkg
ICAgewo+ICsJICAgICAgLyogSGFuZGxlIG1pcy1hbGlnbmVkIG9mZnNldHMgKi8KPiArCSAgICAg
IHN0cnVjdCB1bmFsaWduZWQKPiArCQl7Cj4gKwkJICBFbGYzMl9BZGRyIHg7Cj4gKwkJfSBfX2F0
dHJpYnV0ZV9fICgocGFja2VkLCBtYXlfYWxpYXMpKTsKPiArCj4gKwkgICAgICAvKiBTdXBwb3J0
IHJlbG9jYXRpb25zIG9uIG1pcy1hbGlnbmVkIG9mZnNldHMuICAqLwo+ICsJICAgICAgKChzdHJ1
Y3QgdW5hbGlnbmVkICopIHJlbG9jX2FkZHIpLT54ID0gdmFsdWUgKyByZWxvYy0+cl9hZGRlbmQ7
Cj4gKwkgICAgICBicmVhazsKCldvdWxkIGl0IGJlIGNsZWFyZXIgdG8gdXNlIG1lbWNweSBoZXJl
PyAgVGhlIGdlbmVyYXRlZCBjb2RlIGlzIGxpa2VseQp0aGUgc2FtZS4KCj4gKyAgICAgICAgICBk
ZWZhdWx0Ogo+ICsgICAgICAgICAgICBfZGxfZmF0YWxfcHJpbnRmKCJVbmhhbmRsZWQgcmVsb2M6
ICV1XG4iLCByX3R5cGUpOwo+ICsgICAgICAgICAgICBfZGxfcmVsb2NfYmFkX3R5cGUgKG1hcCwg
cl90eXBlLCAwKTsKPiArICAgICAgICAgICAgYnJlYWs7CgpfZGxfcmVsb2NfYmFkX3R5cGUgaXMg
dW5yZWFjaGFibGUgaGVyZS4KCj4gK2F1dG8gaW5saW5lIHZvaWQKPiArX19hdHRyaWJ1dGVfXyAo
KGFsd2F5c19pbmxpbmUpKQo+ICtlbGZfbWFjaGluZV9sYXp5X3JlbCAoc3RydWN0IGxpbmtfbWFw
ICptYXAsCj4gKyAgICAgICAgICAgICAgICAgICAgICBFbGYzMl9BZGRyIGxfYWRkciwgY29uc3Qg
RWxmMzJfUmVsYSAqcmVsb2MsCj4gKyAgICAgICAgICAgICAgICAgICAgICBpbnQgc2tpcF9pZnVu
YykKPiArewo+ICsgIEVsZjMyX0FkZHIgKmNvbnN0IHJlbG9jX2FkZHIgPSAodm9pZCAqKSAobF9h
ZGRyICsgcmVsb2MtPnJfb2Zmc2V0KTsKPiArICBjb25zdCB1bnNpZ25lZCBpbnQgcl90eXBlID0g
RUxGMzJfUl9UWVBFIChyZWxvYy0+cl9pbmZvKTsKPiArCj4gKyAgaWYgKF9fYnVpbHRpbl9leHBl
Y3QgKHJfdHlwZSA9PSBSX09SMUtfSk1QX1NMT1QsIDEpKQo+ICsgICAgICAqcmVsb2NfYWRkciAr
PSBsX2FkZHI7Cj4gKyAgZWxzZSBpZiAoX19idWlsdGluX2V4cGVjdCAocl90eXBlID09IFJfT1Ix
S19OT05FLCAwKSkKPiArICAgIHJldHVybjsKPiArICBlbHNlCj4gKyAgICB7Cj4gKyAgICAgIF9k
bF9mYXRhbF9wcmludGYoIlVuaGFuZGxlZCBsYXp5IHJlbG9jOiAldVxuIiwgcl90eXBlKTsKPiAr
ICAgICAgX2RsX3JlbG9jX2JhZF90eXBlIChtYXAsIHJfdHlwZSwgMSk7Cj4gKyAgICB9CgpMaWtl
d2lzZS4KCj4gZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9kbC1zdGFydC5TIGIvc3lzZGVwcy9v
cjFrL2RsLXN0YXJ0LlMKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+IGluZGV4IDAwMDAwMDAwMDAu
Ljk1Y2IwZjIzOTYKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lzZGVwcy9vcjFrL2RsLXN0YXJ0
LlMKCj4gQEAgLTAsMCArMSwxMDEgQEAKPiArCS8qIExvYWQgdGVybWluYXRpb24gZnVuY3Rpb24g
YWRkcmVzcy4KPiArCSAgIFBhc3MgdGhpcyBpbiByOSB0byB0aGUgX3N0YXJ0IGZ1bmN0aW9uLgo+
ICsJICAgc3RhcnQuUyB3aWxsIHRoZW4gcGFzcyB0aGlzIHRvIF9fbGliY19zdGFydF9tYWluLiAg
Ki8KPiArCWwubHd6CXI5LCBnb3QoX2RsX2ZpbmkpKHIxNikKClRoZSBmaW5pIGFyZ3VtZW50IHRv
IF9fbGliY19zdGFydF9tYWluIGlzIHVudXNlZCwgc28gdGhpcyBzaG91bGRuJ3QgYmUKbmVjZXNz
YXJ5LgoKCj4gZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9tZW11c2FnZS5oIGIvc3lzZGVwcy9v
cjFrL21lbXVzYWdlLmgKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+IGluZGV4IDAwMDAwMDAwMDAu
LmNkZDMzYzFiN2MKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lzZGVwcy9vcjFrL21lbXVzYWdl
LmgKCj4gKyNkZWZpbmUgR0VUU1AoKSAoeyByZWdpc3RlciB1aW50cHRyX3Qgc3RhY2tfcHRyIGFz
bSAoInIxIik7IHN0YWNrX3B0cjsgfSkKCkkgdGhpbmsgaXQncyBtb3JlIGZ1dHVyZS1wcm9vZiB0
byB1c2UgdGhlIGFwcHJvcHJpYXRlIGNvbXBpbGVyIGJ1aWx0aW4uCgo+IGRpZmYgLS1naXQgYS9z
eXNkZXBzL29yMWsvc3RhcnQuUyBiL3N5c2RlcHMvb3Ixay9zdGFydC5TCj4gbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKPiBpbmRleCAwMDAwMDAwMDAwLi4zMzllMGRkY2MyCj4gLS0tIC9kZXYvbnVsbAo+
ICsrKyBiL3N5c2RlcHMvb3Ixay9zdGFydC5TCj4gQEAgLTAsMCArMSwxMTYgQEAKCj4gKwkvKiBy
dGxkX2ZpbmkgPSB0aGUgZHluYW1pYyBmaW5pIGFkZHJlc3MuCj4gKwkgIFRoaXMgaXMgc2V0IGJ5
IGRsLXN0YXJ0LlMgb3IganVzdCBwbGFpbiBOVUxMIGlmIGNhbGxlZCBkaXJlY3RseS4gKi8KPiAr
CWwub3JpCXI4LCByOSwgMAoKSSB0aGluayB0aGlzIGlzIG91dGRhdGVkLCBzZWUgYWJvdmUuCgo+
IGRpZmYgLS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL2Nsb25lLmMgYi9zeXNk
ZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL2Nsb25lLmMKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+
IGluZGV4IDAwMDAwMDAwMDAuLmY5ZGM0ZDIxMDYKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lz
ZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9jbG9uZS5jCj4gQEAgLTAsMCArMSw1OSBAQAo+ICsv
KiBDb3B5cmlnaHQgKEMpIDIwMjAgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCj4gKyAg
IFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5Lgo+ICsKPiArICAgVGhlIEdO
VSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5k
L29yCj4gKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2Vu
ZXJhbCBQdWJsaWMKPiArICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdh
cmUgRm91bmRhdGlvbjsgZWl0aGVyCj4gKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBv
ciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgo+ICsKPiArICAgVGhlIEdOVSBD
IExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1
bCwKPiArICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxp
ZWQgd2FycmFudHkgb2YKPiArICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFS
VElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKPiArICAgTGVzc2VyIEdlbmVyYWwgUHVibGlj
IExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KPiArCj4gKyAgIFlvdSBzaG91bGQgaGF2ZSByZWNl
aXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKPiArICAgTGljZW5z
ZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQo+ICsgICA8aHR0cHM6
Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KPiArCj4gKyNpbmNsdWRlIDxzdGRhcmcuaD4K
PiArI2luY2x1ZGUgPHN5c2RlcC5oPgo+ICsKPiArZXh0ZXJuIGludCBfX29yMWtfY2xvbmUgKGlu
dCAoKmZuKSh2b2lkICopLCB2b2lkICpjaGlsZF9zdGFjaywKPiArCQkJIGludCBmbGFncywgdm9p
ZCAqYXJnLCBwaWRfdCAqcHRpZCwKPiArCQkJIHZvaWQgKnRscywgcGlkX3QgKmN0aWQpOwo+ICsK
PiArCj4gKy8qIG9yMWsgQUJJIHVzZXMgc3RhY2sgZm9yIHZhcmFyZ3MsIHN5c2NhbGwgdXNlcyBy
ZWdpc3RlcnMuCj4gKyAqIFRoaXMgZnVuY3Rpb24gbW92ZXMgZnJvbSB2YXJhcmdzIHRvIHJlZ3Mu
ICovCj4gK2ludAo+ICtfX2Nsb25lIChpbnQgKCpmbikodm9pZCAqKSwgdm9pZCAqY2hpbGRfc3Rh
Y2ssCj4gKwkgaW50IGZsYWdzLCB2b2lkICphcmcsIC4uLgo+ICsJIC8qIHBpZF90ICpwdGlkLCBz
dHJ1Y3QgdXNlcl9kZXNjICp0bHMsIHBpZF90ICpjdGlkICovICkKPiArewo+ICsgIHZvaWQgKnB0
aWQ7Cj4gKyAgdm9pZCAqdGxzOwo+ICsgIHZvaWQgKmN0aWQ7Cj4gKyAgdmFfbGlzdCBhcDsKPiAr
ICBpbnQgZXJyOwo+ICsKPiArICB2YV9zdGFydCAoYXAsIGFyZyk7Cj4gKyAgcHRpZCA9IHZhX2Fy
ZyAoYXAsIHZvaWQgKik7Cj4gKyAgdGxzID0gdmFfYXJnIChhcCwgdm9pZCAqKTsKPiArICBjdGlk
ID0gdmFfYXJnIChhcCwgdm9pZCAqKTsKPiArICB2YV9lbmQgKGFwKTsKPiArCj4gKyAgLyogU2Fu
aXR5IGNoZWNrIHRoZSBhcmd1bWVudHMgKi8KPiArICBlcnIgPSAtRUlOVkFMOwo+ICsgIGlmICgh
Zm4pCj4gKyAgICBnb3RvIHN5c2NhbGxfZXJyb3I7Cj4gKyAgaWYgKCFjaGlsZF9zdGFjaykKPiAr
ICAgIGdvdG8gc3lzY2FsbF9lcnJvcjsKPiArCj4gKyAgcmV0dXJuIF9fb3Ixa19jbG9uZSAoZm4s
IGNoaWxkX3N0YWNrLCBmbGFncywgYXJnLCBwdGlkLCB0bHMsIGN0aWQpOwo+ICsKPiArc3lzY2Fs
bF9lcnJvcjoKPiArICBfX3NldF9lcnJubyAoLWVycik7Cj4gKyAgcmV0dXJuIC0xOwo+ICt9CgpX
b3VsZCBpdCBiZSBwb3NzaWJsZSB0byBtYWtlIHRoZSBfX2Nsb25lIGZ1bmN0aW9uIG5vdCB2YXJh
cmdzPyAgT3IgaXMKdGhpcyB0b28gYmlnIGEgcG9ydGFiaWxpdHkgaGF6YXJkPwoKPiBkaWZmIC0t
Z2l0IGEvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9sb3dsZXZlbGxvY2suaCBiL3N5c2Rl
cHMvdW5peC9zeXN2L2xpbnV4L29yMWsvbG93bGV2ZWxsb2NrLmgKPiBuZXcgZmlsZSBtb2RlIDEw
MDY0NAo+IGluZGV4IDAwMDAwMDAwMDAuLjFhYjI3N2FkMTkKPiAtLS0gL2Rldi9udWxsCj4gKysr
IGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9sb3dsZXZlbGxvY2suaAo+IEBAIC0wLDAg
KzEsMjMgQEAKPiArLyogQ29weXJpZ2h0IChDKSAyMDIwIEZyZWUgU29mdHdhcmUgRm91bmRhdGlv
biwgSW5jLgo+ICsgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KPiAr
Cj4gKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0
cmlidXRlIGl0IGFuZC9vcgo+ICsgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBH
TlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCj4gKyAgIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRo
ZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgo+ICsgICB2ZXJzaW9uIDIuMSBvZiB0
aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KPiArCj4g
KyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQg
d2lsbCBiZSB1c2VmdWwsCj4gKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBl
dmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCj4gKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRO
RVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCj4gKyAgIExlc3NlciBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCj4gKwo+ICsgICBZb3Ugc2hv
dWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGlj
Cj4gKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeS4gIElmIG5vdCwgc2Vl
Cj4gKyAgIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLwo+ICsKPiArI2lmbmRl
ZiBfT1IxS19MT1dMRVZFTExPQ0tfSAo+ICsjZGVmaW5lIF9PUjFLX0xPV0xFVkVMTE9DS19ICTEK
PiArCj4gKyNpbmNsdWRlIDxzeXNkZXBzL25wdGwvbG93bGV2ZWxsb2NrLmg+Cj4gKwo+ICsjZW5k
aWYgLyogbG93bGV2ZWxsb2NrLmggKi8KCklzIHRoaXMgcmVhbGx5IG5lY2Vzc2FyeT8gIERvZXNu
J3QgdGhlIHNlYXJjaCBwYXRoIHRha2UgY2FyZSBvZiB0aGF0PwoKPiBkaWZmIC0tZ2l0IGEvc3lz
ZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9tbWFwX2ludGVybmFsLmggYi9zeXNkZXBzL3VuaXgv
c3lzdi9saW51eC9vcjFrL21tYXBfaW50ZXJuYWwuaAo+IG5ldyBmaWxlIG1vZGUgMTAwNjQ0Cj4g
aW5kZXggMDAwMDAwMDAwMC4uNzljZWZlNjY3Ygo+IC0tLSAvZGV2L251bGwKPiArKysgYi9zeXNk
ZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL21tYXBfaW50ZXJuYWwuaAo+IEBAIC0wLDAgKzEsMjkg
QEAKPiArLyogQ29tbW9uIG1tYXAgZGVmaW5pdGlvbiBmb3IgTGludXggaW1wbGVtZW50YXRpb24u
ICBPcGVuUklTQyB2ZXJzaW9uLgo+ICsgICBDb3B5cmlnaHQgKEMpIDIwMjAgRnJlZSBTb2Z0d2Fy
ZSBGb3VuZGF0aW9uLCBJbmMuCj4gKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBM
aWJyYXJ5Lgo+ICsKPiArICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91
IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCj4gKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVy
bXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKPiArICAgTGljZW5zZSBhcyBwdWJs
aXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCj4gKyAgIHZlcnNp
b24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJz
aW9uLgo+ICsKPiArICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhv
cGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKPiArICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZ
OyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKPiArICAgTUVSQ0hBTlRBQklM
SVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKPiAr
ICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KPiArCj4g
KyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2Vu
ZXJhbCBQdWJsaWMKPiArICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBp
ZiBub3QsIHNlZQo+ICsgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KPiAr
Cj4gKyNpZm5kZWYgTU1BUF9PUjFLX0lOVEVSTkFMX0xJTlVYX0gKPiArI2RlZmluZSBNTUFQX09S
MUtfSU5URVJOQUxfTElOVVhfSAo+ICsKPiArLyogTGludXggYWxsb3dzIFBBR0VfU0hJRlQgaW4g
cmFuZ2Ugb2YgWzEyLTE2XSBhbmQgZXhwZWN0Cj4gKyAgIG1tYXAyIG9mZnNldCB0byBiZSBwcm92
aWRlZCBpbiBiYXNlZCBvbiB0aGUgY29uZmlndXJlZCBwYWdlc2l6ZS4KPiArICAgRGV0ZXJtaW5l
IHRoZSBzaGlmdCBkeW5hbWljYWxseSB3aXRoIGdldHBhZ2VzaXplLiAgKi8KPiArI2RlZmluZSBN
TUFQMl9QQUdFX1VOSVQgLTEKPiArCj4gKyNpbmNsdWRlX25leHQgPG1tYXBfaW50ZXJuYWwuaD4K
PiArCj4gKyNlbmRpZgoKRG9lcyBPcGVuUklTQyByZWFsbHkgaGF2ZSBhIGR5bmFtaWMgcGFnZSBz
aXplPwoKSSBkbyBub3Qgc2VlIGFueSBvZiB0aGUgcmVxdWlyZWQgc3VwcG9ydCBjb2RlIGZvciB0
aGlzLgoKPiBkaWZmIC0tZ2l0IGEvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9wcmN0bC5j
IGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9wcmN0bC5jCj4gbmV3IGZpbGUgbW9kZSAx
MDA2NDQKPiBpbmRleCAwMDAwMDAwMDAwLi5mYzdlODIzOTc0Cj4gLS0tIC9kZXYvbnVsbAo+ICsr
KyBiL3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvcHJjdGwuYwo+ICsvKiBvcjFrIEFCSSB1
c2VzIHN0YWNrIGZvciB2YXJhcmdzLCBzeXNjYWxsIHVzZXMgcmVnaXN0ZXJzLgo+ICsgKiBUaGlz
IGZ1bmN0aW9uIG1vdmVzIGZyb20gdmFyYXJncyB0byByZWdzLiAqLwo+ICtpbnQKPiArX19wcmN0
bCAoaW50IF9fb3B0aW9uLCAuLi4pCj4gK3sKPiArICB2YV9saXN0IGFwOwo+ICsgIHVuc2lnbmVk
IGxvbmcgYXJnMjsKPiArICB1bnNpZ25lZCBsb25nIGFyZzM7Cj4gKyAgdW5zaWduZWQgbG9uZyBh
cmc0Owo+ICsgIHVuc2lnbmVkIGxvbmcgYXJnNTsKPiArCj4gKyAgdmFfc3RhcnQgKGFwLCBfX29w
dGlvbik7Cj4gKyAgYXJnMiA9IHZhX2FyZyAoYXAsIHVuc2lnbmVkIGxvbmcpOwo+ICsgIGFyZzMg
PSB2YV9hcmcgKGFwLCB1bnNpZ25lZCBsb25nKTsKPiArICBhcmc0ID0gdmFfYXJnIChhcCwgdW5z
aWduZWQgbG9uZyk7Cj4gKyAgYXJnNSA9IHZhX2FyZyAoYXAsIHVuc2lnbmVkIGxvbmcpOwo+ICsg
IHZhX2VuZCAoYXApOwo+ICsKPiArICByZXR1cm4gSU5MSU5FX1NZU0NBTEwgKHByY3RsLCA1LCBf
X29wdGlvbiwgYXJnMiwgYXJnMywgYXJnNCwgYXJnNSk7Cj4gK30KPiArd2Vha19hbGlhcyAoX19w
cmN0bCwgcHJjdGwpCgpUaGlzIHNob3VsZCB1c2UgdW5zaWduZWQgbG9uZyBpbnQuCgo+IGRpZmYg
LS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3B0LXZmb3JrLmMgYi9zeXNkZXBz
L3VuaXgvc3lzdi9saW51eC9vcjFrL3B0LXZmb3JrLmMKPiBuZXcgZmlsZSBtb2RlIDEwMDY0NAo+
IGluZGV4IDAwMDAwMDAwMDAuLjAxNjllYzRmNjAKPiAtLS0gL2Rldi9udWxsCj4gKysrIGIvc3lz
ZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9wdC12Zm9yay5jCj4gQEAgLTAsMCArMSwzMCBAQAo+
ICsvKiBDb3B5cmlnaHQgKEMpIDIwMjAgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCj4g
KyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5Lgo+ICsKPiArICAgVGhl
IEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQg
YW5kL29yCj4gKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIg
R2VuZXJhbCBQdWJsaWMKPiArICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29m
dHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCj4gKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNl
LCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgo+ICsKPiArICAgVGhlIEdO
VSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVz
ZWZ1bCwKPiArICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGlt
cGxpZWQgd2FycmFudHkgb2YKPiArICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEg
UEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKPiArICAgTGVzc2VyIEdlbmVyYWwgUHVi
bGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KPiArCj4gKyAgIFlvdSBzaG91bGQgaGF2ZSBy
ZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKPiArICAgTGlj
ZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQo+ICsgICA8aHR0
cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KPiArCj4gKyNpbmNsdWRlIDxlcnJuby5o
Pgo+ICsjaW5jbHVkZSA8dW5pc3RkLmg+Cj4gKwo+ICsvKiBJZiB3ZSBkb24ndCBoYXZlIHZmb3Jr
LCBmb3JrIGlzIGNsb3NlIGVub3VnaC4gICovCgpUaGlzIGlzIG5vIGxvbmdlciB0cnVlIGZvciBv
dXIgcG9zaXhfc3Bhd24gaW1wbGVtZW50YXRpb24uCgpCdXQgdGhpcyBmaWxlIHNob3VsZCBiZSB1
bnVzZWQgYW55d2F5LiAgQ2FuIHlvdSByZW1vdmUgaXQ/CgoKPiBkaWZmIC0tZ2l0IGEvc3lzZGVw
cy91bml4L3N5c3YvbGludXgvb3Ixay9zeXNjYWxsLmMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51
eC9vcjFrL3N5c2NhbGwuYwo+IG5ldyBmaWxlIG1vZGUgMTAwNjQ0Cj4gaW5kZXggMDAwMDAwMDAw
MC4uNmQ0OTFiYjRiNQo+IC0tLSAvZGV2L251bGwKPiArKysgYi9zeXNkZXBzL3VuaXgvc3lzdi9s
aW51eC9vcjFrL3N5c2NhbGwuYwo+IEBAIC0wLDAgKzEsNDUgQEAKCj4gK2xvbmcgaW50Cj4gK3N5
c2NhbGwgKGxvbmcgaW50IHN5c2NhbGxfbnVtYmVyLCAuLi4pCj4gK3sKPiArICB1bnNpZ25lZCBs
b25nIGFyZzEsIGFyZzIsIGFyZzMsIGFyZzQsIGFyZzUsIGFyZzY7Cj4gKyAgdmFfbGlzdCBhcmc7
Cj4gKyAgbG9uZyBpbnQgcmV0Owo+ICsKPiArICB2YV9zdGFydCAoYXJnLCBzeXNjYWxsX251bWJl
cik7Cj4gKyAgYXJnMSA9IHZhX2FyZyAoYXJnLCB1bnNpZ25lZCBsb25nKTsKPiArICBhcmcyID0g
dmFfYXJnIChhcmcsIHVuc2lnbmVkIGxvbmcpOwo+ICsgIGFyZzMgPSB2YV9hcmcgKGFyZywgdW5z
aWduZWQgbG9uZyk7Cj4gKyAgYXJnNCA9IHZhX2FyZyAoYXJnLCB1bnNpZ25lZCBsb25nKTsKPiAr
ICBhcmc1ID0gdmFfYXJnIChhcmcsIHVuc2lnbmVkIGxvbmcpOwo+ICsgIGFyZzYgPSB2YV9hcmcg
KGFyZywgdW5zaWduZWQgbG9uZyk7Cj4gKyAgdmFfZW5kIChhcmcpOwo+ICsKPiArICByZXQgPSBJ
TlRFUk5BTF9TWVNDQUxMX05DUyAoc3lzY2FsbF9udW1iZXIsIDYsIGFyZzEsIGFyZzIsIGFyZzMs
IGFyZzQsCj4gKwkJCSAgICAgIGFyZzUsIGFyZzYpOwo+ICsKPiArICBpZiAoSU5URVJOQUxfU1lT
Q0FMTF9FUlJPUl9QIChyZXQpKQo+ICsgICAgcmV0dXJuIF9fc3lzY2FsbF9lcnJvciAocmV0KTsK
PiArCj4gKyAgcmV0dXJuIHJldDsKPiArfQoKTGlrZXdpc2UsIHRoaXMgc2hvdWxkIHVzZSB1bnNp
Z25lZCBsb25nIGludC4gIEkgc3VzcGVjdCB5b3UgY2FuIHVzZQpJTlRFUk5BTF9TWVNDQUxMX0NB
TEwgZGlyZWN0bHksIHRvby4KCj4gZGlmZiAtLWdpdCBhL3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4
L29yMWsvc3lzZGVwLmMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5c2RlcC5jCj4g
bmV3IGZpbGUgbW9kZSAxMDA2NDQKPiBpbmRleCAwMDAwMDAwMDAwLi4zYjY4MWUxNGFhCj4gLS0t
IC9kZXYvbnVsbAo+ICsrKyBiL3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvc3lzZGVwLmMK
Cj4gK2xvbmcgX19zeXNjYWxsX2Vycm9yIChsb25nIGVycik7Cj4gK2hpZGRlbl9wcm90byAoX19z
eXNjYWxsX2Vycm9yKQo+ICsKPiArLyogVGhpcyByb3V0aW5lIGlzIGp1bXBlZCB0byBieSBhbGwg
dGhlIHN5c2NhbGwgaGFuZGxlcnMsIHRvIHN0YXNoCj4gKyAgIGFuIGVycm9yIG51bWJlciBpbnRv
IGVycm5vLiAgKi8KPiArbG9uZwo+ICtfX3N5c2NhbGxfZXJyb3IgKGxvbmcgZXJyKQo+ICt7Cj4g
KyAgX19zZXRfZXJybm8gKC0gZXJyKTsKPiArICByZXR1cm4gLTE7Cj4gK30KPiAraGlkZGVuX2Rl
ZiAoX19zeXNjYWxsX2Vycm9yKQoKU2hvdWxkIHVzZSBsb25nIGludCB0aHJvdWdob3V0LiAgQWxz
byBhcHBsaWVzIHRvIHN5c2RlcC5oIGJlbG93LgoKPiBkaWZmIC0tZ2l0IGEvc3lzZGVwcy91bml4
L3N5c3YvbGludXgvc3lzY2FsbC1uYW1lcy5saXN0IGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgv
c3lzY2FsbC1uYW1lcy5saXN0Cj4gaW5kZXggMjFhNjJhMDZmNC4uZmE0MzRmZDQ3NyAxMDA2NDQK
PiAtLS0gYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9zeXNjYWxsLW5hbWVzLmxpc3QKPiArKysg
Yi9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9zeXNjYWxsLW5hbWVzLmxpc3QKPiBAQCAtMjk2LDYg
KzI5Niw3IEBAIG9wZW5fYnlfaGFuZGxlX2F0Cj4gIG9wZW5fdHJlZQo+ICBvcGVuYXQKPiAgb3Bl
bmF0Mgo+ICtvcjFrX2F0b21pYwo+ICBvc2ZfYWRqdGltZQo+ICBvc2ZfYWZzX3N5c2NhbGwKPiAg
b3NmX2FsdF9wbG9jawoKUGxlYXNlIHBvc3QgdGhpcyBzZXBhcmF0ZWx5LCBpdCBjYW4gZ28gaW4g
aW1tZWRpYXRlbHkuCgpUaGlzIGlzIG5vdCBhIGNvbXBsZXRlIHJldmlldzsgSSBjYW4ndCBjb21t
ZW50IG9uIHRoZQphcmNoaXRlY3R1cmUtc3BlY2lmaWMgYml0cywgdGhlIGF0b21pY3MsIGFuZCB0
aGUgbWF0aCBpbnRlcmZhY2VzLgoKVGhlcmUgYXJlIGEgZmV3IFRPRE9zL1RPLURPcyBsZWZ0LCBw
bGVhc2UgaGF2ZSBhIGxvb2suCgpZb3UgYWxzbyBuZWVkIHRvIGRvY3VtZW50IHdoaWNoIEFCSXMg
YXJlIHN1cHBvcnRlZCAoaW4gSU5TVEFMTCwgd2l0aCBhCmJyaWVmIGVudHJ5IGluIE5FV1MpLiAg
QXJlIGFueSBzcGVjaWZpYyBHQ0MgYW5kIGJpbnV0aWxzIHZlcnNpb24KcmVxdWlyZW1lbnRzLCBv
ciBrZXJuZWwgaGVhZGVyIHJlcXVpcmVtZW50cyAoYmV5b25kIHRoZSBhbHJlYWR5CmRvY3VtZW50
ZWQgbWluaW11bXMpPwoKSSBzZWUgYSBidW5jaCBvZiBpZmRlZidzIGZvciBoYXJkIGZsb2F0LCBi
dXQgdGhpcyBhcHBlYXJzIHRvIGJlIGEKaGFyZC1mbG9hdC1vbmx5IHBvcnQuCgpUaGFua3MsCkZs
b3JpYW4KCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9w
ZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczov
L2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
