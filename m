Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id BD808EAEB0
	for <lists+openrisc@lfdr.de>; Thu, 31 Oct 2019 12:21:27 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 9F5BE2072F;
	Thu, 31 Oct 2019 12:21:27 +0100 (CET)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 764B720736
 for <openrisc@lists.librecores.org>; Tue, 29 Oct 2019 07:49:35 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=QOJgDL1iQMP5gPfLWBEazehgF9ZYfgPhMW4d0q9dWc4=; b=IV0a1kIuJdajvmdMGsuF3b2C2f
 cpodpwwPKQmWVB8DgFtAGYs/KQ9/Molo/Jlfg+gKUhQKMjlJma/NVr8nPaUJZJ9sQ6ZvwGATlnLzt
 bRuoYetP+gVS3wZMajjUidS/I35qQe+2mvZ6Z1f/VUi4qPLuT2Ql6BzJ386mpSkeTZlw20FWyt0tc
 Us7WPv+088CS/GRrO8meKYb2UgIwZE6IJiXCX6wwQRs4Du37VTTW3XfM04x8Z/qa7HplY4FCiMM9c
 i5JItBN6WcingqZ8SITF3geILyGjGy+HzjLLAp8vyXfQNTFjWrH4UPKmzf4lm66RG8IYyWzggi2JC
 zzxswc+Q==;
Received: from [2001:4bb8:18c:c7d:c70:4a89:bc61:2] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iPLJZ-0003tV-Oc; Tue, 29 Oct 2019 06:49:14 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Tue, 29 Oct 2019 07:48:25 +0100
Message-Id: <20191029064834.23438-13-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191029064834.23438-1-hch@lst.de>
References: <20191029064834.23438-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Thu, 31 Oct 2019 12:21:18 +0100
Subject: [OpenRISC] [PATCH 12/21] arch: rely on asm-generic/io.h for default
 ioremap_* definitions
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, linux-mips@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-mtd@lists.infradead.org,
 linux-alpha@vger.kernel.org, sparclinux@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, linux-riscv@lists.infradead.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VmFyaW91cyBhcmNoaXRlY3R1cmVzIHRoYXQgdXNlIGFzbS1nZW5lcmljL2lvLmggc3RpbGwgZGVm
aW5lZCB0aGVpcgpvd24gZGVmYXVsdCB2ZXJzaW9ucyBvZiBpb3JlbWFwX25vY2FjaGUsIGlvcmVt
YXBfd3QgYW5kIGlvcmVtYXBfd2MKdGhhdCBwb2ludCBiYWNrIHRvIHBsYWluIGlvcmVtYXAgZGly
ZWN0bHkgb3IgaW5kaXJlY3RseS4gIFJlbW92ZSB0aGVzZQpkZWZpbml0aW9ucyBhbmQgcmVseSBv
biBhc20tZ2VuZXJpYy9pby5oIGluc3RlYWQuICBGb3IgdGhpcyB0byB3b3JrCnRoZSBiYWNrdXAg
aW9yZW1hcF8qIGRlZmludGlvbnMgbmVlZHMgdG8gYmUgY2hhbmdlZCB0byBwdXJlbHkgY3BwCm1h
Y3JvcyBpbnN0ZWEgb2YgaW5saW5lcyB0byBjb3ZlciBmb3IgYXJjaGl0ZWN0dXJlcyBsaWtlIG9w
ZW5yaXNjCnRoYXQgb25seSBkZWZpbmUgaW9yZW1hcCBhZnRlciBpbmNsdWRpbmcgPGFzbS1nZW5l
cmljL2lvLmg+LgoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0b3BoIEhlbGx3aWcgPGhjaEBsc3QuZGU+
Ci0tLQogYXJjaC9hcmMvaW5jbHVkZS9hc20vaW8uaCAgICAgICAgfCAgNCAtLS0tCiBhcmNoL2Fy
bS9pbmNsdWRlL2FzbS9pby5oICAgICAgICB8ICAxIC0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20v
aW8uaCAgICAgIHwgIDIgLS0KIGFyY2gvY3NreS9pbmNsdWRlL2FzbS9pby5oICAgICAgIHwgIDEg
LQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL2lvLmggICAgICAgfCAgMSAtCiBhcmNoL21pY3JvYmxh
emUvaW5jbHVkZS9hc20vaW8uaCB8ICAzIC0tLQogYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9pby5o
ICAgICAgfCAgNCAtLS0tCiBhcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL2lvLmggICB8ICAxIC0K
IGFyY2gvcmlzY3YvaW5jbHVkZS9hc20vaW8uaCAgICAgIHwgMTAgLS0tLS0tLS0tLQogYXJjaC9z
MzkwL2luY2x1ZGUvYXNtL2lvLmggICAgICAgfCAgNCAtLS0tCiBhcmNoL3g4Ni9pbmNsdWRlL2Fz
bS9pby5oICAgICAgICB8ICAxIC0KIGFyY2gveHRlbnNhL2luY2x1ZGUvYXNtL2lvLmggICAgIHwg
IDQgLS0tLQogaW5jbHVkZS9hc20tZ2VuZXJpYy9pby5oICAgICAgICAgfCAxOCArKystLS0tLS0t
LS0tLS0tLS0KIDEzIGZpbGVzIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKSwgNTEgZGVsZXRpb25z
KC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hcmMvaW5jbHVkZS9hc20vaW8uaCBiL2FyY2gvYXJjL2lu
Y2x1ZGUvYXNtL2lvLmgKaW5kZXggNzJmNzkyOTczNmY4Li44Zjc3N2Q2NDQxYTUgMTAwNjQ0Ci0t
LSBhL2FyY2gvYXJjL2luY2x1ZGUvYXNtL2lvLmgKKysrIGIvYXJjaC9hcmMvaW5jbHVkZS9hc20v
aW8uaApAQCAtMzQsMTAgKzM0LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIGlvcG9ydF91bm1hcCh2
b2lkIF9faW9tZW0gKmFkZHIpCiAKIGV4dGVybiB2b2lkIGlvdW5tYXAoY29uc3Qgdm9pZCBfX2lv
bWVtICphZGRyKTsKIAotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUocGh5LCBzeikJaW9yZW1hcChw
aHksIHN6KQotI2RlZmluZSBpb3JlbWFwX3djKHBoeSwgc3opCQlpb3JlbWFwKHBoeSwgc3opCi0j
ZGVmaW5lIGlvcmVtYXBfd3QocGh5LCBzeikJCWlvcmVtYXAocGh5LCBzeikKLQogLyoKICAqIGlv
e3JlYWQsd3JpdGV9ezE2LDMyfWJlKCkgbWFjcm9zCiAgKi8KZGlmZiAtLWdpdCBhL2FyY2gvYXJt
L2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL2FybS9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDkyNGY5
ZGQ1MDJlZC4uYWVmZGFiZGJlYjg0IDEwMDY0NAotLS0gYS9hcmNoL2FybS9pbmNsdWRlL2FzbS9p
by5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL2lvLmgKQEAgLTM5Miw3ICszOTIsNiBAQCBz
dGF0aWMgaW5saW5lIHZvaWQgbWVtY3B5X3RvaW8odm9sYXRpbGUgdm9pZCBfX2lvbWVtICp0bywg
Y29uc3Qgdm9pZCAqZnJvbSwKICAqLwogdm9pZCBfX2lvbWVtICppb3JlbWFwKHJlc291cmNlX3Np
emVfdCByZXNfY29va2llLCBzaXplX3Qgc2l6ZSk7CiAjZGVmaW5lIGlvcmVtYXAgaW9yZW1hcAot
I2RlZmluZSBpb3JlbWFwX25vY2FjaGUgaW9yZW1hcAogCiAvKgogICogRG8gbm90IHVzZSBpb3Jl
bWFwX2NhY2hlIGZvciBtYXBwaW5nIG1lbW9yeS4gVXNlIG1lbXJlbWFwIGluc3RlYWQuCmRpZmYg
LS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL2FybTY0L2luY2x1ZGUv
YXNtL2lvLmgKaW5kZXggMzIzY2IzMDZiZDI4Li40ZTUzMWY1NzE0N2QgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvYXJtNjQvaW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL2lv
LmgKQEAgLTE2Nyw5ICsxNjcsNyBAQCBleHRlcm4gdm9pZCBpb3VubWFwKHZvbGF0aWxlIHZvaWQg
X19pb21lbSAqYWRkcik7CiBleHRlcm4gdm9pZCBfX2lvbWVtICppb3JlbWFwX2NhY2hlKHBoeXNf
YWRkcl90IHBoeXNfYWRkciwgc2l6ZV90IHNpemUpOwogCiAjZGVmaW5lIGlvcmVtYXAoYWRkciwg
c2l6ZSkJCV9faW9yZW1hcCgoYWRkciksIChzaXplKSwgX19wZ3Byb3QoUFJPVF9ERVZJQ0Vfbkdu
UkUpKQotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUoYWRkciwgc2l6ZSkJX19pb3JlbWFwKChhZGRy
KSwgKHNpemUpLCBfX3BncHJvdChQUk9UX0RFVklDRV9uR25SRSkpCiAjZGVmaW5lIGlvcmVtYXBf
d2MoYWRkciwgc2l6ZSkJCV9faW9yZW1hcCgoYWRkciksIChzaXplKSwgX19wZ3Byb3QoUFJPVF9O
T1JNQUxfTkMpKQotI2RlZmluZSBpb3JlbWFwX3d0KGFkZHIsIHNpemUpCQlfX2lvcmVtYXAoKGFk
ZHIpLCAoc2l6ZSksIF9fcGdwcm90KFBST1RfREVWSUNFX25HblJFKSkKIAogLyoKICAqIFBDSSBj
b25maWd1cmF0aW9uIHNwYWNlIG1hcHBpbmcgZnVuY3Rpb24uCmRpZmYgLS1naXQgYS9hcmNoL2Nz
a3kvaW5jbHVkZS9hc20vaW8uaCBiL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDgw
ZDA3MWUyNTY3Zi4uYTRiOWZiNjE2ZmFhIDEwMDY0NAotLS0gYS9hcmNoL2Nza3kvaW5jbHVkZS9h
c20vaW8uaAorKysgYi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vaW8uaApAQCAtNDIsNyArNDIsNiBA
QCBleHRlcm4gdm9pZCBpb3VubWFwKHZvaWQgKmFkZHIpOwogCiAjZGVmaW5lIGlvcmVtYXAoYWRk
ciwgc2l6ZSkJCV9faW9yZW1hcCgoYWRkciksIChzaXplKSwgcGdwcm90X25vbmNhY2hlZChQQUdF
X0tFUk5FTCkpCiAjZGVmaW5lIGlvcmVtYXBfd2MoYWRkciwgc2l6ZSkJCV9faW9yZW1hcCgoYWRk
ciksIChzaXplKSwgcGdwcm90X3dyaXRlY29tYmluZShQQUdFX0tFUk5FTCkpCi0jZGVmaW5lIGlv
cmVtYXBfbm9jYWNoZShhZGRyLCBzaXplKQlpb3JlbWFwKChhZGRyKSwgKHNpemUpKQogI2RlZmlu
ZSBpb3JlbWFwX2NhY2hlCQkJaW9yZW1hcF9jYWNoZQogCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMv
aW8uaD4KZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9pby5oIGIvYXJjaC9pYTY0
L2luY2x1ZGUvYXNtL2lvLmgKaW5kZXggZmVjOWRmOTYwOWVkLi4zZDY2NmExMWEyZGUgMTAwNjQ0
Ci0tLSBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9pby5oCisrKyBiL2FyY2gvaWE2NC9pbmNsdWRl
L2FzbS9pby5oCkBAIC0yNjMsNyArMjYzLDYgQEAgc3RhdGljIGlubGluZSB2b2lkIF9faW9tZW0g
KiBpb3JlbWFwX2NhY2hlICh1bnNpZ25lZCBsb25nIHBoeXNfYWRkciwgdW5zaWduZWQgbG8KIAly
ZXR1cm4gaW9yZW1hcChwaHlzX2FkZHIsIHNpemUpOwogfQogI2RlZmluZSBpb3JlbWFwIGlvcmVt
YXAKLSNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlIGlvcmVtYXAKICNkZWZpbmUgaW9yZW1hcF9jYWNo
ZSBpb3JlbWFwX2NhY2hlCiAjZGVmaW5lIGlvcmVtYXBfdWMgaW9yZW1hcF91YwogI2RlZmluZSBp
b3VubWFwIGlvdW5tYXAKZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9p
by5oIGIvYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL2lvLmgKaW5kZXggODZjOTViMmExY2Ux
Li5kMzNjNjE3MzdiOGIgMTAwNjQ0Ci0tLSBhL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9p
by5oCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9pby5oCkBAIC0zOSw5ICszOSw2
IEBAIGV4dGVybiByZXNvdXJjZV9zaXplX3QgaXNhX21lbV9iYXNlOwogZXh0ZXJuIHZvaWQgaW91
bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9tZW0gKmFkZHIpOwogCiBleHRlcm4gdm9pZCBfX2lvbWVt
ICppb3JlbWFwKHBoeXNfYWRkcl90IGFkZHJlc3MsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7Ci0jZGVm
aW5lIGlvcmVtYXBfbm9jYWNoZShhZGRyLCBzaXplKQkJaW9yZW1hcCgoYWRkciksIChzaXplKSkK
LSNkZWZpbmUgaW9yZW1hcF93YyhhZGRyLCBzaXplKQkJCWlvcmVtYXAoKGFkZHIpLCAoc2l6ZSkp
Ci0jZGVmaW5lIGlvcmVtYXBfd3QoYWRkciwgc2l6ZSkJCQlpb3JlbWFwKChhZGRyKSwgKHNpemUp
KQogCiAjZW5kaWYgLyogQ09ORklHX01NVSAqLwogCmRpZmYgLS1naXQgYS9hcmNoL25pb3MyL2lu
Y2x1ZGUvYXNtL2lvLmggYi9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL2lvLmgKaW5kZXggNzRhYjM0
YWE2NzMxLi5kMTA4OTM3YzMyMWUgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIvaW5jbHVkZS9hc20v
aW8uaAorKysgYi9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL2lvLmgKQEAgLTMzLDEwICszMyw2IEBA
IHN0YXRpYyBpbmxpbmUgdm9pZCBpb3VubWFwKHZvaWQgX19pb21lbSAqYWRkcikKIAlfX2lvdW5t
YXAoYWRkcik7CiB9CiAKLSNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlIGlvcmVtYXAKLSNkZWZpbmUg
aW9yZW1hcF93YyBpb3JlbWFwCi0jZGVmaW5lIGlvcmVtYXBfd3QgaW9yZW1hcAotCiAvKiBQYWdl
cyB0byBwaHlzaWNhbCBhZGRyZXNzLi4uICovCiAjZGVmaW5lIHBhZ2VfdG9fcGh5cyhwYWdlKQl2
aXJ0X3RvX3BoeXMocGFnZV90b192aXJ0KHBhZ2UpKQogCmRpZmYgLS1naXQgYS9hcmNoL29wZW5y
aXNjL2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL2lvLmgKaW5k
ZXggNWI4MWE5NmFiODVlLi5lMThmMDM4YjJhNmQgMTAwNjQ0Ci0tLSBhL2FyY2gvb3BlbnJpc2Mv
aW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL2lvLmgKQEAg
LTI1LDcgKzI1LDYgQEAKICNkZWZpbmUgUElPX09GRlNFVAkJMAogI2RlZmluZSBQSU9fTUFTSwkJ
MAogCi0jZGVmaW5lIGlvcmVtYXBfbm9jYWNoZSBpb3JlbWFwCiAjaW5jbHVkZSA8YXNtLWdlbmVy
aWMvaW8uaD4KICNpbmNsdWRlIDxhc20vcGd0YWJsZS5oPgogCmRpZmYgLS1naXQgYS9hcmNoL3Jp
c2N2L2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL2lvLmgKaW5kZXgg
ZmMxMTg5YWQzNzc3Li5jMWRlNjg3NWNjNzcgMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3YvaW5jbHVk
ZS9hc20vaW8uaAorKysgYi9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL2lvLmgKQEAgLTE1LDE2ICsx
NSw2IEBACiAjaW5jbHVkZSA8YXNtL21taW93Yi5oPgogCiBleHRlcm4gdm9pZCBfX2lvbWVtICpp
b3JlbWFwKHBoeXNfYWRkcl90IG9mZnNldCwgdW5zaWduZWQgbG9uZyBzaXplKTsKLQotLyoKLSAq
IFRoZSBSSVNDLVYgSVNBIGRvZXNuJ3QgeWV0IHNwZWNpZnkgaG93IHRvIHF1ZXJ5IG9yIG1vZGlm
eSBQTUFzLCBzbyB3ZSBjYW4ndAotICogY2hhbmdlIHRoZSBwcm9wZXJ0aWVzIG9mIG1lbW9yeSBy
ZWdpb25zLiAgVGhpcyBzaG91bGQgYmUgZml4ZWQgYnkgdGhlCi0gKiB1cGNvbWluZyBwbGF0Zm9y
bSBzcGVjLgotICovCi0jZGVmaW5lIGlvcmVtYXBfbm9jYWNoZShhZGRyLCBzaXplKSBpb3JlbWFw
KChhZGRyKSwgKHNpemUpKQotI2RlZmluZSBpb3JlbWFwX3djKGFkZHIsIHNpemUpIGlvcmVtYXAo
KGFkZHIpLCAoc2l6ZSkpCi0jZGVmaW5lIGlvcmVtYXBfd3QoYWRkciwgc2l6ZSkgaW9yZW1hcCgo
YWRkciksIChzaXplKSkKLQogZXh0ZXJuIHZvaWQgaW91bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9t
ZW0gKmFkZHIpOwogCiAvKiBHZW5lcmljIElPIHJlYWQvd3JpdGUuICBUaGVzZSBwZXJmb3JtIG5h
dGl2ZS1lbmRpYW4gYWNjZXNzZXMuICovCmRpZmYgLS1naXQgYS9hcmNoL3MzOTAvaW5jbHVkZS9h
c20vaW8uaCBiL2FyY2gvczM5MC9pbmNsdWRlL2FzbS9pby5oCmluZGV4IGNhNDIxNjE0NzIyZi4u
NWExNmY1MDA1MTVhIDEwMDY0NAotLS0gYS9hcmNoL3MzOTAvaW5jbHVkZS9hc20vaW8uaAorKysg
Yi9hcmNoL3MzOTAvaW5jbHVkZS9hc20vaW8uaApAQCAtMjYsMTAgKzI2LDYgQEAgdm9pZCB1bnhs
YXRlX2Rldl9tZW1fcHRyKHBoeXNfYWRkcl90IHBoeXMsIHZvaWQgKmFkZHIpOwogCiAjZGVmaW5l
IElPX1NQQUNFX0xJTUlUIDAKIAotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUoYWRkciwgc2l6ZSkJ
aW9yZW1hcChhZGRyLCBzaXplKQotI2RlZmluZSBpb3JlbWFwX3djCQkJaW9yZW1hcF9ub2NhY2hl
Ci0jZGVmaW5lIGlvcmVtYXBfd3QJCQlpb3JlbWFwX25vY2FjaGUKLQogdm9pZCBfX2lvbWVtICpp
b3JlbWFwKHVuc2lnbmVkIGxvbmcgb2Zmc2V0LCB1bnNpZ25lZCBsb25nIHNpemUpOwogdm9pZCBp
b3VubWFwKHZvbGF0aWxlIHZvaWQgX19pb21lbSAqYWRkcik7CiAKZGlmZiAtLWdpdCBhL2FyY2gv
eDg2L2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDZi
NWNjNDEzMTlhNy4uOTk5NzUyMWZjNWNkIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2Fz
bS9pby5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL2lvLmgKQEAgLTIwNSw3ICsyMDUsNiBA
QCBleHRlcm4gdm9pZCBfX2lvbWVtICppb3JlbWFwX2VuY3J5cHRlZChyZXNvdXJjZV9zaXplX3Qg
cGh5c19hZGRyLCB1bnNpZ25lZCBsb25nCiAgKi8KIHZvaWQgX19pb21lbSAqaW9yZW1hcChyZXNv
dXJjZV9zaXplX3Qgb2Zmc2V0LCB1bnNpZ25lZCBsb25nIHNpemUpOwogI2RlZmluZSBpb3JlbWFw
IGlvcmVtYXAKLSNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlIGlvcmVtYXAKIAogZXh0ZXJuIHZvaWQg
aW91bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9tZW0gKmFkZHIpOwogI2RlZmluZSBpb3VubWFwIGlv
dW5tYXAKZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNhL2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL3h0
ZW5zYS9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDQ0MWZiNTY5MjZhNy4uNTQxODhlNjliOTg4IDEw
MDY0NAotLS0gYS9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9pby5oCisrKyBiL2FyY2gveHRlbnNh
L2luY2x1ZGUvYXNtL2lvLmgKQEAgLTUyLDEwICs1Miw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBf
X2lvbWVtICppb3JlbWFwX2NhY2hlKHVuc2lnbmVkIGxvbmcgb2Zmc2V0LAogfQogI2RlZmluZSBp
b3JlbWFwX2NhY2hlIGlvcmVtYXBfY2FjaGUKIAotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUgaW9y
ZW1hcAotI2RlZmluZSBpb3JlbWFwX3djIGlvcmVtYXAKLSNkZWZpbmUgaW9yZW1hcF93dCBpb3Jl
bWFwCi0KIHN0YXRpYyBpbmxpbmUgdm9pZCBpb3VubWFwKHZvbGF0aWxlIHZvaWQgX19pb21lbSAq
YWRkcikKIHsKIAl1bnNpZ25lZCBsb25nIHZhID0gKHVuc2lnbmVkIGxvbmcpIGFkZHI7CmRpZmYg
LS1naXQgYS9pbmNsdWRlL2FzbS1nZW5lcmljL2lvLmggYi9pbmNsdWRlL2FzbS1nZW5lcmljL2lv
LmgKaW5kZXggNmE1ZWRjMjNhZmUyLi40ZTQ1ZTFjYjY1NjAgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
YXNtLWdlbmVyaWMvaW8uaAorKysgYi9pbmNsdWRlL2FzbS1nZW5lcmljL2lvLmgKQEAgLTk0OSwy
NyArOTQ5LDE1IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpb3VubWFwKHZvaWQgX19pb21lbSAqYWRk
cikKICNlbmRpZiAvKiBDT05GSUdfTU1VICovCiAKICNpZm5kZWYgaW9yZW1hcF9ub2NhY2hlCi0j
ZGVmaW5lIGlvcmVtYXBfbm9jYWNoZSBpb3JlbWFwX25vY2FjaGUKLXN0YXRpYyBpbmxpbmUgdm9p
ZCBfX2lvbWVtICppb3JlbWFwX25vY2FjaGUocGh5c19hZGRyX3Qgb2Zmc2V0LCBzaXplX3Qgc2l6
ZSkKLXsKLQlyZXR1cm4gaW9yZW1hcChvZmZzZXQsIHNpemUpOwotfQorI2RlZmluZSBpb3JlbWFw
X25vY2FjaGUgaW9yZW1hcAogI2VuZGlmCiAKICNpZm5kZWYgaW9yZW1hcF93YwotI2RlZmluZSBp
b3JlbWFwX3djIGlvcmVtYXBfd2MKLXN0YXRpYyBpbmxpbmUgdm9pZCBfX2lvbWVtICppb3JlbWFw
X3djKHBoeXNfYWRkcl90IG9mZnNldCwgc2l6ZV90IHNpemUpCi17Ci0JcmV0dXJuIGlvcmVtYXBf
bm9jYWNoZShvZmZzZXQsIHNpemUpOwotfQorI2RlZmluZSBpb3JlbWFwX3djIGlvcmVtYXAKICNl
bmRpZgogCiAjaWZuZGVmIGlvcmVtYXBfd3QKLSNkZWZpbmUgaW9yZW1hcF93dCBpb3JlbWFwX3d0
Ci1zdGF0aWMgaW5saW5lIHZvaWQgX19pb21lbSAqaW9yZW1hcF93dChwaHlzX2FkZHJfdCBvZmZz
ZXQsIHNpemVfdCBzaXplKQotewotCXJldHVybiBpb3JlbWFwX25vY2FjaGUob2Zmc2V0LCBzaXpl
KTsKLX0KKyNkZWZpbmUgaW9yZW1hcF93dCBpb3JlbWFwCiAjZW5kaWYKIAogLyoKLS0gCjIuMjAu
MQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJ
U0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlz
dHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
