Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 1D74120DCE4
	for <lists+openrisc@lfdr.de>; Mon, 29 Jun 2020 22:45:07 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id C80BB20CB2;
	Mon, 29 Jun 2020 22:45:06 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 341AC20CC0
 for <openrisc@lists.librecores.org>; Sat, 27 Jun 2020 16:36:15 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id D28792089D;
 Sat, 27 Jun 2020 14:36:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1593268574;
 bh=7yKGaSys/x4kSwsiwsgHnvwOIWo9krh7zT7L0zfUSqI=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=vedhTYE9T67avhoKl2zDmD+CF8XE3npkylRfYp07gEBnq/wQv81HahhSLX12TWWXt
 Q7apuh6XkhDqPkOu1zRv2yq0e5GqbJDequ8aSDANQRvuz7aSP+Dmn/IKErWl9fGhG/
 riDKDn6+/FvQBd8H0M/pmjSmyHQLO7e5+/A0lSk8=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Sat, 27 Jun 2020 17:34:53 +0300
Message-Id: <20200627143453.31835-9-rppt@kernel.org>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200627143453.31835-1-rppt@kernel.org>
References: <20200627143453.31835-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Mon, 29 Jun 2020 22:44:54 +0200
Subject: [OpenRISC] [PATCH 8/8] mm: move p?d_alloc_track to separate header
 file
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>, Max Filippov <jcmvbkbc@gmail.com>,
 Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linux-arch@vger.kernel.org, Stephen Rothwell <sfr@canb.auug.org.au>,
 linux-hexagon@vger.kernel.org, Joerg Roedel <joro@8bytes.org>,
 Christophe Leroy <christophe.leroy@csgroup.eu>,
 Mike Rapoport <rppt@linux.ibm.com>, Abdul Haleem <abdhalee@linux.vnet.ibm.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Joerg Roedel <jroedel@suse.de>, Arnd Bergmann <arnd@arndb.de>,
 linux-s390@vger.kernel.org, linux-um@lists.infradead.org,
 Steven Rostedt <rostedt@goodmis.org>, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, Andy Lutomirski <luto@kernel.org>,
 linux-arm-kernel@lists.infradead.org, linux-parisc@vger.kernel.org,
 linux-mm@kvack.org, linux-mips@vger.kernel.org, linux-alpha@vger.kernel.org,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogSm9lcmcgUm9lZGVsIDxqcm9lZGVsQHN1c2UuZGU+CgpUaGUgZnVuY3Rpb25zIGFyZSBv
bmx5IHVzZWQgaW4gdHdvIHNvdXJjZSBmaWxlcywgYm90aCByZXNpZGluZyBpbiBtbS8Kc3ViZGly
ZWN0b3J5LCBzbyB0aGVyZSBpcyBubyBuZWVkIGZvciB0aGVtIHRvIGJlIGluIHRoZSBnbG9iYWwg
PGxpbnV4L21tLmg+CmhlYWRlci4gIE1vdmUgdGhlbSB0byB0aGUgbmV3IG1tL3BnYWxsb2MtdHJh
Y2suaCBoZWFkZXIgYW5kIGluY2x1ZGUgaXQgb25seQp3aGVyZSBuZWVkZWQuCgpbcnBwdDogbXYg
aW5jbHVkZS9saW51eC9wZ2FsbG9jLXRyYWNrLmggbW0vXQoKTGluazogaHR0cDovL2xrbWwua2Vy
bmVsLm9yZy9yLzIwMjAwNjA5MTIwNTMzLjI1ODY3LTEtam9yb0A4Ynl0ZXMub3JnClNpZ25lZC1v
ZmYtYnk6IEpvZXJnIFJvZWRlbCA8anJvZWRlbEBzdXNlLmRlPgpDYzogUGV0ZXIgWmlqbHN0cmEg
KEludGVsKSA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiBBbmR5IEx1dG9taXJza2kgPGx1dG9A
a2VybmVsLm9yZz4KQ2M6IEFiZHVsIEhhbGVlbSA8YWJkaGFsZWVAbGludXgudm5ldC5pYm0uY29t
PgpDYzogU2F0aGVlc2ggUmFqZW5kcmFuIDxzYXRobmFnYUBsaW51eC52bmV0LmlibS5jb20+CkNj
OiBTdGVwaGVuIFJvdGh3ZWxsIDxzZnJAY2FuYi5hdXVnLm9yZy5hdT4KQ2M6IFN0ZXZlbiBSb3N0
ZWR0IChWTXdhcmUpIDxyb3N0ZWR0QGdvb2RtaXMub3JnPgpDYzogTWlrZSBSYXBvcG9ydCA8cnBw
dEBsaW51eC5pYm0uY29tPgpDYzogQ2hyaXN0b3BoZSBMZXJveSA8Y2hyaXN0b3BoZS5sZXJveUBj
c2dyb3VwLmV1PgpTaWduZWQtb2ZmLWJ5OiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5j
b20+Ci0tLQogaW5jbHVkZS9saW51eC9tbS5oIHwgNDUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQogbW0vaW9yZW1hcC5jICAgICAgIHwgIDIgKysKIG1tL3BnYWxsb2Mt
dHJhY2suaCB8IDUxICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysKIG1tL3ZtYWxsb2MuYyAgICAgICB8ICAxICsKIDQgZmlsZXMgY2hhbmdlZCwgNTQgaW5zZXJ0
aW9ucygrKSwgNDUgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgbW0vcGdhbGxvYy10
cmFjay5oCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9tbS5oIGIvaW5jbHVkZS9saW51eC9t
bS5oCmluZGV4IGRjN2I4NzMxMGMxMC4uNWU4NzhhM2M3YzU3IDEwMDY0NAotLS0gYS9pbmNsdWRl
L2xpbnV4L21tLmgKKysrIGIvaW5jbHVkZS9saW51eC9tbS5oCkBAIC0yMDkzLDUxICsyMDkzLDEx
IEBAIHN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9hbGxvYyhzdHJ1Y3QgbW1fc3RydWN0ICptbSwg
cDRkX3QgKnA0ZCwKIAkJTlVMTCA6IHB1ZF9vZmZzZXQocDRkLCBhZGRyZXNzKTsKIH0KIAotc3Rh
dGljIGlubGluZSBwNGRfdCAqcDRkX2FsbG9jX3RyYWNrKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBw
Z2RfdCAqcGdkLAotCQkJCSAgICAgdW5zaWduZWQgbG9uZyBhZGRyZXNzLAotCQkJCSAgICAgcGd0
YmxfbW9kX21hc2sgKm1vZF9tYXNrKQotCi17Ci0JaWYgKHVubGlrZWx5KHBnZF9ub25lKCpwZ2Qp
KSkgewotCQlpZiAoX19wNGRfYWxsb2MobW0sIHBnZCwgYWRkcmVzcykpCi0JCQlyZXR1cm4gTlVM
TDsKLQkJKm1vZF9tYXNrIHw9IFBHVEJMX1BHRF9NT0RJRklFRDsKLQl9Ci0KLQlyZXR1cm4gcDRk
X29mZnNldChwZ2QsIGFkZHJlc3MpOwotfQotCi1zdGF0aWMgaW5saW5lIHB1ZF90ICpwdWRfYWxs
b2NfdHJhY2soc3RydWN0IG1tX3N0cnVjdCAqbW0sIHA0ZF90ICpwNGQsCi0JCQkJICAgICB1bnNp
Z25lZCBsb25nIGFkZHJlc3MsCi0JCQkJICAgICBwZ3RibF9tb2RfbWFzayAqbW9kX21hc2spCi17
Ci0JaWYgKHVubGlrZWx5KHA0ZF9ub25lKCpwNGQpKSkgewotCQlpZiAoX19wdWRfYWxsb2MobW0s
IHA0ZCwgYWRkcmVzcykpCi0JCQlyZXR1cm4gTlVMTDsKLQkJKm1vZF9tYXNrIHw9IFBHVEJMX1A0
RF9NT0RJRklFRDsKLQl9Ci0KLQlyZXR1cm4gcHVkX29mZnNldChwNGQsIGFkZHJlc3MpOwotfQot
CiBzdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfYWxsb2Moc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1
ZF90ICpwdWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKIHsKIAlyZXR1cm4gKHVubGlrZWx5KHB1
ZF9ub25lKCpwdWQpKSAmJiBfX3BtZF9hbGxvYyhtbSwgcHVkLCBhZGRyZXNzKSk/CiAJCU5VTEw6
IHBtZF9vZmZzZXQocHVkLCBhZGRyZXNzKTsKIH0KLQotc3RhdGljIGlubGluZSBwbWRfdCAqcG1k
X2FsbG9jX3RyYWNrKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwdWRfdCAqcHVkLAotCQkJCSAgICAg
dW5zaWduZWQgbG9uZyBhZGRyZXNzLAotCQkJCSAgICAgcGd0YmxfbW9kX21hc2sgKm1vZF9tYXNr
KQotewotCWlmICh1bmxpa2VseShwdWRfbm9uZSgqcHVkKSkpIHsKLQkJaWYgKF9fcG1kX2FsbG9j
KG1tLCBwdWQsIGFkZHJlc3MpKQotCQkJcmV0dXJuIE5VTEw7Ci0JCSptb2RfbWFzayB8PSBQR1RC
TF9QVURfTU9ESUZJRUQ7Ci0JfQotCi0JcmV0dXJuIHBtZF9vZmZzZXQocHVkLCBhZGRyZXNzKTsK
LX0KICNlbmRpZiAvKiBDT05GSUdfTU1VICovCiAKICNpZiBVU0VfU1BMSVRfUFRFX1BUTE9DS1MK
QEAgLTIyNTMsMTEgKzIyMTMsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgcGd0YWJsZV9wdGVfcGFn
ZV9kdG9yKHN0cnVjdCBwYWdlICpwYWdlKQogCSgodW5saWtlbHkocG1kX25vbmUoKihwbWQpKSkg
JiYgX19wdGVfYWxsb2Nfa2VybmVsKHBtZCkpPyBcCiAJCU5VTEw6IHB0ZV9vZmZzZXRfa2VybmVs
KHBtZCwgYWRkcmVzcykpCiAKLSNkZWZpbmUgcHRlX2FsbG9jX2tlcm5lbF90cmFjayhwbWQsIGFk
ZHJlc3MsIG1hc2spCQkJXAotCSgodW5saWtlbHkocG1kX25vbmUoKihwbWQpKSkgJiYJCQkJCVwK
LQkgIChfX3B0ZV9hbGxvY19rZXJuZWwocG1kKSB8fCAoeyoobWFzayl8PVBHVEJMX1BNRF9NT0RJ
RklFRDswO30pKSk/XAotCQlOVUxMOiBwdGVfb2Zmc2V0X2tlcm5lbChwbWQsIGFkZHJlc3MpKQot
CiAjaWYgVVNFX1NQTElUX1BNRF9QVExPQ0tTCiAKIHN0YXRpYyBzdHJ1Y3QgcGFnZSAqcG1kX3Rv
X3BhZ2UocG1kX3QgKnBtZCkKZGlmZiAtLWdpdCBhL21tL2lvcmVtYXAuYyBiL21tL2lvcmVtYXAu
YwppbmRleCA1ZWUzNTI2ZjcxYjguLjVmYTFhYjQxZDE1MiAxMDA2NDQKLS0tIGEvbW0vaW9yZW1h
cC5jCisrKyBiL21tL2lvcmVtYXAuYwpAQCAtMTMsNiArMTMsOCBAQAogI2luY2x1ZGUgPGxpbnV4
L2V4cG9ydC5oPgogI2luY2x1ZGUgPGFzbS9jYWNoZWZsdXNoLmg+CiAKKyNpbmNsdWRlICJwZ2Fs
bG9jLXRyYWNrLmgiCisKICNpZmRlZiBDT05GSUdfSEFWRV9BUkNIX0hVR0VfVk1BUAogc3RhdGlj
IGludCBfX3JlYWRfbW9zdGx5IGlvcmVtYXBfcDRkX2NhcGFibGU7CiBzdGF0aWMgaW50IF9fcmVh
ZF9tb3N0bHkgaW9yZW1hcF9wdWRfY2FwYWJsZTsKZGlmZiAtLWdpdCBhL21tL3BnYWxsb2MtdHJh
Y2suaCBiL21tL3BnYWxsb2MtdHJhY2suaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwMDAuLjFkY2M4NjUwMjlhMgotLS0gL2Rldi9udWxsCisrKyBiL21tL3BnYWxsb2MtdHJh
Y2suaApAQCAtMCwwICsxLDUxIEBACisvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIu
MCAqLworI2lmbmRlZiBfTElOVVhfUEdBTExMQ19UUkFDS19ICisjZGVmaW5lIF9MSU5VWF9QR0FM
TExDX1RSQUNLX0gKKworI2lmIGRlZmluZWQoQ09ORklHX01NVSkKK3N0YXRpYyBpbmxpbmUgcDRk
X3QgKnA0ZF9hbGxvY190cmFjayhzdHJ1Y3QgbW1fc3RydWN0ICptbSwgcGdkX3QgKnBnZCwKKwkJ
CQkgICAgIHVuc2lnbmVkIGxvbmcgYWRkcmVzcywKKwkJCQkgICAgIHBndGJsX21vZF9tYXNrICpt
b2RfbWFzaykKK3sKKwlpZiAodW5saWtlbHkocGdkX25vbmUoKnBnZCkpKSB7CisJCWlmIChfX3A0
ZF9hbGxvYyhtbSwgcGdkLCBhZGRyZXNzKSkKKwkJCXJldHVybiBOVUxMOworCQkqbW9kX21hc2sg
fD0gUEdUQkxfUEdEX01PRElGSUVEOworCX0KKworCXJldHVybiBwNGRfb2Zmc2V0KHBnZCwgYWRk
cmVzcyk7Cit9CisKK3N0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9hbGxvY190cmFjayhzdHJ1Y3Qg
bW1fc3RydWN0ICptbSwgcDRkX3QgKnA0ZCwKKwkJCQkgICAgIHVuc2lnbmVkIGxvbmcgYWRkcmVz
cywKKwkJCQkgICAgIHBndGJsX21vZF9tYXNrICptb2RfbWFzaykKK3sKKwlpZiAodW5saWtlbHko
cDRkX25vbmUoKnA0ZCkpKSB7CisJCWlmIChfX3B1ZF9hbGxvYyhtbSwgcDRkLCBhZGRyZXNzKSkK
KwkJCXJldHVybiBOVUxMOworCQkqbW9kX21hc2sgfD0gUEdUQkxfUDREX01PRElGSUVEOworCX0K
KworCXJldHVybiBwdWRfb2Zmc2V0KHA0ZCwgYWRkcmVzcyk7Cit9CisKK3N0YXRpYyBpbmxpbmUg
cG1kX3QgKnBtZF9hbGxvY190cmFjayhzdHJ1Y3QgbW1fc3RydWN0ICptbSwgcHVkX3QgKnB1ZCwK
KwkJCQkgICAgIHVuc2lnbmVkIGxvbmcgYWRkcmVzcywKKwkJCQkgICAgIHBndGJsX21vZF9tYXNr
ICptb2RfbWFzaykKK3sKKwlpZiAodW5saWtlbHkocHVkX25vbmUoKnB1ZCkpKSB7CisJCWlmIChf
X3BtZF9hbGxvYyhtbSwgcHVkLCBhZGRyZXNzKSkKKwkJCXJldHVybiBOVUxMOworCQkqbW9kX21h
c2sgfD0gUEdUQkxfUFVEX01PRElGSUVEOworCX0KKworCXJldHVybiBwbWRfb2Zmc2V0KHB1ZCwg
YWRkcmVzcyk7Cit9CisjZW5kaWYgLyogQ09ORklHX01NVSAqLworCisjZGVmaW5lIHB0ZV9hbGxv
Y19rZXJuZWxfdHJhY2socG1kLCBhZGRyZXNzLCBtYXNrKQkJCVwKKwkoKHVubGlrZWx5KHBtZF9u
b25lKCoocG1kKSkpICYmCQkJCQlcCisJICAoX19wdGVfYWxsb2Nfa2VybmVsKHBtZCkgfHwgKHsq
KG1hc2spfD1QR1RCTF9QTURfTU9ESUZJRUQ7MDt9KSkpP1wKKwkJTlVMTDogcHRlX29mZnNldF9r
ZXJuZWwocG1kLCBhZGRyZXNzKSkKKworI2VuZGlmIC8qIF9MSU5VWF9QR0FMTExDX1RSQUNLX0gg
Ki8KZGlmZiAtLWdpdCBhL21tL3ZtYWxsb2MuYyBiL21tL3ZtYWxsb2MuYwppbmRleCA1YTJiNTVj
OGRkOWEuLjViZTNjZjNiNTlkZSAxMDA2NDQKLS0tIGEvbW0vdm1hbGxvYy5jCisrKyBiL21tL3Zt
YWxsb2MuYwpAQCAtNDEsNiArNDEsNyBAQAogI2luY2x1ZGUgPGFzbS9zaG1wYXJhbS5oPgogCiAj
aW5jbHVkZSAiaW50ZXJuYWwuaCIKKyNpbmNsdWRlICJwZ2FsbG9jLXRyYWNrLmgiCiAKIGJvb2wg
aXNfdm1hbGxvY19hZGRyKGNvbnN0IHZvaWQgKngpCiB7Ci0tIAoyLjI2LjIKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlz
dApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMu
b3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
