Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id AC318353246
	for <lists+openrisc@lfdr.de>; Sat,  3 Apr 2021 06:18:53 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 691DA2132A;
	Sat,  3 Apr 2021 06:18:49 +0200 (CEST)
Received: from pegase1.c-s.fr (pegase1.c-s.fr [93.17.236.30])
 by mail.librecores.org (Postfix) with ESMTPS id DBC02212F4
 for <openrisc@lists.librecores.org>; Fri,  2 Apr 2021 17:18:06 +0200 (CEST)
Received: from localhost (mailhub1-int [192.168.12.234])
 by localhost (Postfix) with ESMTP id 4FBkFm3NsKz9v2m3;
 Fri,  2 Apr 2021 17:18:04 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
 by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
 with ESMTP id UqB_0D8kMq5r; Fri,  2 Apr 2021 17:18:04 +0200 (CEST)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
 by pegase1.c-s.fr (Postfix) with ESMTP id 4FBkFm1vXmz9v2ls;
 Fri,  2 Apr 2021 17:18:04 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
 by messagerie.si.c-s.fr (Postfix) with ESMTP id 2AD948BB7B;
 Fri,  2 Apr 2021 17:18:06 +0200 (CEST)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
 by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
 with ESMTP id Da56GN4Eog_p; Fri,  2 Apr 2021 17:18:06 +0200 (CEST)
Received: from po16121vm.idsi0.si.c-s.fr (unknown [192.168.4.90])
 by messagerie.si.c-s.fr (Postfix) with ESMTP id ABC668BB79;
 Fri,  2 Apr 2021 17:18:05 +0200 (CEST)
Received: by po16121vm.idsi0.si.c-s.fr (Postfix, from userid 0)
 id 86AF467989; Fri,  2 Apr 2021 15:18:05 +0000 (UTC)
Message-Id: <13fb0995a91bdbce71812794d28cb29070daf51e.1617375802.git.christophe.leroy@csgroup.eu>
In-Reply-To: <cover.1617375802.git.christophe.leroy@csgroup.eu>
References: <cover.1617375802.git.christophe.leroy@csgroup.eu>
From: Christophe Leroy <christophe.leroy@csgroup.eu>
To: will@kernel.org, danielwa@cisco.com, robh@kernel.org,
 daniel@gimpelevich.san-francisco.ca.us, arnd@kernel.org,
 akpm@linux-foundation.org
Date: Fri,  2 Apr 2021 15:18:05 +0000 (UTC)
X-Mailman-Approved-At: Sat, 03 Apr 2021 06:18:46 +0200
Subject: [OpenRISC] [PATCH v4 04/20] drivers: firmware: efi: use cmdline
 building function
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, devicetree@vger.kernel.org,
 microblaze <monstr@monstr.eu>, linux-xtensa@linux-xtensa.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org, x86@kernel.org,
 linux-kernel@vger.kernel.org, nios2 <ley.foon.tan@intel.com>,
 linux-mips@vger.kernel.org, linux-mm@kvack.org, openrisc@lists.librecores.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linuxppc-dev@lists.ozlabs.org, linux-arm-kernel@lists.infradead.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VXNlIGNtZGxpbmUgYnVpbGRpbmcgZnVuY3Rpb24gaW4gRUZJLgoKRUZJIGNhbm5vdCB1c2UgcHJf
ZXJyKCkgYW5kIGRvZXNuJ3QgaGF2ZSBhIC5pbml0LmRhdGEgc2VjdGlvbiwKc28gdXNlIHRoZSBf
X2NtZGxpbmVfYnVpbGQoKSBpbnRlcm5hbCBmdW5jdGlvbiBhbmQgcHJvdmlkZXMKYm90aCBhIHNv
dXJjZSBhbmQgYSBkZXN0aW5hdGlvbi4KClJlbW92ZSB0aGUgaGFuZGxpbmcgb2YgdG9vIGxvbmcg
Y29tbWFuZCBsaW5lcyBhcyBpdCBpcyBoYW5kbGVkCmJ5IHRoZSBnZW5lcmljIENNRExJTkUuCgpT
aWduZWQtb2ZmLWJ5OiBDaHJpc3RvcGhlIExlcm95IDxjaHJpc3RvcGhlLmxlcm95QGNzZ3JvdXAu
ZXU+Ci0tLQp2NDogTmV3Ci0tLQogLi4uL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaS1zdHViLWhl
bHBlci5jICAgIHwgMzUgKysrKysrKysrKy0tLS0tLS0tLQogZHJpdmVycy9maXJtd2FyZS9lZmkv
bGlic3R1Yi9lZmktc3R1Yi5jICAgICAgIHwgMjMgKysrLS0tLS0tLS0tCiBkcml2ZXJzL2Zpcm13
YXJlL2VmaS9saWJzdHViL2VmaXN0dWIuaCAgICAgICAgfCAgMiArLQogZHJpdmVycy9maXJtd2Fy
ZS9lZmkvbGlic3R1Yi94ODYtc3R1Yi5jICAgICAgIHwgMTggKysrLS0tLS0tLQogNCBmaWxlcyBj
aGFuZ2VkLCAyOSBpbnNlcnRpb25zKCspLCA0OSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9k
cml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaS1zdHViLWhlbHBlci5jIGIvZHJpdmVycy9m
aXJtd2FyZS9lZmkvbGlic3R1Yi9lZmktc3R1Yi1oZWxwZXIuYwppbmRleCBhYThkYTBhNDk4Mjku
LjlmNjBkNDcxZDY1MCAxMDA2NDQKLS0tIGEvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi9l
Zmktc3R1Yi1oZWxwZXIuYworKysgYi9kcml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaS1z
dHViLWhlbHBlci5jCkBAIC0xMyw2ICsxMyw3IEBACiAjaW5jbHVkZSA8bGludXgvZWZpLmg+CiAj
aW5jbHVkZSA8bGludXgva2VybmVsLmg+CiAjaW5jbHVkZSA8bGludXgvcHJpbnRrLmg+IC8qIEZv
ciBDT05TT0xFX0xPR0xFVkVMXyogKi8KKyNpbmNsdWRlIDxsaW51eC9jbWRsaW5lLmg+CiAjaW5j
bHVkZSA8YXNtL2VmaS5oPgogI2luY2x1ZGUgPGFzbS9zZXR1cC5oPgogCkBAIC0zMzksMTMgKzM0
MCwxMyBAQCB2b2lkIGVmaV9hcHBseV9sb2Fkb3B0aW9uc19xdWlyayhjb25zdCB2b2lkICoqbG9h
ZF9vcHRpb25zLCBpbnQgKmxvYWRfb3B0aW9uc19zaQogICogU2l6ZSBvZiBtZW1vcnkgYWxsb2Nh
dGVkIHJldHVybiBpbiAqY21kX2xpbmVfbGVuLgogICogUmV0dXJucyBOVUxMIG9uIGVycm9yLgog
ICovCi1jaGFyICplZmlfY29udmVydF9jbWRsaW5lKGVmaV9sb2FkZWRfaW1hZ2VfdCAqaW1hZ2Us
IGludCAqY21kX2xpbmVfbGVuKQorY2hhciAqZWZpX2NvbnZlcnRfY21kbGluZShlZmlfbG9hZGVk
X2ltYWdlX3QgKmltYWdlKQogewogCWNvbnN0IHUxNiAqczI7Ci0JdW5zaWduZWQgbG9uZyBjbWRs
aW5lX2FkZHIgPSAwOworCXVuc2lnbmVkIGxvbmcgY21kbGluZV9hZGRyID0gMCwgb3B0aW9uc19h
ZGRyID0gMDsKIAlpbnQgb3B0aW9uc19jaGFycyA9IGVmaV90YWJsZV9hdHRyKGltYWdlLCBsb2Fk
X29wdGlvbnNfc2l6ZSk7CiAJY29uc3QgdTE2ICpvcHRpb25zID0gZWZpX3RhYmxlX2F0dHIoaW1h
Z2UsIGxvYWRfb3B0aW9ucyk7Ci0JaW50IG9wdGlvbnNfYnl0ZXMgPSAwLCBzYWZlX29wdGlvbnNf
Ynl0ZXMgPSAwOyAgLyogVVRGLTggYnl0ZXMgKi8KKwlpbnQgb3B0aW9uc19ieXRlcyA9IDA7ICAv
KiBVVEYtOCBieXRlcyAqLwogCWJvb2wgaW5fcXVvdGUgPSBmYWxzZTsKIAllZmlfc3RhdHVzX3Qg
c3RhdHVzOwogCkBAIC0zNTQsMTYgKzM1NSwxMiBAQCBjaGFyICplZmlfY29udmVydF9jbWRsaW5l
KGVmaV9sb2FkZWRfaW1hZ2VfdCAqaW1hZ2UsIGludCAqY21kX2xpbmVfbGVuKQogCiAJaWYgKG9w
dGlvbnMpIHsKIAkJczIgPSBvcHRpb25zOwotCQl3aGlsZSAob3B0aW9uc19ieXRlcyA8IENPTU1B
TkRfTElORV9TSVpFICYmIG9wdGlvbnNfY2hhcnMtLSkgeworCQl3aGlsZSAob3B0aW9uc19jaGFy
cy0tKSB7CiAJCQl1MTYgYyA9ICpzMisrOwogCiAJCQlpZiAoYyA8IDB4ODApIHsKIAkJCQlpZiAo
YyA9PSBMJ1wwJyB8fCBjID09IEwnXG4nKQogCQkJCQlicmVhazsKLQkJCQlpZiAoYyA9PSBMJyIn
KQotCQkJCQlpbl9xdW90ZSA9ICFpbl9xdW90ZTsKLQkJCQllbHNlIGlmICghaW5fcXVvdGUgJiYg
aXNzcGFjZSgoY2hhciljKSkKLQkJCQkJc2FmZV9vcHRpb25zX2J5dGVzID0gb3B0aW9uc19ieXRl
czsKIAogCQkJCW9wdGlvbnNfYnl0ZXMrKzsKIAkJCQljb250aW51ZTsKQEAgLTM5NSwyNCArMzky
LDMwIEBAIGNoYXIgKmVmaV9jb252ZXJ0X2NtZGxpbmUoZWZpX2xvYWRlZF9pbWFnZV90ICppbWFn
ZSwgaW50ICpjbWRfbGluZV9sZW4pCiAJCQkJfQogCQkJfQogCQl9Ci0JCWlmIChvcHRpb25zX2J5
dGVzID49IENPTU1BTkRfTElORV9TSVpFKSB7Ci0JCQlvcHRpb25zX2J5dGVzID0gc2FmZV9vcHRp
b25zX2J5dGVzOwotCQkJZWZpX2VycigiQ29tbWFuZCBsaW5lIGlzIHRvbyBsb25nOiB0cnVuY2F0
ZWQgdG8gJWQgYnl0ZXNcbiIsCi0JCQkJb3B0aW9uc19ieXRlcyk7Ci0JCX0KIAl9CiAKIAlvcHRp
b25zX2J5dGVzKys7CS8qIE5VTCB0ZXJtaW5hdGlvbiAqLwogCiAJc3RhdHVzID0gZWZpX2JzX2Nh
bGwoYWxsb2NhdGVfcG9vbCwgRUZJX0xPQURFUl9EQVRBLCBvcHRpb25zX2J5dGVzLAotCQkJICAg
ICAodm9pZCAqKikmY21kbGluZV9hZGRyKTsKKwkJCSAgICAgKHZvaWQgKiopJm9wdGlvbnNfYWRk
cik7CiAJaWYgKHN0YXR1cyAhPSBFRklfU1VDQ0VTUykKIAkJcmV0dXJuIE5VTEw7CiAKLQlzbnBy
aW50ZigoY2hhciAqKWNtZGxpbmVfYWRkciwgb3B0aW9uc19ieXRlcywgIiUuKmxzIiwKKwlzbnBy
aW50ZigoY2hhciAqKW9wdGlvbnNfYWRkciwgb3B0aW9uc19ieXRlcywgIiUuKmxzIiwKIAkJIG9w
dGlvbnNfYnl0ZXMgLSAxLCBvcHRpb25zKTsKIAotCSpjbWRfbGluZV9sZW4gPSBvcHRpb25zX2J5
dGVzOworCXN0YXR1cyA9IGVmaV9ic19jYWxsKGFsbG9jYXRlX3Bvb2wsIEVGSV9MT0FERVJfREFU
QSwgQ09NTUFORF9MSU5FX1NJWkUsCisJCQkgICAgICh2b2lkICoqKSZjbWRsaW5lX2FkZHIpOwor
CWlmIChzdGF0dXMgIT0gRUZJX1NVQ0NFU1MpIHsKKwkJZWZpX2JzX2NhbGwoZnJlZV9wb29sLCAo
dm9pZCAqKW9wdGlvbnNfYWRkcik7CisJCXJldHVybiBOVUxMOworCX0KKworCWlmICghX19jbWRs
aW5lX2J1aWxkKChjaGFyICopY21kbGluZV9hZGRyLCAoY2hhciAqKW9wdGlvbnNfYWRkcikpCisJ
CWVmaV9lcnIoIkNvbW1hbmQgbGluZSBpcyB0b28gbG9uZ1xuIik7CisKKwllZmlfYnNfY2FsbChm
cmVlX3Bvb2wsICh2b2lkICopY21kbGluZV9hZGRyKTsKKwogCXJldHVybiAoY2hhciAqKWNtZGxp
bmVfYWRkcjsKIH0KIApkaWZmIC0tZ2l0IGEvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi9l
Zmktc3R1Yi5jIGIvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi9lZmktc3R1Yi5jCmluZGV4
IDI2ZTY5Nzg4ZjI3YS4uYjc5ZWU3NmYyZTk1IDEwMDY0NAotLS0gYS9kcml2ZXJzL2Zpcm13YXJl
L2VmaS9saWJzdHViL2VmaS1zdHViLmMKKysrIGIvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1
Yi9lZmktc3R1Yi5jCkBAIC0xMjcsNyArMTI3LDYgQEAgZWZpX3N0YXR1c190IF9fZWZpYXBpIGVm
aV9wZV9lbnRyeShlZmlfaGFuZGxlX3QgaGFuZGxlLAogCXVuc2lnbmVkIGxvbmcgZmR0X2FkZHIg
PSAwOyAgLyogT3JpZ2luYWwgRFRCICovCiAJdW5zaWduZWQgbG9uZyBmZHRfc2l6ZSA9IDA7CiAJ
Y2hhciAqY21kbGluZV9wdHIgPSBOVUxMOwotCWludCBjbWRsaW5lX3NpemUgPSAwOwogCWVmaV9n
dWlkX3QgbG9hZGVkX2ltYWdlX3Byb3RvID0gTE9BREVEX0lNQUdFX1BST1RPQ09MX0dVSUQ7CiAJ
dW5zaWduZWQgbG9uZyByZXNlcnZlX2FkZHIgPSAwOwogCXVuc2lnbmVkIGxvbmcgcmVzZXJ2ZV9z
aXplID0gMDsKQEAgLTE2NSwyOSArMTY0LDE3IEBAIGVmaV9zdGF0dXNfdCBfX2VmaWFwaSBlZmlf
cGVfZW50cnkoZWZpX2hhbmRsZV90IGhhbmRsZSwKIAkgKiBwcm90b2NvbC4gV2UgYXJlIGdvaW5n
IHRvIGNvcHkgdGhlIGNvbW1hbmQgbGluZSBpbnRvIHRoZQogCSAqIGRldmljZSB0cmVlLCBzbyB0
aGlzIGNhbiBiZSBhbGxvY2F0ZWQgYW55d2hlcmUuCiAJICovCi0JY21kbGluZV9wdHIgPSBlZmlf
Y29udmVydF9jbWRsaW5lKGltYWdlLCAmY21kbGluZV9zaXplKTsKKwljbWRsaW5lX3B0ciA9IGVm
aV9jb252ZXJ0X2NtZGxpbmUoaW1hZ2UpOwogCWlmICghY21kbGluZV9wdHIpIHsKIAkJZWZpX2Vy
cigiZ2V0dGluZyBjb21tYW5kIGxpbmUgdmlhIExPQURFRF9JTUFHRV9QUk9UT0NPTFxuIik7CiAJ
CXN0YXR1cyA9IEVGSV9PVVRfT0ZfUkVTT1VSQ0VTOwogCQlnb3RvIGZhaWw7CiAJfQogCi0JaWYg
KElTX0VOQUJMRUQoQ09ORklHX0NNRExJTkVfRVhURU5EKSB8fAotCSAgICBJU19FTkFCTEVEKENP
TkZJR19DTURMSU5FX0ZPUkNFKSB8fAotCSAgICBjbWRsaW5lX3NpemUgPT0gMCkgewotCQlzdGF0
dXMgPSBlZmlfcGFyc2Vfb3B0aW9ucyhDT05GSUdfQ01ETElORSk7Ci0JCWlmIChzdGF0dXMgIT0g
RUZJX1NVQ0NFU1MpIHsKLQkJCWVmaV9lcnIoIkZhaWxlZCB0byBwYXJzZSBvcHRpb25zXG4iKTsK
LQkJCWdvdG8gZmFpbF9mcmVlX2NtZGxpbmU7Ci0JCX0KLQl9Ci0KLQlpZiAoIUlTX0VOQUJMRUQo
Q09ORklHX0NNRExJTkVfRk9SQ0UpICYmIGNtZGxpbmVfc2l6ZSA+IDApIHsKLQkJc3RhdHVzID0g
ZWZpX3BhcnNlX29wdGlvbnMoY21kbGluZV9wdHIpOwotCQlpZiAoc3RhdHVzICE9IEVGSV9TVUND
RVNTKSB7Ci0JCQllZmlfZXJyKCJGYWlsZWQgdG8gcGFyc2Ugb3B0aW9uc1xuIik7Ci0JCQlnb3Rv
IGZhaWxfZnJlZV9jbWRsaW5lOwotCQl9CisJc3RhdHVzID0gZWZpX3BhcnNlX29wdGlvbnMoY21k
bGluZV9wdHIpOworCWlmIChzdGF0dXMgIT0gRUZJX1NVQ0NFU1MpIHsKKwkJZWZpX2VycigiRmFp
bGVkIHRvIHBhcnNlIG9wdGlvbnNcbiIpOworCQlnb3RvIGZhaWxfZnJlZV9jbWRsaW5lOwogCX0K
IAogCWVmaV9pbmZvKCJCb290aW5nIExpbnV4IEtlcm5lbC4uLlxuIik7CmRpZmYgLS1naXQgYS9k
cml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaXN0dWIuaCBiL2RyaXZlcnMvZmlybXdhcmUv
ZWZpL2xpYnN0dWIvZWZpc3R1Yi5oCmluZGV4IGNkZTBhMmVmNTA3ZC4uMmY4NzJjNDhiMjBiIDEw
MDY0NAotLS0gYS9kcml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaXN0dWIuaAorKysgYi9k
cml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL2VmaXN0dWIuaApAQCAtNzgwLDcgKzc4MCw3IEBA
IHZvaWQgZWZpX2ZyZWUodW5zaWduZWQgbG9uZyBzaXplLCB1bnNpZ25lZCBsb25nIGFkZHIpOwog
CiB2b2lkIGVmaV9hcHBseV9sb2Fkb3B0aW9uc19xdWlyayhjb25zdCB2b2lkICoqbG9hZF9vcHRp
b25zLCBpbnQgKmxvYWRfb3B0aW9uc19zaXplKTsKIAotY2hhciAqZWZpX2NvbnZlcnRfY21kbGlu
ZShlZmlfbG9hZGVkX2ltYWdlX3QgKmltYWdlLCBpbnQgKmNtZF9saW5lX2xlbik7CitjaGFyICpl
ZmlfY29udmVydF9jbWRsaW5lKGVmaV9sb2FkZWRfaW1hZ2VfdCAqaW1hZ2UpOwogCiBlZmlfc3Rh
dHVzX3QgZWZpX2dldF9tZW1vcnlfbWFwKHN0cnVjdCBlZmlfYm9vdF9tZW1tYXAgKm1hcCk7CiAK
ZGlmZiAtLWdpdCBhL2RyaXZlcnMvZmlybXdhcmUvZWZpL2xpYnN0dWIveDg2LXN0dWIuYyBiL2Ry
aXZlcnMvZmlybXdhcmUvZWZpL2xpYnN0dWIveDg2LXN0dWIuYwppbmRleCAyODY1OTI3NmI2YmEu
LjBmNmEzMzE0OWVmNyAxMDA2NDQKLS0tIGEvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi94
ODYtc3R1Yi5jCisrKyBiL2RyaXZlcnMvZmlybXdhcmUvZWZpL2xpYnN0dWIveDg2LXN0dWIuYwpA
QCAtMzU5LDcgKzM1OSw2IEBAIGVmaV9zdGF0dXNfdCBfX2VmaWFwaSBlZmlfcGVfZW50cnkoZWZp
X2hhbmRsZV90IGhhbmRsZSwKIAlzdHJ1Y3Qgc2V0dXBfaGVhZGVyICpoZHI7CiAJdm9pZCAqaW1h
Z2VfYmFzZTsKIAllZmlfZ3VpZF90IHByb3RvID0gTE9BREVEX0lNQUdFX1BST1RPQ09MX0dVSUQ7
Ci0JaW50IG9wdGlvbnNfc2l6ZSA9IDA7CiAJZWZpX3N0YXR1c190IHN0YXR1czsKIAljaGFyICpj
bWRsaW5lX3B0cjsKIApAQCAtNDA0LDcgKzQwMyw3IEBAIGVmaV9zdGF0dXNfdCBfX2VmaWFwaSBl
ZmlfcGVfZW50cnkoZWZpX2hhbmRsZV90IGhhbmRsZSwKIAloZHItPnR5cGVfb2ZfbG9hZGVyID0g
MHgyMTsKIAogCS8qIENvbnZlcnQgdW5pY29kZSBjbWRsaW5lIHRvIGFzY2lpICovCi0JY21kbGlu
ZV9wdHIgPSBlZmlfY29udmVydF9jbWRsaW5lKGltYWdlLCAmb3B0aW9uc19zaXplKTsKKwljbWRs
aW5lX3B0ciA9IGVmaV9jb252ZXJ0X2NtZGxpbmUoaW1hZ2UpOwogCWlmICghY21kbGluZV9wdHIp
CiAJCWdvdG8gZmFpbDsKIApAQCAtNjc0LDYgKzY3Myw4IEBAIHVuc2lnbmVkIGxvbmcgZWZpX21h
aW4oZWZpX2hhbmRsZV90IGhhbmRsZSwKIAl1bnNpZ25lZCBsb25nIGJ1ZmZlcl9zdGFydCwgYnVm
ZmVyX2VuZDsKIAlzdHJ1Y3Qgc2V0dXBfaGVhZGVyICpoZHIgPSAmYm9vdF9wYXJhbXMtPmhkcjsK
IAllZmlfc3RhdHVzX3Qgc3RhdHVzOworCXVuc2lnbmVkIGxvbmcgY21kbGluZV9wYWRkciA9ICgo
dTY0KWhkci0+Y21kX2xpbmVfcHRyIHwKKwkJCQkgICAgICAgKCh1NjQpYm9vdF9wYXJhbXMtPmV4
dF9jbWRfbGluZV9wdHIgPDwgMzIpKTsKIAogCWVmaV9zeXN0ZW1fdGFibGUgPSBzeXNfdGFibGVf
YXJnOwogCkBAIC03MzUsMjIgKzczNiwxMSBAQCB1bnNpZ25lZCBsb25nIGVmaV9tYWluKGVmaV9o
YW5kbGVfdCBoYW5kbGUsCiAJCWltYWdlX29mZnNldCA9IDA7CiAJfQogCi0jaWZkZWYgQ09ORklH
X0NNRExJTkVfQk9PTAotCXN0YXR1cyA9IGVmaV9wYXJzZV9vcHRpb25zKENPTkZJR19DTURMSU5F
KTsKKwlzdGF0dXMgPSBlZmlfcGFyc2Vfb3B0aW9ucygoY2hhciAqKWNtZGxpbmVfcGFkZHIpOwog
CWlmIChzdGF0dXMgIT0gRUZJX1NVQ0NFU1MpIHsKIAkJZWZpX2VycigiRmFpbGVkIHRvIHBhcnNl
IG9wdGlvbnNcbiIpOwogCQlnb3RvIGZhaWw7CiAJfQotI2VuZGlmCi0JaWYgKCFJU19FTkFCTEVE
KENPTkZJR19DTURMSU5FX0ZPUkNFKSkgewotCQl1bnNpZ25lZCBsb25nIGNtZGxpbmVfcGFkZHIg
PSAoKHU2NCloZHItPmNtZF9saW5lX3B0ciB8Ci0JCQkJCSAgICAgICAoKHU2NClib290X3BhcmFt
cy0+ZXh0X2NtZF9saW5lX3B0ciA8PCAzMikpOwotCQlzdGF0dXMgPSBlZmlfcGFyc2Vfb3B0aW9u
cygoY2hhciAqKWNtZGxpbmVfcGFkZHIpOwotCQlpZiAoc3RhdHVzICE9IEVGSV9TVUNDRVNTKSB7
Ci0JCQllZmlfZXJyKCJGYWlsZWQgdG8gcGFyc2Ugb3B0aW9uc1xuIik7Ci0JCQlnb3RvIGZhaWw7
Ci0JCX0KLQl9CiAKIAkvKgogCSAqIEF0IHRoaXMgcG9pbnQsIGFuIGluaXRyZCBtYXkgYWxyZWFk
eSBoYXZlIGJlZW4gbG9hZGVkIGJ5IHRoZQotLSAKMi4yNS4wCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJ
U0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0
aW5mby9vcGVucmlzYwo=
