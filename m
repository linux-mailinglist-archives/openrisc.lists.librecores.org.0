Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 5E02A480FA8
	for <lists+openrisc@lfdr.de>; Wed, 29 Dec 2021 05:43:27 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 3EE6924303;
	Wed, 29 Dec 2021 05:43:27 +0100 (CET)
Received: from mail-pl1-f173.google.com (mail-pl1-f173.google.com
 [209.85.214.173])
 by mail.librecores.org (Postfix) with ESMTPS id 0B590242FE
 for <openrisc@lists.librecores.org>; Wed, 29 Dec 2021 05:43:25 +0100 (CET)
Received: by mail-pl1-f173.google.com with SMTP id l16so2940485plg.10
 for <openrisc@lists.librecores.org>; Tue, 28 Dec 2021 20:43:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=uCEChPbpGN3FRBoqISU/Z/ouvHghpMwg9USYE44ktxg=;
 b=Dl3dwQ2+ykJSe9+on4hwdXuZoxuyWHhM2MSbQHQ/CJFHbBfX/TAcBcKKTQ93kA3sr9
 uRUmCDmfrW3vW3b/FBwnAYgpGeWo3FLFWfjHl3ib2GmdnZTCNSmphzy+3NVXsQJIy63v
 h3irTUzW9lPSro4t0IvjwowhZk1dpL+HBsXpz34urUo9s5e5RnoPu5paarAZn3W4PL0M
 ZGfX4WlJsyfe8sopg7h/cJagTOHBMh/JtVCTe2hhQRdD4pYu7emHqd5f63Eblvwvdmbb
 vObVWTEi5pEUMpw7JxHztCMISg1s7XKux1HqftXAlc8skltStm+3qrMb61krtvxga2Fs
 g9Tw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=uCEChPbpGN3FRBoqISU/Z/ouvHghpMwg9USYE44ktxg=;
 b=jyWhLo6vgEH30KLgH+wgjaeStmHdvai9E06QWOHqzwf6UyxHbolcVvCvA4PC3RXQ2R
 sNUx5leQHgB/XgkhDlAdI55X/3comK+S4HkhGXCc/UzE013ADT7s+QyfjT+PBwdsofWf
 gkSiw/pnfB8j+s1r4t3/8L/ApHjiQftQ/5X4ln/TCyLbHTX9CaIYlOWBGACHFTCuqLpW
 EAAMQ/ndVAX21X0OX/oHYbi9ArABxrKHR9h879EzuWWPNcfkcASbsXRpfVOpUK1NoK3a
 xS+//TEB5zFGazIsjoLREQPcCSMAZlmaKUYjc+kTks3eapv8lBQQ9Kait3edghqGo9a1
 gK9Q==
X-Gm-Message-State: AOAM531hZcJSSY38n6xqrZ/oJhGwKfZ5dIavh6bLFlhenPU7G5Of+erx
 h7o+/hTUf7/4HdEcf90Yuoc=
X-Google-Smtp-Source: ABdhPJyV79iFun0U8N5rIYfnyCJp232gjBVbzbBOffhMaTZxe7ZCD4oplkNMRVBqBNyUp3OOc2/JKA==
X-Received: by 2002:a17:902:e844:b0:148:a8dd:886a with SMTP id
 t4-20020a170902e84400b00148a8dd886amr24984265plg.38.1640753003401; 
 Tue, 28 Dec 2021 20:43:23 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id na9sm18234521pjb.0.2021.12.28.20.43.22
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Tue, 28 Dec 2021 20:43:22 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Wed, 29 Dec 2021 13:42:47 +0900
Message-Id: <20211229044251.2203653-10-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20211229044251.2203653-1-shorne@gmail.com>
References: <20211229044251.2203653-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v4 09/13] or1k: Linux ABI
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

LS0tCiBzeXNkZXBzL29yMWsvbnB0bC9wdGhyZWFkZGVmLmggICAgICAgICAgICAgICAgfCAgMzYg
KysrKysrCiBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL2JpdHMvcHJvY2ZzLmggICAgfCAg
MzggKysrKysrCiBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL2dldGNvbnRleHQuUyAgICAg
fCAgNzIgKysrKysrKysrKysKIHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvbWFrZWNvbnRl
eHQuYyAgICB8ICA3NyArKysrKysrKysrKysKIHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsv
c2V0Y29udGV4dC5TICAgICB8IDEwOCArKysrKysrKysrKysrKysrCiBzeXNkZXBzL3VuaXgvc3lz
di9saW51eC9vcjFrL3NpZ2NvbnRleHRpbmZvLmggfCAgMjggKysrKysKIHN5c2RlcHMvdW5peC9z
eXN2L2xpbnV4L29yMWsvc3dhcGNvbnRleHQuUyAgICB8IDExNiArKysrKysrKysrKysrKysrKysK
IHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvc3lzL3Vjb250ZXh0LmggICB8ICA1MyArKysr
KysrKwogc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zeXMvdXNlci5oICAgICAgIHwgICAx
ICsKIHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvdWNvbnRleHRfaS5zeW0gICB8ICAyNiAr
KysrCiAxMCBmaWxlcyBjaGFuZ2VkLCA1NTUgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAw
NjQ0IHN5c2RlcHMvb3Ixay9ucHRsL3B0aHJlYWRkZWYuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5
c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvYml0cy9wcm9jZnMuaAogY3JlYXRlIG1vZGUgMTAw
NjQ0IHN5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvZ2V0Y29udGV4dC5TCiBjcmVhdGUgbW9k
ZSAxMDA2NDQgc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9tYWtlY29udGV4dC5jCiBjcmVh
dGUgbW9kZSAxMDA2NDQgc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zZXRjb250ZXh0LlMK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3NpZ2NvbnRl
eHRpbmZvLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFr
L3N3YXBjb250ZXh0LlMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL3VuaXgvc3lzdi9saW51
eC9vcjFrL3N5cy91Y29udGV4dC5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVwcy91bml4L3N5
c3YvbGludXgvb3Ixay9zeXMvdXNlci5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVwcy91bml4
L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5bQoKZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ix
ay9ucHRsL3B0aHJlYWRkZWYuaCBiL3N5c2RlcHMvb3Ixay9ucHRsL3B0aHJlYWRkZWYuaApuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi45Y2ZiNWFmODc3Ci0tLSAvZGV2L251
bGwKKysrIGIvc3lzZGVwcy9vcjFrL25wdGwvcHRocmVhZGRlZi5oCkBAIC0wLDAgKzEsMzYgQEAK
Ky8qIHB0aHJlYWQgbWFjaGluZSBwYXJhbWV0ZXIgZGVmaW5pdGlvbnMuICBPcGVuUklTQyB2ZXJz
aW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5j
LgorCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhl
IEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQg
YW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdl
bmVyYWwgUHVibGljIExpY2Vuc2UgYXMKKyAgIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2Fy
ZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLjEgb2YgdGhlCisgICBMaWNlbnNlLCBvciAo
YXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFy
eSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAg
YnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFu
dHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVS
UE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3Ig
bW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRo
ZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdO
VSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNl
cy8+LiAgKi8KKworLyogRGVmYXVsdCBzdGFjayBzaXplLiAgKi8KKyNkZWZpbmUgQVJDSF9TVEFD
S19ERUZBVUxUX1NJWkUgKDIgKiAxMDI0ICogMTAyNCkKKworLyogTWluaW11bSBndWFyZCBzaXpl
LiAgKi8KKyNkZWZpbmUgQVJDSF9NSU5fR1VBUkRfU0laRSAwCisKKy8qIFJlcXVpcmVkIHN0YWNr
IHBvaW50ZXIgYWxpZ25tZW50IGF0IGJlZ2lubmluZy4gICovCisjZGVmaW5lIFNUQUNLX0FMSUdO
IDQKKworLyogTWluaW1hbCBzdGFjayBzaXplIGFmdGVyIGFsbG9jYXRpbmcgdGhyZWFkIGRlc2Ny
aXB0b3IgYW5kIGd1YXJkIHNpemUuICAqLworI2RlZmluZSBNSU5JTUFMX1JFU1RfU1RBQ0sgMjA0
OAorCisvKiBBbGlnbm1lbnQgcmVxdWlyZW1lbnQgZm9yIFRDQi4gIE5lZWRzIHRvIGJlID49IHRv
IFNUQUNLX0FMSUdOLiAgKi8KKyNkZWZpbmUgVENCX0FMSUdOTUVOVCAzMgorCisvKiBMb2NhdGlv
biBvZiBjdXJyZW50IHN0YWNrIGZyYW1lLiAgKi8KKyNkZWZpbmUgQ1VSUkVOVF9TVEFDS19GUkFN
RSBfX2J1aWx0aW5fZnJhbWVfYWRkcmVzcyAoMCkKZGlmZiAtLWdpdCBhL3N5c2RlcHMvdW5peC9z
eXN2L2xpbnV4L29yMWsvYml0cy9wcm9jZnMuaCBiL3N5c2RlcHMvdW5peC9zeXN2L2xpbnV4L29y
MWsvYml0cy9wcm9jZnMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5i
NTBjOTJlZmIxCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ix
ay9iaXRzL3Byb2Nmcy5oCkBAIC0wLDAgKzEsMzggQEAKKy8qIFR5cGVzIGZvciByZWdpc3RlcnMg
Zm9yIHN5cy9wcm9jZnMuaC4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIw
MjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBv
ZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0
d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFz
IHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZl
cnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2
ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9w
ZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3
aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBv
ciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNz
ZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hv
dWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGlj
CisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisg
ICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2lmbmRlZiBfU1lTX1BS
T0NGU19ICisjIGVycm9yICJOZXZlciBpbmNsdWRlIDxiaXRzL3Byb2Nmcy5oPiBkaXJlY3RseTsg
dXNlIDxzeXMvcHJvY2ZzLmg+IGluc3RlYWQuIgorI2VuZGlmCisKKyNpbmNsdWRlIDxzeXMvdWNv
bnRleHQuaD4KKworI2RlZmluZSBFTEZfTkdSRUcgX19OR1JFRworCisvKiBUeXBlIGZvciBhIGdl
bmVyYWwtcHVycG9zZSByZWdpc3Rlci4gICovCit0eXBlZGVmIHVuc2lnbmVkIGxvbmcgaW50IGVs
Zl9ncmVnX3Q7CisKKy8qIEFuZCB0aGUgYXJyYXkgb2YgZ2VuZXJhbC1wdXJwb3NlIHJlZ2lzdGVy
cy4gIFdlIGNvdWxkIGhhdmUgdXNlZCBgc3RydWN0CisgICB1c2VyX3JlZ3MnIGRpcmVjdGx5LCBi
dXQgdHJhZGl0aW9uIHNheXMgdGhhdCB0aGUgcmVnaXN0ZXIgc2V0IGlzIGFuIGFycmF5LAorICAg
d2hpY2ggZG9lcyBoYXZlIHNvbWUgcGVjdWxpYXIgc2VtYW50aWNzLCBzbyBsZWF2ZSBpdCB0aGF0
IHdheS4KKyAgIEdEQiB1c2VzIHRoaXMgZm9yIHBydHJhY2UgR0VUUkVHU0VULCBvbiBPcGVuUklT
QyB0aGUgcmVnc2V0IGNvbnRhaW5zIDMyCisgICBncHJzIHRoZSBQQyBhbmQgdGhlIFNSLCAzNCBs
b25ncy4gICovCit0eXBlZGVmIGVsZl9ncmVnX3QgZWxmX2dyZWdzZXRfdFszNF07CisKKy8qIFJl
Z2lzdGVyIHNldCBmb3IgdGhlIGZsb2F0aW5nLXBvaW50IHJlZ2lzdGVycy4gICovCit0eXBlZGVm
IGVsZl9ncmVnX3QgZWxmX2ZwcmVnc2V0X3RbMzJdOwpkaWZmIC0tZ2l0IGEvc3lzZGVwcy91bml4
L3N5c3YvbGludXgvb3Ixay9nZXRjb250ZXh0LlMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9v
cjFrL2dldGNvbnRleHQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi40
YzJlNjRkYjdhCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ix
ay9nZXRjb250ZXh0LlMKQEAgLTAsMCArMSw3MiBAQAorLyogU2F2ZSBjdXJyZW50IGNvbnRleHQu
ICBPcGVuUklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUg
Rm91bmRhdGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJh
cnkuCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVk
aXN0cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUg
R05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhl
IEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUg
TGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhl
IEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJl
IHVzZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBp
bXBsaWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQ
QVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGlj
IExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVk
IGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9u
ZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3Lmdu
dS5vcmcvbGljZW5zZXMvPi4gICovCisKKyNpbmNsdWRlIDxzeXNkZXAuaD4KKyNpbmNsdWRlICJ1
Y29udGV4dF9pLmgiCisKKy8qIGludCBnZXRjb250ZXh0ICh1Y29udGV4dF90ICp1Y3ApCisKKyAg
IFJldHVybnMgMCBvbiBzdWNjZXNzIC0xIGFuZCBlcnJubyBvbiBmYWlsdXJlLgorICovCisJLnRl
eHQKK0VOVFJZKF9fZ2V0Y29udGV4dCkKKwkvKiBTdG9yZSByMSwgdGhlIHN0YWNrIHBvaW50ZXIu
ICAqLworCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgIDEqNCkocjMpLCByMQorCS8qIFN0b3Jl
IHIyLCB0aGUgZnJhbWUgcG9pbnRlci4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAg
Mio0KShyMyksIHIyCisJLyogU3RvcmUgcjksIHRoZSBsaW5rIHJlZ2lzdGVyLiAgKi8KKwlsLnN3
CShVQ09OVEVYVF9NQ09OVEVYVCArICA5KjQpKHIzKSwgcjkKKwkvKiBTdG9yZSByOSB0byByZWdb
MTFdIHRvbywgYXMgd2UgbmVlZCB0d28gbGlua3MgZm9yIG1ha2Vjb250ZXh0LiAgKi8KKwlsLnN3
CShVQ09OVEVYVF9NQ09OVEVYVCArIDExKjQpKHIzKSwgcjkKKwkvKiBTdG9yZSByMTAsIHRoZSBU
TFMgcmVnaXN0ZXIuICAqLworCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMTAqNCkocjMpLCBy
MTAKKwkvKiBTdG9yZSByMTQtcjMwIGV2ZW4sIGNhbGxlZSBzYXZlZCByZWdpc3RlcnMuICAqLwor
CWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMTQqNCkocjMpLCByMTQKKwlsLnN3CShVQ09OVEVY
VF9NQ09OVEVYVCArIDE2KjQpKHIzKSwgcjE2CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAx
OCo0KShyMyksIHIxOAorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMjAqNCkocjMpLCByMjAK
KwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDIyKjQpKHIzKSwgcjIyCisJbC5zdwkoVUNPTlRF
WFRfTUNPTlRFWFQgKyAyNCo0KShyMyksIHIyNAorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsg
MjYqNCkocjMpLCByMjYKKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDI4KjQpKHIzKSwgcjI4
CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAzMCo0KShyMyksIHIzMAorCisJLyogR2V0IHNp
Z25hbCBtYXNrLiAgKi8KKwkvKiBydF9zaWdwcm9jbWFzayAoU0lHX0JMT0NLLCBOVUxMLCAmdWNw
LT51Y19zaWdtYXNrLCBfTlNJRzgpICovCisJbC5vcmkJcjYsIHIwLCBfTlNJRzgKKwlsLmFkZGkJ
cjUsIHIzLCBVQ09OVEVYVF9TSUdNQVNLCisJbC5vcmkJcjQsIHIwLCAwCisJbC5vcmkJcjMsIHIw
LCBTSUdfQkxPQ0sKKwlsLm9yaQlyMTEsIHIwLCBTWVNfaWZ5IChydF9zaWdwcm9jbWFzaykKKwkv
KiBEbyB0aGUgc3lzY2FsbC4gICovCisJbC5zeXMJMQorCSBsLm5vcAorCisJLyogaWYgLTQwOTYg
PCByZXQgPCAwIGhvbGRzLCBpdCdzIGFuIGVycm9yICovCisJbC5zZmdldWkgcjExLCAweGYwMDEK
KwlsLmJmCTFmCisJIGwubm9wCisKKwlsLmpyCXI5CisJIGwub3JpIHIxMSwgcjAsIDAKKworMToJ
bC5qCV9fc3lzY2FsbF9lcnJvcgorCSBsLm9yaQlyMywgcjExLCAwCisKK0VORChfX2dldGNvbnRl
eHQpCit3ZWFrX2FsaWFzKF9fZ2V0Y29udGV4dCwgZ2V0Y29udGV4dCkKZGlmZiAtLWdpdCBhL3N5
c2RlcHMvdW5peC9zeXN2L2xpbnV4L29yMWsvbWFrZWNvbnRleHQuYyBiL3N5c2RlcHMvdW5peC9z
eXN2L2xpbnV4L29yMWsvbWFrZWNvbnRleHQuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAw
MDAwMDAwMDAwLi4zZGQ0MTM0YTZiCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5
c3YvbGludXgvb3Ixay9tYWtlY29udGV4dC5jCkBAIC0wLDAgKzEsNzcgQEAKKy8qIENyZWF0ZSBu
ZXcgY29udGV4dC4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEgRnJl
ZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUg
R05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsg
eW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxp
c2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24g
Mi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9u
LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0
IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0
IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRO
RVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2Vu
ZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhh
dmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBM
aWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisgICA8aHR0
cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2luY2x1ZGUgPHN5c2RlcC5oPgor
I2luY2x1ZGUgPHN0ZGFyZy5oPgorI2luY2x1ZGUgPHN0ZGludC5oPgorI2luY2x1ZGUgPHVjb250
ZXh0Lmg+CisKKy8qIG1ha2Vjb250ZXh0IHNldHMgdXAgYSBzdGFjayBhbmQgdGhlIHJlZ2lzdGVy
cyBmb3IgdGhlCisgICB1c2VyIGNvbnRleHQuICBUaGUgc3RhY2sgbG9va3MgbGlrZSB0aGlzOgor
CisJCSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSsKKwkJfCBwYWRkaW5nIGFzIHJlcXVpcmVkICAg
fAorCQkrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisgICAgc3AgLT4gICAgICAgfCBwYXJhbWV0
ZXJzIDcgdG8gbiAgICAgfAorCQkrLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisKKyAgIFRoZSBy
ZWdpc3RlcnMgYXJlIHNldCB1cCBsaWtlIHRoaXM6CisgICAgIHIzLXI4ICA6IHBhcmFtZXRlcnMg
MSB0byA2CisgICAgIHIxNCAgICA6IHVjX2xpbmsKKyAgICAgcjEgICAgIDogc3RhY2sgcG9pbnRl
cgorICAgICByMiAgICAgOiBmcmFtZSBwb2ludGVyLCBzZXQgdG8gTlVMTAorKi8KK3ZvaWQKK19f
bWFrZWNvbnRleHQgKHVjb250ZXh0X3QgKnVjcCwgdm9pZCAoKmZ1bmMpICh2b2lkKSwgaW50IGFy
Z2MsIC4uLikKK3sKKyAgZXh0ZXJuIHZvaWQgX19zdGFydGNvbnRleHQgKHZvaWQpOworICB1bnNp
Z25lZCBsb25nIGludCAqc3A7CisgIHZhX2xpc3QgYXA7CisgIGludCBpOworCisgIHNwID0gKHVu
c2lnbmVkIGxvbmcgaW50ICopCisgICAgKCh1aW50cHRyX3QpIHVjcC0+dWNfc3RhY2suc3Nfc3Ag
KyB1Y3AtPnVjX3N0YWNrLnNzX3NpemUpOworCisgIC8qIEFsbG9jYXRlIHN0YWNrIGFyZ3VtZW50
cy4gICovCisgIHNwIC09IGFyZ2MgPCA2ID8gMCA6IGFyZ2MgLSA2OworCisgIC8qIEtlZXAgdGhl
IHN0YWNrIGFsaWduZWQuICAqLworICBzcCA9ICh1bnNpZ25lZCBsb25nIGludCAqKSAoKCh1aW50
cHRyX3QpIHNwKSAmIC00TCk7CisKKyAgLyogS2VlcCB1Y19saW5rIGluIHIxNC4gICovCisgIHVj
cC0+dWNfbWNvbnRleHQuX19ncHJzWzE0XSA9ICh1aW50cHRyX3QpIHVjcC0+dWNfbGluazsKKyAg
LyogUmV0dXJuIGFkZHJlc3MgcG9pbnRzIHRvIGZ1bmN0aW9uIF9fc3RhcnRjb250ZXh0LiAgKi8K
KyAgdWNwLT51Y19tY29udGV4dC5fX2dwcnNbOV0gPSAodWludHB0cl90KSAmX19zdGFydGNvbnRl
eHQ7CisgIC8qIEZyYW1lIHBvaW50ZXIgaXMgbnVsbC4gICovCisgIHVjcC0+dWNfbWNvbnRleHQu
X19ncHJzWzJdID0gKHVpbnRwdHJfdCkgMDsKKyAgLyogUmVzdGFydCBpbiB1c2VyLXNwYWNlIHN0
YXJ0aW5nIGF0ICdmdW5jJy4gICovCisgIHVjcC0+dWNfbWNvbnRleHQuX19ncHJzWzExXSA9ICh1
aW50cHRyX3QpIGZ1bmM7CisgIC8qIFNldCBzdGFjayBwb2ludGVyLiAgKi8KKyAgdWNwLT51Y19t
Y29udGV4dC5fX2dwcnNbMV0gPSAodWludHB0cl90KSBzcDsKKworICB2YV9zdGFydCAoYXAsIGFy
Z2MpOworICBmb3IgKGkgPSAwOyBpIDwgYXJnYzsgKytpKQorICAgIGlmIChpIDwgNikKKyAgICAg
IHVjcC0+dWNfbWNvbnRleHQuX19ncHJzW2kgKyAzXSA9IHZhX2FyZyAoYXAsIHVuc2lnbmVkIGxv
bmcgaW50KTsKKyAgICBlbHNlCisgICAgICBzcFtpIC0gNl0gPSB2YV9hcmcgKGFwLCB1bnNpZ25l
ZCBsb25nIGludCk7CisKKyAgdmFfZW5kIChhcCk7Cit9CisKK3dlYWtfYWxpYXMgKF9fbWFrZWNv
bnRleHQsIG1ha2Vjb250ZXh0KQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy91bml4L3N5c3YvbGludXgv
b3Ixay9zZXRjb250ZXh0LlMgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3NldGNvbnRl
eHQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5iNDgwOGQ1NDIyCi0t
LSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zZXRjb250ZXh0
LlMKQEAgLTAsMCArMSwxMDggQEAKKy8qIFNldCBjdXJyZW50IGNvbnRleHQuICBPcGVuUklTQyB2
ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwg
SW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAgIFRo
ZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0
IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBH
ZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdh
cmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwgb3Ig
KGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExpYnJh
cnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAg
IGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJh
bnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBV
UlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9y
IG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0
aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBH
TlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5z
ZXMvPi4gICovCisKKyNpbmNsdWRlIDxzeXNkZXAuaD4KKyNpbmNsdWRlICJ1Y29udGV4dF9pLmgi
CisKKy8qIGludCBzZXRjb250ZXh0IChjb25zdCB1Y29udGV4dF90ICp1Y3ApICovCisJLnRleHQK
K0VOVFJZKF9fc2V0Y29udGV4dCkKKwlsLm9yaQlyMzAsIHIzLCAwCisKKwkvKiBSZXN0b3JlIHNp
Z25hbCBtYXNrLiAgKi8KKwkvKiBydF9zaWdwcm9jbWFzayAoU0lHX1NFVE1BU0ssICZ1Y3AtPnVj
X3NpZ21hc2ssIE5VTEwsIF9OU0lHOCkgKi8KKwlsLm9yaQlyNiwgcjAsIF9OU0lHOAorCWwub3Jp
CXI1LCByMCwgMAorCWwuYWRkaQlyNCwgcjMsIFVDT05URVhUX1NJR01BU0sKKwlsLm9yaQlyMywg
cjAsIFNJR19TRVRNQVNLCisJbC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21hc2sp
CisJLyogRG8gdGhlIHN5c2NhbGwuICAqLworCWwuc3lzIDEKKwkgbC5ub3AKKworCS8qIGlmIC00
MDk2IDwgcmV0IDwgMCBob2xkcywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwgMHhm
MDAxCisJbC5iZgkxZgorCSBsLm5vcAorCisJLyogUmVzdG9yZSBhcmd1bWVudCByZWdpc3RlcnMs
IGZvciB0aGUgbWFrZWNvbnRleHQgY2FzZS4gICovCisJbC5sd3oJcjMsIChVQ09OVEVYVF9NQ09O
VEVYVCArICAzKjQpKHIzMCkKKwlsLmx3eglyNCwgKFVDT05URVhUX01DT05URVhUICsgIDQqNCko
cjMwKQorCWwubHd6CXI1LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgNSo0KShyMzApCisJbC5sd3oJ
cjYsIChVQ09OVEVYVF9NQ09OVEVYVCArICA2KjQpKHIzMCkKKwlsLmx3eglyNywgKFVDT05URVhU
X01DT05URVhUICsgIDcqNCkocjMwKQorCWwubHd6CXI4LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAg
OCo0KShyMzApCisKKwkvKiBSZXN0b3JlIHJlZ2lzdGVycyBzdG9yZWQgaW4gZ2V0Y29udGV4dC4g
ICovCisJbC5sd3oJcjEsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMSo0KShyMzApCisJbC5sd3oJ
cjIsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMio0KShyMzApCisJbC5sd3oJcjksICAoVUNPTlRF
WFRfTUNPTlRFWFQgKyAgOSo0KShyMzApCisJbC5sd3oJcjEwLCAoVUNPTlRFWFRfTUNPTlRFWFQg
KyAxMCo0KShyMzApCisJbC5sd3oJcjExLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShyMzAp
CisJLyogUmVzdG9yZSByMTQtcjMwIGV2ZW4sIGNhbGxlZSBzYXZlZCByZWdpc3RlcnMuICAqLwor
CWwubHd6CXIxNCwgKFVDT05URVhUX01DT05URVhUICsgMTQqNCkocjMwKQorCWwubHd6CXIxNiwg
KFVDT05URVhUX01DT05URVhUICsgMTYqNCkocjMwKQorCWwubHd6CXIxOCwgKFVDT05URVhUX01D
T05URVhUICsgMTgqNCkocjMwKQorCWwubHd6CXIyMCwgKFVDT05URVhUX01DT05URVhUICsgMjAq
NCkocjMwKQorCWwubHd6CXIyMiwgKFVDT05URVhUX01DT05URVhUICsgMjIqNCkocjMwKQorCWwu
bHd6CXIyNCwgKFVDT05URVhUX01DT05URVhUICsgMjQqNCkocjMwKQorCWwubHd6CXIyNiwgKFVD
T05URVhUX01DT05URVhUICsgMjYqNCkocjMwKQorCWwubHd6CXIyOCwgKFVDT05URVhUX01DT05U
RVhUICsgMjgqNCkocjMwKQorCWwubHd6CXIzMCwgKFVDT05URVhUX01DT05URVhUICsgMzAqNCko
cjMwKQorCisJbC5qcglyMTEKKwkgbC5vcmkJcjExLCByMCwgMAorCisxOglsLmoJX19zeXNjYWxs
X2Vycm9yCisJIGwub3JpCXIzLCByMTEsIDAKKworRU5EIChfX3NldGNvbnRleHQpCit3ZWFrX2Fs
aWFzIChfX3NldGNvbnRleHQsIHNldGNvbnRleHQpCisKKwkvKiBXZSBhZGQgYSBOT1AgaGVyZSBi
ZWNhdXNlIHdoZW4gdGhlIHVud2luZGVyIGlzIGxvb2tpbmcgZm9yIHRoZQorCSAgIGVuY2xvc2lu
ZyBmdW5jdGlvbiBvZiB0aGUgbGluayByZWdpc3RlciAocjkpIGFkZHJlc3MgRkRFIGxvb2t1cCB3
aWxsCisJICAgdXNlICckcjkgLSAxJyBmaW5kaW5nIHNldGNvbnRleHQgd2hpY2ggaXMgd3Jvbmcu
ICBUaGlzIGlzIGJlY2F1c2UgaW4KKwkgICBtYWtlY29udGV4dCB3ZSBoYXZlIHNldCByOSB0byB0
aGUgc3RhcnQgb2YgJl9fc3RhcnRjb250ZXh0LgorCisJICAgSWYgdGhpcyBOT1AgZGlkIG5vdCBl
eGlzdCB0aGUgdW53aW5kZXIgd291bGQgcmVwZWF0ZWRseSBmaW5kCisJICAgX19zZXRjb250ZXh0
J3MgRkRFIGluIGFuIGluZmluaXRlIGxvb3AuICBNb2RpZml5aW5nL2RlbGV0aW5nIHRoZSBiZWxv
dworCSAgIF9fc3RhcnRjb250ZXh0J3MgRkRFIGhhcyBubyBoZWxwIG9uIHRoaXMuICAqLworCWwu
bm9wCisKK0VOVFJZKF9fc3RhcnRjb250ZXh0KQorCisJbC5vcmkJcjMsIHIxNCwgMAorCWwuc2Zl
cQlyMywgcjAKKwkvKiBJZiB1Y19saW5rIGlzIG5vdCAwIHJlc3VtZSB0aGVyZSwgb3RoZXJ3aXNl
IGV4aXQuICAqLworCWwuYm5mCV9fc2V0Y29udGV4dAorCSBsLm5vcAorCisjaWZkZWYgU0hBUkVE
CisJLyogT2J0YWluIGEgcG9pbnRlciB0byAuZ290IGluIHIxNiAqLworCWwuamFsCTB4OAorCSBs
Lm1vdmhpIHIxNiwgZ290cGNoaShfR0xPQkFMX09GRlNFVF9UQUJMRV8tNCkKKwlsLm9yaQlyMTYs
IHIxNiwgZ290cGNsbyhfR0xPQkFMX09GRlNFVF9UQUJMRV8rMCkKKwlsLmFkZAlyMTYsIHIxNiwg
cjkKKwlsLmx3eglyMTYsIGdvdChleGl0KShyMTYpCisJbC5qcglyMTYKKyNlbHNlCisJbC5qCWV4
aXQKKyNlbmRpZgorCSBsLm5vcAorCitFTkQoX19zdGFydGNvbnRleHQpCmRpZmYgLS1naXQgYS9z
eXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3NpZ2NvbnRleHRpbmZvLmggYi9zeXNkZXBzL3Vu
aXgvc3lzdi9saW51eC9vcjFrL3NpZ2NvbnRleHRpbmZvLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwMC4uZGU5NGI1OTU3OAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMv
dW5peC9zeXN2L2xpbnV4L29yMWsvc2lnY29udGV4dGluZm8uaApAQCAtMCwwICsxLDI4IEBACisv
KiBQcm9maWxlIGNvdW50ZXIgaGVscGVyIHRvIGdldCBQQyBmcm9tIHNpZ2NvbnRleHQuICBPcGVu
UklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRh
dGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisK
KyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmli
dXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExl
c3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUg
U29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5z
ZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBD
IExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1
bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVk
IHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNV
TEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vu
c2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29w
eSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRo
IHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcv
bGljZW5zZXMvPi4gICovCisKKyNpZm5kZWYgX1NJR0NPTlRFWFRJTkZPX0gKKyNkZWZpbmUgX1NJ
R0NPTlRFWFRJTkZPX0gKKworc3RhdGljIGlubGluZSB1aW50cHRyX3QKK3NpZ2NvbnRleHRfZ2V0
X3BjIChjb25zdCB1Y29udGV4dF90ICpjdHgpCit7CisgIHJldHVybiBjdHgtPnVjX21jb250ZXh0
Ll9fcGM7Cit9CisKKyNlbmRpZiAvKiBfU0lHQ09OVEVYVElORk9fSCAqLwpkaWZmIC0tZ2l0IGEv
c3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay9zd2FwY29udGV4dC5TIGIvc3lzZGVwcy91bml4
L3N5c3YvbGludXgvb3Ixay9zd2FwY29udGV4dC5TCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4
IDAwMDAwMDAwMDAuLjJhY2RjNmQ5YmQKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL3VuaXgv
c3lzdi9saW51eC9vcjFrL3N3YXBjb250ZXh0LlMKQEAgLTAsMCArMSwxMTYgQEAKKy8qIFN3YXAg
dHdvIGNvbnRleHRzLiAgT3BlblJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykgMjAyMSBG
cmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRo
ZSBHTlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3YXJl
OyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUg
dGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYXMgcHVi
bGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgorICAgdmVyc2lv
biAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNp
b24uCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRo
YXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhv
dXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJ
VE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3NlciBH
ZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91bGQg
aGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAg
IExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeTsgaWYgbm90LCBzZWUKKyAgIDxo
dHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisjaW5jbHVkZSA8c3lzZGVwLmg+
CisjaW5jbHVkZSAidWNvbnRleHRfaS5oIgorCisvKiBpbnQgc3dhcGNvbnRleHQgKHVjb250ZXh0
X3QgKm91Y3AsIGNvbnN0IHVjb250ZXh0X3QgKnVjcCkgKi8KKwkudGV4dAorRU5UUlkoX19zd2Fw
Y29udGV4dCkKKworCS8qIFNhbWUgYXMgZ2V0Y29udGV4dC4gICovCisJLyogU3RvcmUgcjEsIHRo
ZSBzdGFjayBwb2ludGVyLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArICAxKjQpKHIz
KSwgcjEKKwkvKiBTdG9yZSByMiwgdGhlIGZyYW1lIHBvaW50ZXIuICAqLworCWwuc3cJKFVDT05U
RVhUX01DT05URVhUICsgIDIqNCkocjMpLCByMgorCS8qIFN0b3JlIHI5LCB0aGUgbGluayByZWdp
c3Rlci4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAgOSo0KShyMyksIHI5CisJLyog
U3RvcmUgcjkgdG8gcmVnWzExXSB0b28sIGFzIHdlIG5lZWQgdHdvIGxpbmtzIGZvciBtYWtlY29u
dGV4dC4gICovCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShyMyksIHI5CisJLyog
U3RvcmUgcjEwLCB0aGUgVExTIHJlZ2lzdGVyLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVY
VCArIDEwKjQpKHIzKSwgcjEwCisJLyogU3RvcmUgcjE0LXIzMCBldmVuLCBjYWxsZWUgc2F2ZWQg
cmVnaXN0ZXJzLiAgKi8KKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCArIDE0KjQpKHIzKSwgcjE0
CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAxNio0KShyMyksIHIxNgorCWwuc3cJKFVDT05U
RVhUX01DT05URVhUICsgMTgqNCkocjMpLCByMTgKKwlsLnN3CShVQ09OVEVYVF9NQ09OVEVYVCAr
IDIwKjQpKHIzKSwgcjIwCisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQgKyAyMio0KShyMyksIHIy
MgorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMjQqNCkocjMpLCByMjQKKwlsLnN3CShVQ09O
VEVYVF9NQ09OVEVYVCArIDI2KjQpKHIzKSwgcjI2CisJbC5zdwkoVUNPTlRFWFRfTUNPTlRFWFQg
KyAyOCo0KShyMyksIHIyOAorCWwuc3cJKFVDT05URVhUX01DT05URVhUICsgMzAqNCkocjMpLCBy
MzAKKworCS8qIFN0b3JlIHVjcCB0byBub24tYXJndW1lbnQgc3lzY2FsbCBwcmVzZXJ2ZWQgcmVn
aXN0ZXIuICAqLworCWwub3JpCXIzMCwgcjQsIDAKKworCS8qIEdldCBzaWduYWwgbWFzay4gICov
CisJLyogcnRfc2lncHJvY21hc2sgKFNJR19CTE9DSywgTlVMTCwgJnVjcC0+dWNfc2lnbWFzaywg
X05TSUc4KSAqLworCWwub3JpCXI2LCByMCwgX05TSUc4CisJbC5hZGRpCXI1LCByMywgVUNPTlRF
WFRfU0lHTUFTSworCWwub3JpCXI0LCByMCwgMAorCWwub3JpCXIzLCByMCwgU0lHX0JMT0NLCisJ
bC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21hc2spCisJLyogRG8gdGhlIHN5c2Nh
bGwuICAqLworCWwuc3lzCTEKKwkgbC5ub3AKKworCS8qIGlmIC00MDk2IDwgcmV0IDwgMCBob2xk
cywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwgMHhmMDAxCisJbC5iZgkxZgorCSBs
Lm5vcAorCisJLyogU2FtZSBhcyBzZXRjb250ZXh0LiAgKi8KKworCS8qIFJlc3RvcmUgc2lnbmFs
IG1hc2suICAqLworCS8qIHJ0X3NpZ3Byb2NtYXNrIChTSUdfU0VUTUFTSywgJnVjcC0+dWNfc2ln
bWFzaywgTlVMTCwgX05TSUc4KSAqLworCWwub3JpCXI2LCByMCwgX05TSUc4CisJbC5vcmkJcjUs
IHIwLCAwCisJbC5hZGRpCXI0LCByMzAsIFVDT05URVhUX1NJR01BU0sKKwlsLm9yaQlyMywgcjAs
IFNJR19TRVRNQVNLCisJbC5vcmkJcjExLCByMCwgU1lTX2lmeSAocnRfc2lncHJvY21hc2spCisJ
LyogRG8gdGhlIHN5c2NhbGwuICAqLworCWwuc3lzIDEKKwkgbC5ub3AKKworCS8qIGlmIC00MDk2
IDwgcmV0IDwgMCBob2xkcywgaXQncyBhbiBlcnJvciAqLworCWwuc2ZnZXVpIHIxMSwgMHhmMDAx
CisJbC5iZgkxZgorCSBsLm5vcAorCisJLyogUmVzdG9yZSBhcmd1bWVudCByZWdpc3RlcnMsIGZv
ciB0aGUgbWFrZWNvbnRleHQgY2FzZS4gICovCisJbC5sd3oJcjMsIChVQ09OVEVYVF9NQ09OVEVY
VCArICAzKjQpKHIzMCkKKwlsLmx3eglyNCwgKFVDT05URVhUX01DT05URVhUICsgIDQqNCkocjMw
KQorCWwubHd6CXI1LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgNSo0KShyMzApCisJbC5sd3oJcjYs
IChVQ09OVEVYVF9NQ09OVEVYVCArICA2KjQpKHIzMCkKKwlsLmx3eglyNywgKFVDT05URVhUX01D
T05URVhUICsgIDcqNCkocjMwKQorCWwubHd6CXI4LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgOCo0
KShyMzApCisKKwkvKiBSZXN0b3JlIHJlZ2lzdGVycyBzdG9yZWQgaW4gZ2V0Y29udGV4dC4gICov
CisJbC5sd3oJcjEsICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMSo0KShyMzApCisJbC5sd3oJcjIs
ICAoVUNPTlRFWFRfTUNPTlRFWFQgKyAgMio0KShyMzApCisJbC5sd3oJcjksICAoVUNPTlRFWFRf
TUNPTlRFWFQgKyAgOSo0KShyMzApCisJbC5sd3oJcjEwLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAx
MCo0KShyMzApCisJbC5sd3oJcjExLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxMSo0KShyMzApCisJ
bC5sd3oJcjE0LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAxNCo0KShyMzApCisJbC5sd3oJcjE2LCAo
VUNPTlRFWFRfTUNPTlRFWFQgKyAxNio0KShyMzApCisJbC5sd3oJcjE4LCAoVUNPTlRFWFRfTUNP
TlRFWFQgKyAxOCo0KShyMzApCisJbC5sd3oJcjIwLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAyMCo0
KShyMzApCisJbC5sd3oJcjIyLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAyMio0KShyMzApCisJbC5s
d3oJcjI0LCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAyNCo0KShyMzApCisJbC5sd3oJcjI2LCAoVUNP
TlRFWFRfTUNPTlRFWFQgKyAyNio0KShyMzApCisJbC5sd3oJcjI4LCAoVUNPTlRFWFRfTUNPTlRF
WFQgKyAyOCo0KShyMzApCisJbC5sd3oJcjMwLCAoVUNPTlRFWFRfTUNPTlRFWFQgKyAzMCo0KShy
MzApCisKKwlsLmpyCXIxMQorCSBsLm9yaQlyMTEsIHIwLCAwCisKKzE6CWwuaglfX3N5c2NhbGxf
ZXJyb3IKKwkgbC5vcmkJcjMsIHIxMSwgMAorCitFTkQgKF9fc3dhcGNvbnRleHQpCit3ZWFrX2Fs
aWFzIChfX3N3YXBjb250ZXh0LCBzd2FwY29udGV4dCkKZGlmZiAtLWdpdCBhL3N5c2RlcHMvdW5p
eC9zeXN2L2xpbnV4L29yMWsvc3lzL3Vjb250ZXh0LmggYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51
eC9vcjFrL3N5cy91Y29udGV4dC5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAw
MDAuLmM0YWVhZDhmOTMKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL3VuaXgvc3lzdi9saW51
eC9vcjFrL3N5cy91Y29udGV4dC5oCkBAIC0wLDAgKzEsNTMgQEAKKy8qIHVjb250ZXh0X3QgZGVm
aW5pdGlvbiwgT3BlblJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykgMjAyMSBGcmVlIFNv
ZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUg
QyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3Ug
Y2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMg
b2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYXMgcHVibGlzaGVk
IGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgorICAgdmVyc2lvbiAyLjEg
b2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisK
KyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQg
d2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZl
biB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1Mg
Rk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3NlciBHZW5lcmFs
IFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91bGQgaGF2ZSBy
ZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vu
c2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeTsgaWYgbm90LCBzZWUKKyAgIDxodHRwczov
L3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisvKiBTeXN0ZW0gVi9PcGVuUklTQyBjb21w
bGlhbnQgY29udGV4dCBzd2l0Y2hpbmcgc3VwcG9ydC4gICovCisKKyNpZm5kZWYgX1NZU19VQ09O
VEVYVF9ICisjZGVmaW5lIF9TWVNfVUNPTlRFWFRfSAkxCisKKyNpbmNsdWRlIDxmZWF0dXJlcy5o
PgorCisjaW5jbHVkZSA8Yml0cy90eXBlcy9zaWdzZXRfdC5oPgorI2luY2x1ZGUgPGJpdHMvdHlw
ZXMvc3RhY2tfdC5oPgorCisvKiBOdW1iZXIgb2YgZ2VuZXJhbCByZWdpc3RlcnMuICAqLworI2Rl
ZmluZSBfX05HUkVHCTMyCisjaWZkZWYgX19VU0VfTUlTQworIyBkZWZpbmUgTkdSRUcJX19OR1JF
RworI2VuZGlmCisKKy8qIENvbnRleHQgdG8gZGVzY3JpYmUgd2hvbGUgcHJvY2Vzc29yIHN0YXRl
LiAgKi8KK3R5cGVkZWYgc3RydWN0CisgIHsKKyAgICB1bnNpZ25lZCBsb25nIGludCBfX2dwcnNb
X19OR1JFR107CisgICAgdW5zaWduZWQgbG9uZyBpbnQgX19wYzsKKyAgICB1bnNpZ25lZCBsb25n
IGludCBfX3NyOworICB9IG1jb250ZXh0X3Q7CisKKy8qIFVzZXJsZXZlbCBjb250ZXh0LiAgKi8K
K3R5cGVkZWYgc3RydWN0IHVjb250ZXh0X3QKKyAgeworICAgIHVuc2lnbmVkIGxvbmcgaW50IF9f
dWNfZmxhZ3M7CisgICAgc3RydWN0IHVjb250ZXh0X3QgKnVjX2xpbms7CisgICAgc3RhY2tfdCB1
Y19zdGFjazsKKyAgICBtY29udGV4dF90IHVjX21jb250ZXh0OworICAgIHNpZ3NldF90IHVjX3Np
Z21hc2s7CisgIH0gdWNvbnRleHRfdDsKKworI2VuZGlmIC8qIHN5cy91Y29udGV4dC5oICovCmRp
ZmYgLS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmggYi9zeXNk
ZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3N5cy91c2VyLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwMC4uYzg3MWYxYTAzZAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMv
dW5peC9zeXN2L2xpbnV4L29yMWsvc3lzL3VzZXIuaApAQCAtMCwwICsxIEBACisvKiBUaGlzIGZp
bGUgaXMgbm90IG5lZWRlZCwgYnV0IGluIHByYWN0aWNlIGdkYiBtaWdodCB0cnkgdG8gaW5jbHVk
ZSBpdC4gICovCmRpZmYgLS1naXQgYS9zeXNkZXBzL3VuaXgvc3lzdi9saW51eC9vcjFrL3Vjb250
ZXh0X2kuc3ltIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5bQpu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5hOGQ0ZGIwODBmCi0tLSAvZGV2
L251bGwKKysrIGIvc3lzZGVwcy91bml4L3N5c3YvbGludXgvb3Ixay91Y29udGV4dF9pLnN5bQpA
QCAtMCwwICsxLDI2IEBACisjaW5jbHVkZSA8aW50dHlwZXMuaD4KKyNpbmNsdWRlIDxzaWduYWwu
aD4KKyNpbmNsdWRlIDxzdGRkZWYuaD4KKyNpbmNsdWRlIDxzeXMvdWNvbnRleHQuaD4KKworLS0g
Q29uc3RhbnRzIHVzZWQgYnkgdGhlIHJ0X3NpZ3Byb2NtYXNrIGNhbGwuCisKK1NJR19CTE9DSwor
U0lHX1NFVE1BU0sKKworX05TSUc4CQkJCShfTlNJRyAvIDgpCisKKy0tIE9mZnNldHMgb2YgdGhl
IGZpZWxkcyBpbiB0aGUgdWNvbnRleHRfdCBzdHJ1Y3R1cmUuCisjZGVmaW5lIHVjb250ZXh0KG1l
bWJlcikJb2Zmc2V0b2YgKHVjb250ZXh0X3QsIG1lbWJlcikKKyNkZWZpbmUgc3RhY2sobWVtYmVy
KQkJdWNvbnRleHQgKHVjX3N0YWNrLm1lbWJlcikKKworVUNPTlRFWFRfTElOSwkJCXVjb250ZXh0
ICh1Y19saW5rKQorVUNPTlRFWFRfU1RBQ0sJCQl1Y29udGV4dCAodWNfc3RhY2spCitVQ09OVEVY
VF9NQ09OVEVYVAkJdWNvbnRleHQgKHVjX21jb250ZXh0KQorVUNPTlRFWFRfU0lHTUFTSwkJdWNv
bnRleHQgKHVjX3NpZ21hc2spCisKK1NUQUNLX1NQCQkJc3RhY2sgKHNzX3NwKQorU1RBQ0tfU0la
RQkJCXN0YWNrIChzc19zaXplKQorU1RBQ0tfRkxBR1MJCQlzdGFjayAoc3NfZmxhZ3MpCisKK1VD
T05URVhUX1NJWkUJCQlzaXplb2YgKHVjb250ZXh0X3QpCi0tIAoyLjMxLjEKCl9fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlz
dApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMu
b3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
