Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 593735DD09
	for <lists+openrisc@lfdr.de>; Wed,  3 Jul 2019 05:34:13 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 442812033F;
	Wed,  3 Jul 2019 05:34:13 +0200 (CEST)
Received: from mail-pl1-f169.google.com (mail-pl1-f169.google.com
 [209.85.214.169])
 by mail.librecores.org (Postfix) with ESMTPS id 12C0F20156
 for <openrisc@lists.librecores.org>; Wed,  3 Jul 2019 05:34:12 +0200 (CEST)
Received: by mail-pl1-f169.google.com with SMTP id k8so422323plt.3
 for <openrisc@lists.librecores.org>; Tue, 02 Jul 2019 20:34:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=/J8/yLscLAi1qNK7255cTRQlS6zv3Tbwy2ttVwPnbGM=;
 b=qmmxEGZBFr/b48yR/HYnXw6jl5a/vmfxhfl2XcQ25LhrSwV+OtlwsGGwfogI+YTCzQ
 oryPJeg017kNJMATciTpDs32jPkHZjLtkQNX2XBwd5SHgGWCHB6Rck2Jpm+fNms6Q2Sl
 05xX2ngnLJmB5WEeOOaPO2s73UR7Ub3DEi0yxVgvoqWzrZcSsS4m/PvDlFzkGEDJzkRT
 1xWUUEAv6SkGf/KrTRiZpew9RdqPHV5va0Ez3oNjF7+sGICVIppHiSlBBFsZEOCvtlT7
 I+4/IcF6DpzIo/LyQ0vp+rdTUsSZdNmIAFwO+9PibXiMplAcd/y9JTY8tp8VDhl4iIkw
 gZtQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=/J8/yLscLAi1qNK7255cTRQlS6zv3Tbwy2ttVwPnbGM=;
 b=gGy5005mlvtELer0z9guB01T4U+kP/httVZfGwf5AymcLznGJ+ZRmfyT54MooIK8HB
 iiB64qbSG46QYEVHtTrTBDQdWhE3vuyunIl+sRTKGBe4nv4MeRPVOWOviuhyQVIfVoqe
 mIdrUosqNLE/hMCBavehiWjgr3FCvc+lXcJSbQGuserKx0trrVRaBZihTe5i92jd22rL
 3eL47dEf9b45wWHd7+yJWVIWbNcspFsvwPX+AFTUjX1fU12YMFgJ2DBX4de7p9PD0d2p
 S75gkrh5LdKVjoV35GVeDF1ZpKTHJ9we8pprCJr2khqdLQ5QeinLNcst3SotOPnxhTBe
 +bqQ==
X-Gm-Message-State: APjAAAWXRc67qQF7ejkpU5E+yHB3jIoiRqmzYbTR/GgZL3RN+0irmkAt
 uTrC1thmBj1NRWYAiNfa3vA=
X-Google-Smtp-Source: APXvYqxBGw3k1B6INfm5fGy0XWDehig1MUe5kST+Q/OL0UHKLdMltCvstDluD2xls/vKA8dZo+8xkg==
X-Received: by 2002:a17:902:86:: with SMTP id
 a6mr39780702pla.244.1562124850648; 
 Tue, 02 Jul 2019 20:34:10 -0700 (PDT)
Received: from localhost (g223.61-115-60.ppp.wakwak.ne.jp. [61.115.60.223])
 by smtp.gmail.com with ESMTPSA id v23sm518684pff.185.2019.07.02.20.34.09
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Tue, 02 Jul 2019 20:34:10 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GCC patches <gcc-patches@gcc.gnu.org>
Date: Wed,  3 Jul 2019 12:33:49 +0900
Message-Id: <20190703033351.11924-4-shorne@gmail.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190703033351.11924-1-shorne@gmail.com>
References: <20190703033351.11924-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 3/5] or1k: Add mrori option, fix option docs
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>,
 Openrisc <openrisc@lists.librecores.org>, Jeff Law <law@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Z2NjL0NoYW5nZUxvZzoKCgkqIGNvbmZpZy5nY2MgKG9yMWsqLSotKik6IEFkZCBtcm9yaSBhbmQg
bXJvciB0byB2YWxpZGF0aW9uLgoJKiBkb2MvaW52b2tlLnRleGkgKE9wZW5SSVNDIE9wdGlvbnMp
OiBBZGQgbXJvcmkgb3B0aW9uLCByZXdyaXRlIGFsbAoJZG9jdW1lbmF0aW9uIHRvIGJlIG1vcmUg
Y2xlYXIuCgkqIGNvbmZpZy9vcjFrL2VsZi5vcHQgKG1ib2FyZD0sIG1uZXdsaWIpOiBSZXdyaXRl
IGRvY3VtZW50YXRpb24gdG8gYmUKCW1vcmUgY2xlYXIuCgkqIGNvbmZpZy9vcjFrL29yMWsub3B0
IChtcm9yaSk6IE5ldyBvcHRpb24uCgkobWhhcmQtZGl2LCBtc29mdC1kaXYsIG1oYXJkLW11bCwg
bXNvZnQtbXVsLCBtY21vdiwgbXJvciwgbXNleHQsCgltc2ZpbW0sIG1zaGZ0aW1tKTogUmV3cml0
ZSBkb2N1bWVudGF0aW9uIHRvIGJlIG1vcmUgY2xlYXIuCgkqIGNvbmZpZy9vcjFrL29yMWsubWQg
KGluc25fc3VwcG9ydCk6IEFkZCByb3IgYW5kIHJvcmkuCgkoZW5hYmxlZCk6IEFkZCBjb25kaXRp
b25zIGZvciByb3IgYW5kIHJvcmkuCgkocm90cnNpMyk6IFJlcGxhY2UgY29uZGl0aW9uIGZvciBz
aGZ0aW1tIHdpdGggcm9yIGFuZCByb3JpLgoKZ2NjL3Rlc3RzdWl0ZS9DaGFuZ2VMb2c6CgoJKiBn
Y2MudGFyZ2V0L29yMWsvcm9yLTQuYzogTmV3IGZpbGUuCgkqIGdjYy50YXJnZXQvb3Ixay9zaGZ0
aW1tLTEuYzogVXBkYXRlIHRlc3QgZnJvbSByb3RhdGUgdG8gc2hpZnQKCWFzIHRoZSBzaGZ0aW1t
IG9wdGlvbiBubyBsb25nZXIgY29udHJvbHMgcm90YXRlLgotLS0KQ2hhbmdlcyBzaW5jZSB2MToK
IC0gbmV3IHBhdGNoCgogZ2NjL2NvbmZpZy5nY2MgICAgICAgICAgICAgICAgICAgICAgICAgICAg
fCAgMSArCiBnY2MvY29uZmlnL29yMWsvZWxmLm9wdCAgICAgICAgICAgICAgICAgICB8ICA2ICst
LQogZ2NjL2NvbmZpZy9vcjFrL29yMWsubWQgICAgICAgICAgICAgICAgICAgfCAxMiArKystLQog
Z2NjL2NvbmZpZy9vcjFrL29yMWsub3B0ICAgICAgICAgICAgICAgICAgfCA1NiArKysrKysrKysr
KysrLS0tLS0tLS0tLQogZ2NjL2RvYy9pbnZva2UudGV4aSAgICAgICAgICAgICAgICAgICAgICAg
fCA1NiArKysrKysrKysrKysrLS0tLS0tLS0tLQogZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29y
MWsvcm9yLTQuYyAgICAgfCAgOCArKysrCiBnY2MvdGVzdHN1aXRlL2djYy50YXJnZXQvb3Ixay9z
aGZ0aW1tLTEuYyB8ICA4ICsrLS0KIDcgZmlsZXMgY2hhbmdlZCwgODcgaW5zZXJ0aW9ucygrKSwg
NjAgZGVsZXRpb25zKC0pCiBjcmVhdGUgbW9kZSAxMDA2NDQgZ2NjL3Rlc3RzdWl0ZS9nY2MudGFy
Z2V0L29yMWsvcm9yLTQuYwoKZGlmZiAtLWdpdCBhL2djYy9jb25maWcuZ2NjIGIvZ2NjL2NvbmZp
Zy5nY2MKaW5kZXggYzI4MWM0MThiMjguLmFlYWI4YjQ1NDRlIDEwMDY0NAotLS0gYS9nY2MvY29u
ZmlnLmdjYworKysgYi9nY2MvY29uZmlnLmdjYwpAQCAtMjU3OCw2ICsyNTc4LDcgQEAgb3Ixayot
Ki0qKQogCWZvciBvcjFrX211bHRpbGliIGluICR7b3Ixa19tdWx0aWxpYnN9OyBkbwogCQljYXNl
ICR7b3Ixa19tdWx0aWxpYn0gaW4KIAkJbWNtb3YgfCBtc2V4dCB8IG1zZmltbSB8IFwKKwkJbXJv
ciB8IG1yb3JpIHwgXAogCQltaGFyZC1kaXYgfCBtaGFyZC1tdWwgfCBcCiAJCW1zb2Z0LWRpdiB8
IG1zb2Z0LW11bCApCiAJCQlUTV9NVUxUSUxJQl9DT05GSUc9IiR7VE1fTVVMVElMSUJfQ09ORklH
fSwke29yMWtfbXVsdGlsaWJ9IgpkaWZmIC0tZ2l0IGEvZ2NjL2NvbmZpZy9vcjFrL2VsZi5vcHQg
Yi9nY2MvY29uZmlnL29yMWsvZWxmLm9wdAppbmRleCA2NDFiNmRkZDRiZS4uMmQ0ZDE4NzVkMDIg
MTAwNjQ0Ci0tLSBhL2djYy9jb25maWcvb3Ixay9lbGYub3B0CisrKyBiL2djYy9jb25maWcvb3Ix
ay9lbGYub3B0CkBAIC0yNSw5ICsyNSw5IEBACiAKIG1ib2FyZD0KIFRhcmdldCBSZWplY3ROZWdh
dGl2ZSBKb2luZWQKLUNvbmZpZ3VyZSBib2FyZCBzcGVjaWZpYyBydW50aW1lLgorQ29uZmlndXJl
IHRoZSBuZXdsaWIgYm9hcmQgc3BlY2lmaWMgcnVudGltZS4gIFRoZSBkZWZhdWx0IGlzIG9yMWtz
aW0uCiAKIG1uZXdsaWIKIFRhcmdldCBSZWplY3ROZWdhdGl2ZQotRm9yIGNvbXBhdGliaWxpdHks
IGl0J3MgYWx3YXlzIG5ld2xpYiBmb3IgZWxmIG5vdy4KLQorVGhpcyBvcHRpb24gaXMgaWdub3Jl
ZDsgaXQgaXMgcHJvdmlkZWQgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZXMgb25seS4gIFRoaXMK
K3VzZWQgdG8gc2VsZWN0IGxpbmtlciBhbmQgcHJlcHJvY2Vzc29yIG9wdGlvbnMgZm9yIHVzZSB3
aXRoIG5ld2xpYi4KZGlmZiAtLWdpdCBhL2djYy9jb25maWcvb3Ixay9vcjFrLm1kIGIvZ2NjL2Nv
bmZpZy9vcjFrL29yMWsubWQKaW5kZXggNzU3ZDg5OWM0NDIuLmJiYWQ1OTNkYjQwIDEwMDY0NAot
LS0gYS9nY2MvY29uZmlnL29yMWsvb3Ixay5tZAorKysgYi9nY2MvY29uZmlnL29yMWsvb3Ixay5t
ZApAQCAtNjMsNyArNjMsNyBAQAogICAiYWx1LHN0LGxkLGNvbnRyb2wsbXVsdGkiCiAgIChjb25z
dF9zdHJpbmcgImFsdSIpKQogCi0oZGVmaW5lX2F0dHIgImluc25fc3VwcG9ydCIgImNsYXNzMSxz
ZXh0LHNmaW1tLHNoZnRpbW0iIChjb25zdF9zdHJpbmcgImNsYXNzMSIpKQorKGRlZmluZV9hdHRy
ICJpbnNuX3N1cHBvcnQiICJjbGFzczEsc2V4dCxzZmltbSxzaGZ0aW1tLHJvcixyb3JpIiAoY29u
c3Rfc3RyaW5nICJjbGFzczEiKSkKIAogKGRlZmluZV9hdHRyICJlbmFibGVkIiAiIgogICAoY29u
ZCBbKGVxX2F0dHIgImluc25fc3VwcG9ydCIgImNsYXNzMSIpIChjb25zdF9pbnQgMSkKQEAgLTcy
LDcgKzcyLDExIEBACiAJIChhbmQgKGVxX2F0dHIgImluc25fc3VwcG9ydCIgInNmaW1tIikKIAkg
ICAgICAobmUgKHN5bWJvbF9yZWYgIlRBUkdFVF9TRklNTSIpIChjb25zdF9pbnQgMCkpKSAoY29u
c3RfaW50IDEpCiAJIChhbmQgKGVxX2F0dHIgImluc25fc3VwcG9ydCIgInNoZnRpbW0iKQotCSAg
ICAgIChuZSAoc3ltYm9sX3JlZiAiVEFSR0VUX1NIRlRJTU0iKSAoY29uc3RfaW50IDApKSkgKGNv
bnN0X2ludCAxKV0KKwkgICAgICAobmUgKHN5bWJvbF9yZWYgIlRBUkdFVF9TSEZUSU1NIikgKGNv
bnN0X2ludCAwKSkpIChjb25zdF9pbnQgMSkKKwkgKGFuZCAoZXFfYXR0ciAiaW5zbl9zdXBwb3J0
IiAicm9yIikKKwkgICAgICAobmUgKHN5bWJvbF9yZWYgIlRBUkdFVF9ST1IiKSAoY29uc3RfaW50
IDApKSkgKGNvbnN0X2ludCAxKQorCSAoYW5kIChlcV9hdHRyICJpbnNuX3N1cHBvcnQiICJyb3Jp
IikKKwkgICAgICAobmUgKHN5bWJvbF9yZWYgIlRBUkdFVF9ST1JJIikgKGNvbnN0X2ludCAwKSkp
IChjb25zdF9pbnQgMSldCiAJKGNvbnN0X2ludCAwKSkpCiAKIDs7IERlc2NyaWJlIGEgdXNlcidz
IGFzbSBzdGF0ZW1lbnQuCkBAIC0xNzksMTEgKzE4MywxMSBAQAogICBbKHNldCAobWF0Y2hfb3Bl
cmFuZDpTSSAwICJyZWdpc3Rlcl9vcGVyYW5kIiAiPXIsciIpCiAJKHJvdGF0ZXJ0OlNJIChtYXRj
aF9vcGVyYW5kOlNJIDEgInJlZ2lzdGVyX29wZXJhbmQiICAicixyIikKIAkJICAobWF0Y2hfb3Bl
cmFuZDpTSSAyICJyZWdfb3JfdTZfb3BlcmFuZCIgInIsbiIpKSldCi0gICJUQVJHRVRfUk9SIgor
ICAiVEFSR0VUX1JPUiB8fCBUQVJHRVRfUk9SSSIKICAgIkAKICAgIGwucm9yXHQlMCwgJTEsICUy
CiAgICBsLnJvcmlcdCUwLCAlMSwgJTIiCi0gIFsoc2V0X2F0dHIgImluc25fc3VwcG9ydCIgIios
c2hmdGltbSIpXSkKKyAgWyhzZXRfYXR0ciAiaW5zbl9zdXBwb3J0IiAicm9yLHJvcmkiKV0pCiAK
IChkZWZpbmVfaW5zbiAiYW5kc2kzIgogICBbKHNldCAobWF0Y2hfb3BlcmFuZDpTSSAwICJyZWdp
c3Rlcl9vcGVyYW5kIiAiPXIsciIpCmRpZmYgLS1naXQgYS9nY2MvY29uZmlnL29yMWsvb3Ixay5v
cHQgYi9nY2MvY29uZmlnL29yMWsvb3Ixay5vcHQKaW5kZXggN2JkYmQ4NDJkZDQuLmMyZjY0YzVk
ZDQ1IDEwMDY0NAotLS0gYS9nY2MvY29uZmlnL29yMWsvb3Ixay5vcHQKKysrIGIvZ2NjL2NvbmZp
Zy9vcjFrL29yMWsub3B0CkBAIC0yMSw0NyArMjEsNTUgQEAKIDsgU2VlIHRoZSBHQ0MgaW50ZXJu
YWxzIG1hbnVhbCAob3B0aW9ucy50ZXhpKSBmb3IgYSBkZXNjcmlwdGlvbiBvZgogOyB0aGlzIGZp
bGUncyBmb3JtYXQuCiAKLTsgUGxlYXNlIHRyeSB0byBrZWVwIHRoaXMgZmlsZSBpbiBBU0NJSSBj
b2xsYXRpbmcgb3JkZXIuCi0KIG1oYXJkLWRpdgogVGFyZ2V0IFJlamVjdE5lZ2F0aXZlIEludmVy
c2VNYXNrKFNPRlRfRElWKQotVXNlIGhhcmR3YXJlIGRpdmlkZSBpbnN0cnVjdGlvbnMsIHVzZSAt
bXNvZnQtZGl2IGZvciBlbXVsYXRpb24uCitFbmFibGUgZ2VuZXJhdGlvbiBvZiBoYXJkd2FyZSBk
aXZpZGUgKGwuZGl2LCBsLmRpdnUpIGluc3RydWN0aW9ucy4gIFRoaXMgaXMgdGhlCitkZWZhdWx0
OyB1c2UgLW1zb2Z0LWRpdiB0byBvdmVycmlkZS4KKworbXNvZnQtZGl2CitUYXJnZXQgUmVqZWN0
TmVnYXRpdmUgTWFzayhTT0ZUX0RJVikKK0VuYWJsZSBnZW5lcmF0aW9uIG9mIGJpbmFyaWVzIHdo
aWNoIHVzZSBmdW5jdGlvbnMgZnJvbSBsaWJnY2MgdG8gcGVyZm9ybSBkaXZpZGUKK29wZXJhdGlv
bnMuICBUaGUgZGVmYXVsdCBpcyAtbWhhcmQtZGl2LgogCiBtaGFyZC1tdWwKIFRhcmdldCBSZWpl
Y3ROZWdhdGl2ZSBJbnZlcnNlTWFzayhTT0ZUX01VTCkuCi1Vc2UgaGFyZHdhcmUgbXVsdGlwbHkg
aW5zdHJ1Y3Rpb25zLCB1c2UgLW1zb2Z0LW11bCBmb3IgZW11bGF0aW9uLgorRW5hYmxlIGdlbmVy
YXRpb24gb2YgaGFyZHdhcmUgbXVsdGlwbHkgaW5zdHJ1Y3Rpb25zIChsLm11bCwgbC5tdWxpKSBp
bnN0cnVjdGlvbnMuCitUaGlzIGlzIHRoZSBkZWZhdWx0OyB1c2UgLW1zb2Z0LW11bCB0byBvdmVy
cmlkZS4KKworbXNvZnQtbXVsCitUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhTT0ZUX01VTCku
CitFbmFibGUgZ2VuZXJhdGlvbiBvZiBiaW5hcmllcyB3aGljaCB1c2UgZnVuY3Rpb25zIGZyb20g
bGliZ2NjIHRvIHBlcmZvcm0KK211bHRpcGx5IG9wZXJhdGlvbnMuIFRoZSBkZWZhdWx0IGlzIC1t
aGFyZC1tdWwuCiAKIG1jbW92CiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhDTU9WKQotQWxs
b3dzIGdlbmVyYXRpb24gb2YgYmluYXJpZXMgd2hpY2ggdXNlIHRoZSBsLmNtb3YgaW5zdHJ1Y3Rp
b24uICBJZiB5b3VyIHRhcmdldAotZG9lcyBub3Qgc3VwcG9ydCB0aGlzIHRoZSBjb21waWxlciB3
aWxsIGdlbmVyYXRlIHRoZSBlcXVpdmFsZW50IHVzaW5nIHNldCBhbmQKLWJyYW5jaC4KK0VuYWJs
ZSBnZW5lcmF0aW9uIG9mIGNvbmRpdGlvbmFsIG1vdmUgKGwuY21vdikgaW5zdHJ1Y3Rpb25zLiAg
QnkgZGVmYXVsdCB0aGUKK2VxdWl2YWxlbnQgd2lsbCBiZSBnZW5lcmF0ZWQgdXNpbmcgdXNpbmcg
c2V0IGFuZCBicmFuY2guCiAKIG1yb3IKIFRhcmdldCBSZWplY3ROZWdhdGl2ZSBNYXNrKFJPUikK
LUFsbG93cyBnZW5lcmF0aW9uIG9mIGJpbmFyaWVzIHdoaWNoIHVzZSB0aGUgbC5yb3JpIGluc3Ry
dWN0aW9ucy4KK0VuYWJsZSBnZW5lcmF0aW9uIG9mIHJvdGF0ZSByaWdodCAobC5yb3IpIGluc3Ry
dWN0aW9ucy4gIEJ5IGRlZmF1bHQgZnVuY3Rpb25zCitmcm9tIGxpYmdjYyBhcmUgdXNlZCB0byBw
ZXJmb3JtIHJvdGF0ZSByaWdodCBvcGVyYXRpb25zLgorCittcm9yaQorVGFyZ2V0IFJlamVjdE5l
Z2F0aXZlIE1hc2soUk9SSSkKK0VuYWJsZSBnZW5lcmF0aW9uIG9mIHJvdGF0ZSByaWdodCB3aXRo
IGltbWVkaWF0ZSAobC5yb3JpKSBpbnN0cnVjdGlvbnMuICBCeQorZGVmYXVsdCBmdW5jdGlvbnMg
ZnJvbSBsaWJnY2MgYXJlIHVzZWQgdG8gcGVyZm9ybSByb3RhdGUgcmlnaHQgd2l0aCBpbW1lZGlh
dGUKK29wZXJhdGlvbnMuCiAKIG1zZXh0CiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhTRVhU
KQotQWxsb3dzIGdlbmVyYXRpb24gb2YgYmluYXJpZXMgd2hpY2ggdXNlIHNpZ24tZXh0ZW5zaW9u
IGluc3RydWN0aW9ucy4gIElmIHlvdXIKLXRhcmdldCBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgdGhl
IGNvbXBpbGVyIHdpbGwgdXNlIG1lbW9yeSBsb2FkcyB0byBwZXJmb3JtIHNpZ24KLWV4dGVuc2lv
bi4KK0VuYWJsZSBnZW5lcmF0aW9uIG9mIHNpZ24gZXh0ZW5zaW9uIChsLmV4dCopIGluc3RydWN0
aW9ucy4gIEJ5IGRlZmF1bHQgbWVtb3J5Citsb2FkcyBhcmUgdXNlZCB0byBwZXJmb3JtIHNpZ24g
ZXh0ZW5zaW9uLgogCiBtc2ZpbW0KIFRhcmdldCBSZWplY3ROZWdhdGl2ZSBNYXNrKFNGSU1NKQot
QWxsb3dzIGdlbmVyYXRpb24gb2YgYmluYXJpZXMgd2hpY2ggdXNlIGwuc2YqaSBpbnN0cnVjdGlv
bnMuICBJZiB5b3VyIHRhcmdldAotZG9lcyBub3Qgc3VwcG9ydCB0aGlzIHRoZSBjb21waWxlciB3
aWxsIGdlbmVyYXRlIGluc3RydWN0aW9ucyB0byBzdG9yZSB0aGUKLWltbWVkaWF0ZSB0byBhIHJl
Z2lzdGVyIGZpcnN0LgorRW5hYmxlIGdlbmVyYXRpb24gb2YgY29tcGFyZSBhbmQgc2V0IGZsYWcg
d2l0aCBpbW1lZGlhdGUgKGwuc2YqaSkgaW5zdHJ1Y3Rpb25zLgorQnkgZGVmYXVsdCBleHRyYSBp
bnN0cnVjdGlvbnMgd2lsbCBiZSBnZW5lcmF0ZWQgdG8gc3RvcmUgdGhlIGltbWVkaWF0ZSB0byBh
CityZWdpc3RlciBmaXJzdC4KIAogbXNoZnRpbW0KIFRhcmdldCBSZWplY3ROZWdhdGl2ZSBNYXNr
KFNIRlRJTU0pCi1BbGxvd3MgZ2VuZXJhdGlvbiBvZiBiaW5hcmllcyB3aGljaCBzdXBwb3J0IHNo
aWZ0cyBhbmQgcm90YXRlIGluc3RydWN0aW9ucwotc3VwcG9ydGluZyBpbW1lZGlhdGUgYXJndW1l
bnRzLCBmb3IgZXhhbXBsZSBsLnJvcmkuCi0KLW1zb2Z0LWRpdgotVGFyZ2V0IFJlamVjdE5lZ2F0
aXZlIE1hc2soU09GVF9ESVYpCi1Vc2UgZGl2aWRlIGVtdWxhdGlvbi4KLQotbXNvZnQtbXVsCi1U
YXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhTT0ZUX01VTCkuCi1Vc2UgbXVsdGlwbHkgZW11bGF0
aW9uLgorRW5hYmxlIGdlbmVyYXRpb24gb2Ygc2hpZnQgd2l0aCBpbW1lZGlhdGUgKGwuc3JhaSwg
bC5zcmxpLCBsLnNsbGkpIGluc3RydWN0aW9ucy4KK0J5IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rp
b25zIHdpbGwgYmUgZ2VuZXJhdGVkIHRvIHN0b3JlIHRoZSBpbW1lZGlhdGUgdG8gYQorcmVnaXN0
ZXIgZmlyc3QuCmRpZmYgLS1naXQgYS9nY2MvZG9jL2ludm9rZS50ZXhpIGIvZ2NjL2RvYy9pbnZv
a2UudGV4aQppbmRleCA2MzgyYTg0MDI4MS4uMWYxZjczNjcyYmQgMTAwNjQ0Ci0tLSBhL2djYy9k
b2MvaW52b2tlLnRleGkKKysrIGIvZ2NjL2RvYy9pbnZva2UudGV4aQpAQCAtMTAzMyw3ICsxMDMz
LDcgQEAgT2JqZWN0aXZlLUMgYW5kIE9iamVjdGl2ZS1DKysgRGlhbGVjdHN9LgogQGVtcGh7T3Bl
blJJU0MgT3B0aW9uc30KIEBnY2NvcHRsaXN0ey1tYm9hcmQ9QHZhcntuYW1lfSAgLW1uZXdsaWIg
IC1taGFyZC1tdWwgIC1taGFyZC1kaXYgQGdvbAogLW1zb2Z0LW11bCAgLW1zb2Z0LWRpdiBAZ29s
Ci0tbWNtb3YgIC1tcm9yICAtbXNleHQgIC1tc2ZpbW0gIC1tc2hmdGltbX0KKy1tY21vdiAgLW1y
b3IgIC1tcm9yaSAgLW1zZXh0ICAtbXNmaW1tICAtbXNoZnRpbW19CiAKIEBlbXBoe1BEUC0xMSBP
cHRpb25zfQogQGdjY29wdGxpc3R7LW1mcHUgIC1tc29mdC1mbG9hdCAgLW1hYzAgIC1tbm8tYWMw
ICAtbTQwICAtbTQ1ICAtbTEwIEBnb2wKQEAgLTIzNjMyLDUwICsyMzYzMiw1NiBAQCBuZXdsaWIg
Ym9hcmQgbGlicmFyeSBsaW5raW5nLiAgVGhlIGRlZmF1bHQgaXMgQGNvZGV7b3Ixa3NpbX0uCiAK
IEBpdGVtIC1tbmV3bGliCiBAb3BpbmRleCBtbmV3bGliCi1Gb3IgY29tcGF0aWJpbGl0eSwgaXQn
cyBhbHdheXMgbmV3bGliIGZvciBlbGYgbm93LgorVGhpcyBvcHRpb24gaXMgaWdub3JlZDsgaXQg
aXMgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZXMgb25seS4gIFRoaXMgdXNlZCB0bworc2VsZWN0
IGxpbmtlciBhbmQgcHJlcHJvY2Vzc29yIG9wdGlvbnMgZm9yIHVzZSB3aXRoIG5ld2xpYi4KIAot
QGl0ZW0gLW1oYXJkLWRpdgorQGl0ZW0gLW1zb2Z0LWRpdgorQGl0ZW14IC1taGFyZC1kaXYKK0Bv
cGluZGV4IG1zb2Z0LWRpdgogQG9waW5kZXggbWhhcmQtZGl2Ci1HZW5lcmF0ZSBjb2RlIGZvciBo
YXJkd2FyZSB3aGljaCBzdXBwb3J0cyBkaXZpZGUgaW5zdHJ1Y3Rpb25zLiAgVGhpcyBpcyB0aGUK
LWRlZmF1bHQuCitTZWxlY3Qgc29mdHdhcmUgb3IgaGFyZHdhcmUgZGl2aWRlIChAY29kZXtsLmRp
dn0sIEBjb2Rle2wuZGl2dX0pIGluc3RydWN0aW9ucy4KK1RoaXMgZGVmYXVsdCBpcyBoYXJkd2Fy
ZSBkaXZpZGUuCiAKLUBpdGVtIC1taGFyZC1tdWwKK0BpdGVtIC1tc29mdC1tdWwKK0BpdGVteCAt
bWhhcmQtbXVsCitAb3BpbmRleCBtc29mdC1tdWwKIEBvcGluZGV4IG1oYXJkLW11bAotR2VuZXJh
dGUgY29kZSBmb3IgaGFyZHdhcmUgd2hpY2ggc3VwcG9ydHMgbXVsdGlwbHkgaW5zdHJ1Y3Rpb25z
LiAgVGhpcyBpcyB0aGUKLWRlZmF1bHQuCitTZWxlY3Qgc29mdHdhcmUgb3IgaGFyZHdhcmUgbXVs
dGlwbHkgKEBjb2Rle2wubXVsfSwgQGNvZGV7bC5tdWxpfSkgaW5zdHJ1Y3Rpb25zLgorVGhpcyBk
ZWZhdWx0IGlzIGhhcmR3YXJlIG11bHRpcGx5LgogCiBAaXRlbSAtbWNtb3YKIEBvcGluZGV4IG1j
bW92Ci1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyB0aGUgY29uZGl0
aW9uYWwgbW92ZSAoQGNvZGV7bC5jbW92fSkKLWluc3RydWN0aW9uLgorRW5hYmxlIGdlbmVyYXRp
b24gb2YgY29uZGl0aW9uYWwgbW92ZSAoQGNvZGV7bC5jbW92fSkgaW5zdHJ1Y3Rpb25zLiAgQnkK
K2RlZmF1bHQgdGhlIGVxdWl2YWxlbnQgd2lsbCBiZSBnZW5lcmF0ZWQgdXNpbmcgdXNpbmcgc2V0
IGFuZCBicmFuY2guCiAKIEBpdGVtIC1tcm9yCiBAb3BpbmRleCBtcm9yCi1HZW5lcmF0ZSBjb2Rl
IGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyByb3RhdGUgcmlnaHQgaW5zdHJ1Y3Rpb25zLgor
RW5hYmxlIGdlbmVyYXRpb24gb2Ygcm90YXRlIHJpZ2h0IChAY29kZXtsLnJvcn0pIGluc3RydWN0
aW9ucy4gIEJ5IGRlZmF1bHQKK2Z1bmN0aW9ucyBmcm9tIEBmaWxle2xpYmdjY30gYXJlIHVzZWQg
dG8gcGVyZm9ybSByb3RhdGUgcmlnaHQgb3BlcmF0aW9ucy4KKworQGl0ZW0gLW1yb3JpCitAb3Bp
bmRleCBtcm9yaQorRW5hYmxlIGdlbmVyYXRpb24gb2Ygcm90YXRlIHJpZ2h0IHdpdGggaW1tZWRp
YXRlIChAY29kZXtsLnJvcml9KSBpbnN0cnVjdGlvbnMuCitCeSBkZWZhdWx0IGZ1bmN0aW9ucyBm
cm9tIEBmaWxle2xpYmdjY30gYXJlIHVzZWQgdG8gcGVyZm9ybSByb3RhdGUgcmlnaHQgd2l0aAor
aW1tZWRpYXRlIG9wZXJhdGlvbnMuCiAKIEBpdGVtIC1tc2V4dAogQG9waW5kZXggbXNleHQKLUdl
bmVyYXRlIGNvZGUgZm9yIGhhcmR3YXJlIHdoaWNoIHN1cHBvcnRzIHNpZ24tZXh0ZW5zaW9uIGlu
c3RydWN0aW9ucy4KK0VuYWJsZSBnZW5lcmF0aW9uIG9mIHNpZ24gZXh0ZW5zaW9uIChAY29kZXts
LmV4dCp9KSBpbnN0cnVjdGlvbnMuICBCeSBkZWZhdWx0CittZW1vcnkgbG9hZHMgYXJlIHVzZWQg
dG8gcGVyZm9ybSBzaWduIGV4dGVuc2lvbi4KIAogQGl0ZW0gLW1zZmltbQogQG9waW5kZXggbXNm
aW1tCi1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyBzZXQgZmxhZyBp
bW1lZGlhdGUgKEBjb2Rle2wuc2YqaX0pCi1pbnN0cnVjdGlvbnMuCitFbmFibGUgZ2VuZXJhdGlv
biBvZiBjb21wYXJlIGFuZCBzZXQgZmxhZyB3aXRoIGltbWVkaWF0ZSAoQGNvZGV7bC5zZippfSkK
K2luc3RydWN0aW9ucy4gIEJ5IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rpb25zIHdpbGwgYmUgZ2Vu
ZXJhdGVkIHRvIHN0b3JlIHRoZQoraW1tZWRpYXRlIHRvIGEgcmVnaXN0ZXIgZmlyc3QuCiAKIEBp
dGVtIC1tc2hmdGltbQogQG9waW5kZXggbXNoZnRpbW0KLUdlbmVyYXRlIGNvZGUgZm9yIGhhcmR3
YXJlIHdoaWNoIHN1cHBvcnRzIHNoaWZ0IGltbWVkaWF0ZSByZWxhdGVkIGluc3RydWN0aW9ucwot
KGkuZS4gQGNvZGV7bC5zcmFpfSwgQGNvZGV7bC5zcmxpfSwgQGNvZGV7bC5zbGxpfSwgQGNvZGV7
MS5yb3JpfSkuICBOb3RlLCB0bwotZW5hYmxlIGdlbmVyYXRpb24gb2YgdGhlIEBjb2Rle2wucm9y
aX0gaW5zdHJ1Y3Rpb24gdGhlIEBvcHRpb257LW1yb3J9IGZsYWcgbXVzdAotYWxzbyBiZSBzcGVj
aWZpZWQuCitFbmFibGUgZ2VuZXJhdGlvbiBvZiBzaGlmdCB3aXRoIGltbWVkaWF0ZSAoQGNvZGV7
bC5zcmFpfSwgQGNvZGV7bC5zcmxpfSwKK0Bjb2Rle2wuc2xsaX0pIGluc3RydWN0aW9ucy4gIEJ5
IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rpb25zIHdpbGwgYmUgZ2VuZXJhdGVkCit0byBzdG9yZSB0
aGUgaW1tZWRpYXRlIHRvIGEgcmVnaXN0ZXIgZmlyc3QuCiAKLUBpdGVtIC1tc29mdC1kaXYKLUBv
cGluZGV4IG1zb2Z0LWRpdgotR2VuZXJhdGUgY29kZSBmb3IgaGFyZHdhcmUgd2hpY2ggcmVxdWly
ZXMgZGl2aWRlIGluc3RydWN0aW9uIGVtdWxhdGlvbi4KLQotQGl0ZW0gLW1zb2Z0LW11bAotQG9w
aW5kZXggbXNvZnQtbXVsCi1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCByZXF1aXJl
cyBtdWx0aXBseSBpbnN0cnVjdGlvbiBlbXVsYXRpb24uCiAKIEBlbmQgdGFibGUKIApkaWZmIC0t
Z2l0IGEvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvcm9yLTQuYyBiL2djYy90ZXN0c3Vp
dGUvZ2NjLnRhcmdldC9vcjFrL3Jvci00LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAuLjc0ODljZTViNmEyCi0tLSAvZGV2L251bGwKKysrIGIvZ2NjL3Rlc3RzdWl0ZS9n
Y2MudGFyZ2V0L29yMWsvcm9yLTQuYwpAQCAtMCwwICsxLDggQEAKKy8qIHsgZGctZG8gY29tcGls
ZSB9ICovCisvKiB7IGRnLW9wdGlvbnMgIi1tcm9yaSAtTzIiIH0gKi8KKwordW5zaWduZWQgaW50
IHJvdGF0ZTYgKHVuc2lnbmVkIGludCBhKSB7CisgIHJldHVybiAoIGEgPj4gNiApIHwgKCBhIDw8
ICggMzIgLSA2ICkgKTsKK30KKworLyogeyBkZy1maW5hbCB7IHNjYW4tYXNzZW1ibGVyICJsLnJv
cmkiIH0gfSAqLwpkaWZmIC0tZ2l0IGEvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc2hm
dGltbS0xLmMgYi9nY2MvdGVzdHN1aXRlL2djYy50YXJnZXQvb3Ixay9zaGZ0aW1tLTEuYwppbmRl
eCBiZThkOWU4Yjg5NS4uM2E4ZGMwNmRmNzkgMTAwNjQ0Ci0tLSBhL2djYy90ZXN0c3VpdGUvZ2Nj
LnRhcmdldC9vcjFrL3NoZnRpbW0tMS5jCisrKyBiL2djYy90ZXN0c3VpdGUvZ2NjLnRhcmdldC9v
cjFrL3NoZnRpbW0tMS5jCkBAIC0xLDggKzEsOCBAQAogLyogeyBkZy1kbyBjb21waWxlIH0gKi8K
LS8qIHsgZGctb3B0aW9ucyAiLW1yb3IgLW1zaGZ0aW1tIC1PMiIgfSAqLworLyogeyBkZy1vcHRp
b25zICItbXNoZnRpbW0gLU8yIiB9ICovCiAKLXVuc2lnbmVkIGludCByb3RhdGU2ICh1bnNpZ25l
ZCBpbnQgYSkgewotICByZXR1cm4gKCBhID4+IDYgKSB8ICggYSA8PCAoIDMyIC0gNiApICk7Cit1
bnNpZ25lZCBpbnQgc2hpZnQ2ICh1bnNpZ25lZCBpbnQgYSkgeworICByZXR1cm4gYSA8PCA2Owog
fQogCi0vKiB7IGRnLWZpbmFsIHsgc2Nhbi1hc3NlbWJsZXIgImwucm9yaSIgfSB9ICovCisvKiB7
IGRnLWZpbmFsIHsgc2Nhbi1hc3NlbWJsZXIgImwuc2xsaSIgfSB9ICovCi0tIAoyLjIxLjAKCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1h
aWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxp
YnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
