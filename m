Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 34E609110C
	for <lists+openrisc@lfdr.de>; Sat, 17 Aug 2019 17:02:41 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 0D7F6204AC;
	Sat, 17 Aug 2019 17:02:41 +0200 (CEST)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 7030F20492
 for <openrisc@lists.librecores.org>; Sat, 17 Aug 2019 09:49:12 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=KUwsRBi0L3zQfCC7V6OH4fFNSOckWIa/MY20ZEwRUrs=; b=t3pgvCQTgIiVvcXkd/to3CfVo2
 K7qyQhY3s1Jn/o1fECQ2Cf6PV7A7pveWVGwajq2M6o57KZhfHjKTb2CicwhCiX4GLky3h48+Pbm27
 ohfl7nGzFM8221we8kQeffmGnZDxK7XA8Opk3X77viMlxEhM7IKd9YqhYe+p3WYUaU1+1uTdkmlEH
 sSzP3KdSZWFzIMRbRSPsPVblwUUTels456T6KEIWCVzuVuMr9GjmlRfFHDKMqzSoS/piHhsy3AJy5
 2CPV0hOtAmwYqkv/HjTuamfCjO4U3drtukvXJEN7uJQ3n40r6vgEtbD0ZTmrX7TZsud96F+xP253J
 XPjjemNg==;
Received: from [2001:4bb8:18c:28b5:44f9:d544:957f:32cb] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hytSR-0005Jy-Dr; Sat, 17 Aug 2019 07:49:04 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Sat, 17 Aug 2019 09:32:44 +0200
Message-Id: <20190817073253.27819-18-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190817073253.27819-1-hch@lst.de>
References: <20190817073253.27819-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Sat, 17 Aug 2019 17:02:30 +0200
Subject: [OpenRISC] [PATCH 17/26] arch: rely on asm-generic/io.h for default
 ioremap_* definitions
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, linux-mips@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-mtd@lists.infradead.org,
 linux-alpha@vger.kernel.org, sparclinux@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, linux-riscv@lists.infradead.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VmFyaW91cyBhcmNoaXRlY3R1cmVzIHRoYXQgdXNlIGFzbS1nZW5lcmljL2lvLmggc3RpbGwgZGVm
aW5lZCB0aGVpcgpvd24gZGVmYXVsdCB2ZXJzaW9ucyBvZiBpb3JlbWFwX25vY2FjaGUsIGlvcmVt
YXBfd3QgYW5kIGlvcmVtYXBfd2MKdGhhdCBwb2ludCBiYWNrIHRvIHBsYWluIGlvcmVtYXAgZGly
ZWN0bHkgb3IgaW5kaXJlY3RseS4gIFJlbW92ZSB0aGVzZQpkZWZpbml0aW9ucyBhbmQgcmVseSBv
biBhc20tZ2VuZXJpYy9pby5oIGluc3RlYWQuICBGb3IgdGhpcyB0byB3b3JrCnRoZSBiYWNrdXAg
aW9yZW1hcF8qIGRlZmludGlvbnMgbmVlZHMgdG8gYmUgY2hhbmdlZCB0byBwdXJlbHkgY3BwCm1h
Y3JvcyBpbnN0ZWEgb2YgaW5saW5lcyB0byBjb3ZlciBmb3IgYXJjaGl0ZWN0dXJlcyBsaWtlIG9w
ZW5yaXNjCnRoYXQgb25seSBkZWZpbmUgaW9yZW1hcCBhZnRlciBpbmNsdWRpbmcgPGFzbS1nZW5l
cmljL2lvLmg+LgoKU2lnbmVkLW9mZi1ieTogQ2hyaXN0b3BoIEhlbGx3aWcgPGhjaEBsc3QuZGU+
Ci0tLQogYXJjaC9hcmMvaW5jbHVkZS9hc20vaW8uaCAgICAgICAgfCAgNCAtLS0tCiBhcmNoL2Fy
bS9pbmNsdWRlL2FzbS9pby5oICAgICAgICB8ICAxIC0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20v
aW8uaCAgICAgIHwgIDIgLS0KIGFyY2gvY3NreS9pbmNsdWRlL2FzbS9pby5oICAgICAgIHwgIDQg
LS0tLQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL2lvLmggICAgICAgfCAgMSAtCiBhcmNoL21pY3Jv
YmxhemUvaW5jbHVkZS9hc20vaW8uaCB8ICAzIC0tLQogYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9p
by5oICAgICAgfCAgNCAtLS0tCiBhcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL2lvLmggICB8ICAx
IC0KIGFyY2gvcmlzY3YvaW5jbHVkZS9hc20vaW8uaCAgICAgIHwgMTAgLS0tLS0tLS0tLQogYXJj
aC9zMzkwL2luY2x1ZGUvYXNtL2lvLmggICAgICAgfCAgNCAtLS0tCiBhcmNoL3g4Ni9pbmNsdWRl
L2FzbS9pby5oICAgICAgICB8ICAxIC0KIGFyY2gveHRlbnNhL2luY2x1ZGUvYXNtL2lvLmggICAg
IHwgIDQgLS0tLQogaW5jbHVkZS9hc20tZ2VuZXJpYy9pby5oICAgICAgICAgfCAxOCArKystLS0t
LS0tLS0tLS0tLS0KIDEzIGZpbGVzIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucygrKSwgNTQgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hcmMvaW5jbHVkZS9hc20vaW8uaCBiL2FyY2gvYXJj
L2luY2x1ZGUvYXNtL2lvLmgKaW5kZXggNzJmNzkyOTczNmY4Li44Zjc3N2Q2NDQxYTUgMTAwNjQ0
Ci0tLSBhL2FyY2gvYXJjL2luY2x1ZGUvYXNtL2lvLmgKKysrIGIvYXJjaC9hcmMvaW5jbHVkZS9h
c20vaW8uaApAQCAtMzQsMTAgKzM0LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIGlvcG9ydF91bm1h
cCh2b2lkIF9faW9tZW0gKmFkZHIpCiAKIGV4dGVybiB2b2lkIGlvdW5tYXAoY29uc3Qgdm9pZCBf
X2lvbWVtICphZGRyKTsKIAotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUocGh5LCBzeikJaW9yZW1h
cChwaHksIHN6KQotI2RlZmluZSBpb3JlbWFwX3djKHBoeSwgc3opCQlpb3JlbWFwKHBoeSwgc3op
Ci0jZGVmaW5lIGlvcmVtYXBfd3QocGh5LCBzeikJCWlvcmVtYXAocGh5LCBzeikKLQogLyoKICAq
IGlve3JlYWQsd3JpdGV9ezE2LDMyfWJlKCkgbWFjcm9zCiAgKi8KZGlmZiAtLWdpdCBhL2FyY2gv
YXJtL2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL2FybS9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDky
NGY5ZGQ1MDJlZC4uYWVmZGFiZGJlYjg0IDEwMDY0NAotLS0gYS9hcmNoL2FybS9pbmNsdWRlL2Fz
bS9pby5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL2lvLmgKQEAgLTM5Miw3ICszOTIsNiBA
QCBzdGF0aWMgaW5saW5lIHZvaWQgbWVtY3B5X3RvaW8odm9sYXRpbGUgdm9pZCBfX2lvbWVtICp0
bywgY29uc3Qgdm9pZCAqZnJvbSwKICAqLwogdm9pZCBfX2lvbWVtICppb3JlbWFwKHJlc291cmNl
X3NpemVfdCByZXNfY29va2llLCBzaXplX3Qgc2l6ZSk7CiAjZGVmaW5lIGlvcmVtYXAgaW9yZW1h
cAotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUgaW9yZW1hcAogCiAvKgogICogRG8gbm90IHVzZSBp
b3JlbWFwX2NhY2hlIGZvciBtYXBwaW5nIG1lbW9yeS4gVXNlIG1lbXJlbWFwIGluc3RlYWQuCmRp
ZmYgLS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL2FybTY0L2luY2x1
ZGUvYXNtL2lvLmgKaW5kZXggN2VkOTI2MjY5NDlkLi5hNjFiMTQ2OWY3ZDkgMTAwNjQ0Ci0tLSBh
L2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNt
L2lvLmgKQEAgLTE2OSw5ICsxNjksNyBAQCBleHRlcm4gdm9pZCBfX2lvdW5tYXAodm9sYXRpbGUg
dm9pZCBfX2lvbWVtICphZGRyKTsKIGV4dGVybiB2b2lkIF9faW9tZW0gKmlvcmVtYXBfY2FjaGUo
cGh5c19hZGRyX3QgcGh5c19hZGRyLCBzaXplX3Qgc2l6ZSk7CiAKICNkZWZpbmUgaW9yZW1hcChh
ZGRyLCBzaXplKQkJX19pb3JlbWFwKChhZGRyKSwgKHNpemUpLCBfX3BncHJvdChQUk9UX0RFVklD
RV9uR25SRSkpCi0jZGVmaW5lIGlvcmVtYXBfbm9jYWNoZShhZGRyLCBzaXplKQlfX2lvcmVtYXAo
KGFkZHIpLCAoc2l6ZSksIF9fcGdwcm90KFBST1RfREVWSUNFX25HblJFKSkKICNkZWZpbmUgaW9y
ZW1hcF93YyhhZGRyLCBzaXplKQkJX19pb3JlbWFwKChhZGRyKSwgKHNpemUpLCBfX3BncHJvdChQ
Uk9UX05PUk1BTF9OQykpCi0jZGVmaW5lIGlvcmVtYXBfd3QoYWRkciwgc2l6ZSkJCV9faW9yZW1h
cCgoYWRkciksIChzaXplKSwgX19wZ3Byb3QoUFJPVF9ERVZJQ0VfbkduUkUpKQogI2RlZmluZSBp
b3VubWFwCQkJCV9faW91bm1hcAogCiAvKgpkaWZmIC0tZ2l0IGEvYXJjaC9jc2t5L2luY2x1ZGUv
YXNtL2lvLmggYi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vaW8uaAppbmRleCBjMWRmYTljMTBlMzYu
LjgwMDk4NWFmMWM0NCAxMDA2NDQKLS0tIGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL2lvLmgKKysr
IGIvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL2lvLmgKQEAgLTQwLDEwICs0MCw2IEBAIGV4dGVybiBp
bnQgcmVtYXBfYXJlYV9wYWdlcyh1bnNpZ25lZCBsb25nIGFkZHJlc3MsIHBoeXNfYWRkcl90IHBo
eXNfYWRkciwKICNkZWZpbmUgd3JpdGVsKHYsYykJCSh7IHdtYigpOyB3cml0ZWxfcmVsYXhlZCgo
diksKGMpKTsgbWIoKTsgfSkKICNlbmRpZgogCi0jZGVmaW5lIGlvcmVtYXBfbm9jYWNoZShwaHks
IHN6KQlpb3JlbWFwKHBoeSwgc3opCi0jZGVmaW5lIGlvcmVtYXBfd2MgaW9yZW1hcF9ub2NhY2hl
Ci0jZGVmaW5lIGlvcmVtYXBfd3QgaW9yZW1hcF9ub2NhY2hlCi0KICNpbmNsdWRlIDxhc20tZ2Vu
ZXJpYy9pby5oPgogCiAjZW5kaWYgLyogX19BU01fQ1NLWV9JT19IICovCmRpZmYgLS1naXQgYS9h
cmNoL2lhNjQvaW5jbHVkZS9hc20vaW8uaCBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9pby5oCmlu
ZGV4IGZlYmQyYzZlYTBiNC4uN2ZhZjUwZTQ1YWM4IDEwMDY0NAotLS0gYS9hcmNoL2lhNjQvaW5j
bHVkZS9hc20vaW8uaAorKysgYi9hcmNoL2lhNjQvaW5jbHVkZS9hc20vaW8uaApAQCAtNDE5LDcg
KzQxOSw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX2lvbWVtICogaW9yZW1hcF9jYWNoZSAodW5z
aWduZWQgbG9uZyBwaHlzX2FkZHIsIHVuc2lnbmVkIGxvCiAJcmV0dXJuIGlvcmVtYXAocGh5c19h
ZGRyLCBzaXplKTsKIH0KICNkZWZpbmUgaW9yZW1hcCBpb3JlbWFwCi0jZGVmaW5lIGlvcmVtYXBf
bm9jYWNoZSBpb3JlbWFwCiAjZGVmaW5lIGlvcmVtYXBfY2FjaGUgaW9yZW1hcF9jYWNoZQogI2Rl
ZmluZSBpb3JlbWFwX3VjIGlvcmVtYXBfdWMKICNkZWZpbmUgaW91bm1hcCBpb3VubWFwCmRpZmYg
LS1naXQgYS9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vaW8uaCBiL2FyY2gvbWljcm9ibGF6
ZS9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDg2Yzk1YjJhMWNlMS4uZDMzYzYxNzM3YjhiIDEwMDY0
NAotLS0gYS9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL21pY3Jv
YmxhemUvaW5jbHVkZS9hc20vaW8uaApAQCAtMzksOSArMzksNiBAQCBleHRlcm4gcmVzb3VyY2Vf
c2l6ZV90IGlzYV9tZW1fYmFzZTsKIGV4dGVybiB2b2lkIGlvdW5tYXAodm9sYXRpbGUgdm9pZCBf
X2lvbWVtICphZGRyKTsKIAogZXh0ZXJuIHZvaWQgX19pb21lbSAqaW9yZW1hcChwaHlzX2FkZHJf
dCBhZGRyZXNzLCB1bnNpZ25lZCBsb25nIHNpemUpOwotI2RlZmluZSBpb3JlbWFwX25vY2FjaGUo
YWRkciwgc2l6ZSkJCWlvcmVtYXAoKGFkZHIpLCAoc2l6ZSkpCi0jZGVmaW5lIGlvcmVtYXBfd2Mo
YWRkciwgc2l6ZSkJCQlpb3JlbWFwKChhZGRyKSwgKHNpemUpKQotI2RlZmluZSBpb3JlbWFwX3d0
KGFkZHIsIHNpemUpCQkJaW9yZW1hcCgoYWRkciksIChzaXplKSkKIAogI2VuZGlmIC8qIENPTkZJ
R19NTVUgKi8KIApkaWZmIC0tZ2l0IGEvYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9pby5oIGIvYXJj
aC9uaW9zMi9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDc0YWIzNGFhNjczMS4uZDEwODkzN2MzMjFl
IDEwMDY0NAotLS0gYS9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL2lvLmgKKysrIGIvYXJjaC9uaW9z
Mi9pbmNsdWRlL2FzbS9pby5oCkBAIC0zMywxMCArMzMsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQg
aW91bm1hcCh2b2lkIF9faW9tZW0gKmFkZHIpCiAJX19pb3VubWFwKGFkZHIpOwogfQogCi0jZGVm
aW5lIGlvcmVtYXBfbm9jYWNoZSBpb3JlbWFwCi0jZGVmaW5lIGlvcmVtYXBfd2MgaW9yZW1hcAot
I2RlZmluZSBpb3JlbWFwX3d0IGlvcmVtYXAKLQogLyogUGFnZXMgdG8gcGh5c2ljYWwgYWRkcmVz
cy4uLiAqLwogI2RlZmluZSBwYWdlX3RvX3BoeXMocGFnZSkJdmlydF90b19waHlzKHBhZ2VfdG9f
dmlydChwYWdlKSkKIApkaWZmIC0tZ2l0IGEvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9pby5o
IGIvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9pby5oCmluZGV4IDViODFhOTZhYjg1ZS4uZTE4
ZjAzOGIyYTZkIDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL2lvLmgKKysr
IGIvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9pby5oCkBAIC0yNSw3ICsyNSw2IEBACiAjZGVm
aW5lIFBJT19PRkZTRVQJCTAKICNkZWZpbmUgUElPX01BU0sJCTAKIAotI2RlZmluZSBpb3JlbWFw
X25vY2FjaGUgaW9yZW1hcAogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2lvLmg+CiAjaW5jbHVkZSA8
YXNtL3BndGFibGUuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9pby5o
IGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9pby5oCmluZGV4IGZjMTE4OWFkMzc3Ny4uYzFkZTY4
NzVjYzc3IDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL2lvLmgKKysrIGIvYXJj
aC9yaXNjdi9pbmNsdWRlL2FzbS9pby5oCkBAIC0xNSwxNiArMTUsNiBAQAogI2luY2x1ZGUgPGFz
bS9tbWlvd2IuaD4KIAogZXh0ZXJuIHZvaWQgX19pb21lbSAqaW9yZW1hcChwaHlzX2FkZHJfdCBv
ZmZzZXQsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7Ci0KLS8qCi0gKiBUaGUgUklTQy1WIElTQSBkb2Vz
bid0IHlldCBzcGVjaWZ5IGhvdyB0byBxdWVyeSBvciBtb2RpZnkgUE1Bcywgc28gd2UgY2FuJ3QK
LSAqIGNoYW5nZSB0aGUgcHJvcGVydGllcyBvZiBtZW1vcnkgcmVnaW9ucy4gIFRoaXMgc2hvdWxk
IGJlIGZpeGVkIGJ5IHRoZQotICogdXBjb21pbmcgcGxhdGZvcm0gc3BlYy4KLSAqLwotI2RlZmlu
ZSBpb3JlbWFwX25vY2FjaGUoYWRkciwgc2l6ZSkgaW9yZW1hcCgoYWRkciksIChzaXplKSkKLSNk
ZWZpbmUgaW9yZW1hcF93YyhhZGRyLCBzaXplKSBpb3JlbWFwKChhZGRyKSwgKHNpemUpKQotI2Rl
ZmluZSBpb3JlbWFwX3d0KGFkZHIsIHNpemUpIGlvcmVtYXAoKGFkZHIpLCAoc2l6ZSkpCi0KIGV4
dGVybiB2b2lkIGlvdW5tYXAodm9sYXRpbGUgdm9pZCBfX2lvbWVtICphZGRyKTsKIAogLyogR2Vu
ZXJpYyBJTyByZWFkL3dyaXRlLiAgVGhlc2UgcGVyZm9ybSBuYXRpdmUtZW5kaWFuIGFjY2Vzc2Vz
LiAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL3MzOTAv
aW5jbHVkZS9hc20vaW8uaAppbmRleCBjYTQyMTYxNDcyMmYuLjVhMTZmNTAwNTE1YSAxMDA2NDQK
LS0tIGEvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL2lvLmgKKysrIGIvYXJjaC9zMzkwL2luY2x1ZGUv
YXNtL2lvLmgKQEAgLTI2LDEwICsyNiw2IEBAIHZvaWQgdW54bGF0ZV9kZXZfbWVtX3B0cihwaHlz
X2FkZHJfdCBwaHlzLCB2b2lkICphZGRyKTsKIAogI2RlZmluZSBJT19TUEFDRV9MSU1JVCAwCiAK
LSNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlKGFkZHIsIHNpemUpCWlvcmVtYXAoYWRkciwgc2l6ZSkK
LSNkZWZpbmUgaW9yZW1hcF93YwkJCWlvcmVtYXBfbm9jYWNoZQotI2RlZmluZSBpb3JlbWFwX3d0
CQkJaW9yZW1hcF9ub2NhY2hlCi0KIHZvaWQgX19pb21lbSAqaW9yZW1hcCh1bnNpZ25lZCBsb25n
IG9mZnNldCwgdW5zaWduZWQgbG9uZyBzaXplKTsKIHZvaWQgaW91bm1hcCh2b2xhdGlsZSB2b2lk
IF9faW9tZW0gKmFkZHIpOwogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9pby5o
IGIvYXJjaC94ODYvaW5jbHVkZS9hc20vaW8uaAppbmRleCA2YjVjYzQxMzE5YTcuLjk5OTc1MjFm
YzVjZCAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL3g4
Ni9pbmNsdWRlL2FzbS9pby5oCkBAIC0yMDUsNyArMjA1LDYgQEAgZXh0ZXJuIHZvaWQgX19pb21l
bSAqaW9yZW1hcF9lbmNyeXB0ZWQocmVzb3VyY2Vfc2l6ZV90IHBoeXNfYWRkciwgdW5zaWduZWQg
bG9uZwogICovCiB2b2lkIF9faW9tZW0gKmlvcmVtYXAocmVzb3VyY2Vfc2l6ZV90IG9mZnNldCwg
dW5zaWduZWQgbG9uZyBzaXplKTsKICNkZWZpbmUgaW9yZW1hcCBpb3JlbWFwCi0jZGVmaW5lIGlv
cmVtYXBfbm9jYWNoZSBpb3JlbWFwCiAKIGV4dGVybiB2b2lkIGlvdW5tYXAodm9sYXRpbGUgdm9p
ZCBfX2lvbWVtICphZGRyKTsKICNkZWZpbmUgaW91bm1hcCBpb3VubWFwCmRpZmYgLS1naXQgYS9h
cmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9pby5oIGIvYXJjaC94dGVuc2EvaW5jbHVkZS9hc20vaW8u
aAppbmRleCBmZmFkYzk5Yzg2MDEuLjEwOGMwZDYxZDA2NiAxMDA2NDQKLS0tIGEvYXJjaC94dGVu
c2EvaW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9pby5oCkBA
IC01MSwxMCArNTEsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19pb21lbSAqaW9yZW1hcF9jYWNo
ZSh1bnNpZ25lZCBsb25nIG9mZnNldCwKIH0KICNkZWZpbmUgaW9yZW1hcF9jYWNoZSBpb3JlbWFw
X2NhY2hlCiAKLSNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlIGlvcmVtYXAKLSNkZWZpbmUgaW9yZW1h
cF93YyBpb3JlbWFwCi0jZGVmaW5lIGlvcmVtYXBfd3QgaW9yZW1hcAotCiBzdGF0aWMgaW5saW5l
IHZvaWQgaW91bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9tZW0gKmFkZHIpCiB7CiAJdW5zaWduZWQg
bG9uZyB2YSA9ICh1bnNpZ25lZCBsb25nKSBhZGRyOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9hc20t
Z2VuZXJpYy9pby5oIGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9pby5oCmluZGV4IDZhNWVkYzIzYWZl
Mi4uNGU0NWUxY2I2NTYwIDEwMDY0NAotLS0gYS9pbmNsdWRlL2FzbS1nZW5lcmljL2lvLmgKKysr
IGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9pby5oCkBAIC05NDksMjcgKzk0OSwxNSBAQCBzdGF0aWMg
aW5saW5lIHZvaWQgaW91bm1hcCh2b2lkIF9faW9tZW0gKmFkZHIpCiAjZW5kaWYgLyogQ09ORklH
X01NVSAqLwogCiAjaWZuZGVmIGlvcmVtYXBfbm9jYWNoZQotI2RlZmluZSBpb3JlbWFwX25vY2Fj
aGUgaW9yZW1hcF9ub2NhY2hlCi1zdGF0aWMgaW5saW5lIHZvaWQgX19pb21lbSAqaW9yZW1hcF9u
b2NhY2hlKHBoeXNfYWRkcl90IG9mZnNldCwgc2l6ZV90IHNpemUpCi17Ci0JcmV0dXJuIGlvcmVt
YXAob2Zmc2V0LCBzaXplKTsKLX0KKyNkZWZpbmUgaW9yZW1hcF9ub2NhY2hlIGlvcmVtYXAKICNl
bmRpZgogCiAjaWZuZGVmIGlvcmVtYXBfd2MKLSNkZWZpbmUgaW9yZW1hcF93YyBpb3JlbWFwX3dj
Ci1zdGF0aWMgaW5saW5lIHZvaWQgX19pb21lbSAqaW9yZW1hcF93YyhwaHlzX2FkZHJfdCBvZmZz
ZXQsIHNpemVfdCBzaXplKQotewotCXJldHVybiBpb3JlbWFwX25vY2FjaGUob2Zmc2V0LCBzaXpl
KTsKLX0KKyNkZWZpbmUgaW9yZW1hcF93YyBpb3JlbWFwCiAjZW5kaWYKIAogI2lmbmRlZiBpb3Jl
bWFwX3d0Ci0jZGVmaW5lIGlvcmVtYXBfd3QgaW9yZW1hcF93dAotc3RhdGljIGlubGluZSB2b2lk
IF9faW9tZW0gKmlvcmVtYXBfd3QocGh5c19hZGRyX3Qgb2Zmc2V0LCBzaXplX3Qgc2l6ZSkKLXsK
LQlyZXR1cm4gaW9yZW1hcF9ub2NhY2hlKG9mZnNldCwgc2l6ZSk7Ci19CisjZGVmaW5lIGlvcmVt
YXBfd3QgaW9yZW1hcAogI2VuZGlmCiAKIC8qCi0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVu
UklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xp
c3RpbmZvL29wZW5yaXNjCg==
