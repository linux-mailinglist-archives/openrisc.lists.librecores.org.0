Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 1E8D21B20AE
	for <lists+openrisc@lfdr.de>; Tue, 21 Apr 2020 10:01:52 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id D090C20AF2;
	Tue, 21 Apr 2020 10:01:51 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id A53B420A49
 for <openrisc@lists.librecores.org>; Sun, 12 Apr 2020 21:53:59 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 802D5208E0;
 Sun, 12 Apr 2020 19:53:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1586721238;
 bh=b61jXh3YXZS+2XpmCP+m9oEdP1VkDOnLWvH5ZgMQlFk=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=LhJ43W7xtnqQQNK2hYGw3ieQ3iZHXnp0QUM2x2StqqTWVLjUlGAG2cusDiztOcCBQ
 swFoDidRxfG7L+Dexnyg+1kssnHNv4bhxgQitoE6H2HzF0UBng6Q6YawUUQxtqzKUF
 IqdYVp1UjDKAnVXtZwry8mP9lRQ0jrns9Qz0xzKo=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Sun, 12 Apr 2020 22:48:57 +0300
Message-Id: <20200412194859.12663-20-rppt@kernel.org>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200412194859.12663-1-rppt@kernel.org>
References: <20200412194859.12663-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Tue, 21 Apr 2020 10:01:35 +0200
Subject: [OpenRISC] [PATCH 19/21] mm: clean up free_area_init_node() and its
 helpers
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-doc@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Michal Hocko <mhocko@kernel.org>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Guo Ren <guoren@kernel.org>,
 linux-csky@vger.kernel.org, linux-parisc@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Mike Rapoport <rppt@linux.ibm.com>,
 Greg Ungerer <gerg@linux-m68k.org>, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Baoquan He <bhe@redhat.com>, Jonathan Corbet <corbet@lwn.net>,
 linux-sh@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
 Helge Deller <deller@gmx.de>, x86@kernel.org,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-arm-kernel@lists.infradead.org, Mark Salter <msalter@redhat.com>,
 Matt Turner <mattst88@gmail.com>, linux-snps-arc@lists.infradead.org,
 uclinux-h8-devel@lists.sourceforge.jp, linux-xtensa@linux-xtensa.org,
 linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, Tony Luck <tony.luck@intel.com>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 Guan Xuetao <gxt@pku.edu.cn>, Hoan Tran <Hoan@os.amperecomputing.com>,
 Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Brian Cain <bcain@codeaurora.org>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Richard Weinberger <richard@nod.at>, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>,
 Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKVGhlIGZyZWVfYXJlYV9p
bml0X25vZGUoKSBub3cgYWx3YXlzIHVzZXMgbWVtYmxvY2sgaW5mbyBhbmQgdGhlIHpvbmUgUEZO
CmxpbWl0cyBzbyBpdCBkb2VzIG5vdCBuZWVkIHRoZSBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBm
dW5jdGlvbnMgdG8KY2FsY3VsYXRlIHRoZSB6b25lIHNwYW5uZWQgYW5kIGFic2VudCBwYWdlcy4g
VGhlIHJlbW92YWwgb2YgdGhlIGNvbXBhdF8KdmVyc2lvbnMgb2Ygem9uZV97YWJzY2VudCxzcGFu
bmVkfV9wYWdlc19pbl9ub2RlKCkgaW4gdHVybiwgbWFrZXMgem9uZV9zaXplCmFuZCB6aG9sZV9z
aXplIHBhcmFtZXRlcnMgdW51c2VkLgoKVGhlIG5vZGVfc3RhcnRfcGZuIGlzIGRldGVybWluZWQg
YnkgZ2V0X3Bmbl9yYW5nZV9mb3JfbmlkKCksIHNvIHRoZXJlIGlzIG5vCm5lZWQgdG8gcGFzcyBp
dCB0byBmcmVlX2FyZWFfaW5pdF9ub2RlKCkuCgpBcyB0aGUgcmVzdWx0LCB0aGUgb25seSByZXF1
aXJlZCBwYXJhbWV0ZXIgdG8gZnJlZV9hcmVhX2luaXRfbm9kZSgpIGlzIHRoZQpub2RlIElELCBh
bGwgdGhlIHJlc3QgYXJlIHJlbW92ZWQgYWxvbmcgd2l0aCBubyBsb25nZXIgdXNlZApjb21wYXRf
em9uZV97YWJzY2VudCxzcGFubmVkfV9wYWdlc19pbl9ub2RlKCkgaGVscGVycy4KClNpZ25lZC1v
ZmYtYnk6IE1pa2UgUmFwb3BvcnQgPHJwcHRAbGludXguaWJtLmNvbT4KLS0tCiBtbS9wYWdlX2Fs
bG9jLmMgfCAxMDQgKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tCiAxIGZpbGUgY2hhbmdlZCwgMjIgaW5zZXJ0aW9ucygrKSwgODIgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvbW0vcGFnZV9hbGxvYy5jIGIvbW0vcGFnZV9hbGxvYy5jCmluZGV4IGU0NjIz
MmVjNDg0OS4uOWFmMjdlZTc4NGM3IDEwMDY0NAotLS0gYS9tbS9wYWdlX2FsbG9jLmMKKysrIGIv
bW0vcGFnZV9hbGxvYy5jCkBAIC02NDQxLDggKzY0NDEsNyBAQCBzdGF0aWMgdW5zaWduZWQgbG9u
ZyBfX2luaXQgem9uZV9zcGFubmVkX3BhZ2VzX2luX25vZGUoaW50IG5pZCwKIAkJCQkJdW5zaWdu
ZWQgbG9uZyBub2RlX3N0YXJ0X3BmbiwKIAkJCQkJdW5zaWduZWQgbG9uZyBub2RlX2VuZF9wZm4s
CiAJCQkJCXVuc2lnbmVkIGxvbmcgKnpvbmVfc3RhcnRfcGZuLAotCQkJCQl1bnNpZ25lZCBsb25n
ICp6b25lX2VuZF9wZm4sCi0JCQkJCXVuc2lnbmVkIGxvbmcgKmlnbm9yZWQpCisJCQkJCXVuc2ln
bmVkIGxvbmcgKnpvbmVfZW5kX3BmbikKIHsKIAl1bnNpZ25lZCBsb25nIHpvbmVfbG93ID0gYXJj
aF96b25lX2xvd2VzdF9wb3NzaWJsZV9wZm5bem9uZV90eXBlXTsKIAl1bnNpZ25lZCBsb25nIHpv
bmVfaGlnaCA9IGFyY2hfem9uZV9oaWdoZXN0X3Bvc3NpYmxlX3Bmblt6b25lX3R5cGVdOwpAQCAt
NjUwNiw4ICs2NTA1LDcgQEAgdW5zaWduZWQgbG9uZyBfX2luaXQgYWJzZW50X3BhZ2VzX2luX3Jh
bmdlKHVuc2lnbmVkIGxvbmcgc3RhcnRfcGZuLAogc3RhdGljIHVuc2lnbmVkIGxvbmcgX19pbml0
IHpvbmVfYWJzZW50X3BhZ2VzX2luX25vZGUoaW50IG5pZCwKIAkJCQkJdW5zaWduZWQgbG9uZyB6
b25lX3R5cGUsCiAJCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9zdGFydF9wZm4sCi0JCQkJCXVuc2ln
bmVkIGxvbmcgbm9kZV9lbmRfcGZuLAotCQkJCQl1bnNpZ25lZCBsb25nICppZ25vcmVkKQorCQkJ
CQl1bnNpZ25lZCBsb25nIG5vZGVfZW5kX3BmbikKIHsKIAl1bnNpZ25lZCBsb25nIHpvbmVfbG93
ID0gYXJjaF96b25lX2xvd2VzdF9wb3NzaWJsZV9wZm5bem9uZV90eXBlXTsKIAl1bnNpZ25lZCBs
b25nIHpvbmVfaGlnaCA9IGFyY2hfem9uZV9oaWdoZXN0X3Bvc3NpYmxlX3Bmblt6b25lX3R5cGVd
OwpAQCAtNjU1NCw0MyArNjU1Miw5IEBAIHN0YXRpYyB1bnNpZ25lZCBsb25nIF9faW5pdCB6b25l
X2Fic2VudF9wYWdlc19pbl9ub2RlKGludCBuaWQsCiAJcmV0dXJuIG5yX2Fic2VudDsKIH0KIAot
c3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9faW5pdCBjb21wYXRfem9uZV9zcGFubmVkX3Bh
Z2VzX2luX25vZGUoaW50IG5pZCwKLQkJCQkJdW5zaWduZWQgbG9uZyB6b25lX3R5cGUsCi0JCQkJ
CXVuc2lnbmVkIGxvbmcgbm9kZV9zdGFydF9wZm4sCi0JCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9l
bmRfcGZuLAotCQkJCQl1bnNpZ25lZCBsb25nICp6b25lX3N0YXJ0X3BmbiwKLQkJCQkJdW5zaWdu
ZWQgbG9uZyAqem9uZV9lbmRfcGZuLAotCQkJCQl1bnNpZ25lZCBsb25nICp6b25lc19zaXplKQot
ewotCXVuc2lnbmVkIGludCB6b25lOwotCi0JKnpvbmVfc3RhcnRfcGZuID0gbm9kZV9zdGFydF9w
Zm47Ci0JZm9yICh6b25lID0gMDsgem9uZSA8IHpvbmVfdHlwZTsgem9uZSsrKQotCQkqem9uZV9z
dGFydF9wZm4gKz0gem9uZXNfc2l6ZVt6b25lXTsKLQotCSp6b25lX2VuZF9wZm4gPSAqem9uZV9z
dGFydF9wZm4gKyB6b25lc19zaXplW3pvbmVfdHlwZV07Ci0KLQlyZXR1cm4gem9uZXNfc2l6ZVt6
b25lX3R5cGVdOwotfQotCi1zdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgX19pbml0IGNvbXBh
dF96b25lX2Fic2VudF9wYWdlc19pbl9ub2RlKGludCBuaWQsCi0JCQkJCQl1bnNpZ25lZCBsb25n
IHpvbmVfdHlwZSwKLQkJCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9zdGFydF9wZm4sCi0JCQkJCQl1
bnNpZ25lZCBsb25nIG5vZGVfZW5kX3BmbiwKLQkJCQkJCXVuc2lnbmVkIGxvbmcgKnpob2xlc19z
aXplKQotewotCWlmICghemhvbGVzX3NpemUpCi0JCXJldHVybiAwOwotCi0JcmV0dXJuIHpob2xl
c19zaXplW3pvbmVfdHlwZV07Ci19Ci0KIHN0YXRpYyB2b2lkIF9faW5pdCBjYWxjdWxhdGVfbm9k
ZV90b3RhbHBhZ2VzKHN0cnVjdCBwZ2xpc3RfZGF0YSAqcGdkYXQsCiAJCQkJCQl1bnNpZ25lZCBs
b25nIG5vZGVfc3RhcnRfcGZuLAotCQkJCQkJdW5zaWduZWQgbG9uZyBub2RlX2VuZF9wZm4sCi0J
CQkJCQl1bnNpZ25lZCBsb25nICp6b25lc19zaXplLAotCQkJCQkJdW5zaWduZWQgbG9uZyAqemhv
bGVzX3NpemUsCi0JCQkJCQlib29sIGNvbXBhdCkKKwkJCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9l
bmRfcGZuKQogewogCXVuc2lnbmVkIGxvbmcgcmVhbHRvdGFscGFnZXMgPSAwLCB0b3RhbHBhZ2Vz
ID0gMDsKIAllbnVtIHpvbmVfdHlwZSBpOwpAQCAtNjYwMSwzMSArNjU2NSwxNCBAQCBzdGF0aWMg
dm9pZCBfX2luaXQgY2FsY3VsYXRlX25vZGVfdG90YWxwYWdlcyhzdHJ1Y3QgcGdsaXN0X2RhdGEg
KnBnZGF0LAogCQl1bnNpZ25lZCBsb25nIHNwYW5uZWQsIGFic2VudDsKIAkJdW5zaWduZWQgbG9u
ZyBzaXplLCByZWFsX3NpemU7CiAKLQkJaWYgKGNvbXBhdCkgewotCQkJc3Bhbm5lZCA9IGNvbXBh
dF96b25lX3NwYW5uZWRfcGFnZXNfaW5fbm9kZSgKLQkJCQkJCXBnZGF0LT5ub2RlX2lkLCBpLAot
CQkJCQkJbm9kZV9zdGFydF9wZm4sCi0JCQkJCQlub2RlX2VuZF9wZm4sCi0JCQkJCQkmem9uZV9z
dGFydF9wZm4sCi0JCQkJCQkmem9uZV9lbmRfcGZuLAotCQkJCQkJem9uZXNfc2l6ZSk7Ci0JCQlh
YnNlbnQgPSBjb21wYXRfem9uZV9hYnNlbnRfcGFnZXNfaW5fbm9kZSgKLQkJCQkJCXBnZGF0LT5u
b2RlX2lkLCBpLAotCQkJCQkJbm9kZV9zdGFydF9wZm4sCi0JCQkJCQlub2RlX2VuZF9wZm4sCi0J
CQkJCQl6aG9sZXNfc2l6ZSk7Ci0JCX0gZWxzZSB7Ci0JCQlzcGFubmVkID0gem9uZV9zcGFubmVk
X3BhZ2VzX2luX25vZGUocGdkYXQtPm5vZGVfaWQsIGksCi0JCQkJCQlub2RlX3N0YXJ0X3BmbiwK
LQkJCQkJCW5vZGVfZW5kX3BmbiwKLQkJCQkJCSZ6b25lX3N0YXJ0X3BmbiwKLQkJCQkJCSZ6b25l
X2VuZF9wZm4sCi0JCQkJCQl6b25lc19zaXplKTsKLQkJCWFic2VudCA9IHpvbmVfYWJzZW50X3Bh
Z2VzX2luX25vZGUocGdkYXQtPm5vZGVfaWQsIGksCi0JCQkJCQlub2RlX3N0YXJ0X3BmbiwKLQkJ
CQkJCW5vZGVfZW5kX3BmbiwKLQkJCQkJCXpob2xlc19zaXplKTsKLQkJfQorCQlzcGFubmVkID0g
em9uZV9zcGFubmVkX3BhZ2VzX2luX25vZGUocGdkYXQtPm5vZGVfaWQsIGksCisJCQkJCQkgICAg
IG5vZGVfc3RhcnRfcGZuLAorCQkJCQkJICAgICBub2RlX2VuZF9wZm4sCisJCQkJCQkgICAgICZ6
b25lX3N0YXJ0X3BmbiwKKwkJCQkJCSAgICAgJnpvbmVfZW5kX3Bmbik7CisJCWFic2VudCA9IHpv
bmVfYWJzZW50X3BhZ2VzX2luX25vZGUocGdkYXQtPm5vZGVfaWQsIGksCisJCQkJCQkgICBub2Rl
X3N0YXJ0X3BmbiwKKwkJCQkJCSAgIG5vZGVfZW5kX3Bmbik7CiAKIAkJc2l6ZSA9IHNwYW5uZWQ7
CiAJCXJlYWxfc2l6ZSA9IHNpemUgLSBhYnNlbnQ7CkBAIC02OTQ3LDEwICs2ODk0LDcgQEAgc3Rh
dGljIGlubGluZSB2b2lkIHBnZGF0X3NldF9kZWZlcnJlZF9yYW5nZShwZ19kYXRhX3QgKnBnZGF0
KQogc3RhdGljIGlubGluZSB2b2lkIHBnZGF0X3NldF9kZWZlcnJlZF9yYW5nZShwZ19kYXRhX3Qg
KnBnZGF0KSB7fQogI2VuZGlmCiAKLXN0YXRpYyB2b2lkIF9faW5pdCBfX2ZyZWVfYXJlYV9pbml0
X25vZGUoaW50IG5pZCwgdW5zaWduZWQgbG9uZyAqem9uZXNfc2l6ZSwKLQkJCQkJIHVuc2lnbmVk
IGxvbmcgbm9kZV9zdGFydF9wZm4sCi0JCQkJCSB1bnNpZ25lZCBsb25nICp6aG9sZXNfc2l6ZSwK
LQkJCQkJIGJvb2wgY29tcGF0KQorc3RhdGljIHZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0X25v
ZGUoaW50IG5pZCkKIHsKIAlwZ19kYXRhX3QgKnBnZGF0ID0gTk9ERV9EQVRBKG5pZCk7CiAJdW5z
aWduZWQgbG9uZyBzdGFydF9wZm4gPSAwOwpAQCAtNjk1OSwxOSArNjkwMywxNiBAQCBzdGF0aWMg
dm9pZCBfX2luaXQgX19mcmVlX2FyZWFfaW5pdF9ub2RlKGludCBuaWQsIHVuc2lnbmVkIGxvbmcg
KnpvbmVzX3NpemUsCiAJLyogcGdfZGF0YV90IHNob3VsZCBiZSByZXNldCB0byB6ZXJvIHdoZW4g
aXQncyBhbGxvY2F0ZWQgKi8KIAlXQVJOX09OKHBnZGF0LT5ucl96b25lcyB8fCBwZ2RhdC0+a3N3
YXBkX2NsYXNzem9uZV9pZHgpOwogCisJZ2V0X3Bmbl9yYW5nZV9mb3JfbmlkKG5pZCwgJnN0YXJ0
X3BmbiwgJmVuZF9wZm4pOworCiAJcGdkYXQtPm5vZGVfaWQgPSBuaWQ7Ci0JcGdkYXQtPm5vZGVf
c3RhcnRfcGZuID0gbm9kZV9zdGFydF9wZm47CisJcGdkYXQtPm5vZGVfc3RhcnRfcGZuID0gc3Rh
cnRfcGZuOwogCXBnZGF0LT5wZXJfY3B1X25vZGVzdGF0cyA9IE5VTEw7Ci0JaWYgKCFjb21wYXQp
IHsKLQkJZ2V0X3Bmbl9yYW5nZV9mb3JfbmlkKG5pZCwgJnN0YXJ0X3BmbiwgJmVuZF9wZm4pOwot
CQlwcl9pbmZvKCJJbml0bWVtIHNldHVwIG5vZGUgJWQgW21lbSAlIzAxOEx4LSUjMDE4THhdXG4i
LCBuaWQsCi0JCQkodTY0KXN0YXJ0X3BmbiA8PCBQQUdFX1NISUZULAotCQkJZW5kX3BmbiA/ICgo
dTY0KWVuZF9wZm4gPDwgUEFHRV9TSElGVCkgLSAxIDogMCk7Ci0JfSBlbHNlIHsKLQkJc3RhcnRf
cGZuID0gbm9kZV9zdGFydF9wZm47Ci0JfQotCWNhbGN1bGF0ZV9ub2RlX3RvdGFscGFnZXMocGdk
YXQsIHN0YXJ0X3BmbiwgZW5kX3BmbiwKLQkJCQkgIHpvbmVzX3NpemUsIHpob2xlc19zaXplLCBj
b21wYXQpOworCisJcHJfaW5mbygiSW5pdG1lbSBzZXR1cCBub2RlICVkIFttZW0gJSMwMThMeC0l
IzAxOEx4XVxuIiwgbmlkLAorCQkodTY0KXN0YXJ0X3BmbiA8PCBQQUdFX1NISUZULAorCQllbmRf
cGZuID8gKCh1NjQpZW5kX3BmbiA8PCBQQUdFX1NISUZUKSAtIDEgOiAwKTsKKwljYWxjdWxhdGVf
bm9kZV90b3RhbHBhZ2VzKHBnZGF0LCBzdGFydF9wZm4sIGVuZF9wZm4pOwogCiAJYWxsb2Nfbm9k
ZV9tZW1fbWFwKHBnZGF0KTsKIAlwZ2RhdF9zZXRfZGVmZXJyZWRfcmFuZ2UocGdkYXQpOwpAQCAt
Njk4MSw3ICs2OTIyLDcgQEAgc3RhdGljIHZvaWQgX19pbml0IF9fZnJlZV9hcmVhX2luaXRfbm9k
ZShpbnQgbmlkLCB1bnNpZ25lZCBsb25nICp6b25lc19zaXplLAogCiB2b2lkIF9faW5pdCBmcmVl
X2FyZWFfaW5pdF9tZW1vcnlsZXNzX25vZGUoaW50IG5pZCkKIHsKLQlfX2ZyZWVfYXJlYV9pbml0
X25vZGUobmlkLCBOVUxMLCAwLCBOVUxMLCBmYWxzZSk7CisJZnJlZV9hcmVhX2luaXRfbm9kZShu
aWQpOwogfQogCiAjaWYgIWRlZmluZWQoQ09ORklHX0ZMQVRfTk9ERV9NRU1fTUFQKQpAQCAtNzUw
OSw4ICs3NDUwLDcgQEAgdm9pZCBfX2luaXQgZnJlZV9hcmVhX2luaXQodW5zaWduZWQgbG9uZyAq
bWF4X3pvbmVfcGZuKQogCWluaXRfdW5hdmFpbGFibGVfbWVtKCk7CiAJZm9yX2VhY2hfb25saW5l
X25vZGUobmlkKSB7CiAJCXBnX2RhdGFfdCAqcGdkYXQgPSBOT0RFX0RBVEEobmlkKTsKLQkJX19m
cmVlX2FyZWFfaW5pdF9ub2RlKG5pZCwgTlVMTCwKLQkJCQkgICAgICBmaW5kX21pbl9wZm5fZm9y
X25vZGUobmlkKSwgTlVMTCwgZmFsc2UpOworCQlmcmVlX2FyZWFfaW5pdF9ub2RlKG5pZCk7CiAK
IAkJLyogQW55IG1lbW9yeSBvbiB0aGF0IG5vZGUgKi8KIAkJaWYgKHBnZGF0LT5ub2RlX3ByZXNl
bnRfcGFnZXMpCi0tIAoyLjI1LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNv
cmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
