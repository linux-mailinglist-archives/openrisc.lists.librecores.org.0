Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id DBD0E483ADB
	for <lists+openrisc@lfdr.de>; Tue,  4 Jan 2022 04:14:33 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id BD26724330;
	Tue,  4 Jan 2022 04:14:33 +0100 (CET)
Received: from mail-pg1-f181.google.com (mail-pg1-f181.google.com
 [209.85.215.181])
 by mail.librecores.org (Postfix) with ESMTPS id CDEAC2432B
 for <openrisc@lists.librecores.org>; Tue,  4 Jan 2022 04:14:31 +0100 (CET)
Received: by mail-pg1-f181.google.com with SMTP id v25so31536219pge.2
 for <openrisc@lists.librecores.org>; Mon, 03 Jan 2022 19:14:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=JvZNRuCiDOV66xYOmKE/GLhyaw1j1YAu7ACv2Cp2JE4=;
 b=If+cCLjOFfbnO2z40abN0hTUpdT2rDACTrFuTVkl0UEq9xz3N2I29B7o4VmuTSnp8v
 26jyN6vbMxUH9T7jV2WuJ80sE6frQlBe5aVh0k2NcNU+4t/dZg7b7H0Z18wfde7mTnrg
 lpZXER8VlLPng1rrcmQytRu2CMhYIkkGZx5OnzCSMTQ3yCRc23rkHi63qaBWyi6PPRH/
 UrKv7qlcyEOSEUcxuMsZ0WcCOlhIhU/lqxK0nM5PD8BCYqYA4M15TDXoUzzeCF5tkApt
 t6ykSXI0XeIvF+bPcmbqRgr3EkKANh0m3sJ/P07PhN0KChrfVxqgL0E1NZMUfAAif5ml
 AFWQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=JvZNRuCiDOV66xYOmKE/GLhyaw1j1YAu7ACv2Cp2JE4=;
 b=cpRVvp6nVtnjRVqnUv+781LW1V9bSV6dvxaAc3lCbBarCeujUHRYCzL84Vnwxt+bZV
 l40cgHZJJxWzUXxXvcXLvrlY9AYkKN96HFFtZSLxpGJ8+wwblNd5RosLnKTRkLt5f+TV
 zuh/YJDbN4U/BYc7q7Vzm1wy/Y3/TMBs0O0WBuUXp84bAgl8NzMePaeH/FD5vO1BLGm6
 PhlcytxCZ3M6tE9qkI09DRN2Ko3wYFe/mod5gp6OwzA2yZ7vuCPrYPcB79oVP9kcAPcj
 v2iiMKX8Xe1uEujJiqd3rsN2hDX3Pg92xhAFV1llXQSPcPXzd/fj4gy0JFIn0QqEDalN
 uFEQ==
X-Gm-Message-State: AOAM532s1loUkfia/Dm3r2FU0vl2EscrjzSXHTpl0nT7irV2nrWJ4XFm
 C74UGeSwPkQt7qOot6C91NA=
X-Google-Smtp-Source: ABdhPJyV61Hx7tAE6UQ94QTAWMlti8Iva70xIDcGqcl3jkfh702Uz7IUvejgA5smxHSi7xRhKJGN3g==
X-Received: by 2002:a05:6a00:2151:b0:4a2:5c9a:f0a9 with SMTP id
 o17-20020a056a00215100b004a25c9af0a9mr50072725pfk.39.1641266070322; 
 Mon, 03 Jan 2022 19:14:30 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id k6sm39125206pfu.96.2022.01.03.19.14.29
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 03 Jan 2022 19:14:29 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Tue,  4 Jan 2022 12:14:06 +0900
Message-Id: <20220104031414.2416928-6-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20220104031414.2416928-1-shorne@gmail.com>
References: <20220104031414.2416928-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v5 05/13] or1k: Thread Local Storage support
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>,
 Adhemerval Zanella <adhemerval.zanella@linaro.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T3BlblJJU0MgaW5jbHVkZXMgMyBUTFMgYWRkcmVzc2luZyBtb2RlbHMuICBMb2NhbCBEeW5hbWlj
IG9wdGltaXphdGlvbnMKYXJlIG5vdCBkb25lIGluIHRoZSBsaW5rZXIgYW5kIHRoZXJlZm9yZSB1
c2UgdGhlIHNhbWUgY29kZSBzZXF1ZW5jZXMgYXMKR2xvYmFsIER5bmFtaWMuCgpSZXZpZXdlZC1i
eTogQWRoZW1lcnZhbCBaYW5lbGxhICA8YWRoZW1lcnZhbC56YW5lbGxhQGxpbmFyby5vcmc+Ci0t
LQogc3lzZGVwcy9vcjFrL2RsLXRscy5oICAgIHwgIDI3ICsrKysrKwogc3lzZGVwcy9vcjFrL2xp
YmMtdGxzLmMgIHwgIDM0ICsrKysrKysrCiBzeXNkZXBzL29yMWsvbnB0bC90bHMuaCAgfCAxODQg
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiBzeXNkZXBzL29yMWsvc3Rh
Y2tpbmZvLmggfCAgMzQgKysrKysrKysKIDQgZmlsZXMgY2hhbmdlZCwgMjc5IGluc2VydGlvbnMo
KykKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL29yMWsvZGwtdGxzLmgKIGNyZWF0ZSBtb2Rl
IDEwMDY0NCBzeXNkZXBzL29yMWsvbGliYy10bHMuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2Rl
cHMvb3Ixay9ucHRsL3Rscy5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVwcy9vcjFrL3N0YWNr
aW5mby5oCgpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL2RsLXRscy5oIGIvc3lzZGVwcy9vcjFr
L2RsLXRscy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLjlmYWI5ODMy
ZDIKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvZGwtdGxzLmgKQEAgLTAsMCArMSwy
NyBAQAorLyogVExTIGRlZmluaXRpb25zIGZvciB0aGUgRUxGIGR5bmFtaWMgbGlua2VyLiAgT3Bl
blJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykgMjAyMiBGcmVlIFNvZnR3YXJlIEZvdW5k
YXRpb24sIEluYy4KKworICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnku
CisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0
cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05V
IExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzCisgICBwdWJsaXNoZWQgYnkgdGhlIEZy
ZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMi4xIG9mIHRoZQorICAgTGlj
ZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdO
VSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVz
ZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBs
aWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJU
SUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExp
Y2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEg
Y29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3
aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5v
cmcvbGljZW5zZXMvPi4gICovCisKKy8qIFR5cGUgdXNlZCBmb3IgdGhlIHJlcHJlc2VudGF0aW9u
IG9mIFRMUyBpbmZvcm1hdGlvbiBpbiB0aGUgR09ULiAgKi8KK3R5cGVkZWYgc3RydWN0Cit7Cisg
IHVuc2lnbmVkIGxvbmcgaW50IHRpX21vZHVsZTsKKyAgdW5zaWduZWQgbG9uZyBpbnQgdGlfb2Zm
c2V0OworfSB0bHNfaW5kZXg7CisKK2V4dGVybiB2b2lkICpfX3Rsc19nZXRfYWRkciAodGxzX2lu
ZGV4ICp0aSk7CmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvbGliYy10bHMuYyBiL3N5c2RlcHMv
b3Ixay9saWJjLXRscy5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLjBl
MmU0ODRmZDQKLS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvbGliYy10bHMuYwpAQCAt
MCwwICsxLDM0IEBACisvKiBUaHJlYWQtbG9jYWwgc3RvcmFnZSBoYW5kbGluZyBpbiB0aGUgRUxG
IGR5bmFtaWMgbGlua2VyLgorICAgT3BlblJJU0MgdmVyc2lvbi4KKyAgIENvcHlyaWdodCAoQykg
MjAyMiBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKworICAgVGhpcyBmaWxlIGlzIHBh
cnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUg
c29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVu
ZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFz
CisgICBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZl
cnNpb24gMi4xIG9mIHRoZQorICAgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0
ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhl
IGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5U
WTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJ
VFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAg
TGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91
IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1
YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5OyBpZiBub3QsIHNl
ZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4gICovCisKKyNpbmNsdWRlIDxj
c3UvbGliYy10bHMuYz4KKyNpbmNsdWRlIDxkbC10bHMuaD4KKworLyogT24gT3BlblJJU0MsIGxp
bmtlciBvcHRpbWl6YXRpb25zIGFyZSBub3QgcmVxdWlyZWQsIHNvIF9fdGxzX2dldF9hZGRyCisg
ICBjYW4gYmUgY2FsbGVkIGV2ZW4gaW4gc3RhdGljYWxseSBsaW5rZWQgYmluYXJpZXMuICBJbiB0
aGlzIGNhc2UgbW9kdWxlCisgICBtdXN0IGJlIGFsd2F5cyAxIGFuZCBQVF9UTFMgc2VnbWVudCBl
eGlzdCBpbiB0aGUgYmluYXJ5LCBvdGhlcndpc2UgaXQKKyAgIHdvdWxkIG5vdCBsaW5rLiAgKi8K
Kwordm9pZCAqCitfX3Rsc19nZXRfYWRkciAodGxzX2luZGV4ICp0aSkKK3sKKyAgZHR2X3QgKmR0
diA9IFRIUkVBRF9EVFYgKCk7CisgIHJldHVybiAoY2hhciAqKSBkdHZbMV0ucG9pbnRlci52YWwg
KyB0aS0+dGlfb2Zmc2V0OworfQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL25wdGwvdGxzLmgg
Yi9zeXNkZXBzL29yMWsvbnB0bC90bHMuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwLi5jNmZmZTYyYzNmCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy9vcjFrL25wdGwv
dGxzLmgKQEAgLTAsMCArMSwxODQgQEAKKy8qIERlZmluaXRpb24gZm9yIHRocmVhZC1sb2NhbCBk
YXRhIGhhbmRsaW5nLiAgTlBUTC9PcGVuUklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAy
MDIyIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQg
b2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29m
dHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVy
IHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBh
cyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2
ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIg
dmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhv
cGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsg
d2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkg
b3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVz
c2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNo
b3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1Ymxp
YworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5LiAgSWYgbm90LCBzZWUK
KyAgIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisjaWZuZGVmIF9UTFNf
SAorI2RlZmluZSBfVExTX0ggIDEKKworI2luY2x1ZGUgPGRsLXN5c2RlcC5oPgorCisjaWZuZGVm
IF9fQVNTRU1CTEVSX18KKyMgaW5jbHVkZSA8c3RkYm9vbC5oPgorIyBpbmNsdWRlIDxzdGRkZWYu
aD4KKyMgaW5jbHVkZSA8c3RkaW50Lmg+CisjIGluY2x1ZGUgPGRsLWR0di5oPgorCit0eXBlZGVm
IHN0cnVjdAoreworICBkdHZfdCAqZHR2OworICB2b2lkICpfX3BhZGRpbmdbM107Cit9IHRjYmhl
YWRfdDsKKworcmVnaXN0ZXIgdGNiaGVhZF90ICpfX3RocmVhZF9zZWxmIF9fYXNtX18oInIxMCIp
OworCisjIGRlZmluZSBUTFNfTVVMVElQTEVfVEhSRUFEU19JTl9UQ0IgMQorCisvKiBHZXQgc3lz
dGVtIGNhbGwgaW5mb3JtYXRpb24uICAqLworIyBpbmNsdWRlIDxzeXNkZXAuaD4KKworLyogVGhl
IFRQIHBvaW50cyB0byB0aGUgc3RhcnQgb2YgdGhlIFRMUyBibG9jay4KKyAgIEFzIEkgdW5kZXJz
dGFuZCBpdCwgdGhpcyBpc24ndCBzdHJpY3RseSB0aGF0ICJUUCBwb2ludHMgdG8gRFRWIiAtIGl0
J3MKKyAgIG1vcmUgd2hlcmUgdG8gcGxhY2UgdGhlIFRDQiBpbiB0aGUgVExTIGJsb2NrLiAgVGhp
cyB3aWxsIHBsYWNlIGl0IGluCisgICB0aGUgYmVnaW5uaW5nLgorCisgICBMYXlvdXQ6CisgICAg
Ky0tLS0tKy0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rCisgICAgfCBQUkUgfCBUQ0IgfCBU
TFMgTUVNT1JZIC4uICAgICAgICB8CisgICAgKy0tLS0tKy0tLS0tKy0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0rCisJCSBeIHIxMCAvIFRQCisKKyAgIFBSRSBpcyB0aGUgc3RydWN0IHB0aHJlYWQgZGVz
Y3JpYmVkIGJlbG93CisgICBUQ0IgaXMgdGNiaGVhZF90CisgICBUTFMgbWVtb3J5IGlzIHdoZXJl
IHRoZSBUTFMgcHJvZ3JhbSBzZWN0aW9ucyBhcmUgbG9hZGVkCisKKyAgIFNlZSBfZGxfYWxsb2Nh
dGVfdGxzX3N0b3JhZ2UgYW5kIF9fbGliY19zZXR1cF90bHMgZm9yIG1vcmUgaW5mb3JtYXRpb24u
ICAqLworCisjIGRlZmluZSBUTFNfRFRWX0FUX1RQICAxCisjIGRlZmluZSBUTFNfVENCX0FUX1RQ
ICAwCisKKy8qIEdldCB0aGUgdGhyZWFkIGRlc2NyaXB0b3IgZGVmaW5pdGlvbi4gICovCisjIGlu
Y2x1ZGUgPG5wdGwvZGVzY3IuaD4KKworLyogUmVxdWlyZW1lbnRzIGZvciB0aGUgVENCLiAgKi8K
KyMgZGVmaW5lIFRMU19JTklUX1RDQl9TSVpFICAgIHNpemVvZiAodGNiaGVhZF90KQorIyBkZWZp
bmUgVExTX0lOSVRfVENCX0FMSUdOICAgX19hbGlnbm9mX18gKHN0cnVjdCBwdGhyZWFkKQorCisj
IGRlZmluZSBUTFNfVENCX1NJWkUgICAgICAgICBzaXplb2YgKHRjYmhlYWRfdCkKKyMgZGVmaW5l
IFRMU19UQ0JfQUxJR04gICAgICAgIF9fYWxpZ25vZl9fIChzdHJ1Y3QgcHRocmVhZCkKKworLyog
VGhpcyBpcyB0aGUgc2l6ZSBvZiB0aGUgVENCLiAgKi8KKworLyogVGhpcyBpcyB0aGUgc2l6ZSB3
ZSBuZWVkIGJlZm9yZSBUQ0IuCisgICBUbyBzdXBwb3J0IFRIUkVBRF9HRVRNRU0gd2l0aCBmcmll
bmRzIHdlIHdhbnQgdG8gaGF2ZSBhCisgICBzdHJ1Y3QgcHRocmVhZCBhdmFpbGFibGUuCisgICBZ
YW5rIGl0IGluIGluZnJvbnQgb2YgZXZlcnl0aGluZywgSSdtIHN1cmUgbm9ib2R5IHdpbGwgbWlu
ZC4KKworICAgVGhpcyBtZW1vcnkgaXMgcmVhbGx5IGFsbG9jYXRlZCBQUkUgdGhlIFRMUyBibG9j
aywgc28gaXQncyBwb3NzaWJsZQorICAgdG8gZG8gKChjaGFyKil0bHNibG9jaykgLSBUTFNfUFJF
X1RDQl9TSVpFIHRvIGFjY2VzcyBpdC4KKyAgIFRoaXMgaXMgZG9uZSBmb3IgVEhSRUFEX1NFTEYu
ICAqLworCisjIGRlZmluZSBUTFNfUFJFX1RDQl9TSVpFIHNpemVvZiAoc3RydWN0IHB0aHJlYWQp
CisKKy8qIEluc3RhbGwgdGhlIGR0diBwb2ludGVyLgorICAgV2hlbiBjYWxsZWQsIGR0dnAgaXMg
YSBwb2ludGVyIG5vdCB0aGUgRFRWIHBlciBzYXkgKHdoaWNoIHNob3VsZCBzdGFydAorICAgd2l0
aCB0aGUgZ2VuZXJhdGlvbiBjb3VudGVyKSBidXQgdG8gdGhlIGxlbmd0aCBvZiB0aGUgRFRWLgor
ICAgV2UgY2FuIGFsd2F5cyBpbmRleCB3aXRoIC0xLCBzbyB3ZSBzdG9yZSBkdHZwWzFdLiAgKi8K
KworIyBkZWZpbmUgSU5TVEFMTF9EVFYodGNicCwgZHR2cCkgXAorICAoKCh0Y2JoZWFkX3QgKikg
KHRjYnApKS0+ZHR2ID0gKGR0dnApICsgMSkKKworLyogSW5zdGFsbCBuZXcgZHR2IGZvciBjdXJy
ZW50IHRocmVhZAorICAgSW4gYSBsb2dpY2lhbCB3b3JsZCBkdHYgaGVyZSB3b3VsZCBhbHNvIHBv
aW50IHRvIHRoZSBsZW5ndGggb2YgdGhlIERUVi4KKyAgIEhvd2V2ZXIgaXQgZG9lcyBub3QsIHRo
aXMgdGltZSBpdCBwb2ludHMgdG8gdGhlIGdlbmVyYXRpb24gY291bnRlciwKKyAgIHNvIGp1c3Qg
c3RvcmUgaXQuCisKKyAgIE5vdGU6IC0xIGlzIHN0aWxsIHZhbGlkIGFuZCBjb250YWlucyB0aGUg
bGVuZ3RoLiAgKi8KKworIyBkZWZpbmUgSU5TVEFMTF9ORVdfRFRWKGR0dikgKFRIUkVBRF9EVFYo
KSA9IChkdHYpKQorCisvKiBSZXR1cm4gZHR2IG9mIGdpdmVuIHRocmVhZCBkZXNjcmlwdG9yLiAg
Ki8KKyMgZGVmaW5lIEdFVF9EVFYodGNicCkgKCgodGNiaGVhZF90ICopICh0Y2JwKSktPmR0dikK
KworLyogQ29kZSB0byBpbml0aWFsbHkgaW5pdGlhbGl6ZSB0aGUgdGhyZWFkIHBvaW50ZXIuCisK
KyAgIFNldCBUUCB0byB0aGUgYWRkcmVzcyBfYWZ0ZXJfIHRjYmhlYWRfdC4gIFRoaXMgd2lsbCBh
bGxvdyB1cworICAgdG8gY2hhbmdlIHRoZSBzaXplIG9mIHRjYmhlYWRfdCB3aXRob3V0IGhhdmlu
ZyB0byByZS1saW5rIGV2ZXJ5dGhpbmcuCisKKyAgIFRoaXMgaGFzIHRvIHJldHVybiBOVUxMIG9u
IHN1Y2Nlc3MgKG9yIGEgc3RyaW5nIHdpdGggdGhlIGZhaWx1cmUgdGV4dCkuCisgICBJdCdzIGhh
cmQgdG8gZmFpbCB0aGlzLCBzbyByZXR1cm4gTlVMTCBhbHdheXMuICAqLworCisjIGRlZmluZSBU
TFNfSU5JVF9UUCh0Y2JwKSBcCisgICh7X190aHJlYWRfc2VsZiA9ICgodGNiaGVhZF90ICopdGNi
cCArIDEpOyBOVUxMO30pCisKKy8qIFZhbHVlIHBhc3NlZCB0byAnY2xvbmUnIGZvciBpbml0aWFs
aXphdGlvbiBvZiB0aGUgdGhyZWFkIHJlZ2lzdGVyLiAgKi8KKyMgZGVmaW5lIFRMU19ERUZJTkVf
SU5JVF9UUCh0cCwgcGQpIFwKKyAgdm9pZCAqdHAgPSAoKGNoYXIgKikgcGQgKyBUTFNfUFJFX1RD
Ql9TSVpFICsgVExTX0lOSVRfVENCX1NJWkUpCisKKy8qIFJldHVybiB0aGUgYWRkcmVzcyBvZiB0
aGUgZHR2IGZvciB0aGUgY3VycmVudCB0aHJlYWQuCisKKyAgIERlcmVmZXJlbmNlIFRQLCBvZmZz
ZXQgdG8gZHR2IC0gcmVhbGx5IHN0cmFpZ2h0Zm9yd2FyZC4KKyAgIFJlbWVtYmVyIHRoYXQgd2Ug
bWFkZSBUUCBwb2ludCB0byBhZnRlciB0Y2IsIHNvIHdlIG5lZWQgdG8gcmV2ZXJzZSB0aGF0LiAg
Ki8KKworIyAgZGVmaW5lIFRIUkVBRF9EVFYoKSBcCisgICgoKCh0Y2JoZWFkX3QgKilfX3RocmVh
ZF9zZWxmKS0xKS0+ZHR2KQorCisvKiBSZXR1cm4gdGhlIHRocmVhZCBkZXNjcmlwdG9yIGZvciB0
aGUgY3VycmVudCB0aHJlYWQuCisKKyAgIFJldHVybiBhIHBvaW50ZXIgdG8gdGhlIFRMU19QUkUg
YXJlYSB3aGVyZSB3ZSBhbGxvY2F0ZWQgc3BhY2UgZm9yCisgICBhIHN0cnVjdCBwdGhyZWFkLiAg
QWdhaW4sIFRQIHBvaW50cyB0byBhZnRlciB0Y2JoZWFkX3QsIGNvbXBlbnNhdGUgd2l0aAorICAg
VExTX0lOSVRfVENCX1NJWkUuCisKKyAgIEkgcmVnYXJkIHRoaXMgaXMgYSBzZXBlcmF0ZSBzeXN0
ZW0gZnJvbSB0aGUgIm5vcm1hbCIgVExTLiAgKi8KKworIyBkZWZpbmUgVEhSRUFEX1NFTEYgXAor
ICAoKHN0cnVjdCBwdGhyZWFkICopICgoY2hhciAqKSBfX3RocmVhZF9zZWxmIC0gVExTX0lOSVRf
VENCX1NJWkUgXAorICAgIC0gVExTX1BSRV9UQ0JfU0laRSkpCisKKy8qIE1hZ2ljIGZvciBsaWJ0
aHJlYWRfZGIgdG8ga25vdyBob3cgdG8gZG8gVEhSRUFEX1NFTEYuICAqLworCisjIGRlZmluZSBE
Ql9USFJFQURfU0VMRiBcCisgIFJFR0lTVEVSICgzMiwgMzIsIDEwICogNCwgLSBUTFNfSU5JVF9U
Q0JfU0laRSAtIFRMU19QUkVfVENCX1NJWkUpCisKKyMgaW5jbHVkZSA8dGNiLWFjY2Vzcy5oPgor
CisvKiBBY2Nlc3MgdG8gZGF0YSBpbiB0aGUgdGhyZWFkIGRlc2NyaXB0b3IgaXMgZWFzeS4gICov
CisKKyNkZWZpbmUgVEhSRUFEX0dFVE1FTShkZXNjciwgbWVtYmVyKSBcCisgIGRlc2NyLT5tZW1i
ZXIKKyNkZWZpbmUgVEhSRUFEX0dFVE1FTV9OQyhkZXNjciwgbWVtYmVyLCBpZHgpIFwKKyAgZGVz
Y3ItPm1lbWJlcltpZHhdCisjZGVmaW5lIFRIUkVBRF9TRVRNRU0oZGVzY3IsIG1lbWJlciwgdmFs
dWUpIFwKKyAgZGVzY3ItPm1lbWJlciA9ICh2YWx1ZSkKKyNkZWZpbmUgVEhSRUFEX1NFVE1FTV9O
QyhkZXNjciwgbWVtYmVyLCBpZHgsIHZhbHVlKSBcCisgIGRlc2NyLT5tZW1iZXJbaWR4XSA9ICh2
YWx1ZSkKKworLyogR2V0IGFuZCBzZXQgdGhlIGdsb2JhbCBzY29wZSBnZW5lcmF0aW9uIGNvdW50
ZXIgaW4gc3RydWN0IHB0aHJlYWQuICAqLworCisjZGVmaW5lIFRIUkVBRF9HU0NPUEVfRkxBR19V
TlVTRUQgMAorI2RlZmluZSBUSFJFQURfR1NDT1BFX0ZMQUdfVVNFRCAgIDEKKyNkZWZpbmUgVEhS
RUFEX0dTQ09QRV9GTEFHX1dBSVQgICAyCisjZGVmaW5lIFRIUkVBRF9HU0NPUEVfUkVTRVRfRkxB
RygpCQkJCQlcCisgIGRvCQkJCQkJCQkJXAorICAgIHsJCQkJCQkJCQlcCisgICAgICBpbnQgX19y
ZXMgPSBhdG9taWNfZXhjaGFuZ2VfcmVsICgmVEhSRUFEX1NFTEYtPmhlYWRlci5nc2NvcGVfZmxh
ZyxcCisJCQkJICAgICAgIFRIUkVBRF9HU0NPUEVfRkxBR19VTlVTRUQpOwlcCisgICAgICBpZiAo
X19yZXMgPT0gVEhSRUFEX0dTQ09QRV9GTEFHX1dBSVQpCQkJCVwKKwkgIGxsbF9mdXRleF93YWtl
ICgmVEhSRUFEX1NFTEYtPmhlYWRlci5nc2NvcGVfZmxhZywgMSwJCVwKKwkJCSAgTExMX1BSSVZB
VEUpOwkJCQkJXAorICAgIH0JCQkJCQkJCQlcCisgIHdoaWxlICgwKQorI2RlZmluZSBUSFJFQURf
R1NDT1BFX1NFVF9GTEFHKCkJCQkJCVwKKyAgZG8JCQkJCQkJCQlcCisgICAgewkJCQkJCQkJCVwK
KyAgICAgIFRIUkVBRF9TRUxGLT5oZWFkZXIuZ3Njb3BlX2ZsYWcgPSBUSFJFQURfR1NDT1BFX0ZM
QUdfVVNFRDsJXAorICAgICAgYXRvbWljX3dyaXRlX2JhcnJpZXIgKCk7CQkJCQkJXAorICAgIH0J
CQkJCQkJCQlcCisgIHdoaWxlICgwKQorCisjZW5kaWYgLyogX19BU1NFTUJMRVJfXyAqLworCisj
ZW5kaWYgIC8qIHRscy5oICovCmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvc3RhY2tpbmZvLmgg
Yi9zeXNkZXBzL29yMWsvc3RhY2tpbmZvLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMC4uOWVlODNlY2E5MAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9zdGFj
a2luZm8uaApAQCAtMCwwICsxLDM0IEBACisvKiBTdGFjayBkZWZpbml0aW9ucyBmb3IgT3BlblJJ
U0MuCisgICBDb3B5cmlnaHQgKEMpIDIwMjIgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMu
CisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdO
VSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5k
L29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVy
YWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBG
b3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQg
eW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBp
cyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0
IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkg
b2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9T
RS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9y
ZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBH
TlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBD
IExpYnJhcnkuICBJZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMv
Pi4gICovCisKKy8qIFRoaXMgZmlsZSBjb250YWlucyBhIGJpdCBvZiBpbmZvcm1hdGlvbiBhYm91
dCB0aGUgc3RhY2sgYWxsb2NhdGlvbgorICAgb2YgdGhlIHByb2Nlc3Nvci4gICovCisKKyNpZm5k
ZWYgX1NUQUNLSU5GT19ICisjZGVmaW5lIF9TVEFDS0lORk9fSAkxCisKKyNpbmNsdWRlIDxlbGYu
aD4KKworLyogT24gb3IxayB0aGUgc3RhY2sgZ3Jvd3MgZG93bi4gICovCisjZGVmaW5lIF9TVEFD
S19HUk9XU19ET1dOCTEKKworLyogRGVmYXVsdCB0byBhbiBleGVjdXRhYmxlIHN0YWNrLiAgUEZf
WCBjYW4gYmUgb3ZlcnJpZGRlbiBpZiBQVF9HTlVfU1RBQ0sgaXMKKyAgIHByZXNlbnQsIGJ1dCBp
dCBpcyBwcmVzdW1lZCBhYnNlbnQuICAqLworI2RlZmluZSBERUZBVUxUX1NUQUNLX1BFUk1TIChQ
Rl9SIHwgUEZfVyB8IFBGX1gpCisKKyNlbmRpZiAvKiBzdGFja2luZm8uaCAqLwotLSAKMi4zMS4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklT
QyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0
cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
