Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id E0FC0171771
	for <lists+openrisc@lfdr.de>; Thu, 27 Feb 2020 13:35:43 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 9B08220987;
	Thu, 27 Feb 2020 13:35:43 +0100 (CET)
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com
 [148.163.156.1])
 by mail.librecores.org (Postfix) with ESMTPS id A344C207F7
 for <openrisc@lists.librecores.org>; Wed, 26 Feb 2020 10:13:37 +0100 (CET)
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
 by mx0a-001b2d01.pphosted.com (8.16.0.42/8.16.0.42) with SMTP id
 01Q99LZP047088
 for <openrisc@lists.librecores.org>; Wed, 26 Feb 2020 04:13:36 -0500
Received: from e06smtp04.uk.ibm.com (e06smtp04.uk.ibm.com [195.75.94.100])
 by mx0a-001b2d01.pphosted.com with ESMTP id 2ydkf8vmmu-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <openrisc@lists.librecores.org>; Wed, 26 Feb 2020 04:13:35 -0500
Received: from localhost
 by e06smtp04.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <openrisc@lists.librecores.org> from <rppt@kernel.org>;
 Wed, 26 Feb 2020 09:13:32 -0000
Received: from b06cxnps3074.portsmouth.uk.ibm.com (9.149.109.194)
 by e06smtp04.uk.ibm.com (192.168.101.134) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Wed, 26 Feb 2020 09:13:21 -0000
Received: from d06av26.portsmouth.uk.ibm.com (d06av26.portsmouth.uk.ibm.com
 [9.149.105.62])
 by b06cxnps3074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 01Q9DLD463570076
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Wed, 26 Feb 2020 09:13:21 GMT
Received: from d06av26.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id DA2D9AE056;
 Wed, 26 Feb 2020 09:13:20 +0000 (GMT)
Received: from d06av26.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 7EE18AE051;
 Wed, 26 Feb 2020 09:13:17 +0000 (GMT)
Received: from hump (unknown [9.148.207.76])
 by d06av26.portsmouth.uk.ibm.com (Postfix) with ESMTPS;
 Wed, 26 Feb 2020 09:13:17 +0000 (GMT)
Date: Wed, 26 Feb 2020 11:13:15 +0200
From: Mike Rapoport <rppt@kernel.org>
To: Christophe Leroy <christophe.leroy@c-s.fr>
References: <20200216081843.28670-1-rppt@kernel.org>
 <20200216081843.28670-8-rppt@kernel.org>
 <c79b363c-a111-389a-5752-51cf85fa8c44@c-s.fr>
 <20200218105440.GA1698@hump>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20200218105440.GA1698@hump>
X-TM-AS-GCONF: 00
x-cbid: 20022609-0016-0000-0000-000002EA5F05
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 20022609-0017-0000-0000-0000334D8D9E
Message-Id: <20200226091315.GA11803@hump>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:6.0.138, 18.0.572
 definitions=2020-02-26_02:2020-02-25,
 2020-02-26 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 spamscore=0 mlxlogscore=999
 suspectscore=7 malwarescore=0 mlxscore=0 priorityscore=1501
 lowpriorityscore=0 clxscore=1011 bulkscore=0 adultscore=0 phishscore=0
 impostorscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2001150001 definitions=main-2002260070
X-Mailman-Approved-At: Thu, 27 Feb 2020 13:35:25 +0100
Subject: Re: [OpenRISC] [PATCH v2 07/13] powerpc: add support for folded p4d
 page tables
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 Geert Uytterhoeven <geert+renesas@glider.be>, linux-sh@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>, linux-mm@kvack.org,
 Paul Mackerras <paulus@samba.org>, linux-hexagon@vger.kernel.org,
 Will Deacon <will@kernel.org>, kvmarm@lists.cs.columbia.edu,
 Jonas Bonn <jonas@southpole.se>, linux-arch@vger.kernel.org,
 Brian Cain <bcain@codeaurora.org>, Marc Zyngier <maz@kernel.org>,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Mike Rapoport <rppt@linux.ibm.com>, Catalin Marinas <catalin.marinas@arm.com>,
 Julien Thierry <julien.thierry.kdev@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp, Fenghua Yu <fenghua.yu@intel.com>,
 Arnd Bergmann <arnd@arndb.de>, Suzuki K Poulose <suzuki.poulose@arm.com>,
 kvm-ppc@vger.kernel.org, openrisc@lists.librecores.org,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Tony Luck <tony.luck@intel.com>, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-kernel@vger.kernel.org, James Morse <james.morse@arm.com>,
 Michael Ellerman <mpe@ellerman.id.au>, nios2-dev@lists.rocketboards.org,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gVHVlLCBGZWIgMTgsIDIwMjAgYXQgMTI6NTQ6NDBQTSArMDIwMCwgTWlrZSBSYXBvcG9ydCB3
cm90ZToKPiBPbiBTdW4sIEZlYiAxNiwgMjAyMCBhdCAxMTo0MTowN0FNICswMTAwLCBDaHJpc3Rv
cGhlIExlcm95IHdyb3RlOgo+ID4gCj4gPiAKPiA+IExlIDE2LzAyLzIwMjAgw6AgMDk6MTgsIE1p
a2UgUmFwb3BvcnQgYSDDqWNyaXTCoDoKPiA+ID4gRnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBs
aW51eC5pYm0uY29tPgo+ID4gPiAKPiA+ID4gSW1wbGVtZW50IHByaW1pdGl2ZXMgbmVjZXNzYXJ5
IGZvciB0aGUgNHRoIGxldmVsIGZvbGRpbmcsIGFkZCB3YWxrcyBvZiBwNGQKPiA+ID4gbGV2ZWwg
d2hlcmUgYXBwcm9wcmlhdGUgYW5kIHJlcGxhY2UgNWxldmVsLWZpeHVwLmggd2l0aCBwZ3RhYmxl
LW5vcDRkLmguCj4gPiAKPiA+IEkgZG9uJ3QgdGhpbmsgaXQgaXMgd29ydGggYWRkaW5nIGFsbCB0
aGlzIGFkZGl0aW9ubmFscyB3YWxrcyBvZiBwNGQsIHRoaXMKPiA+IHBhdGNoIGNvdWxkIGJlIGxp
bWl0ZWQgdG8gY2hhbmdlcyBsaWtlOgo+ID4gCj4gPiAtCQlwdWQgPSBwdWRfb2Zmc2V0KHBnZCwg
Z3BhKTsKPiA+ICsJCXB1ZCA9IHB1ZF9vZmZzZXQocDRkX29mZnNldChwZ2QsIGdwYSksIGdwYSk7
Cj4gPiAKPiA+IFRoZSBhZGRpdGlvbm5hbCB3YWxrcyBzaG91bGQgYmUgYWRkZWQgdGhyb3VnaCBh
bm90aGVyIHBhdGNoIHRoZSBkYXkgcG93ZXJwYwo+ID4gbmVlZCB0aGVtLgo+IAo+IE9rLCBJJ2xs
IHVwZGF0ZSB0aGUgcGF0Y2ggdG8gcmVkdWNlIHdhbGtpbmcgdGhlIHA0ZC4KCkhlcmUncyB3aGF0
IEkgaGF2ZSB3aXRoIG1vcmUgZGlyZWN0IGFjY2VzZXMgZnJvbSBwZ2QgdG8gcHVkLgoKRnJvbSA2
YzU5YTg2Y2U4Mzk0ZmI2MTAwZTliNmNlZDJlMzQ2OTgxZmIwY2U5IE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQpGcm9tOiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+CkRhdGU6IFN1
biwgMjQgTm92IDIwMTkgMTU6Mzg6MDAgKzAyMDAKU3ViamVjdDogW1BBVENIIHYzXSBwb3dlcnBj
OiBhZGQgc3VwcG9ydCBmb3IgZm9sZGVkIHA0ZCBwYWdlIHRhYmxlcwoKSW1wbGVtZW50IHByaW1p
dGl2ZXMgbmVjZXNzYXJ5IGZvciB0aGUgNHRoIGxldmVsIGZvbGRpbmcsIGFkZCB3YWxrcyBvZiBw
NGQKbGV2ZWwgd2hlcmUgYXBwcm9wcmlhdGUgYW5kIHJlcGxhY2UgNWxldmVsLWZpeHVwLmggd2l0
aCBwZ3RhYmxlLW5vcDRkLmguCgpTaWduZWQtb2ZmLWJ5OiBNaWtlIFJhcG9wb3J0IDxycHB0QGxp
bnV4LmlibS5jb20+ClRlc3RlZC1ieTogQ2hyaXN0b3BoZSBMZXJveSA8Y2hyaXN0b3BoZS5sZXJv
eUBjLXMuZnI+ICMgOHh4IGFuZCA4M3h4Ci0tLQp2MzoKKiByZWR1Y2UgYW1vdW50IG9mIGFkZGVk
IHA0ZCB3YWxrcwoqIGtpbGwgcGd0YWJsZV8zMjo6Z2V0X3B0ZXB0ciBhbmQgdHJhdmVyc2UgcGFn
ZSB0YWJsZSBpbgogIHBndGFibGVfMzI6Ol9fY2hhbmdlX3BhZ2VfYXR0cl9ub2ZsdXNoCgoKIGFy
Y2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvMzIvcGd0YWJsZS5oICB8ICAxIC0KIGFyY2gv
cG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvaGFzaC5oICAgICB8ICA0ICstCiBhcmNoL3Bv
d2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3BnYWxsb2MuaCAgfCAgNCArLQogYXJjaC9wb3dl
cnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmggIHwgNjAgKysrKysrKysrKy0tLS0t
LS0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9yYWRpeC5oICAgIHwgIDYg
Ky0KIGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5oICB8ICAxIC0K
IGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGdhbGxvYy5oICB8ICAyICstCiAu
Li4vaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUtNGsuaCAgICAgICAgfCAzMiArKysrKy0t
LS0tCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaCAgfCAgNiAr
LQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgIHwgIDYgKy0K
IGFyY2gvcG93ZXJwYy9rdm0vYm9vazNzXzY0X21tdV9yYWRpeC5jICAgICAgICB8IDMwICsrKysr
Ky0tLS0KIGFyY2gvcG93ZXJwYy9saWIvY29kZS1wYXRjaGluZy5jICAgICAgICAgICAgICB8ICA3
ICsrLQogYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL21tdS5jICAgICAgICAgICAgICAgIHwgIDIg
Ky0KIGFyY2gvcG93ZXJwYy9tbS9ib29rM3MzMi90bGIuYyAgICAgICAgICAgICAgICB8ICA0ICst
CiBhcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvaGFzaF9wZ3RhYmxlLmMgICAgICAgfCAgNCArLQog
YXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L3JhZGl4X3BndGFibGUuYyAgICAgIHwgMjYgKysrKyst
LS0KIGFyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9zdWJwYWdlX3Byb3QuYyAgICAgICB8ICA2ICst
CiBhcmNoL3Bvd2VycGMvbW0vaHVnZXRsYnBhZ2UuYyAgICAgICAgICAgICAgICAgfCAyOCArKysr
Ky0tLS0KIGFyY2gvcG93ZXJwYy9tbS9rYXNhbi9rYXNhbl9pbml0XzMyLmMgICAgICAgICB8ICA4
ICstLQogYXJjaC9wb3dlcnBjL21tL21lbS5jICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDQg
Ky0KIGFyY2gvcG93ZXJwYy9tbS9ub2hhc2gvNDB4LmMgICAgICAgICAgICAgICAgICB8ICA0ICst
CiBhcmNoL3Bvd2VycGMvbW0vbm9oYXNoL2Jvb2szZV9wZ3RhYmxlLmMgICAgICAgfCAxNSArKy0t
LQogYXJjaC9wb3dlcnBjL21tL3BndGFibGUuYyAgICAgICAgICAgICAgICAgICAgIHwgMzAgKysr
KysrLS0tLQogYXJjaC9wb3dlcnBjL21tL3BndGFibGVfMzIuYyAgICAgICAgICAgICAgICAgIHwg
NDUgKysrLS0tLS0tLS0tLS0KIGFyY2gvcG93ZXJwYy9tbS9wZ3RhYmxlXzY0LmMgICAgICAgICAg
ICAgICAgICB8IDEwICsrLS0KIGFyY2gvcG93ZXJwYy9tbS9wdGR1bXAvaGFzaHBhZ2V0YWJsZS5j
ICAgICAgICB8IDIwICsrKysrKy0KIGFyY2gvcG93ZXJwYy9tbS9wdGR1bXAvcHRkdW1wLmMgICAg
ICAgICAgICAgICB8IDE0ICsrKy0tCiBhcmNoL3Bvd2VycGMveG1vbi94bW9uLmMgICAgICAgICAg
ICAgICAgICAgICAgfCAxOCArKystLS0KIDI4IGZpbGVzIGNoYW5nZWQsIDIxMyBpbnNlcnRpb25z
KCspLCAxODQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUv
YXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNz
LzMyL3BndGFibGUuaAppbmRleCA1YjM5YzExZTg4NGEuLjM5ZWMxMTM3MWJlMCAxMDA2NDQKLS0t
IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmgKKysrIGIvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmgKQEAgLTIsNyArMiw2IEBA
CiAjaWZuZGVmIF9BU01fUE9XRVJQQ19CT09LM1NfMzJfUEdUQUJMRV9ICiAjZGVmaW5lIF9BU01f
UE9XRVJQQ19CT09LM1NfMzJfUEdUQUJMRV9ICiAKLSNkZWZpbmUgX19BUkNIX1VTRV81TEVWRUxf
SEFDSwogI2luY2x1ZGUgPGFzbS1nZW5lcmljL3BndGFibGUtbm9wbWQuaD4KIAogI2luY2x1ZGUg
PGFzbS9ib29rM3MvMzIvaGFzaC5oPgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUv
YXNtL2Jvb2szcy82NC9oYXNoLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0
L2hhc2guaAppbmRleCAyNzgxZWJmNmFkZDQuLjg3NmQxNTI4YzJjZiAxMDA2NDQKLS0tIGEvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmgKKysrIGIvYXJjaC9wb3dlcnBj
L2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmgKQEAgLTEzNCw5ICsxMzQsOSBAQCBzdGF0aWMg
aW5saW5lIGludCBnZXRfcmVnaW9uX2lkKHVuc2lnbmVkIGxvbmcgZWEpCiAKICNkZWZpbmUJaGFz
aF9fcG1kX2JhZChwbWQpCQkocG1kX3ZhbChwbWQpICYgSF9QTURfQkFEX0JJVFMpCiAjZGVmaW5l
CWhhc2hfX3B1ZF9iYWQocHVkKQkJKHB1ZF92YWwocHVkKSAmIEhfUFVEX0JBRF9CSVRTKQotc3Rh
dGljIGlubGluZSBpbnQgaGFzaF9fcGdkX2JhZChwZ2RfdCBwZ2QpCitzdGF0aWMgaW5saW5lIGlu
dCBoYXNoX19wNGRfYmFkKHA0ZF90IHA0ZCkKIHsKLQlyZXR1cm4gKHBnZF92YWwocGdkKSA9PSAw
KTsKKwlyZXR1cm4gKHA0ZF92YWwocDRkKSA9PSAwKTsKIH0KICNpZmRlZiBDT05GSUdfU1RSSUNU
X0tFUk5FTF9SV1gKIGV4dGVybiB2b2lkIGhhc2hfX21hcmtfcm9kYXRhX3JvKHZvaWQpOwpkaWZm
IC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ2FsbG9jLmggYi9h
cmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3BnYWxsb2MuaAppbmRleCBhNDFlOTFi
ZDA1ODAuLjY5YzViMDUxNzM0ZiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNt
L2Jvb2szcy82NC9wZ2FsbG9jLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2sz
cy82NC9wZ2FsbG9jLmgKQEAgLTg1LDkgKzg1LDkgQEAgc3RhdGljIGlubGluZSB2b2lkIHBnZF9m
cmVlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwZ2RfdCAqcGdkKQogCWttZW1fY2FjaGVfZnJlZShQ
R1RfQ0FDSEUoUEdEX0lOREVYX1NJWkUpLCBwZ2QpOwogfQogCi1zdGF0aWMgaW5saW5lIHZvaWQg
cGdkX3BvcHVsYXRlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwZ2RfdCAqcGdkLCBwdWRfdCAqcHVk
KQorc3RhdGljIGlubGluZSB2b2lkIHA0ZF9wb3B1bGF0ZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwg
cDRkX3QgKnBnZCwgcHVkX3QgKnB1ZCkKIHsKLQkqcGdkID0gIF9fcGdkKF9fcGd0YWJsZV9wdHJf
dmFsKHB1ZCkgfCBQR0RfVkFMX0JJVFMpOworCSpwZ2QgPSAgX19wNGQoX19wZ3RhYmxlX3B0cl92
YWwocHVkKSB8IFBHRF9WQUxfQklUUyk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9h
bGxvY19vbmUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcikKZGlmZiAt
LWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oIGIvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmgKaW5kZXggMjAxYTY5ZTZh
MzU1Li5mYTYwZTg1OTRiOWYgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9i
b29rM3MvNjQvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3Mv
NjQvcGd0YWJsZS5oCkBAIC0yLDcgKzIsNyBAQAogI2lmbmRlZiBfQVNNX1BPV0VSUENfQk9PSzNT
XzY0X1BHVEFCTEVfSF8KICNkZWZpbmUgX0FTTV9QT1dFUlBDX0JPT0szU182NF9QR1RBQkxFX0hf
CiAKLSNpbmNsdWRlIDxhc20tZ2VuZXJpYy81bGV2ZWwtZml4dXAuaD4KKyNpbmNsdWRlIDxhc20t
Z2VuZXJpYy9wZ3RhYmxlLW5vcDRkLmg+CiAKICNpZm5kZWYgX19BU1NFTUJMWV9fCiAjaW5jbHVk
ZSA8bGludXgvbW1kZWJ1Zy5oPgpAQCAtMjUxLDcgKzI1MSw3IEBAIGV4dGVybiB1bnNpZ25lZCBs
b25nIF9fcG1kX2ZyYWdfc2l6ZV9zaGlmdDsKIC8qIEJpdHMgdG8gbWFzayBvdXQgZnJvbSBhIFBV
RCB0byBnZXQgdG8gdGhlIFBNRCBwYWdlICovCiAjZGVmaW5lIFBVRF9NQVNLRURfQklUUwkJMHhj
MDAwMDAwMDAwMDAwMGZmVUwKIC8qIEJpdHMgdG8gbWFzayBvdXQgZnJvbSBhIFBHRCB0byBnZXQg
dG8gdGhlIFBVRCBwYWdlICovCi0jZGVmaW5lIFBHRF9NQVNLRURfQklUUwkJMHhjMDAwMDAwMDAw
MDAwMGZmVUwKKyNkZWZpbmUgUDREX01BU0tFRF9CSVRTCQkweGMwMDAwMDAwMDAwMDAwZmZVTAog
CiAvKgogICogVXNlZCBhcyBhbiBpbmRpY2F0b3IgZm9yIHJjdSBjYWxsYmFjayBmdW5jdGlvbnMK
QEAgLTk0OSw1NCArOTQ5LDYwIEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBwdWRfYWNjZXNzX3Blcm1p
dHRlZChwdWRfdCBwdWQsIGJvb2wgd3JpdGUpCiAJcmV0dXJuIHB0ZV9hY2Nlc3NfcGVybWl0dGVk
KHB1ZF9wdGUocHVkKSwgd3JpdGUpOwogfQogCi0jZGVmaW5lIHBnZF93cml0ZShwZ2QpCQlwdGVf
d3JpdGUocGdkX3B0ZShwZ2QpKQorI2RlZmluZSBfX3A0ZF9yYXcoeCkJKChwNGRfdCkgeyBfX3Bn
ZF9yYXcoeCkgfSkKK3N0YXRpYyBpbmxpbmUgX19iZTY0IHA0ZF9yYXcocDRkX3QgeCkKK3sKKwly
ZXR1cm4gcGdkX3Jhdyh4LnBnZCk7Cit9CisKKyNkZWZpbmUgcDRkX3dyaXRlKHA0ZCkJCXB0ZV93
cml0ZShwNGRfcHRlKHA0ZCkpCiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBwZ2RfY2xlYXIocGdkX3Qg
KnBnZHApCitzdGF0aWMgaW5saW5lIHZvaWQgcDRkX2NsZWFyKHA0ZF90ICpwNGRwKQogewotCSpw
Z2RwID0gX19wZ2QoMCk7CisJKnA0ZHAgPSBfX3A0ZCgwKTsKIH0KIAotc3RhdGljIGlubGluZSBp
bnQgcGdkX25vbmUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBpbnQgcDRkX25vbmUocDRkX3Qg
cDRkKQogewotCXJldHVybiAhcGdkX3JhdyhwZ2QpOworCXJldHVybiAhcDRkX3JhdyhwNGQpOwog
fQogCi1zdGF0aWMgaW5saW5lIGludCBwZ2RfcHJlc2VudChwZ2RfdCBwZ2QpCitzdGF0aWMgaW5s
aW5lIGludCBwNGRfcHJlc2VudChwNGRfdCBwNGQpCiB7Ci0JcmV0dXJuICEhKHBnZF9yYXcocGdk
KSAmIGNwdV90b19iZTY0KF9QQUdFX1BSRVNFTlQpKTsKKwlyZXR1cm4gISEocDRkX3JhdyhwNGQp
ICYgY3B1X3RvX2JlNjQoX1BBR0VfUFJFU0VOVCkpOwogfQogCi1zdGF0aWMgaW5saW5lIHB0ZV90
IHBnZF9wdGUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBwdGVfdCBwNGRfcHRlKHA0ZF90IHA0
ZCkKIHsKLQlyZXR1cm4gX19wdGVfcmF3KHBnZF9yYXcocGdkKSk7CisJcmV0dXJuIF9fcHRlX3Jh
dyhwNGRfcmF3KHA0ZCkpOwogfQogCi1zdGF0aWMgaW5saW5lIHBnZF90IHB0ZV9wZ2QocHRlX3Qg
cHRlKQorc3RhdGljIGlubGluZSBwNGRfdCBwdGVfcDRkKHB0ZV90IHB0ZSkKIHsKLQlyZXR1cm4g
X19wZ2RfcmF3KHB0ZV9yYXcocHRlKSk7CisJcmV0dXJuIF9fcDRkX3JhdyhwdGVfcmF3KHB0ZSkp
OwogfQogCi1zdGF0aWMgaW5saW5lIGludCBwZ2RfYmFkKHBnZF90IHBnZCkKK3N0YXRpYyBpbmxp
bmUgaW50IHA0ZF9iYWQocDRkX3QgcDRkKQogewogCWlmIChyYWRpeF9lbmFibGVkKCkpCi0JCXJl
dHVybiByYWRpeF9fcGdkX2JhZChwZ2QpOwotCXJldHVybiBoYXNoX19wZ2RfYmFkKHBnZCk7CisJ
CXJldHVybiByYWRpeF9fcDRkX2JhZChwNGQpOworCXJldHVybiBoYXNoX19wNGRfYmFkKHA0ZCk7
CiB9CiAKLSNkZWZpbmUgcGdkX2FjY2Vzc19wZXJtaXR0ZWQgcGdkX2FjY2Vzc19wZXJtaXR0ZWQK
LXN0YXRpYyBpbmxpbmUgYm9vbCBwZ2RfYWNjZXNzX3Blcm1pdHRlZChwZ2RfdCBwZ2QsIGJvb2wg
d3JpdGUpCisjZGVmaW5lIHA0ZF9hY2Nlc3NfcGVybWl0dGVkIHA0ZF9hY2Nlc3NfcGVybWl0dGVk
CitzdGF0aWMgaW5saW5lIGJvb2wgcDRkX2FjY2Vzc19wZXJtaXR0ZWQocDRkX3QgcDRkLCBib29s
IHdyaXRlKQogewotCXJldHVybiBwdGVfYWNjZXNzX3Blcm1pdHRlZChwZ2RfcHRlKHBnZCksIHdy
aXRlKTsKKwlyZXR1cm4gcHRlX2FjY2Vzc19wZXJtaXR0ZWQocDRkX3B0ZShwNGQpLCB3cml0ZSk7
CiB9CiAKLWV4dGVybiBzdHJ1Y3QgcGFnZSAqcGdkX3BhZ2UocGdkX3QgcGdkKTsKK2V4dGVybiBz
dHJ1Y3QgcGFnZSAqcDRkX3BhZ2UocDRkX3QgcDRkKTsKIAogLyogUG9pbnRlcnMgaW4gdGhlIHBh
Z2UgdGFibGUgdHJlZSBhcmUgcGh5c2ljYWwgYWRkcmVzc2VzICovCiAjZGVmaW5lIF9fcGd0YWJs
ZV9wdHJfdmFsKHB0cikJX19wYShwdHIpCiAKICNkZWZpbmUgcG1kX3BhZ2VfdmFkZHIocG1kKQlf
X3ZhKHBtZF92YWwocG1kKSAmIH5QTURfTUFTS0VEX0JJVFMpCiAjZGVmaW5lIHB1ZF9wYWdlX3Zh
ZGRyKHB1ZCkJX192YShwdWRfdmFsKHB1ZCkgJiB+UFVEX01BU0tFRF9CSVRTKQotI2RlZmluZSBw
Z2RfcGFnZV92YWRkcihwZ2QpCV9fdmEocGdkX3ZhbChwZ2QpICYgflBHRF9NQVNLRURfQklUUykK
KyNkZWZpbmUgcDRkX3BhZ2VfdmFkZHIocDRkKQlfX3ZhKHA0ZF92YWwocDRkKSAmIH5QNERfTUFT
S0VEX0JJVFMpCiAKICNkZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IChQ
R0RJUl9TSElGVCkpICYgKFBUUlNfUEVSX1BHRCAtIDEpKQogI2RlZmluZSBwdWRfaW5kZXgoYWRk
cmVzcykgKCgoYWRkcmVzcykgPj4gKFBVRF9TSElGVCkpICYgKFBUUlNfUEVSX1BVRCAtIDEpKQpA
QCAtMTAxMCw4ICsxMDE2LDggQEAgZXh0ZXJuIHN0cnVjdCBwYWdlICpwZ2RfcGFnZShwZ2RfdCBw
Z2QpOwogCiAjZGVmaW5lIHBnZF9vZmZzZXQobW0sIGFkZHJlc3MpCSAoKG1tKS0+cGdkICsgcGdk
X2luZGV4KGFkZHJlc3MpKQogCi0jZGVmaW5lIHB1ZF9vZmZzZXQocGdkcCwgYWRkcikJXAotCSgo
KHB1ZF90ICopIHBnZF9wYWdlX3ZhZGRyKCoocGdkcCkpKSArIHB1ZF9pbmRleChhZGRyKSkKKyNk
ZWZpbmUgcHVkX29mZnNldChwNGRwLCBhZGRyKQlcCisJKCgocHVkX3QgKikgcDRkX3BhZ2VfdmFk
ZHIoKihwNGRwKSkpICsgcHVkX2luZGV4KGFkZHIpKQogI2RlZmluZSBwbWRfb2Zmc2V0KHB1ZHAs
YWRkcikgXAogCSgoKHBtZF90ICopIHB1ZF9wYWdlX3ZhZGRyKCoocHVkcCkpKSArIHBtZF9pbmRl
eChhZGRyKSkKICNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGlyLGFkZHIpIFwKQEAgLTEzNjgs
MTEgKzEzNzQsMTEgQEAgc3RhdGljIGlubGluZSBib29sIHB1ZF9pc19sZWFmKHB1ZF90IHB1ZCkK
IAlyZXR1cm4gISEocHVkX3JhdyhwdWQpICYgY3B1X3RvX2JlNjQoX1BBR0VfUFRFKSk7CiB9CiAK
LSNkZWZpbmUgcGdkX2lzX2xlYWYgcGdkX2lzX2xlYWYKLSNkZWZpbmUgcGdkX2xlYWYgcGdkX2lz
X2xlYWYKLXN0YXRpYyBpbmxpbmUgYm9vbCBwZ2RfaXNfbGVhZihwZ2RfdCBwZ2QpCisjZGVmaW5l
IHA0ZF9pc19sZWFmIHA0ZF9pc19sZWFmCisjZGVmaW5lIHA0ZF9sZWFmIHA0ZF9pc19sZWFmCitz
dGF0aWMgaW5saW5lIGJvb2wgcDRkX2lzX2xlYWYocDRkX3QgcDRkKQogewotCXJldHVybiAhIShw
Z2RfcmF3KHBnZCkgJiBjcHVfdG9fYmU2NChfUEFHRV9QVEUpKTsKKwlyZXR1cm4gISEocDRkX3Jh
dyhwNGQpICYgY3B1X3RvX2JlNjQoX1BBR0VfUFRFKSk7CiB9CiAKICNlbmRpZiAvKiBfX0FTU0VN
QkxZX18gKi8KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQv
cmFkaXguaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcmFkaXguaAppbmRl
eCBkOTdkYjNhZDlhYWUuLjliY2EyYWM2NDIyMCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2lu
Y2x1ZGUvYXNtL2Jvb2szcy82NC9yYWRpeC5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2Fz
bS9ib29rM3MvNjQvcmFkaXguaApAQCAtMzAsNyArMzAsNyBAQAogLyogRG9uJ3QgaGF2ZSBhbnl0
aGluZyBpbiB0aGUgcmVzZXJ2ZWQgYml0cyBhbmQgbGVhZiBiaXRzICovCiAjZGVmaW5lIFJBRElY
X1BNRF9CQURfQklUUwkJMHg2MDAwMDAwMDAwMDAwMGUwVUwKICNkZWZpbmUgUkFESVhfUFVEX0JB
RF9CSVRTCQkweDYwMDAwMDAwMDAwMDAwZTBVTAotI2RlZmluZSBSQURJWF9QR0RfQkFEX0JJVFMJ
CTB4NjAwMDAwMDAwMDAwMDBlMFVMCisjZGVmaW5lIFJBRElYX1A0RF9CQURfQklUUwkJMHg2MDAw
MDAwMDAwMDAwMGUwVUwKIAogI2RlZmluZSBSQURJWF9QTURfU0hJRlQJCShQQUdFX1NISUZUICsg
UkFESVhfUFRFX0lOREVYX1NJWkUpCiAjZGVmaW5lIFJBRElYX1BVRF9TSElGVAkJKFJBRElYX1BN
RF9TSElGVCArIFJBRElYX1BNRF9JTkRFWF9TSVpFKQpAQCAtMjI3LDkgKzIyNyw5IEBAIHN0YXRp
YyBpbmxpbmUgaW50IHJhZGl4X19wdWRfYmFkKHB1ZF90IHB1ZCkKIH0KIAogCi1zdGF0aWMgaW5s
aW5lIGludCByYWRpeF9fcGdkX2JhZChwZ2RfdCBwZ2QpCitzdGF0aWMgaW5saW5lIGludCByYWRp
eF9fcDRkX2JhZChwNGRfdCBwNGQpCiB7Ci0JcmV0dXJuICEhKHBnZF92YWwocGdkKSAmIFJBRElY
X1BHRF9CQURfQklUUyk7CisJcmV0dXJuICEhKHA0ZF92YWwocDRkKSAmIFJBRElYX1A0RF9CQURf
QklUUyk7CiB9CiAKICNpZmRlZiBDT05GSUdfVFJBTlNQQVJFTlRfSFVHRVBBR0UKZGlmZiAtLWdp
dCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5oIGIvYXJjaC9w
b3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC8zMi9wZ3RhYmxlLmgKaW5kZXggNjBjNGQ4MjkxNTJl
Li5kNGMyYzQyNTlmYTMgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hh
c2gvMzIvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIv
cGd0YWJsZS5oCkBAIC0yLDcgKzIsNiBAQAogI2lmbmRlZiBfQVNNX1BPV0VSUENfTk9IQVNIXzMy
X1BHVEFCTEVfSAogI2RlZmluZSBfQVNNX1BPV0VSUENfTk9IQVNIXzMyX1BHVEFCTEVfSAogCi0j
ZGVmaW5lIF9fQVJDSF9VU0VfNUxFVkVMX0hBQ0sKICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9wZ3Rh
YmxlLW5vcG1kLmg+CiAKICNpZm5kZWYgX19BU1NFTUJMWV9fCmRpZmYgLS1naXQgYS9hcmNoL3Bv
d2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BnYWxsb2MuaCBiL2FyY2gvcG93ZXJwYy9pbmNs
dWRlL2FzbS9ub2hhc2gvNjQvcGdhbGxvYy5oCmluZGV4IGI5NTM0YTc5MzI5My4uNjY4YWVlNjAx
N2U3IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BnYWxs
b2MuaAorKysgYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BnYWxsb2MuaApA
QCAtMTUsNyArMTUsNyBAQCBzdHJ1Y3Qgdm1lbW1hcF9iYWNraW5nIHsKIH07CiBleHRlcm4gc3Ry
dWN0IHZtZW1tYXBfYmFja2luZyAqdm1lbW1hcF9saXN0OwogCi0jZGVmaW5lIHBnZF9wb3B1bGF0
ZShNTSwgUEdELCBQVUQpCXBnZF9zZXQoUEdELCAodW5zaWduZWQgbG9uZylQVUQpCisjZGVmaW5l
IHA0ZF9wb3B1bGF0ZShNTSwgUDRELCBQVUQpCXA0ZF9zZXQoUDRELCAodW5zaWduZWQgbG9uZylQ
VUQpCiAKIHN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9hbGxvY19vbmUoc3RydWN0IG1tX3N0cnVj
dCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcikKIHsKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9p
bmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJsZS00ay5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUv
YXNtL25vaGFzaC82NC9wZ3RhYmxlLTRrLmgKaW5kZXggYzQwZWMzMmI4MTk0Li44MWIxYzU0ZTNj
ZjEgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJs
ZS00ay5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJsZS00
ay5oCkBAIC0yLDcgKzIsNyBAQAogI2lmbmRlZiBfQVNNX1BPV0VSUENfTk9IQVNIXzY0X1BHVEFC
TEVfNEtfSAogI2RlZmluZSBfQVNNX1BPV0VSUENfTk9IQVNIXzY0X1BHVEFCTEVfNEtfSAogCi0j
aW5jbHVkZSA8YXNtLWdlbmVyaWMvNWxldmVsLWZpeHVwLmg+CisjaW5jbHVkZSA8YXNtLWdlbmVy
aWMvcGd0YWJsZS1ub3A0ZC5oPgogCiAvKgogICogRW50cmllcyBwZXIgcGFnZSBkaXJlY3Rvcnkg
bGV2ZWwuICBUaGUgUFRFIGxldmVsIG11c3QgdXNlIGEgNjRiIHJlY29yZApAQCAtNDUsNDEgKzQ1
LDQxIEBACiAjZGVmaW5lIFBNRF9NQVNLRURfQklUUwkJMAogLyogQml0cyB0byBtYXNrIG91dCBm
cm9tIGEgUFVEIHRvIGdldCB0byB0aGUgUE1EIHBhZ2UgKi8KICNkZWZpbmUgUFVEX01BU0tFRF9C
SVRTCQkwCi0vKiBCaXRzIHRvIG1hc2sgb3V0IGZyb20gYSBQR0QgdG8gZ2V0IHRvIHRoZSBQVUQg
cGFnZSAqLwotI2RlZmluZSBQR0RfTUFTS0VEX0JJVFMJCTAKKy8qIEJpdHMgdG8gbWFzayBvdXQg
ZnJvbSBhIFA0RCB0byBnZXQgdG8gdGhlIFBVRCBwYWdlICovCisjZGVmaW5lIFA0RF9NQVNLRURf
QklUUwkJMAogCiAKIC8qCiAgKiA0LWxldmVsIHBhZ2UgdGFibGVzIHJlbGF0ZWQgYml0cwogICov
CiAKLSNkZWZpbmUgcGdkX25vbmUocGdkKQkJKCFwZ2RfdmFsKHBnZCkpCi0jZGVmaW5lIHBnZF9i
YWQocGdkKQkJKHBnZF92YWwocGdkKSA9PSAwKQotI2RlZmluZSBwZ2RfcHJlc2VudChwZ2QpCShw
Z2RfdmFsKHBnZCkgIT0gMCkKLSNkZWZpbmUgcGdkX3BhZ2VfdmFkZHIocGdkKQkocGdkX3ZhbChw
Z2QpICYgflBHRF9NQVNLRURfQklUUykKKyNkZWZpbmUgcDRkX25vbmUocDRkKQkJKCFwNGRfdmFs
KHA0ZCkpCisjZGVmaW5lIHA0ZF9iYWQocDRkKQkJKHA0ZF92YWwocDRkKSA9PSAwKQorI2RlZmlu
ZSBwNGRfcHJlc2VudChwNGQpCShwNGRfdmFsKHA0ZCkgIT0gMCkKKyNkZWZpbmUgcDRkX3BhZ2Vf
dmFkZHIocDRkKQkocDRkX3ZhbChwNGQpICYgflA0RF9NQVNLRURfQklUUykKIAogI2lmbmRlZiBf
X0FTU0VNQkxZX18KIAotc3RhdGljIGlubGluZSB2b2lkIHBnZF9jbGVhcihwZ2RfdCAqcGdkcCkK
K3N0YXRpYyBpbmxpbmUgdm9pZCBwNGRfY2xlYXIocDRkX3QgKnA0ZHApCiB7Ci0JKnBnZHAgPSBf
X3BnZCgwKTsKKwkqcDRkcCA9IF9fcDRkKDApOwogfQogCi1zdGF0aWMgaW5saW5lIHB0ZV90IHBn
ZF9wdGUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBwdGVfdCBwNGRfcHRlKHA0ZF90IHA0ZCkK
IHsKLQlyZXR1cm4gX19wdGUocGdkX3ZhbChwZ2QpKTsKKwlyZXR1cm4gX19wdGUocDRkX3ZhbChw
NGQpKTsKIH0KIAotc3RhdGljIGlubGluZSBwZ2RfdCBwdGVfcGdkKHB0ZV90IHB0ZSkKK3N0YXRp
YyBpbmxpbmUgcDRkX3QgcHRlX3A0ZChwdGVfdCBwdGUpCiB7Ci0JcmV0dXJuIF9fcGdkKHB0ZV92
YWwocHRlKSk7CisJcmV0dXJuIF9fcDRkKHB0ZV92YWwocHRlKSk7CiB9Ci1leHRlcm4gc3RydWN0
IHBhZ2UgKnBnZF9wYWdlKHBnZF90IHBnZCk7CitleHRlcm4gc3RydWN0IHBhZ2UgKnA0ZF9wYWdl
KHA0ZF90IHA0ZCk7CiAKICNlbmRpZiAvKiAhX19BU1NFTUJMWV9fICovCiAKLSNkZWZpbmUgcHVk
X29mZnNldChwZ2RwLCBhZGRyKQlcCi0gICgoKHB1ZF90ICopIHBnZF9wYWdlX3ZhZGRyKCoocGdk
cCkpKSArIFwKKyNkZWZpbmUgcHVkX29mZnNldChwNGRwLCBhZGRyKQlcCisgICgoKHB1ZF90ICop
IHA0ZF9wYWdlX3ZhZGRyKCoocDRkcCkpKSArIFwKICAgICAoKChhZGRyKSA+PiBQVURfU0hJRlQp
ICYgKFBUUlNfUEVSX1BVRCAtIDEpKSkKIAogI2RlZmluZSBwdWRfRVJST1IoZSkgXApkaWZmIC0t
Z2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxlLmggYi9hcmNo
L3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaAppbmRleCA5YTMzYjhiZDg0
MmQuLmIzNjBmMjYyYjljNiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25v
aGFzaC82NC9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82
NC9wZ3RhYmxlLmgKQEAgLTE3NSwxMSArMTc1LDExIEBAIHN0YXRpYyBpbmxpbmUgcHVkX3QgcHRl
X3B1ZChwdGVfdCBwdGUpCiAJcmV0dXJuIF9fcHVkKHB0ZV92YWwocHRlKSk7CiB9CiAjZGVmaW5l
IHB1ZF93cml0ZShwdWQpCQlwdGVfd3JpdGUocHVkX3B0ZShwdWQpKQotI2RlZmluZSBwZ2Rfd3Jp
dGUocGdkKQkJcHRlX3dyaXRlKHBnZF9wdGUocGdkKSkKKyNkZWZpbmUgcDRkX3dyaXRlKHBnZCkJ
CXB0ZV93cml0ZShwNGRfcHRlKHA0ZCkpCiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBwZ2Rfc2V0KHBn
ZF90ICpwZ2RwLCB1bnNpZ25lZCBsb25nIHZhbCkKK3N0YXRpYyBpbmxpbmUgdm9pZCBwNGRfc2V0
KHA0ZF90ICpwNGRwLCB1bnNpZ25lZCBsb25nIHZhbCkKIHsKLQkqcGdkcCA9IF9fcGdkKHZhbCk7
CisJKnA0ZHAgPSBfX3A0ZCh2YWwpOwogfQogCiAvKgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBj
L2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wZ3RhYmxl
LmgKaW5kZXggOGNjNTQzZWQxMTRjLi4wNTIwNWQ3YTdiNGEgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93
ZXJwYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNt
L3BndGFibGUuaApAQCAtMTM5LDkgKzEzOSw5IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBwdWRfaXNf
bGVhZihwdWRfdCBwdWQpCiB9CiAjZW5kaWYKIAotI2lmbmRlZiBwZ2RfaXNfbGVhZgotI2RlZmlu
ZSBwZ2RfaXNfbGVhZiBwZ2RfaXNfbGVhZgotc3RhdGljIGlubGluZSBib29sIHBnZF9pc19sZWFm
KHBnZF90IHBnZCkKKyNpZm5kZWYgcDRkX2lzX2xlYWYKKyNkZWZpbmUgcDRkX2lzX2xlYWYgcDRk
X2lzX2xlYWYKK3N0YXRpYyBpbmxpbmUgYm9vbCBwNGRfaXNfbGVhZihwNGRfdCBwNGQpCiB7CiAJ
cmV0dXJuIGZhbHNlOwogfQpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2t2bS9ib29rM3NfNjRf
bW11X3JhZGl4LmMgYi9hcmNoL3Bvd2VycGMva3ZtL2Jvb2szc182NF9tbXVfcmFkaXguYwppbmRl
eCA4MDM5NDBkNzliNzMuLmJlYjY5NDI4NTEwMCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2t2
bS9ib29rM3NfNjRfbW11X3JhZGl4LmMKKysrIGIvYXJjaC9wb3dlcnBjL2t2bS9ib29rM3NfNjRf
bW11X3JhZGl4LmMKQEAgLTQ5OSwxMyArNDk5LDE0IEBAIHZvaWQga3ZtcHBjX2ZyZWVfcGd0YWJs
ZV9yYWRpeChzdHJ1Y3Qga3ZtICprdm0sIHBnZF90ICpwZ2QsIHVuc2lnbmVkIGludCBscGlkKQog
CXVuc2lnbmVkIGxvbmcgaWc7CiAKIAlmb3IgKGlnID0gMDsgaWcgPCBQVFJTX1BFUl9QR0Q7ICsr
aWcsICsrcGdkKSB7CisJCXA0ZF90ICpwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgMCk7CiAJCXB1ZF90
ICpwdWQ7CiAKLQkJaWYgKCFwZ2RfcHJlc2VudCgqcGdkKSkKKwkJaWYgKCFwNGRfcHJlc2VudCgq
cDRkKSkKIAkJCWNvbnRpbnVlOwotCQlwdWQgPSBwdWRfb2Zmc2V0KHBnZCwgMCk7CisJCXB1ZCA9
IHB1ZF9vZmZzZXQocDRkLCAwKTsKIAkJa3ZtcHBjX3VubWFwX2ZyZWVfcHVkKGt2bSwgcHVkLCBs
cGlkKTsKLQkJcGdkX2NsZWFyKHBnZCk7CisJCXA0ZF9jbGVhcihwNGQpOwogCX0KIH0KIApAQCAt
NTY2LDYgKzU2Nyw3IEBAIGludCBrdm1wcGNfY3JlYXRlX3B0ZShzdHJ1Y3Qga3ZtICprdm0sIHBn
ZF90ICpwZ3RhYmxlLCBwdGVfdCBwdGUsCiAJCSAgICAgIHVuc2lnbmVkIGxvbmcgKnJtYXBwLCBz
dHJ1Y3Qgcm1hcF9uZXN0ZWQgKipuX3JtYXApCiB7CiAJcGdkX3QgKnBnZDsKKwlwNGRfdCAqcDRk
OwogCXB1ZF90ICpwdWQsICpuZXdfcHVkID0gTlVMTDsKIAlwbWRfdCAqcG1kLCAqbmV3X3BtZCA9
IE5VTEw7CiAJcHRlX3QgKnB0ZXAsICpuZXdfcHRlcCA9IE5VTEw7CkBAIC01NzMsOSArNTc1LDEx
IEBAIGludCBrdm1wcGNfY3JlYXRlX3B0ZShzdHJ1Y3Qga3ZtICprdm0sIHBnZF90ICpwZ3RhYmxl
LCBwdGVfdCBwdGUsCiAKIAkvKiBUcmF2ZXJzZSB0aGUgZ3Vlc3QncyAybmQtbGV2ZWwgdHJlZSwg
YWxsb2NhdGUgbmV3IGxldmVscyBuZWVkZWQgKi8KIAlwZ2QgPSBwZ3RhYmxlICsgcGdkX2luZGV4
KGdwYSk7CisJcDRkID0gcDRkX29mZnNldChwZ2QsIGdwYSk7CisKIAlwdWQgPSBOVUxMOwotCWlm
IChwZ2RfcHJlc2VudCgqcGdkKSkKLQkJcHVkID0gcHVkX29mZnNldChwZ2QsIGdwYSk7CisJaWYg
KHA0ZF9wcmVzZW50KCpwNGQpKQorCQlwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgZ3BhKTsKIAllbHNl
CiAJCW5ld19wdWQgPSBwdWRfYWxsb2Nfb25lKGt2bS0+bW0sIGdwYSk7CiAKQEAgLTU5NiwxMyAr
NjAwLDEzIEBAIGludCBrdm1wcGNfY3JlYXRlX3B0ZShzdHJ1Y3Qga3ZtICprdm0sIHBnZF90ICpw
Z3RhYmxlLCBwdGVfdCBwdGUsCiAKIAkvKiBOb3cgdHJhdmVyc2UgYWdhaW4gdW5kZXIgdGhlIGxv
Y2sgYW5kIGNoYW5nZSB0aGUgdHJlZSAqLwogCXJldCA9IC1FTk9NRU07Ci0JaWYgKHBnZF9ub25l
KCpwZ2QpKSB7CisJaWYgKHA0ZF9ub25lKCpwNGQpKSB7CiAJCWlmICghbmV3X3B1ZCkKIAkJCWdv
dG8gb3V0X3VubG9jazsKLQkJcGdkX3BvcHVsYXRlKGt2bS0+bW0sIHBnZCwgbmV3X3B1ZCk7CisJ
CXA0ZF9wb3B1bGF0ZShrdm0tPm1tLCBwNGQsIG5ld19wdWQpOwogCQluZXdfcHVkID0gTlVMTDsK
IAl9Ci0JcHVkID0gcHVkX29mZnNldChwZ2QsIGdwYSk7CisJcHVkID0gcHVkX29mZnNldChwNGQs
IGdwYSk7CiAJaWYgKHB1ZF9pc19sZWFmKCpwdWQpKSB7CiAJCXVuc2lnbmVkIGxvbmcgaGdwYSA9
IGdwYSAmIFBVRF9NQVNLOwogCkBAIC0xMjIwLDYgKzEyMjQsNyBAQCBzdGF0aWMgc3NpemVfdCBk
ZWJ1Z2ZzX3JhZGl4X3JlYWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2VyICpidWYsCiAJ
cGdkX3QgKnBndDsKIAlzdHJ1Y3Qga3ZtX25lc3RlZF9ndWVzdCAqbmVzdGVkOwogCXBnZF90IHBn
ZCwgKnBnZHA7CisJcDRkX3QgcDRkLCAqcDRkcDsKIAlwdWRfdCBwdWQsICpwdWRwOwogCXBtZF90
IHBtZCwgKnBtZHA7CiAJcHRlX3QgKnB0ZXA7CkBAIC0xMjkyLDEzICsxMjk3LDE0IEBAIHN0YXRp
YyBzc2l6ZV90IGRlYnVnZnNfcmFkaXhfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBfX3Vz
ZXIgKmJ1ZiwKIAkJfQogCiAJCXBnZHAgPSBwZ3QgKyBwZ2RfaW5kZXgoZ3BhKTsKLQkJcGdkID0g
UkVBRF9PTkNFKCpwZ2RwKTsKLQkJaWYgKCEocGdkX3ZhbChwZ2QpICYgX1BBR0VfUFJFU0VOVCkp
IHsKLQkJCWdwYSA9IChncGEgJiBQR0RJUl9NQVNLKSArIFBHRElSX1NJWkU7CisJCXA0ZHAgPSBw
NGRfb2Zmc2V0KHBnZHAsIGdwYSk7CisJCXA0ZCA9IFJFQURfT05DRSgqcDRkcCk7CisJCWlmICgh
KHA0ZF92YWwocDRkKSAmIF9QQUdFX1BSRVNFTlQpKSB7CisJCQlncGEgPSAoZ3BhICYgUDREX01B
U0spICsgUDREX1NJWkU7CiAJCQljb250aW51ZTsKIAkJfQogCi0JCXB1ZHAgPSBwdWRfb2Zmc2V0
KCZwZ2QsIGdwYSk7CisJCXB1ZHAgPSBwdWRfb2Zmc2V0KCZwNGQsIGdwYSk7CiAJCXB1ZCA9IFJF
QURfT05DRSgqcHVkcCk7CiAJCWlmICghKHB1ZF92YWwocHVkKSAmIF9QQUdFX1BSRVNFTlQpKSB7
CiAJCQlncGEgPSAoZ3BhICYgUFVEX01BU0spICsgUFVEX1NJWkU7CmRpZmYgLS1naXQgYS9hcmNo
L3Bvd2VycGMvbGliL2NvZGUtcGF0Y2hpbmcuYyBiL2FyY2gvcG93ZXJwYy9saWIvY29kZS1wYXRj
aGluZy5jCmluZGV4IDMzNDVmMDM5YTg3Ni4uN2E1OWY2ODYzY2VjIDEwMDY0NAotLS0gYS9hcmNo
L3Bvd2VycGMvbGliL2NvZGUtcGF0Y2hpbmcuYworKysgYi9hcmNoL3Bvd2VycGMvbGliL2NvZGUt
cGF0Y2hpbmcuYwpAQCAtMTA3LDEzICsxMDcsMTggQEAgc3RhdGljIGlubGluZSBpbnQgdW5tYXBf
cGF0Y2hfYXJlYSh1bnNpZ25lZCBsb25nIGFkZHIpCiAJcHRlX3QgKnB0ZXA7CiAJcG1kX3QgKnBt
ZHA7CiAJcHVkX3QgKnB1ZHA7CisJcDRkX3QgKnA0ZHA7CiAJcGdkX3QgKnBnZHA7CiAKIAlwZ2Rw
ID0gcGdkX29mZnNldF9rKGFkZHIpOwogCWlmICh1bmxpa2VseSghcGdkcCkpCiAJCXJldHVybiAt
RUlOVkFMOwogCi0JcHVkcCA9IHB1ZF9vZmZzZXQocGdkcCwgYWRkcik7CisJcDRkcCA9IHA0ZF9v
ZmZzZXQocGdkcCwgYWRkcik7CisJaWYgKHVubGlrZWx5KCFwNGRwKSkKKwkJcmV0dXJuIC1FSU5W
QUw7CisKKwlwdWRwID0gcHVkX29mZnNldChwNGRwLCBhZGRyKTsKIAlpZiAodW5saWtlbHkoIXB1
ZHApKQogCQlyZXR1cm4gLUVJTlZBTDsKIApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL2Jv
b2szczMyL21tdS5jIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL21tdS5jCmluZGV4IGY4ODhj
YmIxMDliOS4uZWRlZjE3Yzk3MjA2IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNz
MzIvbW11LmMKKysrIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL21tdS5jCkBAIC0zMTIsNyAr
MzEyLDcgQEAgdm9pZCBoYXNoX3ByZWxvYWQoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVk
IGxvbmcgZWEpCiAKIAlpZiAoIUhhc2gpCiAJCXJldHVybjsKLQlwbWQgPSBwbWRfb2Zmc2V0KHB1
ZF9vZmZzZXQocGdkX29mZnNldChtbSwgZWEpLCBlYSksIGVhKTsKKwlwbWQgPSBwbWRfb2Zmc2V0
KHB1ZF9vZmZzZXQocDRkX29mZnNldChwZ2Rfb2Zmc2V0KG1tLCBlYSksIGVhKSwgZWEpLCBlYSk7
CiAJaWYgKCFwbWRfbm9uZSgqcG1kKSkKIAkJYWRkX2hhc2hfcGFnZShtbS0+Y29udGV4dC5pZCwg
ZWEsIHBtZF92YWwoKnBtZCkpOwogfQpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL2Jvb2sz
czMyL3RsYi5jIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL3RsYi5jCmluZGV4IDJmY2QzMjEw
NDBmZi4uMTc1YmMzM2I0MWI3IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNzMzIv
dGxiLmMKKysrIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL3RsYi5jCkBAIC04Nyw3ICs4Nyw3
IEBAIHN0YXRpYyB2b2lkIGZsdXNoX3JhbmdlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25l
ZCBsb25nIHN0YXJ0LAogCWlmIChzdGFydCA+PSBlbmQpCiAJCXJldHVybjsKIAllbmQgPSAoZW5k
IC0gMSkgfCB+UEFHRV9NQVNLOwotCXBtZCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwZ2Rfb2Zm
c2V0KG1tLCBzdGFydCksIHN0YXJ0KSwgc3RhcnQpOworCXBtZCA9IHBtZF9vZmZzZXQocHVkX29m
ZnNldChwNGRfb2Zmc2V0KHBnZF9vZmZzZXQobW0sIHN0YXJ0KSwgc3RhcnQpLCBzdGFydCksIHN0
YXJ0KTsKIAlmb3IgKDs7KSB7CiAJCXBtZF9lbmQgPSAoKHN0YXJ0ICsgUEdESVJfU0laRSkgJiBQ
R0RJUl9NQVNLKSAtIDE7CiAJCWlmIChwbWRfZW5kID4gZW5kKQpAQCAtMTQ1LDcgKzE0NSw3IEBA
IHZvaWQgZmx1c2hfdGxiX3BhZ2Uoc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEsIHVuc2lnbmVk
IGxvbmcgdm1hZGRyKQogCQlyZXR1cm47CiAJfQogCW1tID0gKHZtYWRkciA8IFRBU0tfU0laRSk/
IHZtYS0+dm1fbW06ICZpbml0X21tOwotCXBtZCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwZ2Rf
b2Zmc2V0KG1tLCB2bWFkZHIpLCB2bWFkZHIpLCB2bWFkZHIpOworCXBtZCA9IHBtZF9vZmZzZXQo
cHVkX29mZnNldChwNGRfb2Zmc2V0KHBnZF9vZmZzZXQobW0sIHZtYWRkciksIHZtYWRkciksIHZt
YWRkciksIHZtYWRkcik7CiAJaWYgKCFwbWRfbm9uZSgqcG1kKSkKIAkJZmx1c2hfaGFzaF9wYWdl
cyhtbS0+Y29udGV4dC5pZCwgdm1hZGRyLCBwbWRfdmFsKCpwbWQpLCAxKTsKIH0KZGlmZiAtLWdp
dCBhL2FyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9oYXNoX3BndGFibGUuYyBiL2FyY2gvcG93ZXJw
Yy9tbS9ib29rM3M2NC9oYXNoX3BndGFibGUuYwppbmRleCA2NDczM2I5Y2IyMGEuLjljZDE1OTM3
ZTg4YSAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L2hhc2hfcGd0YWJsZS5j
CisrKyBiL2FyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9oYXNoX3BndGFibGUuYwpAQCAtMTQ4LDYg
KzE0OCw3IEBAIHZvaWQgaGFzaF9fdm1lbW1hcF9yZW1vdmVfbWFwcGluZyh1bnNpZ25lZCBsb25n
IHN0YXJ0LAogaW50IGhhc2hfX21hcF9rZXJuZWxfcGFnZSh1bnNpZ25lZCBsb25nIGVhLCB1bnNp
Z25lZCBsb25nIHBhLCBwZ3Byb3RfdCBwcm90KQogewogCXBnZF90ICpwZ2RwOworCXA0ZF90ICpw
NGRwOwogCXB1ZF90ICpwdWRwOwogCXBtZF90ICpwbWRwOwogCXB0ZV90ICpwdGVwOwpAQCAtMTU1
LDcgKzE1Niw4IEBAIGludCBoYXNoX19tYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwg
dW5zaWduZWQgbG9uZyBwYSwgcGdwcm90X3QgcHJvdCkKIAlCVUlMRF9CVUdfT04oVEFTS19TSVpF
X1VTRVI2NCA+IEhfUEdUQUJMRV9SQU5HRSk7CiAJaWYgKHNsYWJfaXNfYXZhaWxhYmxlKCkpIHsK
IAkJcGdkcCA9IHBnZF9vZmZzZXRfayhlYSk7Ci0JCXB1ZHAgPSBwdWRfYWxsb2MoJmluaXRfbW0s
IHBnZHAsIGVhKTsKKwkJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOworCQlwdWRwID0gcHVk
X2FsbG9jKCZpbml0X21tLCBwNGRwLCBlYSk7CiAJCWlmICghcHVkcCkKIAkJCXJldHVybiAtRU5P
TUVNOwogCQlwbWRwID0gcG1kX2FsbG9jKCZpbml0X21tLCBwdWRwLCBlYSk7CmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvcmFkaXhfcGd0YWJsZS5jIGIvYXJjaC9wb3dlcnBj
L21tL2Jvb2szczY0L3JhZGl4X3BndGFibGUuYwppbmRleCBkZDFiZWE0NTMyNWMuLmZjM2QwYjA0
NjBiMCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L3JhZGl4X3BndGFibGUu
YworKysgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvcmFkaXhfcGd0YWJsZS5jCkBAIC02NCwx
NyArNjQsMTkgQEAgc3RhdGljIGludCBlYXJseV9tYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9u
ZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwKIHsKIAl1bnNpZ25lZCBsb25nIHBmbiA9IHBhID4+IFBB
R0VfU0hJRlQ7CiAJcGdkX3QgKnBnZHA7CisJcDRkX3QgKnA0ZHA7CiAJcHVkX3QgKnB1ZHA7CiAJ
cG1kX3QgKnBtZHA7CiAJcHRlX3QgKnB0ZXA7CiAKIAlwZ2RwID0gcGdkX29mZnNldF9rKGVhKTsK
LQlpZiAocGdkX25vbmUoKnBnZHApKSB7CisJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOwor
CWlmIChwNGRfbm9uZSgqcDRkcCkpIHsKIAkJcHVkcCA9IGVhcmx5X2FsbG9jX3BndGFibGUoUFVE
X1RBQkxFX1NJWkUsIG5pZCwKIAkJCQkJCXJlZ2lvbl9zdGFydCwgcmVnaW9uX2VuZCk7Ci0JCXBn
ZF9wb3B1bGF0ZSgmaW5pdF9tbSwgcGdkcCwgcHVkcCk7CisJCXA0ZF9wb3B1bGF0ZSgmaW5pdF9t
bSwgcDRkcCwgcHVkcCk7CiAJfQotCXB1ZHAgPSBwdWRfb2Zmc2V0KHBnZHAsIGVhKTsKKwlwdWRw
ID0gcHVkX29mZnNldChwNGRwLCBlYSk7CiAJaWYgKG1hcF9wYWdlX3NpemUgPT0gUFVEX1NJWkUp
IHsKIAkJcHRlcCA9IChwdGVfdCAqKXB1ZHA7CiAJCWdvdG8gc2V0X3RoZV9wdGU7CkBAIC0xMTQs
NiArMTE2LDcgQEAgc3RhdGljIGludCBfX21hcF9rZXJuZWxfcGFnZSh1bnNpZ25lZCBsb25nIGVh
LCB1bnNpZ25lZCBsb25nIHBhLAogewogCXVuc2lnbmVkIGxvbmcgcGZuID0gcGEgPj4gUEFHRV9T
SElGVDsKIAlwZ2RfdCAqcGdkcDsKKwlwNGRfdCAqcDRkcDsKIAlwdWRfdCAqcHVkcDsKIAlwbWRf
dCAqcG1kcDsKIAlwdGVfdCAqcHRlcDsKQEAgLTEzNiw3ICsxMzksOCBAQCBzdGF0aWMgaW50IF9f
bWFwX2tlcm5lbF9wYWdlKHVuc2lnbmVkIGxvbmcgZWEsIHVuc2lnbmVkIGxvbmcgcGEsCiAJICog
Ym9vdC4KIAkgKi8KIAlwZ2RwID0gcGdkX29mZnNldF9rKGVhKTsKLQlwdWRwID0gcHVkX2FsbG9j
KCZpbml0X21tLCBwZ2RwLCBlYSk7CisJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOworCXB1
ZHAgPSBwdWRfYWxsb2MoJmluaXRfbW0sIHA0ZHAsIGVhKTsKIAlpZiAoIXB1ZHApCiAJCXJldHVy
biAtRU5PTUVNOwogCWlmIChtYXBfcGFnZV9zaXplID09IFBVRF9TSVpFKSB7CkBAIC0xNzMsNiAr
MTc3LDcgQEAgdm9pZCByYWRpeF9fY2hhbmdlX21lbW9yeV9yYW5nZSh1bnNpZ25lZCBsb25nIHN0
YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCwKIHsKIAl1bnNpZ25lZCBsb25nIGlkeDsKIAlwZ2RfdCAq
cGdkcDsKKwlwNGRfdCAqcDRkcDsKIAlwdWRfdCAqcHVkcDsKIAlwbWRfdCAqcG1kcDsKIAlwdGVf
dCAqcHRlcDsKQEAgLTE4NSw3ICsxOTAsOCBAQCB2b2lkIHJhZGl4X19jaGFuZ2VfbWVtb3J5X3Jh
bmdlKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgZW5kLAogCiAJZm9yIChpZHgg
PSBzdGFydDsgaWR4IDwgZW5kOyBpZHggKz0gUEFHRV9TSVpFKSB7CiAJCXBnZHAgPSBwZ2Rfb2Zm
c2V0X2soaWR4KTsKLQkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9tbSwgcGdkcCwgaWR4KTsKKwkJ
cDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgaWR4KTsKKwkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9t
bSwgcDRkcCwgaWR4KTsKIAkJaWYgKCFwdWRwKQogCQkJY29udGludWU7CiAJCWlmIChwdWRfaXNf
bGVhZigqcHVkcCkpIHsKQEAgLTg0Nyw2ICs4NTMsNyBAQCBzdGF0aWMgdm9pZCBfX21lbWluaXQg
cmVtb3ZlX3BhZ2V0YWJsZSh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCkK
IAl1bnNpZ25lZCBsb25nIGFkZHIsIG5leHQ7CiAJcHVkX3QgKnB1ZF9iYXNlOwogCXBnZF90ICpw
Z2Q7CisJcDRkX3QgKnA0ZDsKIAogCXNwaW5fbG9jaygmaW5pdF9tbS5wYWdlX3RhYmxlX2xvY2sp
OwogCkBAIC04NTQsMTUgKzg2MSwxNiBAQCBzdGF0aWMgdm9pZCBfX21lbWluaXQgcmVtb3ZlX3Bh
Z2V0YWJsZSh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCkKIAkJbmV4dCA9
IHBnZF9hZGRyX2VuZChhZGRyLCBlbmQpOwogCiAJCXBnZCA9IHBnZF9vZmZzZXRfayhhZGRyKTsK
LQkJaWYgKCFwZ2RfcHJlc2VudCgqcGdkKSkKKwkJcDRkID0gcDRkX29mZnNldChwZ2QsIGFkZHIp
OworCQlpZiAoIXA0ZF9wcmVzZW50KCpwNGQpKQogCQkJY29udGludWU7CiAKLQkJaWYgKHBnZF9p
c19sZWFmKCpwZ2QpKSB7Ci0JCQlzcGxpdF9rZXJuZWxfbWFwcGluZyhhZGRyLCBlbmQsIFBHRElS
X1NJWkUsIChwdGVfdCAqKXBnZCk7CisJCWlmIChwNGRfaXNfbGVhZigqcDRkKSkgeworCQkJc3Bs
aXRfa2VybmVsX21hcHBpbmcoYWRkciwgZW5kLCBQNERfU0laRSwgKHB0ZV90ICopcDRkKTsKIAkJ
CWNvbnRpbnVlOwogCQl9CiAKLQkJcHVkX2Jhc2UgPSAocHVkX3QgKilwZ2RfcGFnZV92YWRkcigq
cGdkKTsKKwkJcHVkX2Jhc2UgPSAocHVkX3QgKilwNGRfcGFnZV92YWRkcigqcDRkKTsKIAkJcmVt
b3ZlX3B1ZF90YWJsZShwdWRfYmFzZSwgYWRkciwgbmV4dCk7CiAJfQogCmRpZmYgLS1naXQgYS9h
cmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvc3VicGFnZV9wcm90LmMgYi9hcmNoL3Bvd2VycGMvbW0v
Ym9vazNzNjQvc3VicGFnZV9wcm90LmMKaW5kZXggMmVmMjRhNTNmNGM5Li4yNWEwYzA0NGJkOTMg
MTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9zdWJwYWdlX3Byb3QuYworKysg
Yi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvc3VicGFnZV9wcm90LmMKQEAgLTU0LDE1ICs1NCwx
NyBAQCBzdGF0aWMgdm9pZCBocHRlX2ZsdXNoX3JhbmdlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1
bnNpZ25lZCBsb25nIGFkZHIsCiAJCQkgICAgIGludCBucGFnZXMpCiB7CiAJcGdkX3QgKnBnZDsK
KwlwNGRfdCAqcDRkOwogCXB1ZF90ICpwdWQ7CiAJcG1kX3QgKnBtZDsKIAlwdGVfdCAqcHRlOwog
CXNwaW5sb2NrX3QgKnB0bDsKIAogCXBnZCA9IHBnZF9vZmZzZXQobW0sIGFkZHIpOwotCWlmIChw
Z2Rfbm9uZSgqcGdkKSkKKwlwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgYWRkcik7CisJaWYgKHA0ZF9u
b25lKCpwNGQpKQogCQlyZXR1cm47Ci0JcHVkID0gcHVkX29mZnNldChwZ2QsIGFkZHIpOworCXB1
ZCA9IHB1ZF9vZmZzZXQocDRkLCBhZGRyKTsKIAlpZiAocHVkX25vbmUoKnB1ZCkpCiAJCXJldHVy
bjsKIAlwbWQgPSBwbWRfb2Zmc2V0KHB1ZCwgYWRkcik7CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2Vy
cGMvbW0vaHVnZXRsYnBhZ2UuYyBiL2FyY2gvcG93ZXJwYy9tbS9odWdldGxicGFnZS5jCmluZGV4
IDMzYjM0NjFkOTFlOC4uNTRmNTk5NGQ0Y2JiIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0v
aHVnZXRsYnBhZ2UuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vaHVnZXRsYnBhZ2UuYwpAQCAtMTE5
LDYgKzExOSw3IEBAIHN0YXRpYyBpbnQgX19odWdlcHRlX2FsbG9jKHN0cnVjdCBtbV9zdHJ1Y3Qg
Km1tLCBodWdlcGRfdCAqaHBkcCwKIHB0ZV90ICpodWdlX3B0ZV9hbGxvYyhzdHJ1Y3QgbW1fc3Ry
dWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIHN6KQogewogCXBnZF90
ICpwZzsKKwlwNGRfdCAqcDQ7CiAJcHVkX3QgKnB1OwogCXBtZF90ICpwbTsKIAlodWdlcGRfdCAq
aHBkcCA9IE5VTEw7CkBAIC0xMjgsMjAgKzEyOSwyMSBAQCBwdGVfdCAqaHVnZV9wdGVfYWxsb2Mo
c3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBz
egogCiAJYWRkciAmPSB+KHN6LTEpOwogCXBnID0gcGdkX29mZnNldChtbSwgYWRkcik7CisJcDQg
PSBwNGRfb2Zmc2V0KHBnLCBhZGRyKTsKIAogI2lmZGVmIENPTkZJR19QUENfQk9PSzNTXzY0CiAJ
aWYgKHBzaGlmdCA9PSBQR0RJUl9TSElGVCkKIAkJLyogMTZHQiBodWdlIHBhZ2UgKi8KLQkJcmV0
dXJuIChwdGVfdCAqKSBwZzsKKwkJcmV0dXJuIChwdGVfdCAqKSBwNDsKIAllbHNlIGlmIChwc2hp
ZnQgPiBQVURfU0hJRlQpIHsKIAkJLyoKIAkJICogV2UgbmVlZCB0byB1c2UgaHVnZXBkIHRhYmxl
CiAJCSAqLwogCQlwdGwgPSAmbW0tPnBhZ2VfdGFibGVfbG9jazsKLQkJaHBkcCA9IChodWdlcGRf
dCAqKXBnOworCQlocGRwID0gKGh1Z2VwZF90ICopcDQ7CiAJfSBlbHNlIHsKIAkJcGRzaGlmdCA9
IFBVRF9TSElGVDsKLQkJcHUgPSBwdWRfYWxsb2MobW0sIHBnLCBhZGRyKTsKKwkJcHUgPSBwdWRf
YWxsb2MobW0sIHA0LCBhZGRyKTsKIAkJaWYgKCFwdSkKIAkJCXJldHVybiBOVUxMOwogCQlpZiAo
cHNoaWZ0ID09IFBVRF9TSElGVCkKQEAgLTE2NiwxMCArMTY4LDEwIEBAIHB0ZV90ICpodWdlX3B0
ZV9hbGxvYyhzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25l
ZCBsb25nIHN6CiAjZWxzZQogCWlmIChwc2hpZnQgPj0gUEdESVJfU0hJRlQpIHsKIAkJcHRsID0g
Jm1tLT5wYWdlX3RhYmxlX2xvY2s7Ci0JCWhwZHAgPSAoaHVnZXBkX3QgKilwZzsKKwkJaHBkcCA9
IChodWdlcGRfdCAqKXA0OwogCX0gZWxzZSB7CiAJCXBkc2hpZnQgPSBQVURfU0hJRlQ7Ci0JCXB1
ID0gcHVkX2FsbG9jKG1tLCBwZywgYWRkcik7CisJCXB1ID0gcHVkX2FsbG9jKG1tLCBwNCwgYWRk
cik7CiAJCWlmICghcHUpCiAJCQlyZXR1cm4gTlVMTDsKIAkJaWYgKHBzaGlmdCA+PSBQVURfU0hJ
RlQpIHsKQEAgLTM5MCw3ICszOTIsNyBAQCBzdGF0aWMgdm9pZCBodWdldGxiX2ZyZWVfcG1kX3Jh
bmdlKHN0cnVjdCBtbXVfZ2F0aGVyICp0bGIsIHB1ZF90ICpwdWQsCiAJbW1fZGVjX25yX3BtZHMo
dGxiLT5tbSk7CiB9CiAKLXN0YXRpYyB2b2lkIGh1Z2V0bGJfZnJlZV9wdWRfcmFuZ2Uoc3RydWN0
IG1tdV9nYXRoZXIgKnRsYiwgcGdkX3QgKnBnZCwKK3N0YXRpYyB2b2lkIGh1Z2V0bGJfZnJlZV9w
dWRfcmFuZ2Uoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwgcDRkX3QgKnA0ZCwKIAkJCQkgICB1bnNp
Z25lZCBsb25nIGFkZHIsIHVuc2lnbmVkIGxvbmcgZW5kLAogCQkJCSAgIHVuc2lnbmVkIGxvbmcg
Zmxvb3IsIHVuc2lnbmVkIGxvbmcgY2VpbGluZykKIHsKQEAgLTQwMCw3ICs0MDIsNyBAQCBzdGF0
aWMgdm9pZCBodWdldGxiX2ZyZWVfcHVkX3JhbmdlKHN0cnVjdCBtbXVfZ2F0aGVyICp0bGIsIHBn
ZF90ICpwZ2QsCiAKIAlzdGFydCA9IGFkZHI7CiAJZG8gewotCQlwdWQgPSBwdWRfb2Zmc2V0KHBn
ZCwgYWRkcik7CisJCXB1ZCA9IHB1ZF9vZmZzZXQocDRkLCBhZGRyKTsKIAkJbmV4dCA9IHB1ZF9h
ZGRyX2VuZChhZGRyLCBlbmQpOwogCQlpZiAoIWlzX2h1Z2VwZChfX2h1Z2VwZChwdWRfdmFsKCpw
dWQpKSkpIHsKIAkJCWlmIChwdWRfbm9uZV9vcl9jbGVhcl9iYWQocHVkKSkKQEAgLTQzNSw4ICs0
MzcsOCBAQCBzdGF0aWMgdm9pZCBodWdldGxiX2ZyZWVfcHVkX3JhbmdlKHN0cnVjdCBtbXVfZ2F0
aGVyICp0bGIsIHBnZF90ICpwZ2QsCiAJaWYgKGVuZCAtIDEgPiBjZWlsaW5nIC0gMSkKIAkJcmV0
dXJuOwogCi0JcHVkID0gcHVkX29mZnNldChwZ2QsIHN0YXJ0KTsKLQlwZ2RfY2xlYXIocGdkKTsK
KwlwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgc3RhcnQpOworCXA0ZF9jbGVhcihwNGQpOwogCXB1ZF9m
cmVlX3RsYih0bGIsIHB1ZCwgc3RhcnQpOwogCW1tX2RlY19ucl9wdWRzKHRsYi0+bW0pOwogfQpA
QCAtNDQ5LDYgKzQ1MSw3IEBAIHZvaWQgaHVnZXRsYl9mcmVlX3BnZF9yYW5nZShzdHJ1Y3QgbW11
X2dhdGhlciAqdGxiLAogCQkJICAgIHVuc2lnbmVkIGxvbmcgZmxvb3IsIHVuc2lnbmVkIGxvbmcg
Y2VpbGluZykKIHsKIAlwZ2RfdCAqcGdkOworCXA0ZF90ICpwNGQ7CiAJdW5zaWduZWQgbG9uZyBu
ZXh0OwogCiAJLyoKQEAgLTQ3MSwxMCArNDc0LDExIEBAIHZvaWQgaHVnZXRsYl9mcmVlX3BnZF9y
YW5nZShzdHJ1Y3QgbW11X2dhdGhlciAqdGxiLAogCWRvIHsKIAkJbmV4dCA9IHBnZF9hZGRyX2Vu
ZChhZGRyLCBlbmQpOwogCQlwZ2QgPSBwZ2Rfb2Zmc2V0KHRsYi0+bW0sIGFkZHIpOworCQlwNGQg
PSBwNGRfb2Zmc2V0KHBnZCwgYWRkcik7CiAJCWlmICghaXNfaHVnZXBkKF9faHVnZXBkKHBnZF92
YWwoKnBnZCkpKSkgewotCQkJaWYgKHBnZF9ub25lX29yX2NsZWFyX2JhZChwZ2QpKQorCQkJaWYg
KHA0ZF9ub25lX29yX2NsZWFyX2JhZChwNGQpKQogCQkJCWNvbnRpbnVlOwotCQkJaHVnZXRsYl9m
cmVlX3B1ZF9yYW5nZSh0bGIsIHBnZCwgYWRkciwgbmV4dCwgZmxvb3IsIGNlaWxpbmcpOworCQkJ
aHVnZXRsYl9mcmVlX3B1ZF9yYW5nZSh0bGIsIHA0ZCwgYWRkciwgbmV4dCwgZmxvb3IsIGNlaWxp
bmcpOwogCQl9IGVsc2UgewogCQkJdW5zaWduZWQgbG9uZyBtb3JlOwogCQkJLyoKQEAgLTQ4Nyw3
ICs0OTEsNyBAQCB2b2lkIGh1Z2V0bGJfZnJlZV9wZ2RfcmFuZ2Uoc3RydWN0IG1tdV9nYXRoZXIg
KnRsYiwKIAkJCWlmIChtb3JlID4gbmV4dCkKIAkJCQluZXh0ID0gbW9yZTsKIAotCQkJZnJlZV9o
dWdlcGRfcmFuZ2UodGxiLCAoaHVnZXBkX3QgKilwZ2QsIFBHRElSX1NISUZULAorCQkJZnJlZV9o
dWdlcGRfcmFuZ2UodGxiLCAoaHVnZXBkX3QgKilwNGQsIFBHRElSX1NISUZULAogCQkJCQkgIGFk
ZHIsIG5leHQsIGZsb29yLCBjZWlsaW5nKTsKIAkJfQogCX0gd2hpbGUgKGFkZHIgPSBuZXh0LCBh
ZGRyICE9IGVuZCk7CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0va2FzYW4va2FzYW5faW5p
dF8zMi5jIGIvYXJjaC9wb3dlcnBjL21tL2thc2FuL2thc2FuX2luaXRfMzIuYwppbmRleCBkYjU2
NjRkZGU1ZmYuLjg4ZTJlMTYzODBiNSAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL2thc2Fu
L2thc2FuX2luaXRfMzIuYworKysgYi9hcmNoL3Bvd2VycGMvbW0va2FzYW4va2FzYW5faW5pdF8z
Mi5jCkBAIC0zNiw3ICszNiw3IEBAIHN0YXRpYyBpbnQgX19pbml0IGthc2FuX2luaXRfc2hhZG93
X3BhZ2VfdGFibGVzKHVuc2lnbmVkIGxvbmcga19zdGFydCwgdW5zaWduZWQKIAl1bnNpZ25lZCBs
b25nIGtfY3VyLCBrX25leHQ7CiAJcHRlX3QgKm5ldyA9IE5VTEw7CiAKLQlwbWQgPSBwbWRfb2Zm
c2V0KHB1ZF9vZmZzZXQocGdkX29mZnNldF9rKGtfc3RhcnQpLCBrX3N0YXJ0KSwga19zdGFydCk7
CisJcG1kID0gcG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdkX29mZnNldF9rKGtf
c3RhcnQpLCBrX3N0YXJ0KSwga19zdGFydCksIGtfc3RhcnQpOwogCiAJZm9yIChrX2N1ciA9IGtf
c3RhcnQ7IGtfY3VyICE9IGtfZW5kOyBrX2N1ciA9IGtfbmV4dCwgcG1kKyspIHsKIAkJa19uZXh0
ID0gcGdkX2FkZHJfZW5kKGtfY3VyLCBrX2VuZCk7CkBAIC03OCw3ICs3OCw3IEBAIHN0YXRpYyBp
bnQgX19pbml0IGthc2FuX2luaXRfcmVnaW9uKHZvaWQgKnN0YXJ0LCBzaXplX3Qgc2l6ZSkKIAli
bG9jayA9IG1lbWJsb2NrX2FsbG9jKGtfZW5kIC0ga19zdGFydCwgUEFHRV9TSVpFKTsKIAogCWZv
ciAoa19jdXIgPSBrX3N0YXJ0ICYgUEFHRV9NQVNLOyBrX2N1ciA8IGtfZW5kOyBrX2N1ciArPSBQ
QUdFX1NJWkUpIHsKLQkJcG1kX3QgKnBtZCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwZ2Rfb2Zm
c2V0X2soa19jdXIpLCBrX2N1ciksIGtfY3VyKTsKKwkJcG1kX3QgKnBtZCA9IHBtZF9vZmZzZXQo
cHVkX29mZnNldChwNGRfb2Zmc2V0KHBnZF9vZmZzZXRfayhrX2N1ciksIGtfY3VyKSwga19jdXIp
LCBrX2N1cik7CiAJCXZvaWQgKnZhID0gYmxvY2sgKyBrX2N1ciAtIGtfc3RhcnQ7CiAJCXB0ZV90
IHB0ZSA9IHBmbl9wdGUoUEhZU19QRk4oX19wYSh2YSkpLCBQQUdFX0tFUk5FTCk7CiAKQEAgLTEw
Miw3ICsxMDIsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQga2FzYW5fcmVtYXBfZWFybHlfc2hhZG93
X3JvKHZvaWQpCiAJa2FzYW5fcG9wdWxhdGVfcHRlKGthc2FuX2Vhcmx5X3NoYWRvd19wdGUsIHBy
b3QpOwogCiAJZm9yIChrX2N1ciA9IGtfc3RhcnQgJiBQQUdFX01BU0s7IGtfY3VyIDwga19lbmQ7
IGtfY3VyICs9IFBBR0VfU0laRSkgewotCQlwbWRfdCAqcG1kID0gcG1kX29mZnNldChwdWRfb2Zm
c2V0KHBnZF9vZmZzZXRfayhrX2N1ciksIGtfY3VyKSwga19jdXIpOworCQlwbWRfdCAqcG1kID0g
cG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdkX29mZnNldF9rKGtfY3VyKSwga19j
dXIpLCBrX2N1ciksIGtfY3VyKTsKIAkJcHRlX3QgKnB0ZXAgPSBwdGVfb2Zmc2V0X2tlcm5lbChw
bWQsIGtfY3VyKTsKIAogCQlpZiAoKHB0ZV92YWwoKnB0ZXApICYgUFRFX1JQTl9NQVNLKSAhPSBw
YSkKQEAgLTIwMSw3ICsyMDEsNyBAQCB2b2lkIF9faW5pdCBrYXNhbl9lYXJseV9pbml0KHZvaWQp
CiAJdW5zaWduZWQgbG9uZyBhZGRyID0gS0FTQU5fU0hBRE9XX1NUQVJUOwogCXVuc2lnbmVkIGxv
bmcgZW5kID0gS0FTQU5fU0hBRE9XX0VORDsKIAl1bnNpZ25lZCBsb25nIG5leHQ7Ci0JcG1kX3Qg
KnBtZCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwZ2Rfb2Zmc2V0X2soYWRkciksIGFkZHIpLCBh
ZGRyKTsKKwlwbWRfdCAqcG1kID0gcG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdk
X29mZnNldF9rKGFkZHIpLCBhZGRyKSwgYWRkciksIGFkZHIpOwogCiAJQlVJTERfQlVHX09OKEtB
U0FOX1NIQURPV19TVEFSVCAmIH5QR0RJUl9NQVNLKTsKIApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dl
cnBjL21tL21lbS5jIGIvYXJjaC9wb3dlcnBjL21tL21lbS5jCmluZGV4IGVmN2IxMTE5YjJlMi4u
ODI2MmIzODRkY2YzIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vbWVtLmMKKysrIGIvYXJj
aC9wb3dlcnBjL21tL21lbS5jCkBAIC02OSw4ICs2OSw4IEBAIEVYUE9SVF9TWU1CT0woa21hcF9w
cm90KTsKIAogc3RhdGljIGlubGluZSBwdGVfdCAqdmlydF90b19rcHRlKHVuc2lnbmVkIGxvbmcg
dmFkZHIpCiB7Ci0JcmV0dXJuIHB0ZV9vZmZzZXRfa2VybmVsKHBtZF9vZmZzZXQocHVkX29mZnNl
dChwZ2Rfb2Zmc2V0X2sodmFkZHIpLAotCQkJdmFkZHIpLCB2YWRkciksIHZhZGRyKTsKKwlyZXR1
cm4gcHRlX29mZnNldF9rZXJuZWwocG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdk
X29mZnNldF9rKHZhZGRyKSwKKwkJCXZhZGRyKSwgdmFkZHIpLCB2YWRkciksIHZhZGRyKTsKIH0K
ICNlbmRpZgogCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vbm9oYXNoLzQweC5jIGIvYXJj
aC9wb3dlcnBjL21tL25vaGFzaC80MHguYwppbmRleCBmMzQ4MTA0ZWI0NjEuLjdhYWY3MTU1ZTM1
MCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL25vaGFzaC80MHguYworKysgYi9hcmNoL3Bv
d2VycGMvbW0vbm9oYXNoLzQweC5jCkBAIC0xMDQsNyArMTA0LDcgQEAgdW5zaWduZWQgbG9uZyBf
X2luaXQgbW11X21hcGluX3JhbSh1bnNpZ25lZCBsb25nIGJhc2UsIHVuc2lnbmVkIGxvbmcgdG9w
KQogCQlwbWRfdCAqcG1kcDsKIAkJdW5zaWduZWQgbG9uZyB2YWwgPSBwIHwgX1BNRF9TSVpFXzE2
TSB8IF9QQUdFX0VYRUMgfCBfUEFHRV9IV1dSSVRFOwogCi0JCXBtZHAgPSBwbWRfb2Zmc2V0KHB1
ZF9vZmZzZXQocGdkX29mZnNldF9rKHYpLCB2KSwgdik7CisJCXBtZHAgPSBwbWRfb2Zmc2V0KHB1
ZF9vZmZzZXQocDRkX29mZnNldChwZ2Rfb2Zmc2V0X2sodiksIHYpLCB2KSwgdik7CiAJCSpwbWRw
KysgPSBfX3BtZCh2YWwpOwogCQkqcG1kcCsrID0gX19wbWQodmFsKTsKIAkJKnBtZHArKyA9IF9f
cG1kKHZhbCk7CkBAIC0xMTksNyArMTE5LDcgQEAgdW5zaWduZWQgbG9uZyBfX2luaXQgbW11X21h
cGluX3JhbSh1bnNpZ25lZCBsb25nIGJhc2UsIHVuc2lnbmVkIGxvbmcgdG9wKQogCQlwbWRfdCAq
cG1kcDsKIAkJdW5zaWduZWQgbG9uZyB2YWwgPSBwIHwgX1BNRF9TSVpFXzRNIHwgX1BBR0VfRVhF
QyB8IF9QQUdFX0hXV1JJVEU7CiAKLQkJcG1kcCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwZ2Rf
b2Zmc2V0X2sodiksIHYpLCB2KTsKKwkJcG1kcCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwNGRf
b2Zmc2V0KHBnZF9vZmZzZXRfayh2KSwgdiksIHYpLCB2KTsKIAkJKnBtZHAgPSBfX3BtZCh2YWwp
OwogCiAJCXYgKz0gTEFSR0VfUEFHRV9TSVpFXzRNOwpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBj
L21tL25vaGFzaC9ib29rM2VfcGd0YWJsZS5jIGIvYXJjaC9wb3dlcnBjL21tL25vaGFzaC9ib29r
M2VfcGd0YWJsZS5jCmluZGV4IDQ2MzdmZGQ0NjljZi4uNzc4ODRlMjQyODFkIDEwMDY0NAotLS0g
YS9hcmNoL3Bvd2VycGMvbW0vbm9oYXNoL2Jvb2szZV9wZ3RhYmxlLmMKKysrIGIvYXJjaC9wb3dl
cnBjL21tL25vaGFzaC9ib29rM2VfcGd0YWJsZS5jCkBAIC03Myw2ICs3Myw3IEBAIHN0YXRpYyB2
b2lkIF9faW5pdCAqZWFybHlfYWxsb2NfcGd0YWJsZSh1bnNpZ25lZCBsb25nIHNpemUpCiBpbnQg
X19yZWYgbWFwX2tlcm5lbF9wYWdlKHVuc2lnbmVkIGxvbmcgZWEsIHVuc2lnbmVkIGxvbmcgcGEs
IHBncHJvdF90IHByb3QpCiB7CiAJcGdkX3QgKnBnZHA7CisJcDRkX3QgKnA0ZHA7CiAJcHVkX3Qg
KnB1ZHA7CiAJcG1kX3QgKnBtZHA7CiAJcHRlX3QgKnB0ZXA7CkBAIC04MCw3ICs4MSw4IEBAIGlu
dCBfX3JlZiBtYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBw
YSwgcGdwcm90X3QgcHJvdCkKIAlCVUlMRF9CVUdfT04oVEFTS19TSVpFX1VTRVI2NCA+IFBHVEFC
TEVfUkFOR0UpOwogCWlmIChzbGFiX2lzX2F2YWlsYWJsZSgpKSB7CiAJCXBnZHAgPSBwZ2Rfb2Zm
c2V0X2soZWEpOwotCQlwdWRwID0gcHVkX2FsbG9jKCZpbml0X21tLCBwZ2RwLCBlYSk7CisJCXA0
ZHAgPSBwNGRfb2Zmc2V0KHBnZHAsIGVhKTsKKwkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9tbSwg
cDRkcCwgZWEpOwogCQlpZiAoIXB1ZHApCiAJCQlyZXR1cm4gLUVOT01FTTsKIAkJcG1kcCA9IHBt
ZF9hbGxvYygmaW5pdF9tbSwgcHVkcCwgZWEpOwpAQCAtOTEsMTMgKzkzLDEyIEBAIGludCBfX3Jl
ZiBtYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwgcGdw
cm90X3QgcHJvdCkKIAkJCXJldHVybiAtRU5PTUVNOwogCX0gZWxzZSB7CiAJCXBnZHAgPSBwZ2Rf
b2Zmc2V0X2soZWEpOwotI2lmbmRlZiBfX1BBR0VUQUJMRV9QVURfRk9MREVECi0JCWlmIChwZ2Rf
bm9uZSgqcGdkcCkpIHsKLQkJCXB1ZHAgPSBlYXJseV9hbGxvY19wZ3RhYmxlKFBVRF9UQUJMRV9T
SVpFKTsKLQkJCXBnZF9wb3B1bGF0ZSgmaW5pdF9tbSwgcGdkcCwgcHVkcCk7CisJCXA0ZHAgPSBw
NGRfb2Zmc2V0KHBnZHAsIGVhKTsKKwkJaWYgKHA0ZF9ub25lKCpwNGRwKSkgeworCQkJcG1kcCA9
IGVhcmx5X2FsbG9jX3BndGFibGUoUE1EX1RBQkxFX1NJWkUpOworCQkJcDRkX3BvcHVsYXRlKCZp
bml0X21tLCBwNGRwLCBwbWRwKTsKIAkJfQotI2VuZGlmIC8qICFfX1BBR0VUQUJMRV9QVURfRk9M
REVEICovCi0JCXB1ZHAgPSBwdWRfb2Zmc2V0KHBnZHAsIGVhKTsKKwkJcHVkcCA9IHB1ZF9vZmZz
ZXQocDRkcCwgZWEpOwogCQlpZiAocHVkX25vbmUoKnB1ZHApKSB7CiAJCQlwbWRwID0gZWFybHlf
YWxsb2NfcGd0YWJsZShQTURfVEFCTEVfU0laRSk7CiAJCQlwdWRfcG9wdWxhdGUoJmluaXRfbW0s
IHB1ZHAsIHBtZHApOwpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL3BndGFibGUuYyBiL2Fy
Y2gvcG93ZXJwYy9tbS9wZ3RhYmxlLmMKaW5kZXggZTM3NTliNjlmODFiLi5jMjQ5OTI3MWY2YzEg
MTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9tbS9wZ3RhYmxlLmMKKysrIGIvYXJjaC9wb3dlcnBj
L21tL3BndGFibGUuYwpAQCAtMjY1LDYgKzI2NSw3IEBAIGludCBodWdlX3B0ZXBfc2V0X2FjY2Vz
c19mbGFncyhzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKIHZvaWQgYXNzZXJ0X3B0ZV9sb2Nr
ZWQoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcikKIHsKIAlwZ2RfdCAq
cGdkOworCXA0ZF90ICpwNGQ7CiAJcHVkX3QgKnB1ZDsKIAlwbWRfdCAqcG1kOwogCkBAIC0yNzIs
NyArMjczLDkgQEAgdm9pZCBhc3NlcnRfcHRlX2xvY2tlZChzdHJ1Y3QgbW1fc3RydWN0ICptbSwg
dW5zaWduZWQgbG9uZyBhZGRyKQogCQlyZXR1cm47CiAJcGdkID0gbW0tPnBnZCArIHBnZF9pbmRl
eChhZGRyKTsKIAlCVUdfT04ocGdkX25vbmUoKnBnZCkpOwotCXB1ZCA9IHB1ZF9vZmZzZXQocGdk
LCBhZGRyKTsKKwlwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgYWRkcik7CisJQlVHX09OKHA0ZF9ub25l
KCpwNGQpKTsKKwlwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgYWRkcik7CiAJQlVHX09OKHB1ZF9ub25l
KCpwdWQpKTsKIAlwbWQgPSBwbWRfb2Zmc2V0KHB1ZCwgYWRkcik7CiAJLyoKQEAgLTMxMiwxMiAr
MzE1LDEzIEBAIEVYUE9SVF9TWU1CT0xfR1BMKHZtYWxsb2NfdG9fcGh5cyk7CiBwdGVfdCAqX19m
aW5kX2xpbnV4X3B0ZShwZ2RfdCAqcGdkaXIsIHVuc2lnbmVkIGxvbmcgZWEsCiAJCQlib29sICpp
c190aHAsIHVuc2lnbmVkICpocGFnZV9zaGlmdCkKIHsKLQlwZ2RfdCBwZ2QsICpwZ2RwOworCXBn
ZF90ICpwZ2RwOworCXA0ZF90IHA0ZCwgKnA0ZHA7CiAJcHVkX3QgcHVkLCAqcHVkcDsKIAlwbWRf
dCBwbWQsICpwbWRwOwogCXB0ZV90ICpyZXRfcHRlOwogCWh1Z2VwZF90ICpocGRwID0gTlVMTDsK
LQl1bnNpZ25lZCBwZHNoaWZ0ID0gUEdESVJfU0hJRlQ7CisJdW5zaWduZWQgcGRzaGlmdDsKIAog
CWlmIChocGFnZV9zaGlmdCkKIAkJKmhwYWdlX3NoaWZ0ID0gMDsKQEAgLTMyNSwyNCArMzI5LDI4
IEBAIHB0ZV90ICpfX2ZpbmRfbGludXhfcHRlKHBnZF90ICpwZ2RpciwgdW5zaWduZWQgbG9uZyBl
YSwKIAlpZiAoaXNfdGhwKQogCQkqaXNfdGhwID0gZmFsc2U7CiAKLQlwZ2RwID0gcGdkaXIgKyBw
Z2RfaW5kZXgoZWEpOwotCXBnZCAgPSBSRUFEX09OQ0UoKnBnZHApOwogCS8qCiAJICogQWx3YXlz
IG9wZXJhdGUgb24gdGhlIGxvY2FsIHN0YWNrIHZhbHVlLiBUaGlzIG1ha2Ugc3VyZSB0aGUKIAkg
KiB2YWx1ZSBkb24ndCBnZXQgdXBkYXRlZCBieSBhIHBhcmFsbGVsIFRIUCBzcGxpdC9jb2xsYXBz
ZSwKIAkgKiBwYWdlIGZhdWx0IG9yIGEgcGFnZSB1bm1hcC4gVGhlIHJldHVybiBwdGVfdCAqIGlz
IHN0aWxsIG5vdAogCSAqIHN0YWJsZS4gU28gc2hvdWxkIGJlIGNoZWNrZWQgdGhlcmUgZm9yIGFi
b3ZlIGNvbmRpdGlvbnMuCisJICogVG9wIGxldmVsIGlzIGFuIGV4Y2VwdGlvbiBiZWNhdXNlIGl0
IGlzIGZvbGRlZCBpbnRvIHA0ZC4KIAkgKi8KLQlpZiAocGdkX25vbmUocGdkKSkKKwlwZ2RwID0g
cGdkaXIgKyBwZ2RfaW5kZXgoZWEpOworCXA0ZHAgPSBwNGRfb2Zmc2V0KHBnZHAsIGVhKTsKKwlw
NGQgID0gUkVBRF9PTkNFKCpwNGRwKTsKKwlwZHNoaWZ0ID0gUDREX1NISUZUOworCisJaWYgKHA0
ZF9ub25lKHA0ZCkpCiAJCXJldHVybiBOVUxMOwogCi0JaWYgKHBnZF9pc19sZWFmKHBnZCkpIHsK
LQkJcmV0X3B0ZSA9IChwdGVfdCAqKXBnZHA7CisJaWYgKHA0ZF9pc19sZWFmKHA0ZCkpIHsKKwkJ
cmV0X3B0ZSA9IChwdGVfdCAqKXA0ZHA7CiAJCWdvdG8gb3V0OwogCX0KIAotCWlmIChpc19odWdl
cGQoX19odWdlcGQocGdkX3ZhbChwZ2QpKSkpIHsKLQkJaHBkcCA9IChodWdlcGRfdCAqKSZwZ2Q7
CisJaWYgKGlzX2h1Z2VwZChfX2h1Z2VwZChwNGRfdmFsKHA0ZCkpKSkgeworCQlocGRwID0gKGh1
Z2VwZF90ICopJnA0ZDsKIAkJZ290byBvdXRfaHVnZTsKIAl9CiAKQEAgLTM1Miw3ICszNjAsNyBA
QCBwdGVfdCAqX19maW5kX2xpbnV4X3B0ZShwZ2RfdCAqcGdkaXIsIHVuc2lnbmVkIGxvbmcgZWEs
CiAJICogaXJxIGRpc2FibGVkCiAJICovCiAJcGRzaGlmdCA9IFBVRF9TSElGVDsKLQlwdWRwID0g
cHVkX29mZnNldCgmcGdkLCBlYSk7CisJcHVkcCA9IHB1ZF9vZmZzZXQoJnA0ZCwgZWEpOwogCXB1
ZCAgPSBSRUFEX09OQ0UoKnB1ZHApOwogCiAJaWYgKHB1ZF9ub25lKHB1ZCkpCmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvbW0vcGd0YWJsZV8zMi5jIGIvYXJjaC9wb3dlcnBjL21tL3BndGFibGVf
MzIuYwppbmRleCA1ZmI5MGVkZDg2NWUuLjU3NzRkNGJjOTRkMCAxMDA2NDQKLS0tIGEvYXJjaC9w
b3dlcnBjL21tL3BndGFibGVfMzIuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vcGd0YWJsZV8zMi5j
CkBAIC02Myw3ICs2Myw3IEBAIGludCBfX3JlZiBtYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9u
ZyB2YSwgcGh5c19hZGRyX3QgcGEsIHBncHJvdF90IHByb3QpCiAJaW50IGVyciA9IC1FTk9NRU07
CiAKIAkvKiBVc2UgdXBwZXIgMTAgYml0cyBvZiBWQSB0byBpbmRleCB0aGUgZmlyc3QgbGV2ZWwg
bWFwICovCi0JcGQgPSBwbWRfb2Zmc2V0KHB1ZF9vZmZzZXQocGdkX29mZnNldF9rKHZhKSwgdmEp
LCB2YSk7CisJcGQgPSBwbWRfb2Zmc2V0KHB1ZF9vZmZzZXQocDRkX29mZnNldChwZ2Rfb2Zmc2V0
X2sodmEpLCB2YSksIHZhKSwgdmEpOwogCS8qIFVzZSBtaWRkbGUgMTAgYml0cyBvZiBWQSB0byBp
bmRleCB0aGUgc2Vjb25kLWxldmVsIG1hcCAqLwogCWlmIChsaWtlbHkoc2xhYl9pc19hdmFpbGFi
bGUoKSkpCiAJCXBnID0gcHRlX2FsbG9jX2tlcm5lbChwZCwgdmEpOwpAQCAtMTIxLDUzICsxMjEs
MjQgQEAgdm9pZCBfX2luaXQgbWFwaW5fcmFtKHZvaWQpCiAJfQogfQogCi0vKiBTY2FuIHRoZSBy
ZWFsIExpbnV4IHBhZ2UgdGFibGVzIGFuZCByZXR1cm4gYSBQVEUgcG9pbnRlciBmb3IKLSAqIGEg
dmlydHVhbCBhZGRyZXNzIGluIGEgY29udGV4dC4KLSAqIFJldHVybnMgdHJ1ZSAoMSkgaWYgUFRF
IHdhcyBmb3VuZCwgemVybyBvdGhlcndpc2UuICBUaGUgcG9pbnRlciB0bwotICogdGhlIFBURSBw
b2ludGVyIGlzIHVubW9kaWZpZWQgaWYgUFRFIGlzIG5vdCBmb3VuZC4KLSAqLwotc3RhdGljIGlu
dAotZ2V0X3B0ZXB0cihzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyLCBw
dGVfdCAqKnB0ZXAsIHBtZF90ICoqcG1kcCkKLXsKLSAgICAgICAgcGdkX3QJKnBnZDsKLQlwdWRf
dAkqcHVkOwotICAgICAgICBwbWRfdAkqcG1kOwotICAgICAgICBwdGVfdAkqcHRlOwotICAgICAg
ICBpbnQgICAgIHJldHZhbCA9IDA7Ci0KLSAgICAgICAgcGdkID0gcGdkX29mZnNldChtbSwgYWRk
ciAmIFBBR0VfTUFTSyk7Ci0gICAgICAgIGlmIChwZ2QpIHsKLQkJcHVkID0gcHVkX29mZnNldChw
Z2QsIGFkZHIgJiBQQUdFX01BU0spOwotCQlpZiAocHVkICYmIHB1ZF9wcmVzZW50KCpwdWQpKSB7
Ci0JCQlwbWQgPSBwbWRfb2Zmc2V0KHB1ZCwgYWRkciAmIFBBR0VfTUFTSyk7Ci0JCQlpZiAocG1k
X3ByZXNlbnQoKnBtZCkpIHsKLQkJCQlwdGUgPSBwdGVfb2Zmc2V0X21hcChwbWQsIGFkZHIgJiBQ
QUdFX01BU0spOwotCQkJCWlmIChwdGUpIHsKLQkJCQkJcmV0dmFsID0gMTsKLQkJCQkJKnB0ZXAg
PSBwdGU7Ci0JCQkJCWlmIChwbWRwKQotCQkJCQkJKnBtZHAgPSBwbWQ7Ci0JCQkJCS8qIFhYWCBj
YWxsZXIgbmVlZHMgdG8gZG8gcHRlX3VubWFwLCB5dWNrICovCi0JCQkJfQotCQkJfQotCQl9Ci0g
ICAgICAgIH0KLSAgICAgICAgcmV0dXJuKHJldHZhbCk7Ci19Ci0KIHN0YXRpYyBpbnQgX19jaGFu
Z2VfcGFnZV9hdHRyX25vZmx1c2goc3RydWN0IHBhZ2UgKnBhZ2UsIHBncHJvdF90IHByb3QpCiB7
CiAJcHRlX3QgKmtwdGU7CiAJcG1kX3QgKmtwbWQ7Ci0JdW5zaWduZWQgbG9uZyBhZGRyZXNzOwor
CXVuc2lnbmVkIGxvbmcgYWRkcmVzcywgdmE7CiAKIAlCVUdfT04oUGFnZUhpZ2hNZW0ocGFnZSkp
OwogCWFkZHJlc3MgPSAodW5zaWduZWQgbG9uZylwYWdlX2FkZHJlc3MocGFnZSk7CisJdmEgPSBh
ZGRyZXNzICYgUEFHRV9NQVNLOwogCiAJaWYgKHZfYmxvY2tfbWFwcGVkKGFkZHJlc3MpKQogCQly
ZXR1cm4gMDsKLQlpZiAoIWdldF9wdGVwdHIoJmluaXRfbW0sIGFkZHJlc3MsICZrcHRlLCAma3Bt
ZCkpCisKKwlrcG1kID0gcG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdkX29mZnNl
dF9rKHZhKSwgdmEpLCB2YSksIHZhKTsKKwlpZiAoIXBtZF9wcmVzZW50KCprcG1kKSkKIAkJcmV0
dXJuIC1FSU5WQUw7CisKKwlrcHRlID0gcHRlX29mZnNldF9tYXAoa3BtZCwgdmEpOwogCV9fc2V0
X3B0ZV9hdCgmaW5pdF9tbSwgYWRkcmVzcywga3B0ZSwgbWtfcHRlKHBhZ2UsIHByb3QpLCAwKTsK
IAlwdGVfdW5tYXAoa3B0ZSk7CiAKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9tbS9wZ3RhYmxl
XzY0LmMgYi9hcmNoL3Bvd2VycGMvbW0vcGd0YWJsZV82NC5jCmluZGV4IGU3ODgzMmRjZTdiYi4u
MWY4NmE4OGZkNGJiIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vcGd0YWJsZV82NC5jCisr
KyBiL2FyY2gvcG93ZXJwYy9tbS9wZ3RhYmxlXzY0LmMKQEAgLTEwMSwxMyArMTAxLDEzIEBAIEVY
UE9SVF9TWU1CT0woX19wdGVfZnJhZ19zaXplX3NoaWZ0KTsKIAogI2lmbmRlZiBfX1BBR0VUQUJM
RV9QVURfRk9MREVECiAvKiA0IGxldmVsIHBhZ2UgdGFibGUgKi8KLXN0cnVjdCBwYWdlICpwZ2Rf
cGFnZShwZ2RfdCBwZ2QpCitzdHJ1Y3QgcGFnZSAqcDRkX3BhZ2UocDRkX3QgcDRkKQogewotCWlm
IChwZ2RfaXNfbGVhZihwZ2QpKSB7Ci0JCVZNX1dBUk5fT04oIXBnZF9odWdlKHBnZCkpOwotCQly
ZXR1cm4gcHRlX3BhZ2UocGdkX3B0ZShwZ2QpKTsKKwlpZiAocDRkX2lzX2xlYWYocDRkKSkgewor
CQlWTV9XQVJOX09OKCFwNGRfaHVnZShwNGQpKTsKKwkJcmV0dXJuIHB0ZV9wYWdlKHA0ZF9wdGUo
cDRkKSk7CiAJfQotCXJldHVybiB2aXJ0X3RvX3BhZ2UocGdkX3BhZ2VfdmFkZHIocGdkKSk7CisJ
cmV0dXJuIHZpcnRfdG9fcGFnZShwNGRfcGFnZV92YWRkcihwNGQpKTsKIH0KICNlbmRpZgogCmRp
ZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL2hhc2hwYWdldGFibGUuYyBiL2FyY2gv
cG93ZXJwYy9tbS9wdGR1bXAvaGFzaHBhZ2V0YWJsZS5jCmluZGV4IGEwNzI3ODAyN2M2Zi4uYWMz
NjBhZDg2NWE4IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL2hhc2hwYWdldGFi
bGUuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL2hhc2hwYWdldGFibGUuYwpAQCAtNDE3
LDkgKzQxNyw5IEBAIHN0YXRpYyB2b2lkIHdhbGtfcG1kKHN0cnVjdCBwZ19zdGF0ZSAqc3QsIHB1
ZF90ICpwdWQsIHVuc2lnbmVkIGxvbmcgc3RhcnQpCiAJfQogfQogCi1zdGF0aWMgdm9pZCB3YWxr
X3B1ZChzdHJ1Y3QgcGdfc3RhdGUgKnN0LCBwZ2RfdCAqcGdkLCB1bnNpZ25lZCBsb25nIHN0YXJ0
KQorc3RhdGljIHZvaWQgd2Fsa19wdWQoc3RydWN0IHBnX3N0YXRlICpzdCwgcDRkX3QgKnA0ZCwg
dW5zaWduZWQgbG9uZyBzdGFydCkKIHsKLQlwdWRfdCAqcHVkID0gcHVkX29mZnNldChwZ2QsIDAp
OworCXB1ZF90ICpwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgMCk7CiAJdW5zaWduZWQgbG9uZyBhZGRy
OwogCXVuc2lnbmVkIGludCBpOwogCkBAIC00MzEsNiArNDMxLDIwIEBAIHN0YXRpYyB2b2lkIHdh
bGtfcHVkKHN0cnVjdCBwZ19zdGF0ZSAqc3QsIHBnZF90ICpwZ2QsIHVuc2lnbmVkIGxvbmcgc3Rh
cnQpCiAJfQogfQogCitzdGF0aWMgdm9pZCB3YWxrX3A0ZChzdHJ1Y3QgcGdfc3RhdGUgKnN0LCBw
Z2RfdCAqcGdkLCB1bnNpZ25lZCBsb25nIHN0YXJ0KQoreworCXA0ZF90ICpwNGQgPSBwNGRfb2Zm
c2V0KHBnZCwgMCk7CisJdW5zaWduZWQgbG9uZyBhZGRyOworCXVuc2lnbmVkIGludCBpOworCisJ
Zm9yIChpID0gMDsgaSA8IFBUUlNfUEVSX1A0RDsgaSsrLCBwNGQrKykgeworCQlhZGRyID0gc3Rh
cnQgKyBpICogUDREX1NJWkU7CisJCWlmICghcDRkX25vbmUoKnA0ZCkpCisJCQkvKiBwNGQgZXhp
c3RzICovCisJCQl3YWxrX3B1ZChzdCwgcDRkLCBhZGRyKTsKKwl9Cit9CisKIHN0YXRpYyB2b2lk
IHdhbGtfcGFnZXRhYmxlcyhzdHJ1Y3QgcGdfc3RhdGUgKnN0KQogewogCXBnZF90ICpwZ2QgPSBw
Z2Rfb2Zmc2V0X2soMFVMKTsKQEAgLTQ0NSw3ICs0NTksNyBAQCBzdGF0aWMgdm9pZCB3YWxrX3Bh
Z2V0YWJsZXMoc3RydWN0IHBnX3N0YXRlICpzdCkKIAkJYWRkciA9IEtFUk5fVklSVF9TVEFSVCAr
IGkgKiBQR0RJUl9TSVpFOwogCQlpZiAoIXBnZF9ub25lKCpwZ2QpKQogCQkJLyogcGdkIGV4aXN0
cyAqLwotCQkJd2Fsa19wdWQoc3QsIHBnZCwgYWRkcik7CisJCQl3YWxrX3A0ZChzdCwgcGdkLCBh
ZGRyKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9tbS9wdGR1bXAvcHRkdW1w
LmMgYi9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL3B0ZHVtcC5jCmluZGV4IDIwNjE1NjI1NTI0Ny4u
OWQ2MjU2YjYxZGYzIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL3B0ZHVtcC5j
CisrKyBiL2FyY2gvcG93ZXJwYy9tbS9wdGR1bXAvcHRkdW1wLmMKQEAgLTI3Nyw5ICsyNzcsOSBA
QCBzdGF0aWMgdm9pZCB3YWxrX3BtZChzdHJ1Y3QgcGdfc3RhdGUgKnN0LCBwdWRfdCAqcHVkLCB1
bnNpZ25lZCBsb25nIHN0YXJ0KQogCX0KIH0KIAotc3RhdGljIHZvaWQgd2Fsa19wdWQoc3RydWN0
IHBnX3N0YXRlICpzdCwgcGdkX3QgKnBnZCwgdW5zaWduZWQgbG9uZyBzdGFydCkKK3N0YXRpYyB2
b2lkIHdhbGtfcHVkKHN0cnVjdCBwZ19zdGF0ZSAqc3QsIHA0ZF90ICpwNGQsIHVuc2lnbmVkIGxv
bmcgc3RhcnQpCiB7Ci0JcHVkX3QgKnB1ZCA9IHB1ZF9vZmZzZXQocGdkLCAwKTsKKwlwdWRfdCAq
cHVkID0gcHVkX29mZnNldChwNGQsIDApOwogCXVuc2lnbmVkIGxvbmcgYWRkcjsKIAl1bnNpZ25l
ZCBpbnQgaTsKIApAQCAtMzA0LDExICszMDQsMTMgQEAgc3RhdGljIHZvaWQgd2Fsa19wYWdldGFi
bGVzKHN0cnVjdCBwZ19zdGF0ZSAqc3QpCiAJICogdGhlIGhhc2ggcGFnZXRhYmxlLgogCSAqLwog
CWZvciAoaSA9IHBnZF9pbmRleChhZGRyKTsgaSA8IFBUUlNfUEVSX1BHRDsgaSsrLCBwZ2QrKywg
YWRkciArPSBQR0RJUl9TSVpFKSB7Ci0JCWlmICghcGdkX25vbmUoKnBnZCkgJiYgIXBnZF9pc19s
ZWFmKCpwZ2QpKQotCQkJLyogcGdkIGV4aXN0cyAqLwotCQkJd2Fsa19wdWQoc3QsIHBnZCwgYWRk
cik7CisJCXA0ZF90ICpwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgMCk7CisKKwkJaWYgKCFwNGRfbm9u
ZSgqcDRkKSAmJiAhcDRkX2lzX2xlYWYoKnA0ZCkpCisJCQkvKiBwNGQgZXhpc3RzICovCisJCQl3
YWxrX3B1ZChzdCwgcDRkLCBhZGRyKTsKIAkJZWxzZQotCQkJbm90ZV9wYWdlKHN0LCBhZGRyLCAx
LCBwZ2RfdmFsKCpwZ2QpKTsKKwkJCW5vdGVfcGFnZShzdCwgYWRkciwgMSwgcDRkX3ZhbCgqcDRk
KSk7CiAJfQogfQogCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMveG1vbi94bW9uLmMgYi9hcmNo
L3Bvd2VycGMveG1vbi94bW9uLmMKaW5kZXggMGVjOTY0MDMzNWJiLi4zZTI5MTI4YzU4Y2MgMTAw
NjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy94bW9uL3htb24uYworKysgYi9hcmNoL3Bvd2VycGMveG1v
bi94bW9uLmMKQEAgLTMxMzAsNiArMzEzMCw3IEBAIHN0YXRpYyB2b2lkIHNob3dfcHRlKHVuc2ln
bmVkIGxvbmcgYWRkcikKIAlzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzayA9IE5VTEw7CiAJc3RydWN0
IG1tX3N0cnVjdCAqbW07CiAJcGdkX3QgKnBnZHAsICpwZ2RpcjsKKwlwNGRfdCAqcDRkcDsKIAlw
dWRfdCAqcHVkcDsKIAlwbWRfdCAqcG1kcDsKIAlwdGVfdCAqcHRlcDsKQEAgLTMxNjEsMjAgKzMx
NjIsMjEgQEAgc3RhdGljIHZvaWQgc2hvd19wdGUodW5zaWduZWQgbG9uZyBhZGRyKQogCQlwZ2Rp
ciA9IHBnZF9vZmZzZXQobW0sIDApOwogCX0KIAotCWlmIChwZ2Rfbm9uZSgqcGdkcCkpIHsKLQkJ
cHJpbnRmKCJubyBsaW51eCBwYWdlIHRhYmxlIGZvciBhZGRyZXNzXG4iKTsKKwlwNGRwID0gcDRk
X29mZnNldChwZ2RwLCBhZGRyKTsKKworCWlmIChwNGRfbm9uZSgqcDRkcCkpIHsKKwkJcHJpbnRm
KCJObyB2YWxpZCBQNERcbiIpOwogCQlyZXR1cm47CiAJfQogCi0JcHJpbnRmKCJwZ2QgIEAgMHgl
cHhcbiIsIHBnZGlyKTsKLQotCWlmIChwZ2RfaXNfbGVhZigqcGdkcCkpIHsKLQkJZm9ybWF0X3B0
ZShwZ2RwLCBwZ2RfdmFsKCpwZ2RwKSk7CisJaWYgKHA0ZF9pc19sZWFmKCpwNGRwKSkgeworCQlm
b3JtYXRfcHRlKHA0ZHAsIHA0ZF92YWwoKnA0ZHApKTsKIAkJcmV0dXJuOwogCX0KLQlwcmludGYo
InBnZHAgQCAweCVweCA9IDB4JTAxNmx4XG4iLCBwZ2RwLCBwZ2RfdmFsKCpwZ2RwKSk7CiAKLQlw
dWRwID0gcHVkX29mZnNldChwZ2RwLCBhZGRyKTsKKwlwcmludGYoInA0ZHAgQCAweCVweCA9IDB4
JTAxNmx4XG4iLCBwNGRwLCBwNGRfdmFsKCpwNGRwKSk7CisKKwlwdWRwID0gcHVkX29mZnNldChw
NGRwLCBhZGRyKTsKIAogCWlmIChwdWRfbm9uZSgqcHVkcCkpIHsKIAkJcHJpbnRmKCJObyB2YWxp
ZCBQVURcbiIpOwotLSAKMi4yNC4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVj
b3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
