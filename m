Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id D15065023BC
	for <lists+openrisc@lfdr.de>; Fri, 15 Apr 2022 07:20:07 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 869DC248D0;
	Fri, 15 Apr 2022 07:20:07 +0200 (CEST)
Received: from mail-pf1-f176.google.com (mail-pf1-f176.google.com
 [209.85.210.176])
 by mail.librecores.org (Postfix) with ESMTPS id B49AF24860
 for <openrisc@lists.librecores.org>; Fri, 15 Apr 2022 07:20:06 +0200 (CEST)
Received: by mail-pf1-f176.google.com with SMTP id u29so2862841pfg.7
 for <openrisc@lists.librecores.org>; Thu, 14 Apr 2022 22:20:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=rivosinc-com.20210112.gappssmtp.com; s=20210112;
 h=date:subject:in-reply-to:cc:from:to:message-id:mime-version
 :content-transfer-encoding;
 bh=qRxjR8ix0vuqYl+JIAKzCjGTL7lI31+t1CslgYvhvOo=;
 b=LlgBV7yufxnp6RGBHA9JMOgJJArOuwSk8Gkc6OVzvARE+63wJR5VjT2odFawJ/sXgq
 owbqrgBO/HlAdelA+6G+u1q3pVP5xGD6Xp8T+Q2+DBePvAw5viHlW4KyfBqAE5Byfz7w
 /gaKiHLiKrFVmm7wFVyIjMpBgpxN8uCpY9qV/m3FBbDyL7KpFL/91u3X64dbn+8FAQzP
 Ovu9+3KQ8SiQWw3IrEMVExPjF5pDe+uJ4TNLzhxWcc+vEcp0W/9JTOF77yjNEaA8QNG0
 U/Lw1j6AYpVQAN+mh8Zfx6wyyiumiakYKrTQMwaYwH6ErnR6Z2GLpEQUmI4APvKlAVwG
 g9EA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:date:subject:in-reply-to:cc:from:to:message-id
 :mime-version:content-transfer-encoding;
 bh=qRxjR8ix0vuqYl+JIAKzCjGTL7lI31+t1CslgYvhvOo=;
 b=6Tb1LtFG7hHBKRv9zdAlJc+nc8vB6v4e71wHWmIsPRFveo8p0yk2GHyRZtsD/n9oHM
 opoPrgQzyYtxu9QyTM5G+xKO71nG7sV6b8sNnGKnTSuON73GQXEUPU19gjOKlJw6AOJe
 hZzViDFda3H1tEC7QbT6vh2bTTyH0wqyjcjtDv5XLURbmkJE85RObStVZdjYVjYmDaas
 SOJbHumLRvSO0ASBenmNzngGt2c4XvcsCApMdF5WckFMX2jlRXw9dW2uYI9j1VTMITj1
 cQvymUB9JH9uywlJPOBX4pSl4EwdVqqTaHiA9K41YWkySOtxqGtvYLzxa+GrNAVZoVDj
 nNRQ==
X-Gm-Message-State: AOAM533zyPDPqFprfN6gseHCfgNAPbIluzrJXjaIJ9QJlMdV7Mg7gQ4y
 aM3oyvj3FgPb188XL4l9QZFMog==
X-Google-Smtp-Source: ABdhPJzw6B3I43JcoA4j2cCHTED3SaHmvYc3O0wt9aRvIAGa+jNkWcumUX6otCfAWo5ctSfAQM99DA==
X-Received: by 2002:a63:f405:0:b0:3a2:8b3d:a5a8 with SMTP id
 g5-20020a63f405000000b003a28b3da5a8mr1789010pgi.204.1650000004984; 
 Thu, 14 Apr 2022 22:20:04 -0700 (PDT)
Received: from localhost (76-210-143-223.lightspeed.sntcca.sbcglobal.net.
 [76.210.143.223]) by smtp.gmail.com with ESMTPSA id
 p3-20020a056a000b4300b004faee36ea56sm1503939pfo.155.2022.04.14.22.20.04
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 14 Apr 2022 22:20:04 -0700 (PDT)
Date: Thu, 14 Apr 2022 22:20:04 -0700 (PDT)
X-Google-Original-Date: Thu, 14 Apr 2022 22:16:31 PDT (-0700)
In-Reply-To: <YljFyY7acyRDBmK7@tardis>
From: Palmer Dabbelt <palmer@rivosinc.com>
To: boqun.feng@gmail.com
Message-ID: <mhng-78fec320-bd16-4774-9e24-2e5c0ce33121@palmer-ri-x1c9>
Mime-Version: 1.0 (MHng)
Subject: Re: [OpenRISC] [PATCH v3 1/7] asm-generic: ticket-lock: New generic
 ticket-based spinlock
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: wangkefeng.wang@huawei.com, heiko@sntech.de, peterz@infradead.org,
 guoren@kernel.org, jszhang@kernel.org, linux-riscv@lists.infradead.org,
 Will Deacon <will@kernel.org>, jonas@southpole.se, linux-csky@vger.kernel.org,
 mingo@redhat.com, longman@redhat.com, linux-arch@vger.kernel.org,
 aou@eecs.berkeley.edu, Arnd Bergmann <arnd@arndb.de>,
 openrisc@lists.librecores.org, Paul Walmsley <paul.walmsley@sifive.com>,
 Greg KH <gregkh@linuxfoundation.org>, linux-kernel@vger.kernel.org,
 sudipm.mukherjee@gmail.com, macro@orcam.me.uk
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gVGh1LCAxNCBBcHIgMjAyMiAxODowOToyOSBQRFQgKC0wNzAwKSwgYm9xdW4uZmVuZ0BnbWFp
bC5jb20gd3JvdGU6Cj4gSGksCj4KPiBPbiBUaHUsIEFwciAxNCwgMjAyMiBhdCAwMzowMjowOFBN
IC0wNzAwLCBQYWxtZXIgRGFiYmVsdCB3cm90ZToKPj4gRnJvbTogUGV0ZXIgWmlqbHN0cmEgPHBl
dGVyekBpbmZyYWRlYWQub3JnPgo+PiAKPj4gVGhpcyBpcyBhIHNpbXBsZSwgZmFpciBzcGlubG9j
ay4gIFNwZWNpZmljYWxseSBpdCBkb2Vzbid0IGhhdmUgYWxsIHRoZQo+PiBzdWJ0bGUgbWVtb3J5
IG1vZGVsIGRlcGVuZGVuY2llcyB0aGF0IHFzcGlubG9jayBoYXMsIHdoaWNoIG1ha2VzIGl0IG1v
cmUKPj4gc3VpdGFibGUgZm9yIHNpbXBsZSBzeXN0ZW1zIGFzIGl0IGlzIG1vcmUgbGlrZWx5IHRv
IGJlIGNvcnJlY3QuICBJdCBpcwo+PiBpbXBsZW1lbnRlZCBlbnRpcmVseSBpbiB0ZXJtcyBvZiBz
dGFuZGFyZCBhdG9taWNzIGFuZCB0aHVzIHdvcmtzIGZpbmUKPj4gd2l0aG91dCBhbnkgYXJjaC1z
cGVjaWZpYyBjb2RlLgo+PiAKPj4gVGhpcyByZXBsYWNlcyB0aGUgZXhpc3RpbmcgYXNtLWdlbmVy
aWMvc3BpbmxvY2suaCwgd2hpY2gganVzdCBlcnJvcmVkCj4+IG91dCBvbiBTTVAgc3lzdGVtcy4K
Pj4gCj4+IFNpZ25lZC1vZmYtYnk6IFBldGVyIFppamxzdHJhIChJbnRlbCkgPHBldGVyekBpbmZy
YWRlYWQub3JnPgo+PiBTaWduZWQtb2ZmLWJ5OiBQYWxtZXIgRGFiYmVsdCA8cGFsbWVyQHJpdm9z
aW5jLmNvbT4KPj4gLS0tCj4+ICBpbmNsdWRlL2FzbS1nZW5lcmljL3NwaW5sb2NrLmggICAgICAg
fCA4NSArKysrKysrKysrKysrKysrKysrKysrKysrLS0tCj4+ICBpbmNsdWRlL2FzbS1nZW5lcmlj
L3NwaW5sb2NrX3R5cGVzLmggfCAxNyArKysrKysKPj4gIDIgZmlsZXMgY2hhbmdlZCwgOTQgaW5z
ZXJ0aW9ucygrKSwgOCBkZWxldGlvbnMoLSkKPj4gIGNyZWF0ZSBtb2RlIDEwMDY0NCBpbmNsdWRl
L2FzbS1nZW5lcmljL3NwaW5sb2NrX3R5cGVzLmgKPj4gCj4+IGRpZmYgLS1naXQgYS9pbmNsdWRl
L2FzbS1nZW5lcmljL3NwaW5sb2NrLmggYi9pbmNsdWRlL2FzbS1nZW5lcmljL3NwaW5sb2NrLmgK
Pj4gaW5kZXggYWRhZjZhY2FiMTcyLi5jYTgyOWZjYjk2NzIgMTAwNjQ0Cj4+IC0tLSBhL2luY2x1
ZGUvYXNtLWdlbmVyaWMvc3BpbmxvY2suaAo+PiArKysgYi9pbmNsdWRlL2FzbS1nZW5lcmljL3Nw
aW5sb2NrLmgKPj4gQEAgLTEsMTIgKzEsODEgQEAKPj4gIC8qIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wICovCj4+IC0jaWZuZGVmIF9fQVNNX0dFTkVSSUNfU1BJTkxPQ0tfSAo+PiAt
I2RlZmluZSBfX0FTTV9HRU5FUklDX1NQSU5MT0NLX0gKPj4gKwo+PiAgLyoKPj4gLSAqIFlvdSBu
ZWVkIHRvIGltcGxlbWVudCBhc20vc3BpbmxvY2suaCBmb3IgU01QIHN1cHBvcnQuIFRoZSBnZW5l
cmljCj4+IC0gKiB2ZXJzaW9uIGRvZXMgbm90IGhhbmRsZSBTTVAuCj4+ICsgKiAnR2VuZXJpYycg
dGlja2V0LWxvY2sgaW1wbGVtZW50YXRpb24uCj4+ICsgKgo+PiArICogSXQgcmVsaWVzIG9uIGF0
b21pY19mZXRjaF9hZGQoKSBoYXZpbmcgd2VsbCBkZWZpbmVkIGZvcndhcmQgcHJvZ3Jlc3MKPj4g
KyAqIGd1YXJhbnRlZXMgdW5kZXIgY29udGVudGlvbi4gSWYgeW91ciBhcmNoaXRlY3R1cmUgY2Fu
bm90IHByb3ZpZGUgdGhpcywgc3RpY2sKPj4gKyAqIHRvIGEgdGVzdC1hbmQtc2V0IGxvY2suCj4+
ICsgKgo+PiArICogSXQgYWxzbyByZWxpZXMgb24gYXRvbWljX2ZldGNoX2FkZCgpIGJlaW5nIHNh
ZmUgdnMgc21wX3N0b3JlX3JlbGVhc2UoKSBvbiBhCj4+ICsgKiBzdWItd29yZCBvZiB0aGUgdmFs
dWUuIFRoaXMgaXMgZ2VuZXJhbGx5IHRydWUgZm9yIGFueXRoaW5nIExML1NDIGFsdGhvdWdoCj4+
ICsgKiB5b3UnZCBiZSBoYXJkIHByZXNzZWQgdG8gZmluZCBhbnl0aGluZyB1c2VmdWwgaW4gYXJj
aGl0ZWN0dXJlIHNwZWNpZmljYXRpb25zCj4+ICsgKiBhYm91dCB0aGlzLiBJZiB5b3VyIGFyY2hp
dGVjdHVyZSBjYW5ub3QgZG8gdGhpcyB5b3UgbWlnaHQgYmUgYmV0dGVyIG9mZiB3aXRoCj4+ICsg
KiBhIHRlc3QtYW5kLXNldC4KPj4gKyAqCj4+ICsgKiBJdCBmdXJ0aGVyIGFzc3VtZXMgYXRvbWlj
XypfcmVsZWFzZSgpICsgYXRvbWljXypfYWNxdWlyZSgpIGlzIFJDcGMgYW5kIGhlbmNlCj4+ICsg
KiB1c2VzIGF0b21pY19mZXRjaF9hZGQoKSB3aGljaCBpcyBTQyB0byBjcmVhdGUgYW4gUkNzYyBs
b2NrLgo+PiArICoKPj4gKyAqIFRoZSBpbXBsZW1lbnRhdGlvbiB1c2VzIHNtcF9jb25kX2xvYWRf
YWNxdWlyZSgpIHRvIHNwaW4sIHNvIGlmIHRoZQo+PiArICogYXJjaGl0ZWN0dXJlIGhhcyBXRkUg
bGlrZSBpbnN0cnVjdGlvbnMgdG8gc2xlZXAgaW5zdGVhZCBvZiBwb2xsIGZvciB3b3JkCj4+ICsg
KiBtb2RpZmljYXRpb25zIGJlIHN1cmUgdG8gaW1wbGVtZW50IHRoYXQgKHNlZSBBUk02NCBmb3Ig
ZXhhbXBsZSkuCj4+ICsgKgo+PiAgICovCj4+IC0jaWZkZWYgQ09ORklHX1NNUAo+PiAtI2Vycm9y
IG5lZWQgYW4gYXJjaGl0ZWN0dXJlIHNwZWNpZmljIGFzbS9zcGlubG9jay5oCj4+IC0jZW5kaWYK
Pj4gIAo+PiAtI2VuZGlmIC8qIF9fQVNNX0dFTkVSSUNfU1BJTkxPQ0tfSCAqLwo+PiArI2lmbmRl
ZiBfX0FTTV9HRU5FUklDX1RJQ0tFVF9MT0NLX0gKPj4gKyNkZWZpbmUgX19BU01fR0VORVJJQ19U
SUNLRVRfTE9DS19ICj4+ICsKPj4gKyNpbmNsdWRlIDxsaW51eC9hdG9taWMuaD4KPj4gKyNpbmNs
dWRlIDxhc20tZ2VuZXJpYy9zcGlubG9ja190eXBlcy5oPgo+PiArCj4+ICtzdGF0aWMgX19hbHdh
eXNfaW5saW5lIHZvaWQgYXJjaF9zcGluX2xvY2soYXJjaF9zcGlubG9ja190ICpsb2NrKQo+PiAr
ewo+PiArCXUzMiB2YWwgPSBhdG9taWNfZmV0Y2hfYWRkKDE8PDE2LCBsb2NrKTsgLyogU0MsIGdp
dmVzIHVzIFJDc2MgKi8KPj4gKwl1MTYgdGlja2V0ID0gdmFsID4+IDE2Owo+PiArCj4+ICsJaWYg
KHRpY2tldCA9PSAodTE2KXZhbCkKPj4gKwkJcmV0dXJuOwo+PiArCj4+ICsJYXRvbWljX2NvbmRf
cmVhZF9hY3F1aXJlKGxvY2ssIHRpY2tldCA9PSAodTE2KVZBTCk7Cj4KPiBMb29rcyBsaWtlIG15
IGZvbGxvdyBjb21tZW50IGlzIG1pc3Npbmc6Cj4KPiAJaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcv
bGttbC9Zak0rUDMySTRmRU5JcUdWQGJvcXVuLWFyY2hsaW51eC8KPgo+IEJhc2ljYWxseSwgSSBz
dWdnZXN0ZWQgdGhhdCAxKSBpbnN0ZWFkIG9mICJTQyIsIHVzZSAiZnVsbHktb3JkZXJlZCIgYXMK
PiB0aGF0J3MgYSBjb21wbGV0ZSBkZWZpbml0aW9uIGluIG91ciBhdG9taWMgQVBJICgiUkNzYyIg
aXMgZmluZSksIDIpCj4gaW50cm9kdWNlIGEgUkNzYyBhdG9taWNfY29uZF9yZWFkX2FjcXVpcmUo
KSBvciBhZGQgYSBmdWxsIGJhcnJpZXIgaGVyZQo+IHRvIG1ha2UgYXJjaF9zcGluX2xvY2soKSBS
Q3NjIG90aGVyd2lzZSBhcmNoX3NwaW5fbG9jaygpIGlzIFJDc2Mgb24KPiBmYXN0cGF0aCBidXQg
UkNwYyBvbiBzbG93cGF0aC4KClNvcnJ5IGFib3V0IHRoYXQsIG5vdyB0aGF0IHlvdSBtZW50aW9u
IGl0IEkgcmVtZW1iZXIgc2VlaW5nIHRoYXQgY29tbWVudCAKYnV0IEkgZ3Vlc3MgSSBkcm9wcGVk
IGl0IHNvbWVob3cgLS0gSSd2ZSBiZWVuIGRvd24gYSBidW5jaCBvZiBvdGhlciAKUklTQy1WIG1l
bW9yeSBtb2RlbCByYWJiaXQgaG9sZXMgbGF0ZWx5LCBzbyBJIGd1ZXNzIHRoaXMganVzdCBnb3Qg
bG9zdCAKaW4gdGhlIHNodWZmbGUuCgpJJ20gbm90IHJlYWxseSBhIG1lbW9yeSBtb2RlbCBwZXJz
b24sIHNvIEknbSBhIGJpdCBjb25mdXNlZCBoZXJlLCBidXQgCklJVUMgdGhlIGlzc3VlIGlzIHRo
YXQgdGhlcmUncyBvbmx5IGFuIFJDcGMgb3JkZXJpbmcgYmV0d2VlbiB0aGUgCnN0b3JlX3JlbGVh
c2UgdGhhdCBwdWJsaXNoZXMgdGhlIGJha2VyJ3MgdGlja2V0IGFuZCB0aGUgY3VzdG9tZXIncyBz
cGluIAp0byBvYnRhaW4gYSBjb250ZXN0ZWQgbG9jay4gIFRodXMgd2UgY291bGQgc2VlIFJDcGMt
bGVnYWwgYWNjZXNzZXMgCmJlZm9yZSB0aGUgYXRvbWljX2NvbmRfcmVhZF9hY3F1aXJlKCkuCgpU
aGF0J3Mgd2hlcmUgSSBnZXQgYSBiaXQgbG9zdDogdGhlIGF0b21pY19mZXRjaF9hZGQoKSBpcyBS
Q3NjLCBzbyB0aGUgCm9mZmVuZGluZyBhY2Nlc3NlcyBhcmUgYm91bmRlZCB0byByZW1haW4gd2l0
aGluIGFyY2hfc3Bpbl9sb2NrKCkuICBJJ20gCm5vdCBzdXJlIGhvdyB0aGF0IGxpbmVzIHVwIHdp
dGggdGhlIExLTU0gcmVxdWlyZW1lbnRzLCB3aGljaCBJIGFsd2F5cyAKc2VlIGV4cHJlc3NlZCBp
biB0ZXJtcyBvZiB0aGUgZW50aXJlIGxvY2sgYmVpbmcgUkNzYyAoc3BlY2lmaWNhbGx5IHdpdGgg
CnVubG9jay0+bG9jayByZW9yZGVyaW5nIHdlaXJkbmVzcywgd2hpY2ggdGhlIGZ1bGx5IG9yZGVy
ZWQgQU1PIHNlZW1zIHRvIApwcmV2ZW50IGhlcmUpLgoKVGhhdCdzIGtpbmQgb2YganVzdCBhIGN1
cmlvc2l0eSwgdGhvdWdoLCBzbyBhc3N1bWluZyB3ZSBuZWVkIHNvbWUgCnN0cm9uZ2VyIG9yZGVy
aW5nIGhlcmUgSSBzb3J0IG9mIGNvbnNpZGVyZWQgdGhpcwoKICAgIGRpZmYgLS1naXQgYS9pbmNs
dWRlL2FzbS1nZW5lcmljL3NwaW5sb2NrLmggYi9pbmNsdWRlL2FzbS1nZW5lcmljL3NwaW5sb2Nr
LmgKICAgIGluZGV4IGNhODI5ZmNiOTY3Mi4uYmY0ZTYwNTBiOWIyIDEwMDY0NAogICAgLS0tIGEv
aW5jbHVkZS9hc20tZ2VuZXJpYy9zcGlubG9jay5oCiAgICArKysgYi9pbmNsdWRlL2FzbS1nZW5l
cmljL3NwaW5sb2NrLmgKICAgIEBAIC0xNCw3ICsxNCw3IEBACiAgICAgICogYSB0ZXN0LWFuZC1z
ZXQuCiAgICAgICoKICAgICAgKiBJdCBmdXJ0aGVyIGFzc3VtZXMgYXRvbWljXypfcmVsZWFzZSgp
ICsgYXRvbWljXypfYWNxdWlyZSgpIGlzIFJDcGMgYW5kIGhlbmNlCiAgICAtICogdXNlcyBhdG9t
aWNfZmV0Y2hfYWRkKCkgd2hpY2ggaXMgU0MgdG8gY3JlYXRlIGFuIFJDc2MgbG9jay4KICAgICsg
KiB1c2VzIGF0b21pY19mZXRjaF9hZGRfcmNzYygpIHdoaWNoIGlzIFJDc2MgdG8gY3JlYXRlIGFu
IFJDc2MgbG9jay4KICAgICAgKgogICAgICAqIFRoZSBpbXBsZW1lbnRhdGlvbiB1c2VzIHNtcF9j
b25kX2xvYWRfYWNxdWlyZSgpIHRvIHNwaW4sIHNvIGlmIHRoZQogICAgICAqIGFyY2hpdGVjdHVy
ZSBoYXMgV0ZFIGxpa2UgaW5zdHJ1Y3Rpb25zIHRvIHNsZWVwIGluc3RlYWQgb2YgcG9sbCBmb3Ig
d29yZAogICAgQEAgLTMwLDEzICszMCwxMyBAQAogICAgCiAgICAgc3RhdGljIF9fYWx3YXlzX2lu
bGluZSB2b2lkIGFyY2hfc3Bpbl9sb2NrKGFyY2hfc3BpbmxvY2tfdCAqbG9jaykKICAgICB7CiAg
ICAJdTMyIHZhbCA9IGF0b21pY19mZXRjaF9hZGQoMTw8MTYsIGxvY2spOwogICAgIAl1MTYgdGlj
a2V0ID0gdmFsID4+IDE2OwogICAgCiAgICAgCWlmICh0aWNrZXQgPT0gKHUxNil2YWwpCiAgICAg
CQlyZXR1cm47CiAgICAKICAgIC0JYXRvbWljX2NvbmRfcmVhZF9hY3F1aXJlKGxvY2ssIHRpY2tl
dCA9PSAodTE2KVZBTCk7CiAgICArCWF0b21pY19jb25kX3JlYWRfcmNzYyhsb2NrLCB0aWNrZXQg
PT0gKHUxNilWQUwpOwogICAgIH0KICAgIAogICAgIHN0YXRpYyBfX2Fsd2F5c19pbmxpbmUgYm9v
bCBhcmNoX3NwaW5fdHJ5bG9jayhhcmNoX3NwaW5sb2NrX3QgKmxvY2spCgpidXQgdGhhdCBzbWVs
bHMgYSBiaXQgYXdrd2FyZDogaXQncyBub3QgcmVhbGx5IHRoYXQgdGhlIGFjY2VzcyBpcyBSQ3Nj
LCAKaXQncyB0aGF0IHRoZSB3aG9sZSBsb2NrIGlzLCBhbmQgdGhlIFJDc2MtPmJyYW5jaC0+UkNw
YyBpcyBqdXN0IGtpbmQgb2YgCnNjcmVhbWluZyBmb3IgYXJjaC1zcGVjaWZpYyBvcHRpbWl6YXRp
b25zLiAgSSB0aGluayB3ZSBlaXRoZXIgZW5kIHVwIAp3aXRoIHNvbWUgc29ydCBvZiAiYXRvbWlj
XypfZm9yX3RzcGlubG9jayIgb3IgYSAibWJfKl9mb3JfdHNwaW5sb2NrIiwgCmJvdGggb2Ygd2hp
Y2ggc2VlbSB2ZXJ5IHNwZWNpZmljLgoKVGhhdCwgb3Igd2UganVzdCBydW4gd2l0aCB0aGUgZmVu
Y2UgdW50aWwgc29tZW9uZSBoYXMgYSBjb25jcmV0ZSB3YXkgdG8gCmRvIGl0IGZhc3Rlci4gIEkg
ZG9uJ3Qga25vdyBPcGVuUklTQyBvciBDLVNLWSwgYnV0IElJVUMgdGhlIGZ1bGwgZmVuY2UgCmlz
IGZyZWUgb24gUklTQy1WOiBvdXIgc21wX2NvbmRfcmVhZF9hY3F1aXJlKCkgb25seSBlbWl0cyBy
ZWFkIGFjY2Vzc2VzLCAKZW5kcyBpbiBhICJmZW5jZSByLHIiLCBhbmQgaXMgcHJvY2VlZGVkIGJ5
IGEgZnVsbCBzbXBfbWIoKSBmcm9tIAphdG9taWNfZmV0Y2hfYWRkKCkuICBTbyBJJ2QgbGVhbiB0
b3dhcmRzIHRoZSBtdWNoIHNpbXBsZXIKCiAgICBkaWZmIC0tZ2l0IGEvaW5jbHVkZS9hc20tZ2Vu
ZXJpYy9zcGlubG9jay5oIGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9zcGlubG9jay5oCiAgICBpbmRl
eCBjYTgyOWZjYjk2NzIuLjA4ZTM0MDBhMTA0ZiAxMDA2NDQKICAgIC0tLSBhL2luY2x1ZGUvYXNt
LWdlbmVyaWMvc3BpbmxvY2suaAogICAgKysrIGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9zcGlubG9j
ay5oCiAgICBAQCAtMTQsNyArMTQsOSBAQAogICAgICAqIGEgdGVzdC1hbmQtc2V0LgogICAgICAq
CiAgICAgICogSXQgZnVydGhlciBhc3N1bWVzIGF0b21pY18qX3JlbGVhc2UoKSArIGF0b21pY18q
X2FjcXVpcmUoKSBpcyBSQ3BjIGFuZCBoZW5jZQogICAgLSAqIHVzZXMgYXRvbWljX2ZldGNoX2Fk
ZCgpIHdoaWNoIGlzIFNDIHRvIGNyZWF0ZSBhbiBSQ3NjIGxvY2suCiAgICArICogdXNlcyBhdG9t
aWNfZmV0Y2hfYWRkKCkgd2hpY2ggaXMgUkNzYyB0byBjcmVhdGUgYW4gUkNzYyBob3QgcGF0aCwg
YWxvbmcgd2l0aAogICAgKyAqIGEgZnVsbCBmZW5jZSBhZnRlciB0aGUgc3BpbiB0byB1cGdyYWRl
IHRoZSBvdGhlcndpc2UtUkNwYwogICAgKyAqIGF0b21pY19jb25kX3JlYWRfYWNxdWlyZSgpLgog
ICAgICAqCiAgICAgICogVGhlIGltcGxlbWVudGF0aW9uIHVzZXMgc21wX2NvbmRfbG9hZF9hY3F1
aXJlKCkgdG8gc3Bpbiwgc28gaWYgdGhlCiAgICAgICogYXJjaGl0ZWN0dXJlIGhhcyBXRkUgbGlr
ZSBpbnN0cnVjdGlvbnMgdG8gc2xlZXAgaW5zdGVhZCBvZiBwb2xsIGZvciB3b3JkCiAgICBAQCAt
MzAsMTMgKzMyLDIyIEBACiAgICAKICAgICBzdGF0aWMgX19hbHdheXNfaW5saW5lIHZvaWQgYXJj
aF9zcGluX2xvY2soYXJjaF9zcGlubG9ja190ICpsb2NrKQogICAgIHsKICAgIC0JdTMyIHZhbCA9
IGF0b21pY19mZXRjaF9hZGQoMTw8MTYsIGxvY2spOyAvKiBTQywgZ2l2ZXMgdXMgUkNzYyAqLwog
ICAgKwl1MzIgdmFsID0gYXRvbWljX2ZldGNoX2FkZCgxPDwxNiwgbG9jayk7CiAgICAgCXUxNiB0
aWNrZXQgPSB2YWwgPj4gMTY7CiAgICAKICAgICAJaWYgKHRpY2tldCA9PSAodTE2KXZhbCkKICAg
ICAJCXJldHVybjsKICAgIAogICAgKwkvKgogICAgKwkgKiBhdG9taWNfY29uZF9yZWFkX2FjcXVp
cmUoKSBpcyBSQ3BjLCBidXQgcmF0aGVyIHRoYW4gZGVmaW5pbmcgYQogICAgKwkgKiBjdXN0b20g
Y29uZF9yZWFkX3Jjc2MoKSBoZXJlIHdlIGp1c3QgZW1pdCBhIGZ1bGwgZmVuY2UuICBXZSBvbmx5
CiAgICArCSAqIG5lZWQgdGhlIHByaW9yIHJlYWRzIGJlZm9yZSBzdWJzZXF1ZW50IHdyaXRlcyBv
cmRlcmluZyBmcm9tCiAgICArCSAqIHNtYl9tYigpLCBidXQgYXMgYXRvbWljX2NvbmRfcmVhZF9h
Y3F1aXJlKCkganVzdCBlbWl0cyByZWFkcyBhbmQgd2UKICAgICsJICogaGF2ZSBubyBvdXRzdGFu
ZGluZyB3cml0ZXMgZHVlIHRvIHRoZSBhdG9taWNfZmV0Y2hfYWRkKCkgdGhlIGV4dHJhCiAgICAr
CSAqIG9yZGVyaW5ncyBhcmUgZnJlZS4KICAgICsJICovCiAgICAgCWF0b21pY19jb25kX3JlYWRf
YWNxdWlyZShsb2NrLCB0aWNrZXQgPT0gKHUxNilWQUwpOwogICAgKwlzbXBfbWIoKTsKICAgICB9
CiAgICAKICAgICBzdGF0aWMgX19hbHdheXNfaW5saW5lIGJvb2wgYXJjaF9zcGluX3RyeWxvY2so
YXJjaF9zcGlubG9ja190ICpsb2NrKQoKSSdtIGFsc28gbm93IHdvcnJpZWQgYWJvdXQgdHJ5bG9j
aywgYnV0IGFtIHRvbyBmYXIgZG93biB0aGlzIHJhYmJpdCBob2xlIAp0byB0cnkgYW5kIGZpZ3Vy
ZSBvdXQgaG93IHRyeSBtYXBzIGJldHdlZW4gbG9ja3MgYW5kIGNtcHhjaGcuICBUaGlzIGlzIAph
bGwgd2F5IHRvbyBjb21wbGljYXRlZCB0byBzcXVhc2ggaW4sIHRob3VnaCwgc28gSSdsbCBkZWZp
bml0ZWx5IHBsYW4gb24gCmEgdjQuCgo+IFJlZ2FyZHMsCj4gQm9xdW4KPgo+PiArfQo+PiArCj4+
ICtzdGF0aWMgX19hbHdheXNfaW5saW5lIGJvb2wgYXJjaF9zcGluX3RyeWxvY2soYXJjaF9zcGlu
bG9ja190ICpsb2NrKQo+PiArewo+PiArCXUzMiBvbGQgPSBhdG9taWNfcmVhZChsb2NrKTsKPj4g
Kwo+PiArCWlmICgob2xkID4+IDE2KSAhPSAob2xkICYgMHhmZmZmKSkKPj4gKwkJcmV0dXJuIGZh
bHNlOwo+PiArCj4+ICsJcmV0dXJuIGF0b21pY190cnlfY21weGNoZyhsb2NrLCAmb2xkLCBvbGQg
KyAoMTw8MTYpKTsgLyogU0MsIGZvciBSQ3NjICovCj4+ICt9Cj4+ICsKPiBbLi4uXQpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5n
IGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNv
cmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
