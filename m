Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 979E842B787
	for <lists+openrisc@lfdr.de>; Wed, 13 Oct 2021 08:38:29 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 2312924103;
	Wed, 13 Oct 2021 08:38:28 +0200 (CEST)
Received: from conuserg-08.nifty.com (conuserg-08.nifty.com [210.131.2.75])
 by mail.librecores.org (Postfix) with ESMTPS id DAF6623F5C
 for <openrisc@lists.librecores.org>; Wed, 13 Oct 2021 08:38:26 +0200 (CEST)
Received: from grover.RMN.KIBA.LAB.jp (133-32-232-101.west.xps.vectant.ne.jp
 [133.32.232.101]) (authenticated)
 by conuserg-08.nifty.com with ESMTP id 19D6aPuh030197;
 Wed, 13 Oct 2021 15:36:26 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conuserg-08.nifty.com 19D6aPuh030197
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
 s=dec2015msa; t=1634106991;
 bh=w+C8PeialXZoMais0w2ZzIgnOibTO/x7dqFrtlyYKH8=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=C4fVA9ntIpKK2HCft6rDKsRyDi8GEsy4kFCoKXwqdwRnoxIQIQNOsl+OrzZdrX0H4
 dVWL8PlcvbPbCPE/DkOcyIzluHDRLYTqupzlhB1Cw8Zs8Hx0sGj3wrTXo8L7aYMSzW
 8uwBt8T6Iwb5ysxMEVZWgJAKro6hvs0IZdjayrfD5hehK0ZZpfbbTr5cL3RfphDPM4
 +rVTGz35smHcpayzE/7Gw51bGWCLUvd56UudcXnaGraCH/fakuQN9oxefFh6DryxCk
 JIlVlQ2PQTKuKeSp1XJPh/oAiHtvXUbUf9kvtxgTjYL09se5Opx2hMluRXiQ+jmWKi
 t4DN5JmtWIivA==
X-Nifty-SrcIP: [133.32.232.101]
From: Masahiro Yamada <masahiroy@kernel.org>
To: linux-kbuild@vger.kernel.org
Date: Wed, 13 Oct 2021 15:36:22 +0900
Message-Id: <20211013063622.548590-2-masahiroy@kernel.org>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20211013063622.548590-1-masahiroy@kernel.org>
References: <20211013063622.548590-1-masahiroy@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 2/2] kbuild: use more subdir- for visiting
 subdirectories while cleaning
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, Randy Dunlap <rdunlap@infradead.org>,
 linux-ia64@vger.kernel.org, linux-doc@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Viresh Kumar <viresh.kumar@linaro.org>, linux-mips@vger.kernel.org,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Rich Felker <dalias@libc.org>,
 Guo Ren <guoren@kernel.org>, linux-csky@vger.kernel.org,
 "H. Peter Anvin" <hpa@zytor.com>, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org, Vincent Chen <deanbo422@gmail.com>,
 Will Deacon <will@kernel.org>, Thomas Gleixner <tglx@linutronix.de>,
 Paul Mackerras <paulus@samba.org>, Jonas Bonn <jonas@southpole.se>,
 Rob Herring <robh@kernel.org>, Vasily Gorbik <gor@linux.ibm.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Jonathan Corbet <corbet@lwn.net>,
 Marc Zyngier <maz@kernel.org>, Masahiro Yamada <masahiroy@kernel.org>,
 linux-sh@vger.kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>,
 Christian Borntraeger <borntraeger@de.ibm.com>, linux-alpha@vger.kernel.org,
 Ingo Molnar <mingo@redhat.com>, linux-parisc@vger.kernel.org,
 Sami Tolvanen <samitolvanen@google.com>,
 Catalin Marinas <catalin.marinas@arm.com>, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, uclinux-h8-devel@lists.sourceforge.jp,
 linux-xtensa@linux-xtensa.org, Albert Ou <aou@eecs.berkeley.edu>,
 Robert Richter <rric@kernel.org>, Kees Cook <keescook@chromium.org>,
 Arnd Bergmann <arnd@arndb.de>, linux-s390@vger.kernel.org,
 Heiko Carstens <hca@linux.ibm.com>,
 =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig?= <u.kleine-koenig@pengutronix.de>,
 Nathan Chancellor <nathan@kernel.org>, linux-m68k@lists.linux-m68k.org,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Ivan Kokshaysky <ink@jurassic.park.msu.ru>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, linux-arm-kernel@lists.infradead.org,
 William Cohen <wcohen@redhat.com>, Chris Zankel <chris@zankel.net>,
 Michal Simek <monstr@monstr.eu>, Michal Marek <michal.lkml@markovi.net>,
 Julien Thierry <jthierry@redhat.com>, Nick Hu <nickhu@andestech.com>,
 Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>,
 Nick Desaulniers <ndesaulniers@google.com>, linux-kernel@vger.kernel.org,
 "David S. Miller" <davem@davemloft.net>, openrisc@lists.librecores.org,
 Palmer Dabbelt <palmer@dabbelt.com>, Michael Ellerman <mpe@ellerman.id.au>,
 Borislav Petkov <bp@alien8.de>, Vineet Gupta <vgupta@kernel.org>,
 linuxppc-dev@lists.ozlabs.org, Helge Deller <deller@gmx.de>, x86@kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RG9jdW1lbnRhdGlvbi9rYnVpbGQvbWFrZWZpbGVzLnJzdCBzdWdnZXN0cyB0byB1c2UgImFyY2hj
bGVhbiIgZm9yCmNsZWFuaW5nIGFyY2gvJChTUkNBUkNIKS9ib290Ly4KClNpbmNlIGNvbW1pdCBk
OTJjYzRkNTE2NDMgKCJrYnVpbGQ6IHJlcXVpcmUgYWxsIGFyY2hpdGVjdHVyZXMgdG8gaGF2ZQph
cmNoLyQoU1JDQVJDSCkvS2J1aWxkIiksIHdlIGNhbiB1c2UgdGhlICJzdWJkaXItICs9IGJvb3Qi
IHRyaWNrIGZvcgphbGwgYXJjaGl0ZWN0dXJlcy4gVGhpcyBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2Yg
dGhlIHBhcmFsbGVsIG9wdGlvbiAoLWopCmZvciAibWFrZSBjbGVhbiIuCgpJIGFsc28gY2xlYW5l
ZCB1cCB0aGUgY29tbWVudHMuIFRoZSAiYXJjaGRlcCIgdGFyZ2V0IGRvZXMgbm90IGV4aXN0LgoK
U2lnbmVkLW9mZi1ieTogTWFzYWhpcm8gWWFtYWRhIDxtYXNhaGlyb3lAa2VybmVsLm9yZz4KLS0t
CgogRG9jdW1lbnRhdGlvbi9rYnVpbGQvbWFrZWZpbGVzLnJzdCB8IDE3ICsrLS0tLS0tLS0tLS0t
LS0tCiBhcmNoL2FscGhhL0tidWlsZCAgICAgICAgICAgICAgICAgIHwgIDMgKysrCiBhcmNoL2Fs
cGhhL01ha2VmaWxlICAgICAgICAgICAgICAgIHwgIDMgLS0tCiBhcmNoL2FyYy9LYnVpbGQgICAg
ICAgICAgICAgICAgICAgIHwgIDMgKysrCiBhcmNoL2FyYy9NYWtlZmlsZSAgICAgICAgICAgICAg
ICAgIHwgIDMgLS0tCiBhcmNoL2FybS9LYnVpbGQgICAgICAgICAgICAgICAgICAgIHwgIDMgKysr
CiBhcmNoL2FybS9NYWtlZmlsZSAgICAgICAgICAgICAgICAgIHwgIDQgLS0tLQogYXJjaC9hcm02
NC9LYnVpbGQgICAgICAgICAgICAgICAgICB8ICAzICsrKwogYXJjaC9hcm02NC9NYWtlZmlsZSAg
ICAgICAgICAgICAgICB8ICA3IC0tLS0tLS0KIGFyY2gvYXJtNjQva2VybmVsL01ha2VmaWxlICAg
ICAgICAgfCAgMyArKysKIGFyY2gvY3NreS9LYnVpbGQgICAgICAgICAgICAgICAgICAgfCAgMyAr
KysKIGFyY2gvY3NreS9NYWtlZmlsZSAgICAgICAgICAgICAgICAgfCAgMyAtLS0KIGFyY2gvaDgz
MDAvS2J1aWxkICAgICAgICAgICAgICAgICAgfCAgMyArKysKIGFyY2gvaDgzMDAvTWFrZWZpbGUg
ICAgICAgICAgICAgICAgfCAgMyAtLS0KIGFyY2gvaWE2NC9NYWtlZmlsZSAgICAgICAgICAgICAg
ICAgfCAgMiAtLQogYXJjaC9tNjhrL01ha2VmaWxlICAgICAgICAgICAgICAgICB8ICA0ICstLS0K
IGFyY2gvbWljcm9ibGF6ZS9LYnVpbGQgICAgICAgICAgICAgfCAgMyArKysKIGFyY2gvbWljcm9i
bGF6ZS9NYWtlZmlsZSAgICAgICAgICAgfCAgMyAtLS0KIGFyY2gvbWlwcy9LYnVpbGQgICAgICAg
ICAgICAgICAgICAgfCAgMyArKysKIGFyY2gvbWlwcy9NYWtlZmlsZSAgICAgICAgICAgICAgICAg
fCAgOCArLS0tLS0tLQogYXJjaC9taXBzL2Jvb3QvTWFrZWZpbGUgICAgICAgICAgICB8ICAzICsr
KwogYXJjaC9uZHMzMi9LYnVpbGQgICAgICAgICAgICAgICAgICB8ICAzICsrKwogYXJjaC9uZHMz
Mi9NYWtlZmlsZSAgICAgICAgICAgICAgICB8ICAzIC0tLQogYXJjaC9uaW9zMi9LYnVpbGQgICAg
ICAgICAgICAgICAgICB8ICAzICsrKwogYXJjaC9uaW9zMi9NYWtlZmlsZSAgICAgICAgICAgICAg
ICB8ICA2ICstLS0tLQogYXJjaC9vcGVucmlzYy9LYnVpbGQgICAgICAgICAgICAgICB8ICAzICsr
KwogYXJjaC9vcGVucmlzYy9NYWtlZmlsZSAgICAgICAgICAgICB8ICA3ICstLS0tLS0KIGFyY2gv
cGFyaXNjL0tidWlsZCAgICAgICAgICAgICAgICAgfCAgMyArKysKIGFyY2gvcGFyaXNjL01ha2Vm
aWxlICAgICAgICAgICAgICAgfCAgNyArLS0tLS0tCiBhcmNoL3Bvd2VycGMvS2J1aWxkICAgICAg
ICAgICAgICAgIHwgIDMgKysrCiBhcmNoL3Bvd2VycGMvTWFrZWZpbGUgICAgICAgICAgICAgIHwg
IDcgKy0tLS0tLQogYXJjaC9yaXNjdi9LYnVpbGQgICAgICAgICAgICAgICAgICB8ICAzICsrKwog
YXJjaC9yaXNjdi9NYWtlZmlsZSAgICAgICAgICAgICAgICB8ICA3ICstLS0tLS0KIGFyY2gvczM5
MC9LYnVpbGQgICAgICAgICAgICAgICAgICAgfCAgMyArKysKIGFyY2gvczM5MC9NYWtlZmlsZSAg
ICAgICAgICAgICAgICAgfCAgOCArLS0tLS0tLQogYXJjaC9zaC9LYnVpbGQgICAgICAgICAgICAg
ICAgICAgICB8ICAzICsrKwogYXJjaC9zaC9NYWtlZmlsZSAgICAgICAgICAgICAgICAgICB8ICAz
IC0tLQogYXJjaC9zcGFyYy9LYnVpbGQgICAgICAgICAgICAgICAgICB8ICAzICsrKwogYXJjaC9z
cGFyYy9NYWtlZmlsZSAgICAgICAgICAgICAgICB8ICAzIC0tLQogYXJjaC94ODYvS2J1aWxkICAg
ICAgICAgICAgICAgICAgICB8ICAzICsrKwogYXJjaC94ODYvTWFrZWZpbGUgICAgICAgICAgICAg
ICAgICB8ICAyIC0tCiBhcmNoL3h0ZW5zYS9NYWtlZmlsZSAgICAgICAgICAgICAgIHwgIDQgKy0t
LQogNDIgZmlsZXMgY2hhbmdlZCwgNzEgaW5zZXJ0aW9ucygrKSwgMTAzIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24va2J1aWxkL21ha2VmaWxlcy5yc3QgYi9Eb2N1bWVu
dGF0aW9uL2tidWlsZC9tYWtlZmlsZXMucnN0CmluZGV4IGRiM2FmMGI0NWJhZi4uYjAwOGI5MGI5
MmM5IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2tidWlsZC9tYWtlZmlsZXMucnN0CisrKyBi
L0RvY3VtZW50YXRpb24va2J1aWxkL21ha2VmaWxlcy5yc3QKQEAgLTEwNTAsMjIgKzEwNTAsOSBA
QCBpcyBub3Qgc3VmZmljaWVudCB0aGlzIHNvbWV0aW1lcyBuZWVkcyB0byBiZSBleHBsaWNpdC4K
IFRoZSBhYm92ZSBhc3NpZ25tZW50IGluc3RydWN0cyBrYnVpbGQgdG8gZGVzY2VuZCBkb3duIGlu
IHRoZQogZGlyZWN0b3J5IGNvbXByZXNzZWQvIHdoZW4gIm1ha2UgY2xlYW4iIGlzIGV4ZWN1dGVk
LgogCi1UbyBzdXBwb3J0IHRoZSBjbGVhbiBpbmZyYXN0cnVjdHVyZSBpbiB0aGUgTWFrZWZpbGVz
IHRoYXQgYnVpbGQgdGhlCi1maW5hbCBib290aW1hZ2UgdGhlcmUgaXMgYW4gb3B0aW9uYWwgdGFy
Z2V0IG5hbWVkIGFyY2hjbGVhbjoKLQotCUV4YW1wbGU6OgotCi0JCSNhcmNoL3g4Ni9NYWtlZmls
ZQotCQlhcmNoY2xlYW46Ci0JCQkkKFEpJChNQUtFKSAkKGNsZWFuKT1hcmNoL3g4Ni9ib290Ci0K
LVdoZW4gIm1ha2UgY2xlYW4iIGlzIGV4ZWN1dGVkLCBtYWtlIHdpbGwgZGVzY2VuZCBkb3duIGlu
IGFyY2gveDg2L2Jvb3QsCi1hbmQgY2xlYW4gYXMgdXN1YWwuIFRoZSBNYWtlZmlsZSBsb2NhdGVk
IGluIGFyY2gveDg2L2Jvb3QvIG1heSB1c2UKLXRoZSBzdWJkaXItIHRyaWNrIHRvIGRlc2NlbmQg
ZnVydGhlciBkb3duLgotCiBOb3RlIDE6IGFyY2gvJChTUkNBUkNIKS9NYWtlZmlsZSBjYW5ub3Qg
dXNlICJzdWJkaXItIiwgYmVjYXVzZSB0aGF0IGZpbGUgaXMKLWluY2x1ZGVkIGluIHRoZSB0b3Ag
bGV2ZWwgbWFrZWZpbGUsIGFuZCB0aGUga2J1aWxkIGluZnJhc3RydWN0dXJlCi1pcyBub3Qgb3Bl
cmF0aW9uYWwgYXQgdGhhdCBwb2ludC4KK2luY2x1ZGVkIGluIHRoZSB0b3AgbGV2ZWwgbWFrZWZp
bGUuIEluc3RlYWQsIGFyY2gvJChTUkNBUkNIKS9LYnVpbGQgY2FuIHVzZQorInN1YmRpci0iLgog
CiBOb3RlIDI6IEFsbCBkaXJlY3RvcmllcyBsaXN0ZWQgaW4gY29yZS15LCBsaWJzLXksIGRyaXZl
cnMteSBhbmQgbmV0LXkgd2lsbAogYmUgdmlzaXRlZCBkdXJpbmcgIm1ha2UgY2xlYW4iLgpkaWZm
IC0tZ2l0IGEvYXJjaC9hbHBoYS9LYnVpbGQgYi9hcmNoL2FscGhhL0tidWlsZAppbmRleCBjMjMw
MjAxNzQwM2EuLjM0NWQ3OWRmMjRiYiAxMDA2NDQKLS0tIGEvYXJjaC9hbHBoYS9LYnVpbGQKKysr
IGIvYXJjaC9hbHBoYS9LYnVpbGQKQEAgLTEsMyArMSw2IEBACiAjIFNQRFgtTGljZW5zZS1JZGVu
dGlmaWVyOiBHUEwtMi4wLW9ubHkKIG9iai15CQkJKz0ga2VybmVsLyBtbS8KIG9iai0kKENPTkZJ
R19NQVRIRU1VKQkrPSBtYXRoLWVtdS8KKworIyBmb3IgY2xlYW5pbmcKK3N1YmRpci0gKz0gYm9v
dApkaWZmIC0tZ2l0IGEvYXJjaC9hbHBoYS9NYWtlZmlsZSBiL2FyY2gvYWxwaGEvTWFrZWZpbGUK
aW5kZXggNTI1MjllZTQyZGFjLi44ODFjYjkxM2UyM2EgMTAwNjQ0Ci0tLSBhL2FyY2gvYWxwaGEv
TWFrZWZpbGUKKysrIGIvYXJjaC9hbHBoYS9NYWtlZmlsZQpAQCAtNTUsOSArNTUsNiBAQCAkKGJv
b3QpL3ZtbGludXguZ3o6IHZtbGludXgKIGJvb3RpbWFnZSBib290cGZpbGUgYm9vdHB6ZmlsZTog
dm1saW51eAogCSQoUSkkKE1BS0UpICQoYnVpbGQpPSQoYm9vdCkgJChib290KS8kQAogCi1hcmNo
Y2xlYW46Ci0JJChRKSQoTUFLRSkgJChjbGVhbik9JChib290KQotCiBhcmNoaGVhZGVyczoKIAkk
KFEpJChNQUtFKSAkKGJ1aWxkKT1hcmNoL2FscGhhL2tlcm5lbC9zeXNjYWxscyBhbGwKIApkaWZm
IC0tZ2l0IGEvYXJjaC9hcmMvS2J1aWxkIGIvYXJjaC9hcmMvS2J1aWxkCmluZGV4IDY5OWQ4Y2Fl
OWIxZi4uYjk0MTAyZmZmNjhiIDEwMDY0NAotLS0gYS9hcmNoL2FyYy9LYnVpbGQKKysrIGIvYXJj
aC9hcmMvS2J1aWxkCkBAIC0xLDMgKzEsNiBAQAogIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
R1BMLTIuMAogb2JqLXkgKz0ga2VybmVsLwogb2JqLXkgKz0gbW0vCisKKyMgZm9yIGNsZWFuaW5n
CitzdWJkaXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvYXJjL01ha2VmaWxlIGIvYXJjaC9h
cmMvTWFrZWZpbGUKaW5kZXggMDg5OTVmNmM2NDQxLi5lZmM1NGYzZTM1ZTAgMTAwNjQ0Ci0tLSBh
L2FyY2gvYXJjL01ha2VmaWxlCisrKyBiL2FyY2gvYXJjL01ha2VmaWxlCkBAIC0xMTIsNiArMTEy
LDMgQEAgdUltYWdlOiAkKHVpbWFnZS1kZWZhdWx0LXkpCiAJQCQoa2VjaG8pICcgIEltYWdlICQo
Ym9vdCkvdUltYWdlIGlzIHJlYWR5JwogCiBDTEVBTl9GSUxFUyArPSAkKGJvb3QpL3VJbWFnZQot
Ci1hcmNoY2xlYW46Ci0JJChRKSQoTUFLRSkgJChjbGVhbik9JChib290KQpkaWZmIC0tZ2l0IGEv
YXJjaC9hcm0vS2J1aWxkIGIvYXJjaC9hcm0vS2J1aWxkCmluZGV4IDUyMDhmNzA2MTUyNC4uYjUw
NjYyMmU3ZTIzIDEwMDY0NAotLS0gYS9hcmNoL2FybS9LYnVpbGQKKysrIGIvYXJjaC9hcm0vS2J1
aWxkCkBAIC05LDMgKzksNiBAQCBvYmoteQkJCQkrPSBrZXJuZWwvIG1tLyBjb21tb24vCiBvYmot
eQkJCQkrPSBwcm9iZXMvCiBvYmoteQkJCQkrPSBuZXQvCiBvYmoteQkJCQkrPSBjcnlwdG8vCisK
KyMgZm9yIGNsZWFuaW5nCitzdWJkaXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvYXJtL01h
a2VmaWxlIGIvYXJjaC9hcm0vTWFrZWZpbGUKaW5kZXggODQ3YzMxZTdjMzY4Li4wN2VhNzFmODY2
NWMgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL01ha2VmaWxlCisrKyBiL2FyY2gvYXJtL01ha2VmaWxl
CkBAIC0zMTcsMTAgKzMxNyw2IEBAIGlmZXEgKCQoQ09ORklHX1ZEU08pLHkpCiAJJChRKSQoTUFL
RSkgJChidWlsZCk9YXJjaC9hcm0vdmRzbyAkQAogZW5kaWYKIAotIyBXZSB1c2UgTVJQUk9QRVJf
RklMRVMgYW5kIENMRUFOX0ZJTEVTIG5vdwotYXJjaGNsZWFuOgotCSQoUSkkKE1BS0UpICQoY2xl
YW4pPSQoYm9vdCkKLQogIyBNeSB0ZXN0aW5nIHRhcmdldHMgKGJ5cGFzc2VzIGRlcGVuZGVuY2ll
cykKIGJwOjsJJChRKSQoTUFLRSkgJChidWlsZCk9JChib290KSBNQUNISU5FPSQoTUFDSElORSkg
JChib290KS9ib290cEltYWdlCiAKZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQvS2J1aWxkIGIvYXJj
aC9hcm02NC9LYnVpbGQKaW5kZXggZWE3YWI0Y2E4MWY5Li41YmZiZjdkNzljOTkgMTAwNjQ0Ci0t
LSBhL2FyY2gvYXJtNjQvS2J1aWxkCisrKyBiL2FyY2gvYXJtNjQvS2J1aWxkCkBAIC00LDMgKzQs
NiBAQCBvYmotJChDT05GSUdfS1ZNKQkrPSBrdm0vCiBvYmotJChDT05GSUdfWEVOKQkrPSB4ZW4v
CiBvYmotJChzdWJzdCBtLHksJChDT05GSUdfSFlQRVJWKSkJKz0gaHlwZXJ2Lwogb2JqLSQoQ09O
RklHX0NSWVBUTykJKz0gY3J5cHRvLworCisjIGZvciBjbGVhbmluZworc3ViZGlyLSArPSBib290
CmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L01ha2VmaWxlIGIvYXJjaC9hcm02NC9NYWtlZmlsZQpp
bmRleCBjNzQ0YjFlN2IzNTYuLmU4Y2ZjNTg2OGFhOCAxMDA2NDQKLS0tIGEvYXJjaC9hcm02NC9N
YWtlZmlsZQorKysgYi9hcmNoL2FybTY0L01ha2VmaWxlCkBAIC0xODIsMTMgKzE4Miw2IEBAIGlm
ZXEgKCQoQ09ORklHX0FSTTY0X1VTRV9MU0VfQVRPTUlDUykseSkKICAgZW5kaWYKIGVuZGlmCiAK
LQotIyBXZSB1c2UgTVJQUk9QRVJfRklMRVMgYW5kIENMRUFOX0ZJTEVTIG5vdwotYXJjaGNsZWFu
OgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQoYm9vdCkKLQkkKFEpJChNQUtFKSAkKGNsZWFuKT1h
cmNoL2FybTY0L2tlcm5lbC92ZHNvCi0JJChRKSQoTUFLRSkgJChjbGVhbik9YXJjaC9hcm02NC9r
ZXJuZWwvdmRzbzMyCi0KIGlmZXEgKCQoS0JVSUxEX0VYVE1PRCksKQogIyBXZSBuZWVkIHRvIGdl
bmVyYXRlIHZkc28tb2Zmc2V0cy5oIGJlZm9yZSBjb21waWxpbmcgY2VydGFpbiBmaWxlcyBpbiBr
ZXJuZWwvLgogIyBJbiBvcmRlciB0byBkbyB0aGF0LCB3ZSBzaG91bGQgdXNlIHRoZSBhcmNocHJl
cGFyZSB0YXJnZXQsIGJ1dCB3ZSBjYW4ndCBzaW5jZQpkaWZmIC0tZ2l0IGEvYXJjaC9hcm02NC9r
ZXJuZWwvTWFrZWZpbGUgYi9hcmNoL2FybTY0L2tlcm5lbC9NYWtlZmlsZQppbmRleCAzZjE0OTBi
ZmI5MzguLjg4YjNlMmEyMTQwOCAxMDA2NDQKLS0tIGEvYXJjaC9hcm02NC9rZXJuZWwvTWFrZWZp
bGUKKysrIGIvYXJjaC9hcm02NC9rZXJuZWwvTWFrZWZpbGUKQEAgLTgxLDMgKzgxLDYgQEAgZXh0
cmEteQkJCQkJKz0gJChoZWFkLXkpIHZtbGludXgubGRzCiBpZmVxICgkKENPTkZJR19ERUJVR19F
RkkpLHkpCiBBRkxBR1NfaGVhZC5vICs9IC1EVk1MSU5VWF9QQVRIPSJcIiQocmVhbHBhdGggJChv
Ymp0cmVlKS92bWxpbnV4KVwiIgogZW5kaWYKKworIyBmb3IgY2xlYW5pbmcKK3N1YmRpci0gKz0g
dmRzbyB2ZHNvMzIKZGlmZiAtLWdpdCBhL2FyY2gvY3NreS9LYnVpbGQgYi9hcmNoL2Nza3kvS2J1
aWxkCmluZGV4IGE0ZTQwZTUzNGU2YS4uNGUzOWY3YWJkZWI2IDEwMDY0NAotLS0gYS9hcmNoL2Nz
a3kvS2J1aWxkCisrKyBiL2FyY2gvY3NreS9LYnVpbGQKQEAgLTEgKzEsNCBAQAogIyBTUERYLUxp
Y2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CisKKyMgZm9yIGNsZWFuaW5nCitzdWJkaXIt
ICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvY3NreS9NYWtlZmlsZSBiL2FyY2gvY3NreS9NYWtl
ZmlsZQppbmRleCAzN2Y1OTNhNGJmNTMuLjg2NjgwNTA3NzYzNiAxMDA2NDQKLS0tIGEvYXJjaC9j
c2t5L01ha2VmaWxlCisrKyBiL2FyY2gvY3NreS9NYWtlZmlsZQpAQCAtNzYsOSArNzYsNiBAQCBh
bGw6IHpJbWFnZQogekltYWdlIEltYWdlIHVJbWFnZTogdm1saW51eAogCSQoUSkkKE1BS0UpICQo
YnVpbGQpPSQoYm9vdCkgJChib290KS8kQAogCi1hcmNoY2xlYW46Ci0JJChRKSQoTUFLRSkgJChj
bGVhbik9JChib290KQotCiBkZWZpbmUgYXJjaGhlbHAKICAgZWNobyAgJyogekltYWdlICAgICAg
IC0gQ29tcHJlc3NlZCBrZXJuZWwgaW1hZ2UgKGFyY2gvJChBUkNIKS9ib290L3pJbWFnZSknCiAg
IGVjaG8gICcgIEltYWdlICAgICAgICAtIFVuY29tcHJlc3NlZCBrZXJuZWwgaW1hZ2UgKGFyY2gv
JChBUkNIKS9ib290L0ltYWdlKScKZGlmZiAtLWdpdCBhL2FyY2gvaDgzMDAvS2J1aWxkIGIvYXJj
aC9oODMwMC9LYnVpbGQKaW5kZXggYjI1ODNlN2VmYmQxLi5lNDcwM2YzNTM0Y2MgMTAwNjQ0Ci0t
LSBhL2FyY2gvaDgzMDAvS2J1aWxkCisrKyBiL2FyY2gvaDgzMDAvS2J1aWxkCkBAIC0xLDIgKzEs
NSBAQAogIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5CiBvYmoteQkrPSBr
ZXJuZWwvIG1tLyBib290L2R0cy8KKworIyBmb3IgY2xlYW5pbmcKK3N1YmRpci0gKz0gYm9vdApk
aWZmIC0tZ2l0IGEvYXJjaC9oODMwMC9NYWtlZmlsZSBiL2FyY2gvaDgzMDAvTWFrZWZpbGUKaW5k
ZXggZWI0Y2I4ZjY4MzBjLi44MDdmNDFlNjBlZTQgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgzMDAvTWFr
ZWZpbGUKKysrIGIvYXJjaC9oODMwMC9NYWtlZmlsZQpAQCAtMzQsOSArMzQsNiBAQCBsaWJzLXkJ
Kz0gYXJjaC8kKEFSQ0gpL2xpYi8KIAogYm9vdCA6PSBhcmNoL2g4MzAwL2Jvb3QKIAotYXJjaGNs
ZWFuOgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQoYm9vdCkKLQogdm1saW51eC5zcmVjIHZtbGlu
dXguYmluIHpJbWFnZSB1SW1hZ2UuYmluOiB2bWxpbnV4CiAJJChRKSQoTUFLRSkgJChidWlsZCk9
JChib290KSAkKGJvb3QpLyRACiAKZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9NYWtlZmlsZSBiL2Fy
Y2gvaWE2NC9NYWtlZmlsZQppbmRleCA3ZTU0OGM2NTRhMjkuLjNiM2FjM2UxZjI3MiAxMDA2NDQK
LS0tIGEvYXJjaC9pYTY0L01ha2VmaWxlCisrKyBiL2FyY2gvaWE2NC9NYWtlZmlsZQpAQCAtNjcs
OCArNjcsNiBAQCB2bWxpbnV4LmJpbjogdm1saW51eCBGT1JDRQogdW53Y2hlY2s6IHZtbGludXgK
IAktJChRKVJFQURFTEY9JChSRUFERUxGKSAkKFBZVEhPTjMpICQoc3JjdHJlZSkvYXJjaC9pYTY0
L3NjcmlwdHMvdW53Y2hlY2sucHkgJDwKIAotYXJjaGNsZWFuOgotCiBhcmNoaGVhZGVyczoKIAkk
KFEpJChNQUtFKSAkKGJ1aWxkKT1hcmNoL2lhNjQva2VybmVsL3N5c2NhbGxzIGFsbAogCmRpZmYg
LS1naXQgYS9hcmNoL202OGsvTWFrZWZpbGUgYi9hcmNoL202OGsvTWFrZWZpbGUKaW5kZXggZGQw
YzBlYzY3ZjY3Li43NDBmYzk3YjljMGYgMTAwNjQ0Ci0tLSBhL2FyY2gvbTY4ay9NYWtlZmlsZQor
KysgYi9hcmNoL202OGsvTWFrZWZpbGUKQEAgLTIsOSArMiw3IEBACiAjIG02OGsvTWFrZWZpbGUK
ICMKICMgVGhpcyBmaWxlIGlzIGluY2x1ZGVkIGJ5IHRoZSBnbG9iYWwgbWFrZWZpbGUgc28gdGhh
dCB5b3UgY2FuIGFkZCB5b3VyIG93bgotIyBhcmNoaXRlY3R1cmUtc3BlY2lmaWMgZmxhZ3MgYW5k
IGRlcGVuZGVuY2llcy4gUmVtZW1iZXIgdG8gZG8gaGF2ZSBhY3Rpb25zCi0jIGZvciAiYXJjaGNs
ZWFuIiBhbmQgImFyY2hkZXAiIGZvciBjbGVhbmluZyB1cCBhbmQgbWFraW5nIGRlcGVuZGVuY2ll
cyBmb3IKLSMgdGhpcyBhcmNoaXRlY3R1cmUKKyMgYXJjaGl0ZWN0dXJlLXNwZWNpZmljIGZsYWdz
IGFuZCBkZXBlbmRlbmNpZXMuCiAjCiAjIFRoaXMgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJt
cyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljCiAjIExpY2Vuc2UuICBT
ZWUgdGhlIGZpbGUgIkNPUFlJTkciIGluIHRoZSBtYWluIGRpcmVjdG9yeSBvZiB0aGlzIGFyY2hp
dmUKZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9LYnVpbGQgYi9hcmNoL21pY3JvYmxhemUv
S2J1aWxkCmluZGV4IGExYzU5Nzg4OTMxOS4uMDc3YTBiOGU5NjE1IDEwMDY0NAotLS0gYS9hcmNo
L21pY3JvYmxhemUvS2J1aWxkCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9LYnVpbGQKQEAgLTMsMyAr
Myw2IEBAIG9iai15CQkJKz0ga2VybmVsLwogb2JqLXkJCQkrPSBtbS8KIG9iai0kKENPTkZJR19Q
Q0kpCSs9IHBjaS8KIG9iai15CQkJKz0gYm9vdC9kdHMvCisKKyMgZm9yIGNsZWFuaW5nCitzdWJk
aXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9NYWtlZmlsZSBiL2FyY2gv
bWljcm9ibGF6ZS9NYWtlZmlsZQppbmRleCA5ODJjZDhiODc2YmYuLmEyNWU3NmQ4OWU4NiAxMDA2
NDQKLS0tIGEvYXJjaC9taWNyb2JsYXplL01ha2VmaWxlCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9N
YWtlZmlsZQpAQCAtNjAsOSArNjAsNiBAQCBleHBvcnQgRFRCCiAKIGFsbDogbGludXguYmluCiAK
LWFyY2hjbGVhbjoKLQkkKFEpJChNQUtFKSAkKGNsZWFuKT0kKGJvb3QpCi0KIGFyY2hoZWFkZXJz
OgogCSQoUSkkKE1BS0UpICQoYnVpbGQpPWFyY2gvbWljcm9ibGF6ZS9rZXJuZWwvc3lzY2FsbHMg
YWxsCiAKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9LYnVpbGQgYi9hcmNoL21pcHMvS2J1aWxkCmlu
ZGV4IGQ1ZDZlZjliYjk4Ni4uOWU4MDcxZjBlNThmIDEwMDY0NAotLS0gYS9hcmNoL21pcHMvS2J1
aWxkCisrKyBiL2FyY2gvbWlwcy9LYnVpbGQKQEAgLTI1LDMgKzI1LDYgQEAgb2JqLXkgKz0gdmRz
by8KIGlmZGVmIENPTkZJR19LVk0KIG9iai15ICs9IGt2bS8KIGVuZGlmCisKKyMgZm9yIGNsZWFu
aW5nCitzdWJkaXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9NYWtlZmlsZSBiL2Fy
Y2gvbWlwcy9NYWtlZmlsZQppbmRleCBlYTNjZDA4MGExYzcuLmUwMzZmYzAyNWNjYyAxMDA2NDQK
LS0tIGEvYXJjaC9taXBzL01ha2VmaWxlCisrKyBiL2FyY2gvbWlwcy9NYWtlZmlsZQpAQCAtOCw4
ICs4LDcgQEAKICMgQ29weXJpZ2h0IChDKSAyMDAyLCAyMDAzLCAyMDA0ICBNYWNpZWogVy4gUm96
eWNraQogIwogIyBUaGlzIGZpbGUgaXMgaW5jbHVkZWQgYnkgdGhlIGdsb2JhbCBtYWtlZmlsZSBz
byB0aGF0IHlvdSBjYW4gYWRkIHlvdXIgb3duCi0jIGFyY2hpdGVjdHVyZS1zcGVjaWZpYyBmbGFn
cyBhbmQgZGVwZW5kZW5jaWVzLiBSZW1lbWJlciB0byBkbyBoYXZlIGFjdGlvbnMKLSMgZm9yICJh
cmNoY2xlYW4iIGNsZWFuaW5nIHVwIGZvciB0aGlzIGFyY2hpdGVjdHVyZS4KKyMgYXJjaGl0ZWN0
dXJlLXNwZWNpZmljIGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMuCiAjCiAKIGFyY2hzY3JpcHRzOiBz
Y3JpcHRzX2Jhc2ljCkBAIC00MjYsMTEgKzQyNSw2IEBAIGVuZGlmCiAJJChRKWluc3RhbGwgLUQg
LW0gNjQ0IC5jb25maWcgJChJTlNUQUxMX1BBVEgpL2NvbmZpZy0kKEtFUk5FTFJFTEVBU0UpCiAJ
JChRKWluc3RhbGwgLUQgLW0gNjQ0IFN5c3RlbS5tYXAgJChJTlNUQUxMX1BBVEgpL1N5c3RlbS5t
YXAtJChLRVJORUxSRUxFQVNFKQogCi1hcmNoY2xlYW46Ci0JJChRKSQoTUFLRSkgJChjbGVhbik9
YXJjaC9taXBzL2Jvb3QKLQkkKFEpJChNQUtFKSAkKGNsZWFuKT1hcmNoL21pcHMvYm9vdC9jb21w
cmVzc2VkCi0JJChRKSQoTUFLRSkgJChjbGVhbik9YXJjaC9taXBzL2Jvb3QvdG9vbHMKLQogYXJj
aGhlYWRlcnM6CiAJJChRKSQoTUFLRSkgJChidWlsZCk9YXJjaC9taXBzL2tlcm5lbC9zeXNjYWxs
cyBhbGwKIApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2Jvb3QvTWFrZWZpbGUgYi9hcmNoL21pcHMv
Ym9vdC9NYWtlZmlsZQppbmRleCBhM2RhMmM1ZDYzYzIuLjE5NmM0NGZhNzJkOSAxMDA2NDQKLS0t
IGEvYXJjaC9taXBzL2Jvb3QvTWFrZWZpbGUKKysrIGIvYXJjaC9taXBzL2Jvb3QvTWFrZWZpbGUK
QEAgLTE3MSwzICsxNzEsNiBAQCAkKG9iaikvdm1saW51eC5pdGI6ICQob2JqKS92bWxpbnV4Lml0
cyAkKG9iaikvdm1saW51eC5iaW4gRk9SQ0UKIAogJChvYmopL3ZtbGludXguJS5pdGI6ICQob2Jq
KS92bWxpbnV4LiUuaXRzICQob2JqKS92bWxpbnV4LmJpbi4lIEZPUkNFCiAJJChjYWxsIGlmX2No
YW5nZWQsaXRiLWltYWdlLCQ8KQorCisjIGZvciBjbGVhbmluZworc3ViZGlyLSArPSBjb21wcmVz
c2VkIHRvb2xzCmRpZmYgLS1naXQgYS9hcmNoL25kczMyL0tidWlsZCBiL2FyY2gvbmRzMzIvS2J1
aWxkCmluZGV4IGE0ZTQwZTUzNGU2YS4uNGUzOWY3YWJkZWI2IDEwMDY0NAotLS0gYS9hcmNoL25k
czMyL0tidWlsZAorKysgYi9hcmNoL25kczMyL0tidWlsZApAQCAtMSArMSw0IEBACiAjIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKKworIyBmb3IgY2xlYW5pbmcKK3N1YmRp
ci0gKz0gYm9vdApkaWZmIC0tZ2l0IGEvYXJjaC9uZHMzMi9NYWtlZmlsZSBiL2FyY2gvbmRzMzIv
TWFrZWZpbGUKaW5kZXggZWUyNmU0ZGYyZmQwLi5iMzNkNWQ4MWI2YWUgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvbmRzMzIvTWFrZWZpbGUKKysrIGIvYXJjaC9uZHMzMi9NYWtlZmlsZQpAQCAtNTgsOSArNTgs
NiBAQCBwcmVwYXJlOiB2ZHNvX3ByZXBhcmUKIHZkc29fcHJlcGFyZTogcHJlcGFyZTAKIAkkKFEp
JChNQUtFKSAkKGJ1aWxkKT1hcmNoL25kczMyL2tlcm5lbC92ZHNvIGluY2x1ZGUvZ2VuZXJhdGVk
L3Zkc28tb2Zmc2V0cy5oCiAKLWFyY2hjbGVhbjoKLQkkKFEpJChNQUtFKSAkKGNsZWFuKT0kKGJv
b3QpCi0KIGRlZmluZSBhcmNoaGVscAogICBlY2hvICAnICBJbWFnZSAgICAgICAgIC0ga2VybmVs
IGltYWdlIChhcmNoLyQoQVJDSCkvYm9vdC9JbWFnZSknCiBlbmRlZgpkaWZmIC0tZ2l0IGEvYXJj
aC9uaW9zMi9LYnVpbGQgYi9hcmNoL25pb3MyL0tidWlsZAppbmRleCBhNGU0MGU1MzRlNmEuLjRl
MzlmN2FiZGViNiAxMDA2NDQKLS0tIGEvYXJjaC9uaW9zMi9LYnVpbGQKKysrIGIvYXJjaC9uaW9z
Mi9LYnVpbGQKQEAgLTEgKzEsNCBAQAogIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIu
MC1vbmx5CisKKyMgZm9yIGNsZWFuaW5nCitzdWJkaXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2Fy
Y2gvbmlvczIvTWFrZWZpbGUgYi9hcmNoL25pb3MyL01ha2VmaWxlCmluZGV4IDcyZThmZjA2NWNm
Ny4uMDJkNjc4NTU5MDY2IDEwMDY0NAotLS0gYS9hcmNoL25pb3MyL01ha2VmaWxlCisrKyBiL2Fy
Y2gvbmlvczIvTWFrZWZpbGUKQEAgLTgsOCArOCw3IEBACiAjIFdyaXR0ZW4gYnkgRnJlZHJpayBN
YXJrc3Ryb20KICMKICMgVGhpcyBmaWxlIGlzIGluY2x1ZGVkIGJ5IHRoZSBnbG9iYWwgbWFrZWZp
bGUgc28gdGhhdCB5b3UgY2FuIGFkZCB5b3VyIG93bgotIyBhcmNoaXRlY3R1cmUtc3BlY2lmaWMg
ZmxhZ3MgYW5kIGRlcGVuZGVuY2llcy4gUmVtZW1iZXIgdG8gZG8gaGF2ZSBhY3Rpb25zCi0jIGZv
ciAiYXJjaGNsZWFuIiBjbGVhbmluZyB1cCBmb3IgdGhpcyBhcmNoaXRlY3R1cmUuCisjIGFyY2hp
dGVjdHVyZS1zcGVjaWZpYyBmbGFncyBhbmQgZGVwZW5kZW5jaWVzLgogIwogIyBOaW9zMiBwb3J0
IGJ5IFdpbmQgUml2ZXIgU3lzdGVtcyBJbmMgdHJvdWdoOgogIyAgIGZyZWRyaWsubWFya3N0cm9t
QGdtYWlsLmNvbSBhbmQgaXZhcmhvbG1xdmlzdEBnbWFpbC5jb20KQEAgLTUzLDkgKzUyLDYgQEAg
Y29yZS15CSs9ICQobmlvczItYm9vdCkvZHRzLwogCiBhbGw6IHZtSW1hZ2UKIAotYXJjaGNsZWFu
OgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQobmlvczItYm9vdCkKLQogJChCT09UX1RBUkdFVFMp
OiB2bWxpbnV4CiAJJChRKSQoTUFLRSkgJChidWlsZCk9JChuaW9zMi1ib290KSAkKG5pb3MyLWJv
b3QpLyRACiAKZGlmZiAtLWdpdCBhL2FyY2gvb3BlbnJpc2MvS2J1aWxkIGIvYXJjaC9vcGVucmlz
Yy9LYnVpbGQKaW5kZXggNDIzNGI0YzAzZTcyLi5iMGIwZjJiMDNmODcgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvb3BlbnJpc2MvS2J1aWxkCisrKyBiL2FyY2gvb3BlbnJpc2MvS2J1aWxkCkBAIC0xLDMgKzEs
NiBAQAogIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAogb2JqLXkgKz0gbGliLyBr
ZXJuZWwvIG1tLwogb2JqLXkgKz0gYm9vdC9kdHMvCisKKyMgZm9yIGNsZWFuaW5nCitzdWJkaXIt
ICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvb3BlbnJpc2MvTWFrZWZpbGUgYi9hcmNoL29wZW5y
aXNjL01ha2VmaWxlCmluZGV4IGM1MmRlNTI2ZTUxOC4uNzYwYjczNGZiODIyIDEwMDY0NAotLS0g
YS9hcmNoL29wZW5yaXNjL01ha2VmaWxlCisrKyBiL2FyY2gvb3BlbnJpc2MvTWFrZWZpbGUKQEAg
LTEsOSArMSw3IEBACiAjIEJLIElkOiAlRiUgJUklICVHJSAlVSUgJSMlCiAjCiAjIFRoaXMgZmls
ZSBpcyBpbmNsdWRlZCBieSB0aGUgZ2xvYmFsIG1ha2VmaWxlIHNvIHRoYXQgeW91IGNhbiBhZGQg
eW91ciBvd24KLSMgYXJjaGl0ZWN0dXJlLXNwZWNpZmljIGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMu
IFJlbWVtYmVyIHRvIGRvIGhhdmUgYWN0aW9ucwotIyBmb3IgImFyY2hjbGVhbiIgYW5kICJhcmNo
ZGVwIiBmb3IgY2xlYW5pbmcgdXAgYW5kIG1ha2luZyBkZXBlbmRlbmNpZXMgZm9yCi0jIHRoaXMg
YXJjaGl0ZWN0dXJlCisjIGFyY2hpdGVjdHVyZS1zcGVjaWZpYyBmbGFncyBhbmQgZGVwZW5kZW5j
aWVzLgogIwogIyBUaGlzIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlv
bnMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYwogIyBMaWNlbnNlLiAgU2VlIHRoZSBmaWxlICJD
T1BZSU5HIiBpbiB0aGUgbWFpbiBkaXJlY3Rvcnkgb2YgdGhpcyBhcmNoaXZlCkBAIC00OCw2ICs0
NiwzIEBAIFBIT05ZICs9IHZtbGludXguYmluCiAKIHZtbGludXguYmluOiB2bWxpbnV4CiAJJChR
KSQoTUFLRSkgJChidWlsZCk9JChib290KSAkKGJvb3QpLyRACi0KLWFyY2hjbGVhbjoKLQkkKFEp
JChNQUtFKSAkKGNsZWFuKT0kKGJvb3QpCmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9LYnVpbGQg
Yi9hcmNoL3BhcmlzYy9LYnVpbGQKaW5kZXggM2MwNjhiNzAwYTgxLi5hNmQzYjI4MGJhMGMgMTAw
NjQ0Ci0tLSBhL2FyY2gvcGFyaXNjL0tidWlsZAorKysgYi9hcmNoL3BhcmlzYy9LYnVpbGQKQEAg
LTEsMiArMSw1IEBACiAjIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wLW9ubHkKIG9i
ai15CSs9IG1tLyBrZXJuZWwvIG1hdGgtZW11LworCisjIGZvciBjbGVhbmluZworc3ViZGlyLSAr
PSBib290CmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9NYWtlZmlsZSBiL2FyY2gvcGFyaXNjL01h
a2VmaWxlCmluZGV4IGZjZGUzZmZhMDIyMS4uOGRiNGFmNDg3OWQwIDEwMDY0NAotLS0gYS9hcmNo
L3BhcmlzYy9NYWtlZmlsZQorKysgYi9hcmNoL3BhcmlzYy9NYWtlZmlsZQpAQCAtMiw5ICsyLDcg
QEAKICMgcGFyaXNjL01ha2VmaWxlCiAjCiAjIFRoaXMgZmlsZSBpcyBpbmNsdWRlZCBieSB0aGUg
Z2xvYmFsIG1ha2VmaWxlIHNvIHRoYXQgeW91IGNhbiBhZGQgeW91ciBvd24KLSMgYXJjaGl0ZWN0
dXJlLXNwZWNpZmljIGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMuIFJlbWVtYmVyIHRvIGRvIGhhdmUg
YWN0aW9ucwotIyBmb3IgImFyY2hjbGVhbiIgYW5kICJhcmNoZGVwIiBmb3IgY2xlYW5pbmcgdXAg
YW5kIG1ha2luZyBkZXBlbmRlbmNpZXMgZm9yCi0jIHRoaXMgYXJjaGl0ZWN0dXJlCisjIGFyY2hp
dGVjdHVyZS1zcGVjaWZpYyBmbGFncyBhbmQgZGVwZW5kZW5jaWVzLgogIwogIyBUaGlzIGZpbGUg
aXMgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhlIEdOVSBHZW5lcmFs
IFB1YmxpYwogIyBMaWNlbnNlLiAgU2VlIHRoZSBmaWxlICJDT1BZSU5HIiBpbiB0aGUgbWFpbiBk
aXJlY3Rvcnkgb2YgdGhpcyBhcmNoaXZlCkBAIC0xODEsOCArMTc5LDUgQEAgZGVmaW5lIGFyY2ho
ZWxwCiAJQGVjaG8gICcgIHppbnN0YWxsCS0gSW5zdGFsbCBjb21wcmVzc2VkIHZtbGludXoga2Vy
bmVsJwogZW5kZWYKIAotYXJjaGNsZWFuOgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQoYm9vdCkK
LQogYXJjaGhlYWRlcnM6CiAJJChRKSQoTUFLRSkgJChidWlsZCk9YXJjaC9wYXJpc2Mva2VybmVs
L3N5c2NhbGxzIGFsbApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL0tidWlsZCBiL2FyY2gvcG93
ZXJwYy9LYnVpbGQKaW5kZXggNWUyZjllYWEzZWU3Li4yMmNkMGQ1NWE4OTIgMTAwNjQ0Ci0tLSBh
L2FyY2gvcG93ZXJwYy9LYnVpbGQKKysrIGIvYXJjaC9wb3dlcnBjL0tidWlsZApAQCAtMTYsMyAr
MTYsNiBAQCBvYmotJChDT05GSUdfS1ZNKSAgKz0ga3ZtLwogb2JqLSQoQ09ORklHX1BFUkZfRVZF
TlRTKSArPSBwZXJmLwogb2JqLSQoQ09ORklHX0tFWEVDX0NPUkUpICArPSBrZXhlYy8KIG9iai0k
KENPTkZJR19LRVhFQ19GSUxFKSAgKz0gcHVyZ2F0b3J5LworCisjIGZvciBjbGVhbmluZworc3Vi
ZGlyLSArPSBib290CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvTWFrZWZpbGUgYi9hcmNoL3Bv
d2VycGMvTWFrZWZpbGUKaW5kZXggYWE2ODA4ZTcwNjQ3Li5iNjFkOGJlM2MyMjYgMTAwNjQ0Ci0t
LSBhL2FyY2gvcG93ZXJwYy9NYWtlZmlsZQorKysgYi9hcmNoL3Bvd2VycGMvTWFrZWZpbGUKQEAg
LTEsNyArMSw1IEBACiAjIFRoaXMgZmlsZSBpcyBpbmNsdWRlZCBieSB0aGUgZ2xvYmFsIG1ha2Vm
aWxlIHNvIHRoYXQgeW91IGNhbiBhZGQgeW91ciBvd24KLSMgYXJjaGl0ZWN0dXJlLXNwZWNpZmlj
IGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMuIFJlbWVtYmVyIHRvIGRvIGhhdmUgYWN0aW9ucwotIyBm
b3IgImFyY2hjbGVhbiIgYW5kICJhcmNoZGVwIiBmb3IgY2xlYW5pbmcgdXAgYW5kIG1ha2luZyBk
ZXBlbmRlbmNpZXMgZm9yCi0jIHRoaXMgYXJjaGl0ZWN0dXJlLgorIyBhcmNoaXRlY3R1cmUtc3Bl
Y2lmaWMgZmxhZ3MgYW5kIGRlcGVuZGVuY2llcy4KICMKICMgVGhpcyBmaWxlIGlzIHN1YmplY3Qg
dG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMKICMg
TGljZW5zZS4gIFNlZSB0aGUgZmlsZSAiQ09QWUlORyIgaW4gdGhlIG1haW4gZGlyZWN0b3J5IG9m
IHRoaXMgYXJjaGl2ZQpAQCAtNDExLDkgKzQwOSw2IEBAIGluc3RhbGw6CiAJc2ggLXggJChzcmN0
cmVlKS8kKGJvb3QpL2luc3RhbGwuc2ggIiQoS0VSTkVMUkVMRUFTRSkiIHZtbGludXggXAogCVN5
c3RlbS5tYXAgIiQoSU5TVEFMTF9QQVRIKSIKIAotYXJjaGNsZWFuOgotCSQoUSkkKE1BS0UpICQo
Y2xlYW4pPSQoYm9vdCkKLQogaWZlcSAoJChLQlVJTERfRVhUTU9EKSwpCiAjIFdlIG5lZWQgdG8g
Z2VuZXJhdGUgdmRzby1vZmZzZXRzLmggYmVmb3JlIGNvbXBpbGluZyBjZXJ0YWluIGZpbGVzIGlu
IGtlcm5lbC8uCiAjIEluIG9yZGVyIHRvIGRvIHRoYXQsIHdlIHNob3VsZCB1c2UgdGhlIGFyY2hw
cmVwYXJlIHRhcmdldCwgYnV0IHdlIGNhbid0IHNpbmNlCmRpZmYgLS1naXQgYS9hcmNoL3Jpc2N2
L0tidWlsZCBiL2FyY2gvcmlzY3YvS2J1aWxkCmluZGV4IDQ2MTRjMDFiYTViMy4uZmIzMzk3MjIz
ZDUyIDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L0tidWlsZAorKysgYi9hcmNoL3Jpc2N2L0tidWls
ZApAQCAtMiwzICsyLDYgQEAKIAogb2JqLXkgKz0ga2VybmVsLyBtbS8gbmV0Lwogb2JqLSQoQ09O
RklHX0JVSUxUSU5fRFRCKSArPSBib290L2R0cy8KKworIyBmb3IgY2xlYW5pbmcKK3N1YmRpci0g
Kz0gYm9vdApkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9NYWtlZmlsZSBiL2FyY2gvcmlzY3YvTWFr
ZWZpbGUKaW5kZXggMGViNDU2OGZiZDI5Li43NTNlMTNmM2E5ZDIgMTAwNjQ0Ci0tLSBhL2FyY2gv
cmlzY3YvTWFrZWZpbGUKKysrIGIvYXJjaC9yaXNjdi9NYWtlZmlsZQpAQCAtMSw3ICsxLDUgQEAK
ICMgVGhpcyBmaWxlIGlzIGluY2x1ZGVkIGJ5IHRoZSBnbG9iYWwgbWFrZWZpbGUgc28gdGhhdCB5
b3UgY2FuIGFkZCB5b3VyIG93bgotIyBhcmNoaXRlY3R1cmUtc3BlY2lmaWMgZmxhZ3MgYW5kIGRl
cGVuZGVuY2llcy4gUmVtZW1iZXIgdG8gZG8gaGF2ZSBhY3Rpb25zCi0jIGZvciAiYXJjaGNsZWFu
IiBhbmQgImFyY2hkZXAiIGZvciBjbGVhbmluZyB1cCBhbmQgbWFraW5nIGRlcGVuZGVuY2llcyBm
b3IKLSMgdGhpcyBhcmNoaXRlY3R1cmUKKyMgYXJjaGl0ZWN0dXJlLXNwZWNpZmljIGZsYWdzIGFu
ZCBkZXBlbmRlbmNpZXMuCiAjCiAjIFRoaXMgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBh
bmQgY29uZGl0aW9ucyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljCiAjIExpY2Vuc2UuICBTZWUg
dGhlIGZpbGUgIkNPUFlJTkciIGluIHRoZSBtYWluIGRpcmVjdG9yeSBvZiB0aGlzIGFyY2hpdmUK
QEAgLTEzNyw2ICsxMzUsMyBAQCB6aW5zdGFsbDogaW5zdGFsbC1pbWFnZSA9IEltYWdlLmd6CiBp
bnN0YWxsIHppbnN0YWxsOgogCSQoQ09ORklHX1NIRUxMKSAkKHNyY3RyZWUpLyQoYm9vdCkvaW5z
dGFsbC5zaCAkKEtFUk5FTFJFTEVBU0UpIFwKIAkkKGJvb3QpLyQoaW5zdGFsbC1pbWFnZSkgU3lz
dGVtLm1hcCAiJChJTlNUQUxMX1BBVEgpIgotCi1hcmNoY2xlYW46Ci0JJChRKSQoTUFLRSkgJChj
bGVhbik9JChib290KQpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL0tidWlsZCBiL2FyY2gvczM5MC9L
YnVpbGQKaW5kZXggOGI5OGM1MDExNDJkLi43NmUzNjIyNzcxNzkgMTAwNjQ0Ci0tLSBhL2FyY2gv
czM5MC9LYnVpbGQKKysrIGIvYXJjaC9zMzkwL0tidWlsZApAQCAtOCwzICs4LDYgQEAgb2JqLSQo
Q09ORklHX0FQUExEQVRBX0JBU0UpCSs9IGFwcGxkYXRhLwogb2JqLXkJCQkJKz0gbmV0Lwogb2Jq
LSQoQ09ORklHX1BDSSkJCSs9IHBjaS8KIG9iai0kKENPTkZJR19BUkNIX0hBU19LRVhFQ19QVVJH
QVRPUlkpICs9IHB1cmdhdG9yeS8KKworIyBmb3IgY2xlYW5pbmcKK3N1YmRpci0gKz0gYm9vdCB0
b29scwpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL01ha2VmaWxlIGIvYXJjaC9zMzkwL01ha2VmaWxl
CmluZGV4IDQ1MGIzNTFkZmE4ZS4uNjljNDVmNjAwMjczIDEwMDY0NAotLS0gYS9hcmNoL3MzOTAv
TWFrZWZpbGUKKysrIGIvYXJjaC9zMzkwL01ha2VmaWxlCkBAIC0zLDkgKzMsNyBAQAogIyBzMzkw
L01ha2VmaWxlCiAjCiAjIFRoaXMgZmlsZSBpcyBpbmNsdWRlZCBieSB0aGUgZ2xvYmFsIG1ha2Vm
aWxlIHNvIHRoYXQgeW91IGNhbiBhZGQgeW91ciBvd24KLSMgYXJjaGl0ZWN0dXJlLXNwZWNpZmlj
IGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMuIFJlbWVtYmVyIHRvIGRvIGhhdmUgYWN0aW9ucwotIyBm
b3IgImFyY2hjbGVhbiIgYW5kICJhcmNoZGVwIiBmb3IgY2xlYW5pbmcgdXAgYW5kIG1ha2luZyBk
ZXBlbmRlbmNpZXMgZm9yCi0jIHRoaXMgYXJjaGl0ZWN0dXJlCisjIGFyY2hpdGVjdHVyZS1zcGVj
aWZpYyBmbGFncyBhbmQgZGVwZW5kZW5jaWVzLgogIwogIyBDb3B5cmlnaHQgKEMpIDE5OTQgYnkg
TGludXMgVG9ydmFsZHMKICMKQEAgLTE0NywxMCArMTQ1LDYgQEAgemZjcGR1bXA6CiB2ZHNvX2lu
c3RhbGw6CiAJJChRKSQoTUFLRSkgJChidWlsZCk9YXJjaC8kKEFSQ0gpL2tlcm5lbC92ZHNvNjQg
JEAKIAotYXJjaGNsZWFuOgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQoYm9vdCkKLQkkKFEpJChN
QUtFKSAkKGNsZWFuKT0kKHRvb2xzKQotCiBhcmNoaGVhZGVyczoKIAkkKFEpJChNQUtFKSAkKGJ1
aWxkKT0kKHN5c2NhbGxzKSB1YXBpCiAKZGlmZiAtLWdpdCBhL2FyY2gvc2gvS2J1aWxkIGIvYXJj
aC9zaC9LYnVpbGQKaW5kZXggNDhjMmEwOTFhMDcyLi5iZTE3MTg4MDk3N2UgMTAwNjQ0Ci0tLSBh
L2FyY2gvc2gvS2J1aWxkCisrKyBiL2FyY2gvc2gvS2J1aWxkCkBAIC0yLDMgKzIsNiBAQAogb2Jq
LXkJCQkJKz0ga2VybmVsLyBtbS8gYm9hcmRzLwogb2JqLSQoQ09ORklHX1NIX0ZQVV9FTVUpCSs9
IG1hdGgtZW11Lwogb2JqLSQoQ09ORklHX1VTRV9CVUlMVElOX0RUQikJKz0gYm9vdC9kdHMvCisK
KyMgZm9yIGNsZWFuaW5nCitzdWJkaXItICs9IGJvb3QKZGlmZiAtLWdpdCBhL2FyY2gvc2gvTWFr
ZWZpbGUgYi9hcmNoL3NoL01ha2VmaWxlCmluZGV4IDc4MTQ2MzkwMDYyMS4uYjM5NDEyYmY5MWZi
IDEwMDY0NAotLS0gYS9hcmNoL3NoL01ha2VmaWxlCisrKyBiL2FyY2gvc2gvTWFrZWZpbGUKQEAg
LTE5OCw5ICsxOTgsNiBAQCBjb21wcmVzc2VkOiB6SW1hZ2UKIGFyY2hwcmVwYXJlOgogCSQoUSkk
KE1BS0UpICQoYnVpbGQpPWFyY2gvc2gvdG9vbHMgaW5jbHVkZS9nZW5lcmF0ZWQvbWFjaHR5cGVz
LmgKIAotYXJjaGNsZWFuOgotCSQoUSkkKE1BS0UpICQoY2xlYW4pPSQoYm9vdCkKLQogYXJjaGhl
YWRlcnM6CiAJJChRKSQoTUFLRSkgJChidWlsZCk9YXJjaC9zaC9rZXJuZWwvc3lzY2FsbHMgYWxs
CiAKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvS2J1aWxkIGIvYXJjaC9zcGFyYy9LYnVpbGQKaW5k
ZXggYzllNTc0OTA2YTliLi43MWNiM2Q5MzRiZjYgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvS2J1
aWxkCisrKyBiL2FyY2gvc3BhcmMvS2J1aWxkCkBAIC05LDMgKzksNiBAQCBvYmoteSArPSBtYXRo
LWVtdS8KIG9iai15ICs9IG5ldC8KIG9iai15ICs9IGNyeXB0by8KIG9iai0kKENPTkZJR19TUEFS
QzY0KSArPSB2ZHNvLworCisjIGZvciBjbGVhbmluZworc3ViZGlyLSArPSBib290CmRpZmYgLS1n
aXQgYS9hcmNoL3NwYXJjL01ha2VmaWxlIGIvYXJjaC9zcGFyYy9NYWtlZmlsZQppbmRleCAyNGZi
NWE5OWY0MzkuLmM3MDA4YmJlYmM0YyAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9NYWtlZmlsZQor
KysgYi9hcmNoL3NwYXJjL01ha2VmaWxlCkBAIC03NSw5ICs3NSw2IEBAIGluc3RhbGw6CiAJc2gg
JChzcmN0cmVlKS8kKGJvb3QpL2luc3RhbGwuc2ggJChLRVJORUxSRUxFQVNFKSAkKEtCVUlMRF9J
TUFHRSkgXAogCQlTeXN0ZW0ubWFwICIkKElOU1RBTExfUEFUSCkiCiAKLWFyY2hjbGVhbjoKLQkk
KFEpJChNQUtFKSAkKGNsZWFuKT0kKGJvb3QpCi0KIGFyY2hoZWFkZXJzOgogCSQoUSkkKE1BS0Up
ICQoYnVpbGQpPWFyY2gvc3BhcmMva2VybmVsL3N5c2NhbGxzIGFsbAogCmRpZmYgLS1naXQgYS9h
cmNoL3g4Ni9LYnVpbGQgYi9hcmNoL3g4Ni9LYnVpbGQKaW5kZXggMzBkZWMwMTk3NTZiLi5mMzg0
Y2IxYTRmN2EgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L0tidWlsZAorKysgYi9hcmNoL3g4Ni9LYnVp
bGQKQEAgLTI1LDMgKzI1LDYgQEAgb2JqLXkgKz0gcGxhdGZvcm0vCiBvYmoteSArPSBuZXQvCiAK
IG9iai0kKENPTkZJR19LRVhFQ19GSUxFKSArPSBwdXJnYXRvcnkvCisKKyMgZm9yIGNsZWFuaW5n
CitzdWJkaXItICs9IGJvb3QgdG9vbHMKZGlmZiAtLWdpdCBhL2FyY2gveDg2L01ha2VmaWxlIGIv
YXJjaC94ODYvTWFrZWZpbGUKaW5kZXggNzQ4OGNmYmJkMmY2Li42N2Q3YzI2NWUwY2UgMTAwNjQ0
Ci0tLSBhL2FyY2gveDg2L01ha2VmaWxlCisrKyBiL2FyY2gveDg2L01ha2VmaWxlCkBAIC0yODMs
OCArMjgzLDYgQEAgZW5kaWYKIGFyY2hjbGVhbjoKIAkkKFEpcm0gLXJmICQob2JqdHJlZSkvYXJj
aC9pMzg2CiAJJChRKXJtIC1yZiAkKG9ianRyZWUpL2FyY2gveDg2XzY0Ci0JJChRKSQoTUFLRSkg
JChjbGVhbik9JChib290KQotCSQoUSkkKE1BS0UpICQoY2xlYW4pPWFyY2gveDg2L3Rvb2xzCiAK
IGRlZmluZSBhcmNoaGVscAogICBlY2hvICAnKiBiekltYWdlCQktIENvbXByZXNzZWQga2VybmVs
IGltYWdlIChhcmNoL3g4Ni9ib290L2J6SW1hZ2UpJwpkaWZmIC0tZ2l0IGEvYXJjaC94dGVuc2Ev
TWFrZWZpbGUgYi9hcmNoL3h0ZW5zYS9NYWtlZmlsZQppbmRleCAyODRmZDFmNTkyYTguLmVlMjc2
OTUxOWVhZiAxMDA2NDQKLS0tIGEvYXJjaC94dGVuc2EvTWFrZWZpbGUKKysrIGIvYXJjaC94dGVu
c2EvTWFrZWZpbGUKQEAgLTcsOSArNyw3IEBACiAjIENvcHlyaWdodCAoQykgMjAxNCBDYWRlbmNl
IERlc2lnbiBTeXN0ZW1zIEluYy4KICMKICMgVGhpcyBmaWxlIGlzIGluY2x1ZGVkIGJ5IHRoZSBn
bG9iYWwgbWFrZWZpbGUgc28gdGhhdCB5b3UgY2FuIGFkZCB5b3VyIG93bgotIyBhcmNoaXRlY3R1
cmUtc3BlY2lmaWMgZmxhZ3MgYW5kIGRlcGVuZGVuY2llcy4gUmVtZW1iZXIgdG8gZG8gaGF2ZSBh
Y3Rpb25zCi0jIGZvciAiYXJjaGNsZWFuIiBhbmQgImFyY2hkZXAiIGZvciBjbGVhbmluZyB1cCBh
bmQgbWFraW5nIGRlcGVuZGVuY2llcyBmb3IKLSMgdGhpcyBhcmNoaXRlY3R1cmUKKyMgYXJjaGl0
ZWN0dXJlLXNwZWNpZmljIGZsYWdzIGFuZCBkZXBlbmRlbmNpZXMuCiAKICMgQ29yZSBjb25maWd1
cmF0aW9uLgogIyAoVXNlIFZBUj08eHRlbnNhX2NvbmZpZz4gdG8gdXNlIGFub3RoZXIgZGVmYXVs
dCBjb21waWxlci4pCi0tIAoyLjMwLjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJy
ZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNj
Cg==
