Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id A160D347751
	for <lists+openrisc@lfdr.de>; Wed, 24 Mar 2021 12:28:42 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 72E3A21282;
	Wed, 24 Mar 2021 12:28:41 +0100 (CET)
Received: from us-smtp-delivery-124.mimecast.com
 (us-smtp-delivery-124.mimecast.com [170.10.133.124])
 by mail.librecores.org (Postfix) with ESMTP id 7ED4220E5C
 for <openrisc@lists.librecores.org>; Wed, 24 Mar 2021 11:24:49 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1616581488;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=yw1kaNhaKWkNGbfTKhYEtEQwGEa1stGjOuOGnel5N0M=;
 b=by63VPlKKcG20KyKat0hxM+FzAr7qeu/uFTWizlzl6Yufz9aVeW1Et/7s8XumEd722F36n
 d6ON9HnjTt9CMk5lQoHBS+nAx+H0tsyG4VCkUZpg/O1smGYf03GNislhqJdfGcRZV5tiTh
 A6seFNGXE3247qEwr1bTsDdpDXqiTTE=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-164-W48vVwN3Oqazo2c1FruUKg-1; Wed, 24 Mar 2021 06:24:46 -0400
X-MC-Unique: W48vVwN3Oqazo2c1FruUKg-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id E01AB81622;
 Wed, 24 Mar 2021 10:24:41 +0000 (UTC)
Received: from t480s.redhat.com (ovpn-115-66.ams2.redhat.com [10.36.115.66])
 by smtp.corp.redhat.com (Postfix) with ESMTP id E20C11002D71;
 Wed, 24 Mar 2021 10:24:13 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: linux-kernel@vger.kernel.org
Date: Wed, 24 Mar 2021 11:23:49 +0100
Message-Id: <20210324102351.6932-2-david@redhat.com>
In-Reply-To: <20210324102351.6932-1-david@redhat.com>
References: <20210324102351.6932-1-david@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
X-Mailman-Approved-At: Wed, 24 Mar 2021 12:28:39 +0100
Subject: [OpenRISC] [PATCH v1 1/3] drivers/char: remove /dev/kmem for good
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Andrew Lunn <andrew@lunn.ch>, linux-sh@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Paul Mackerras <paulus@samba.org>, Pavel Machek <pavel@ucw.cz>,
 linux-arch@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
 Christophe Leroy <christophe.leroy@csgroup.eu>,
 Viresh Kumar <viresh.kumar@linaro.org>, Matt Turner <mattst88@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp,
 Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>,
 Alexander Viro <viro@zeniv.linux.org.uk>, Thomas Gleixner <tglx@linutronix.de>,
 Xiaoming Ni <nixiaoming@huawei.com>, Kairui Song <kasong@redhat.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Randy Dunlap <rdunlap@infradead.org>, Luis Chamberlain <mcgrof@kernel.org>,
 "Pavel Machek \(CIP\)" <pavel@denx.de>, linux-fsdevel@vger.kernel.org,
 Andrew Morton <akpm@linux-foundation.org>,
 Linus Torvalds <torvalds@linux-foundation.org>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>, linux-ia64@vger.kernel.org,
 David Hildenbrand <david@redhat.com>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Ingo Molnar <mingo@kernel.org>,
 linux-s390@vger.kernel.org, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-hexagon@vger.kernel.org, Helge Deller <deller@gmx.de>,
 linux-xtensa@linux-xtensa.org, Vasily Gorbik <gor@linux.ibm.com>,
 Sudeep Holla <sudeep.holla@arm.com>, linux-m68k@lists.linux-m68k.org,
 linux-arm-kernel@lists.infradead.org, Chris Zankel <chris@zankel.net>,
 Linux API <linux-api@vger.kernel.org>, Theodore Dubois <tblodt@icloud.com>,
 Minchan Kim <minchan@kernel.org>, "Eric W. Biederman" <ebiederm@xmission.com>,
 Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>,
 Palmer Dabbelt <palmerdabbelt@google.com>,
 Jiaxun Yang <jiaxun.yang@flygoat.com>, Rich Felker <dalias@libc.org>,
 Krzysztof Kozlowski <krzk@kernel.org>, Sam Ravnborg <sam@ravnborg.org>,
 Rob Herring <robh@kernel.org>, Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
 Brian Cain <bcain@codeaurora.org>, Jonathan Corbet <corbet@lwn.net>,
 linux-doc@vger.kernel.org, Matthew Wilcox <willy@infradead.org>,
 Christian Borntraeger <borntraeger@de.ibm.com>,
 Gerald Schaefer <gerald.schaefer@linux.ibm.com>,
 Robert Richter <rric@kernel.org>, Arnd Bergmann <arnd@arndb.de>,
 Niklas Schnelle <schnelle@linux.ibm.com>, Steven Rostedt <rostedt@goodmis.org>,
 Ivan Kokshaysky <ink@jurassic.park.msu.ru>, Greentime Hu <green.hu@gmail.com>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>, linux-parisc@vger.kernel.org,
 "Alexander A. Klimov" <grandmaster@al2klimov.de>, linux-alpha@vger.kernel.org,
 "David S. Miller" <davem@davemloft.net>, Mike Rapoport <rppt@kernel.org>,
 Hillf Danton <hdanton@sina.com>, Michal Hocko <mhocko@suse.com>,
 James Troup <james.troup@canonical.com>,
 "Peter Zijlstra \(Intel\)" <peterz@infradead.org>,
 Sebastian Andrzej Siewior <bigeasy@linutronix.de>,
 Liviu Dudau <liviu.dudau@arm.com>, linux-mm@kvack.org,
 Oleksiy Avramchenko <oleksiy.avramchenko@sonymobile.com>,
 sparclinux@vger.kernel.org, Jonas Bonn <jonas@southpole.se>,
 Russell King <linux@armlinux.org.uk>, Corentin Labbe <clabbe@baylibre.com>,
 Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
 Heiko Carstens <hca@linux.ibm.com>, openrisc@lists.librecores.org,
 Mikulas Patocka <mpatocka@redhat.com>, William Cohen <wcohen@redhat.com>,
 huang ying <huang.ying.caritas@gmail.com>, Pierre Morel <pmorel@linux.ibm.com>,
 linux-mips@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
 Gregory Clement <gregory.clement@bootlin.com>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RXhwbG9yaW5nIC9kZXYva21lbSBhbmQgL2Rldi9tZW0gaW4gdGhlIGNvbnRleHQgb2YgbWVtb3J5
IGhvdCh1bilwbHVnIGFuZAptZW1vcnkgYmFsbG9vbmluZywgSSBzdGFydGVkIHF1ZXN0aW9uaW5n
IHRoZSBleGlzdGFuY2Ugb2YgL2Rldi9rbWVtLgoKQ29tcGFyaW5nIGl0IHdpdGggdGhlIC9wcm9j
L2tjb3JlIGltcGxlbWVudGF0aW9uLCBpdCBkb2VzIG5vdCBzZWVtIHRvIGJlCmFibGUgdG8gZGVh
bCB3aXRoIHRoaW5ncyBsaWtlCmEpIFBhZ2VzIHVubWFwcGVkIGZyb20gdGhlIGRpcmVjdCBtYXBw
aW5nIChlLmcuLCB0byBiZSB1c2VkIGJ5IHNlY3JldG1lbSkKICAtPiBrZXJuX2FkZHJfdmFsaWQo
KS4gdmlydF9hZGRyX3ZhbGlkKCkgaXMgbm90IHN1ZmZpY2llbnQuCmIpIFNwZWNpYWwgY2FzZXMg
bGlrZSBnYXJ0IGFwZXJ0dXJlIG1lbW9yeSB0aGF0IGlzIG5vdCB0byBiZSB0b3VjaGVkCiAgLT4g
bWVtX3Bmbl9pc19yYW0oKQpVbmxlc3MgSSBhbSBtaXNzaW5nIHNvbWV0aGluZywgaXQncyBhdCBs
ZWFzdCBicm9rZW4gaW4gc29tZSBjYXNlcyBhbmQgbWlnaHQKZmF1bHQvY3Jhc2ggdGhlIG1hY2hp
bmUuCgpMb29rcyBsaWtlIGl0cyBleGlzdGFuY2UgaGFzIGJlZW4gcXVlc3Rpb25lZCBiZWZvcmUg
aW4gMjAwNSBhbmQgMjAxMApbMV0sIGFmdGVyIH4xMSBhZGRpdGlvbmFsIHllYXJzLCBpdCBtaWdo
dCBtYWtlIHNlbnNlIHRvIHJldml2ZSB0aGUKZGlzY3Vzc2lvbi4KCkNPTkZJR19ERVZLTUVNIGlz
IG9ubHkgZW5hYmxlZCBpbiBhIHNpbmdsZSBkZWZjb25maWcgKG9uIHB1cnBvc2Ugb3IgYnkKbWlz
dGFrZT8pLiBBbGwgZGlzdHJpYnV0aW9ucyBkaXNhYmxlIGl0OiBpbiBVYnVudHUgaXQgaGFzIGJl
ZW4gZGlzYWJsZWQKZm9yIG1vcmUgdGhhbiAxMCB5ZWFycywgaW4gRGViaWFuIHNpbmNlIDIuNi4z
MSwgaW4gRmVkb3JhIGF0IGxlYXN0IHN0YXJ0aW5nCndpdGggRkMzLCBpbiBSSEVMIHN0YXJ0aW5n
IHdpdGggUkhFTDQsIGluIFNVU0Ugc3RhcnRpbmcgZnJvbSAxNXNwMiwgYW5kCk9wZW5TVVNFIGhh
cyBpdCBkaXNhYmxlZCBhcyB3ZWxsLgoKMSkgL2Rldi9rbWVtIHdhcyBwb3B1bGFyIGZvciByb290
a2l0cyBbMl0gYmVmb3JlIGl0IGdvdCBkaXNhYmxlZAogICBiYXNpY2FsbHkgZXZlcnl3aGVyZS4g
VWJ1bnR1IGRvY3VtZW50cyBbM10gIlRoZXJlIGlzIG5vIG1vZGVybiB1c2VyIG9mCiAgIC9kZXYv
a21lbSBhbnkgbW9yZSBiZXlvbmQgYXR0YWNrZXJzIHVzaW5nIGl0IHRvIGxvYWQga2VybmVsIHJv
b3RraXRzLiIuCiAgIFJIRUwgZG9jdW1lbnRzIGluIGEgQlogWzVdICJpdCBzZXJ2ZWQgbm8gcHJh
Y3RpY2FsIHB1cnBvc2Ugb3RoZXIgdGhhbiB0bwogICBzZXJ2ZSBhcyBhIHBvdGVudGlhbCBzZWN1
cml0eSBwcm9ibGVtIG9yIHRvIGVuYWJsZSBiaW5hcnkgbW9kdWxlIGRyaXZlcnMKICAgdG8gYWNj
ZXNzIHN0cnVjdHVyZXMvZnVuY3Rpb25zIHRoZXkgc2hvdWxkbid0IGJlIHRvdWNoaW5nIgoKMikg
L3Byb2Mva2NvcmUgaXMgYSBkZWNlbnQgaW50ZXJmYWNlIHRvIGhhdmUgYSBjb250cm9sbGVkIHdh
eSB0byByZWFkCiAgIGtlcm5lbCBtZW1vcnkgZm9yIGRlYnVnZ2luZyBwdXBvc2VzLiAod2lsbCBu
ZWVkIHNvbWUgZXh0ZW5zaW9ucyB0bwogICBkZWFsIHdpdGggbWVtb3J5IG9mZmxpbmluZy91bnBs
dWcsIG1lbW9yeSBiYWxsb29uaW5nLCBhbmQgcG9pc29uZWQKICAgcGFnZXMsIHRob3VnaCkKCjMp
IEl0IG1pZ2h0IGJlIHVzZWZ1bCBmb3IgY29ybmVyIGNhc2UgZGVidWdnaW5nIFsxXS4gS0RCL0tH
REIgbWlnaHQgYmUgYQogICBiZXR0ZXIgZml0LCBlc3BlY2lhbGx5LCB0byB3cml0ZSByYW5kb20g
bWVtb3J5OyBoYXJkZXIgdG8gc2hvb3QKICAgeW91cnNlbGYgaW50byB0aGUgZm9vdC4KCjQpICJL
ZXJuZWwgTWVtb3J5IEVkaXRvciIgWzRdIGhhc24ndCBzZWVuIGFueSB1cGRhdGVzIHNpbmNlIDIw
MDAgYW5kIHNlZW1zCiAgIHRvIGJlIGluY29tcGF0aWJsZSB3aXRoIDY0Yml0IFsxXS4gRm9yIGVk
dWNhdGlvbmFsIHB1cnBvc2VzLAogICAvcHJvYy9rY29yZSBtaWdodCBiZSB1c2VkIHRvIG1vbml0
b3IgdmFsdWUgdXBkYXRlcyAtLSBvciBvbGRlcgogICBrZXJuZWxzIGNhbiBiZSB1c2VkLgoKNSkg
SXQncyBicm9rZW4gb24gYXJtNjQsIGFuZCB0aGVyZWZvcmUsIGNvbXBsZXRlbHkgZGlzYWJsZWQg
dGhlcmUuCgpMb29rcyBsaWtlIGl0J3MgZXNzZW50aWFsbHkgdW51c2VkIGFuZCBoYXMgYmVlbiBy
ZXBsYWNlZCBieSBiZXR0ZXIKc3VpdGVkIGludGVyZmFjZXMgZm9yIGluZGl2aWR1YWwgdGFza3Mg
KC9wcm9jL2tjb3JlLCBLREIvS0dEQikuIExldCdzCmp1c3QgcmVtb3ZlIGl0LgoKWzFdIGh0dHBz
Oi8vbHduLm5ldC9BcnRpY2xlcy8xNDc5MDEvClsyXSBodHRwczovL3d3dy5saW51eGpvdXJuYWwu
Y29tL2FydGljbGUvMTA1MDUKWzNdIGh0dHBzOi8vd2lraS51YnVudHUuY29tL1NlY3VyaXR5L0Zl
YXR1cmVzI0EuMkZkZXYuMkZrbWVtX2Rpc2FibGVkCls0XSBodHRwczovL3NvdXJjZWZvcmdlLm5l
dC9wcm9qZWN0cy9rbWUvCls1XSBodHRwczovL2J1Z3ppbGxhLnJlZGhhdC5jb20vc2hvd19idWcu
Y2dpP2lkPTE1NDc5NgoKQ2M6IExpbnVzIFRvcnZhbGRzIDx0b3J2YWxkc0BsaW51eC1mb3VuZGF0
aW9uLm9yZz4KQ2M6IEdyZWcgS3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5v
cmc+CkNjOiBBbmRyZXcgTW9ydG9uIDxha3BtQGxpbnV4LWZvdW5kYXRpb24ub3JnPgpDYzogIkFs
ZXhhbmRlciBBLiBLbGltb3YiIDxncmFuZG1hc3RlckBhbDJrbGltb3YuZGU+CkNjOiBBbGV4YW5k
ZXIgVmlybyA8dmlyb0B6ZW5pdi5saW51eC5vcmcudWs+CkNjOiBBbGV4YW5kcmUgQmVsbG9uaSA8
YWxleGFuZHJlLmJlbGxvbmlAYm9vdGxpbi5jb20+CkNjOiBBbmRyZXcgTHVubiA8YW5kcmV3QGx1
bm4uY2g+CkNjOiBBbmRyZXkgWmhpemhpa2luIDxhbmRyZXkuemhpemhpa2luQGxlaWNhLWdlb3N5
c3RlbXMuY29tPgpDYzogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KQ2M6IEJlbmphbWlu
IEhlcnJlbnNjaG1pZHQgPGJlbmhAa2VybmVsLmNyYXNoaW5nLm9yZz4KQ2M6IEJyaWFuIENhaW4g
PGJjYWluQGNvZGVhdXJvcmEub3JnPgpDYzogQ2hyaXN0aWFuIEJvcm50cmFlZ2VyIDxib3JudHJh
ZWdlckBkZS5pYm0uY29tPgpDYzogQ2hyaXN0b3BoZSBMZXJveSA8Y2hyaXN0b3BoZS5sZXJveUBj
c2dyb3VwLmV1PgpDYzogQ2hyaXMgWmFua2VsIDxjaHJpc0B6YW5rZWwubmV0PgpDYzogQ29yZW50
aW4gTGFiYmUgPGNsYWJiZUBiYXlsaWJyZS5jb20+CkNjOiAiRGF2aWQgUy4gTWlsbGVyIiA8ZGF2
ZW1AZGF2ZW1sb2Z0Lm5ldD4KQ2M6ICJFcmljIFcuIEJpZWRlcm1hbiIgPGViaWVkZXJtQHhtaXNz
aW9uLmNvbT4KQ2M6IEdlZXJ0IFV5dHRlcmhvZXZlbiA8Z2VlcnRAbGludXgtbTY4ay5vcmc+CkNj
OiBHZXJhbGQgU2NoYWVmZXIgPGdlcmFsZC5zY2hhZWZlckBsaW51eC5pYm0uY29tPgpDYzogR3Jl
ZW50aW1lIEh1IDxncmVlbi5odUBnbWFpbC5jb20+CkNjOiBHcmVnb3J5IENsZW1lbnQgPGdyZWdv
cnkuY2xlbWVudEBib290bGluLmNvbT4KQ2M6IEhlaWtvIENhcnN0ZW5zIDxoY2FAbGludXguaWJt
LmNvbT4KQ2M6IEhlbGdlIERlbGxlciA8ZGVsbGVyQGdteC5kZT4KQ2M6IEhpbGxmIERhbnRvbiA8
aGRhbnRvbkBzaW5hLmNvbT4KQ2M6IGh1YW5nIHlpbmcgPGh1YW5nLnlpbmcuY2FyaXRhc0BnbWFp
bC5jb20+CkNjOiBJbmdvIE1vbG5hciA8bWluZ29Aa2VybmVsLm9yZz4KQ2M6IEl2YW4gS29rc2hh
eXNreSA8aW5rQGp1cmFzc2ljLnBhcmsubXN1LnJ1PgpDYzogIkphbWVzIEUuSi4gQm90dG9tbGV5
IiA8SmFtZXMuQm90dG9tbGV5QEhhbnNlblBhcnRuZXJzaGlwLmNvbT4KQ2M6IEphbWVzIFRyb3Vw
IDxqYW1lcy50cm91cEBjYW5vbmljYWwuY29tPgpDYzogSmlheHVuIFlhbmcgPGppYXh1bi55YW5n
QGZseWdvYXQuY29tPgpDYzogSm9uYXMgQm9ubiA8am9uYXNAc291dGhwb2xlLnNlPgpDYzogSm9u
YXRoYW4gQ29yYmV0IDxjb3JiZXRAbHduLm5ldD4KQ2M6IEthaXJ1aSBTb25nIDxrYXNvbmdAcmVk
aGF0LmNvbT4KQ2M6IEtyenlzenRvZiBLb3psb3dza2kgPGtyemtAa2VybmVsLm9yZz4KQ2M6IEt1
bmlub3JpIE1vcmltb3RvIDxrdW5pbm9yaS5tb3JpbW90by5neEByZW5lc2FzLmNvbT4KQ2M6IExp
dml1IER1ZGF1IDxsaXZpdS5kdWRhdUBhcm0uY29tPgpDYzogTG9yZW56byBQaWVyYWxpc2kgPGxv
cmVuem8ucGllcmFsaXNpQGFybS5jb20+CkNjOiBMdWMgVmFuIE9vc3RlbnJ5Y2sgPGx1Yy52YW5v
b3N0ZW5yeWNrQGdtYWlsLmNvbT4KQ2M6IEx1aXMgQ2hhbWJlcmxhaW4gPG1jZ3JvZkBrZXJuZWwu
b3JnPgpDYzogTWF0dGhldyBXaWxjb3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+CkNjOiBNYXR0IFR1
cm5lciA8bWF0dHN0ODhAZ21haWwuY29tPgpDYzogTWF4IEZpbGlwcG92IDxqY212YmtiY0BnbWFp
bC5jb20+CkNjOiBNaWNoYWVsIEVsbGVybWFuIDxtcGVAZWxsZXJtYW4uaWQuYXU+CkNjOiBNaWNo
YWwgSG9ja28gPG1ob2Nrb0BzdXNlLmNvbT4KQ2M6IE1pa2UgUmFwb3BvcnQgPHJwcHRAa2VybmVs
Lm9yZz4KQ2M6IE1pa3VsYXMgUGF0b2NrYSA8bXBhdG9ja2FAcmVkaGF0LmNvbT4KQ2M6IE1pbmNo
YW4gS2ltIDxtaW5jaGFuQGtlcm5lbC5vcmc+CkNjOiBOaWtsYXMgU2NobmVsbGUgPHNjaG5lbGxl
QGxpbnV4LmlibS5jb20+CkNjOiBPbGVrc2l5IEF2cmFtY2hlbmtvIDxvbGVrc2l5LmF2cmFtY2hl
bmtvQHNvbnltb2JpbGUuY29tPgpDYzogb3BlbnJpc2NAbGlzdHMubGlicmVjb3Jlcy5vcmcKQ2M6
IFBhbG1lciBEYWJiZWx0IDxwYWxtZXJkYWJiZWx0QGdvb2dsZS5jb20+CkNjOiBQYXVsIE1hY2tl
cnJhcyA8cGF1bHVzQHNhbWJhLm9yZz4KQ2M6ICJQYXZlbCBNYWNoZWsgKENJUCkiIDxwYXZlbEBk
ZW54LmRlPgpDYzogUGF2ZWwgTWFjaGVrIDxwYXZlbEB1Y3cuY3o+CkNjOiAiUGV0ZXIgWmlqbHN0
cmEgKEludGVsKSIgPHBldGVyekBpbmZyYWRlYWQub3JnPgpDYzogUGllcnJlIE1vcmVsIDxwbW9y
ZWxAbGludXguaWJtLmNvbT4KQ2M6IFJhbmR5IER1bmxhcCA8cmR1bmxhcEBpbmZyYWRlYWQub3Jn
PgpDYzogUmljaGFyZCBIZW5kZXJzb24gPHJ0aEB0d2lkZGxlLm5ldD4KQ2M6IFJpY2ggRmVsa2Vy
IDxkYWxpYXNAbGliYy5vcmc+CkNjOiBSb2JlcnQgUmljaHRlciA8cnJpY0BrZXJuZWwub3JnPgpD
YzogUm9iIEhlcnJpbmcgPHJvYmhAa2VybmVsLm9yZz4KQ2M6IFJ1c3NlbGwgS2luZyA8bGludXhA
YXJtbGludXgub3JnLnVrPgpDYzogU2FtIFJhdm5ib3JnIDxzYW1AcmF2bmJvcmcub3JnPgpDYzog
U2ViYXN0aWFuIEFuZHJ6ZWogU2lld2lvciA8YmlnZWFzeUBsaW51dHJvbml4LmRlPgpDYzogU2Vi
YXN0aWFuIEhlc3NlbGJhcnRoIDxzZWJhc3RpYW4uaGVzc2VsYmFydGhAZ21haWwuY29tPgpDYzog
c3BhcmNsaW51eEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IFN0YWZmb3JkIEhvcm5lIDxzaG9ybmVAZ21h
aWwuY29tPgpDYzogU3RlZmFuIEtyaXN0aWFuc3NvbiA8c3RlZmFuLmtyaXN0aWFuc3NvbkBzYXVu
YWxhaHRpLmZpPgpDYzogU3RldmVuIFJvc3RlZHQgPHJvc3RlZHRAZ29vZG1pcy5vcmc+CkNjOiBT
dWRlZXAgSG9sbGEgPHN1ZGVlcC5ob2xsYUBhcm0uY29tPgpDYzogVGhlb2RvcmUgRHVib2lzIDx0
YmxvZHRAaWNsb3VkLmNvbT4KQ2M6IFRob21hcyBCb2dlbmRvZXJmZXIgPHRzYm9nZW5kQGFscGhh
LmZyYW5rZW4uZGU+CkNjOiBUaG9tYXMgR2xlaXhuZXIgPHRnbHhAbGludXRyb25peC5kZT4KQ2M6
IHVjbGludXgtaDgtZGV2ZWxAbGlzdHMuc291cmNlZm9yZ2UuanAKQ2M6IFZhc2lseSBHb3JiaWsg
PGdvckBsaW51eC5pYm0uY29tPgpDYzogVmlyZXNoIEt1bWFyIDx2aXJlc2gua3VtYXJAbGluYXJv
Lm9yZz4KQ2M6IFdpbGxpYW0gQ29oZW4gPHdjb2hlbkByZWRoYXQuY29tPgpDYzogWGlhb21pbmcg
TmkgPG5peGlhb21pbmdAaHVhd2VpLmNvbT4KQ2M6IFlvc2hpbm9yaSBTYXRvIDx5c2F0b0B1c2Vy
cy5zb3VyY2Vmb3JnZS5qcD4KQ2M6IGxpbnV4LWFscGhhQHZnZXIua2VybmVsLm9yZwpDYzogTGlu
dXggQVBJIDxsaW51eC1hcGlAdmdlci5rZXJuZWwub3JnPgpDYzogbGludXgtYXJjaEB2Z2VyLmtl
cm5lbC5vcmcKQ2M6IGxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGlu
dXgtZG9jQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtZnNkZXZlbEB2Z2VyLmtlcm5lbC5vcmcK
Q2M6IGxpbnV4LWhleGFnb25Admdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1pYTY0QHZnZXIua2Vy
bmVsLm9yZwpDYzogbGludXgta2VybmVsQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtbTY4a0Bs
aXN0cy5saW51eC1tNjhrLm9yZwpDYzogbGludXgtbWlwc0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxp
bnV4LXBhcmlzY0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4cHBjLWRldkBsaXN0cy5vemxhYnMu
b3JnCkNjOiBsaW51eC1zMzkwQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtc2hAdmdlci5rZXJu
ZWwub3JnCkNjOiBsaW51eC14dGVuc2FAbGludXgteHRlbnNhLm9yZwpTaWduZWQtb2ZmLWJ5OiBE
YXZpZCBIaWxkZW5icmFuZCA8ZGF2aWRAcmVkaGF0LmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL2Fk
bWluLWd1aWRlL2RldmljZXMudHh0ICAgICB8ICAgMiArLQogYXJjaC9hcm0vY29uZmlncy9kb3Zl
X2RlZmNvbmZpZyAgICAgICAgICAgfCAgIDEgLQogYXJjaC9hcm0vY29uZmlncy9tYWdpY2lhbl9k
ZWZjb25maWcgICAgICAgfCAgIDEgLQogYXJjaC9hcm0vY29uZmlncy9tb3hhcnRfZGVmY29uZmln
ICAgICAgICAgfCAgIDEgLQogYXJjaC9hcm0vY29uZmlncy9tcHMyX2RlZmNvbmZpZyAgICAgICAg
ICAgfCAgIDEgLQogYXJjaC9hcm0vY29uZmlncy9tdmVidV92NV9kZWZjb25maWcgICAgICAgfCAg
IDEgLQogYXJjaC9hcm0vY29uZmlncy94Y2VwX2RlZmNvbmZpZyAgICAgICAgICAgfCAgIDEgLQog
YXJjaC9oODMwMC9jb25maWdzL2Vkb3NrMjY3NF9kZWZjb25maWcgICAgfCAgIDEgLQogYXJjaC9o
ODMwMC9jb25maWdzL2g4MzAwaC1zaW1fZGVmY29uZmlnICAgfCAgIDEgLQogYXJjaC9oODMwMC9j
b25maWdzL2g4cy1zaW1fZGVmY29uZmlnICAgICAgfCAgIDEgLQogYXJjaC9oZXhhZ29uL2NvbmZp
Z3MvY29tZXRfZGVmY29uZmlnICAgICAgfCAgIDEgLQogYXJjaC9tNjhrL2NvbmZpZ3MvYW1jb3Jl
X2RlZmNvbmZpZyAgICAgICAgfCAgIDEgLQogYXJjaC9vcGVucmlzYy9jb25maWdzL29yMWtzaW1f
ZGVmY29uZmlnICAgfCAgIDEgLQogYXJjaC9zaC9jb25maWdzL2Vkb3NrNzcwNV9kZWZjb25maWcg
ICAgICAgfCAgIDEgLQogYXJjaC9zaC9jb25maWdzL3NlNzIwNl9kZWZjb25maWcgICAgICAgICAg
fCAgIDEgLQogYXJjaC9zaC9jb25maWdzL3NoMjAwN19kZWZjb25maWcgICAgICAgICAgfCAgIDEg
LQogYXJjaC9zaC9jb25maWdzL3NoNzcyNF9nZW5lcmljX2RlZmNvbmZpZyAgfCAgIDEgLQogYXJj
aC9zaC9jb25maWdzL3NoNzc3MF9nZW5lcmljX2RlZmNvbmZpZyAgfCAgIDEgLQogYXJjaC9zaC9j
b25maWdzL3NoNzc4NWxjcl8zMmJpdF9kZWZjb25maWcgfCAgIDEgLQogYXJjaC9zcGFyYy9jb25m
aWdzL3NwYXJjNjRfZGVmY29uZmlnICAgICAgfCAgIDEgLQogYXJjaC94dGVuc2EvY29uZmlncy94
aXBfa2M3MDVfZGVmY29uZmlnICAgfCAgIDEgLQogZHJpdmVycy9jaGFyL0tjb25maWcgICAgICAg
ICAgICAgICAgICAgICAgfCAgMTAgLQogZHJpdmVycy9jaGFyL21lbS5jICAgICAgICAgICAgICAg
ICAgICAgICAgfCAyMzEgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogaW5jbHVkZS9saW51eC9mcy5o
ICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGluY2x1ZGUvbGludXgvdm1hbGxvYy5o
ICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBrZXJuZWwvY29uZmlncy9hbmRyb2lkLWJhc2Uu
Y29uZmlnICAgICAgICB8ICAgMSAtCiBtbS9rc20uYyAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICB8ICAgMiArLQogbW0vdm1hbGxvYy5jICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAgIDIgKy0KIDI4IGZpbGVzIGNoYW5nZWQsIDUgaW5zZXJ0aW9ucygrKSwgMjY3IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvZGV2aWNlcy50
eHQgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRlL2RldmljZXMudHh0CmluZGV4IDYzZmQ0ZTZh
MDE0Yi4uYmVmZmQ1ZTkxMzBhIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL2FkbWluLWd1aWRl
L2RldmljZXMudHh0CisrKyBiL0RvY3VtZW50YXRpb24vYWRtaW4tZ3VpZGUvZGV2aWNlcy50eHQK
QEAgLTQsNyArNCw3IEBACiAKICAgIDEgY2hhcglNZW1vcnkgZGV2aWNlcwogCQkgIDEgPSAvZGV2
L21lbQkJUGh5c2ljYWwgbWVtb3J5IGFjY2VzcwotCQkgIDIgPSAvZGV2L2ttZW0JCUtlcm5lbCB2
aXJ0dWFsIG1lbW9yeSBhY2Nlc3MKKwkJICAyID0gL2Rldi9rbWVtCQlPQlNPTEVURSAtIHJlcGxh
Y2VkIGJ5IC9wcm9jL2tjb3JlCiAJCSAgMyA9IC9kZXYvbnVsbAkJTnVsbCBkZXZpY2UKIAkJICA0
ID0gL2Rldi9wb3J0CQlJL08gcG9ydCBhY2Nlc3MKIAkJICA1ID0gL2Rldi96ZXJvCQlOdWxsIGJ5
dGUgc291cmNlCmRpZmYgLS1naXQgYS9hcmNoL2FybS9jb25maWdzL2RvdmVfZGVmY29uZmlnIGIv
YXJjaC9hcm0vY29uZmlncy9kb3ZlX2RlZmNvbmZpZwppbmRleCBlNzBjOTk3ZDVmNGMuLmI5MzUx
NjJhOGJiYSAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vY29uZmlncy9kb3ZlX2RlZmNvbmZpZworKysg
Yi9hcmNoL2FybS9jb25maWdzL2RvdmVfZGVmY29uZmlnCkBAIC02Myw3ICs2Myw2IEBAIENPTkZJ
R19JTlBVVF9FVkRFVj15CiAjIENPTkZJR19NT1VTRV9QUzIgaXMgbm90IHNldAogIyBDT05GSUdf
U0VSSU8gaXMgbm90IHNldAogQ09ORklHX0xFR0FDWV9QVFlfQ09VTlQ9MTYKLSMgQ09ORklHX0RF
VktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF84MjUwPXkKIENPTkZJR19TRVJJQUxfODI1
MF9DT05TT0xFPXkKIENPTkZJR19TRVJJQUxfODI1MF9SVU5USU1FX1VBUlRTPTIKZGlmZiAtLWdp
dCBhL2FyY2gvYXJtL2NvbmZpZ3MvbWFnaWNpYW5fZGVmY29uZmlnIGIvYXJjaC9hcm0vY29uZmln
cy9tYWdpY2lhbl9kZWZjb25maWcKaW5kZXggYjQ2NzBkNDJmMzc4Li5hYmRlMWZiMjNiMjAgMTAw
NjQ0Ci0tLSBhL2FyY2gvYXJtL2NvbmZpZ3MvbWFnaWNpYW5fZGVmY29uZmlnCisrKyBiL2FyY2gv
YXJtL2NvbmZpZ3MvbWFnaWNpYW5fZGVmY29uZmlnCkBAIC03Miw3ICs3Miw2IEBAIENPTkZJR19J
TlBVVF9UT1VDSFNDUkVFTj15CiBDT05GSUdfSU5QVVRfTUlTQz15CiBDT05GSUdfSU5QVVRfVUlO
UFVUPW0KICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90
IHNldAogQ09ORklHX1NFUklBTF9QWEE9eQogIyBDT05GSUdfTEVHQUNZX1BUWVMgaXMgbm90IHNl
dAogIyBDT05GSUdfSFdfUkFORE9NIGlzIG5vdCBzZXQKZGlmZiAtLWdpdCBhL2FyY2gvYXJtL2Nv
bmZpZ3MvbW94YXJ0X2RlZmNvbmZpZyBiL2FyY2gvYXJtL2NvbmZpZ3MvbW94YXJ0X2RlZmNvbmZp
ZwppbmRleCA2ODM0ZTk3YWYzNDguLmVhY2MwODlkODZjNSAxMDA2NDQKLS0tIGEvYXJjaC9hcm0v
Y29uZmlncy9tb3hhcnRfZGVmY29uZmlnCisrKyBiL2FyY2gvYXJtL2NvbmZpZ3MvbW94YXJ0X2Rl
ZmNvbmZpZwpAQCAtNzksNyArNzksNiBAQCBDT05GSUdfSU5QVVRfRVZCVUc9eQogIyBDT05GSUdf
U0VSSU8gaXMgbm90IHNldAogIyBDT05GSUdfVlQgaXMgbm90IHNldAogIyBDT05GSUdfTEVHQUNZ
X1BUWVMgaXMgbm90IHNldAotIyBDT05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VS
SUFMXzgyNTA9eQogQ09ORklHX1NFUklBTF84MjUwX0NPTlNPTEU9eQogQ09ORklHX1NFUklBTF84
MjUwX05SX1VBUlRTPTEKZGlmZiAtLWdpdCBhL2FyY2gvYXJtL2NvbmZpZ3MvbXBzMl9kZWZjb25m
aWcgYi9hcmNoL2FybS9jb25maWdzL21wczJfZGVmY29uZmlnCmluZGV4IDFkOTIzZGJiOTkyOC4u
ODlmNGE2ZmYzMGJkIDEwMDY0NAotLS0gYS9hcmNoL2FybS9jb25maWdzL21wczJfZGVmY29uZmln
CisrKyBiL2FyY2gvYXJtL2NvbmZpZ3MvbXBzMl9kZWZjb25maWcKQEAgLTY5LDcgKzY5LDYgQEAg
Q09ORklHX1NNU0M5MTFYPXkKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQKICMgQ09ORklHX0xFR0FD
WV9QVFlTIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxfTk9OU1RBTkRBUkQ9eQotIyBDT05GSUdf
REVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX01QUzJfVUFSVF9DT05TT0xFPXkKIENP
TkZJR19TRVJJQUxfTVBTMl9VQVJUPXkKICMgQ09ORklHX0hXX1JBTkRPTSBpcyBub3Qgc2V0CmRp
ZmYgLS1naXQgYS9hcmNoL2FybS9jb25maWdzL212ZWJ1X3Y1X2RlZmNvbmZpZyBiL2FyY2gvYXJt
L2NvbmZpZ3MvbXZlYnVfdjVfZGVmY29uZmlnCmluZGV4IDRmMTY3MTZiZmMzMi4uZDU3ZmYzMGRh
YmZmIDEwMDY0NAotLS0gYS9hcmNoL2FybS9jb25maWdzL212ZWJ1X3Y1X2RlZmNvbmZpZworKysg
Yi9hcmNoL2FybS9jb25maWdzL212ZWJ1X3Y1X2RlZmNvbmZpZwpAQCAtMTAwLDcgKzEwMCw2IEBA
IENPTkZJR19JTlBVVF9FVkRFVj15CiBDT05GSUdfS0VZQk9BUkRfR1BJTz15CiAjIENPTkZJR19J
TlBVVF9NT1VTRSBpcyBub3Qgc2V0CiBDT05GSUdfTEVHQUNZX1BUWV9DT1VOVD0xNgotIyBDT05G
SUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMXzgyNTA9eQogQ09ORklHX1NFUklB
TF84MjUwX0NPTlNPTEU9eQogQ09ORklHX1NFUklBTF84MjUwX1JVTlRJTUVfVUFSVFM9MgpkaWZm
IC0tZ2l0IGEvYXJjaC9hcm0vY29uZmlncy94Y2VwX2RlZmNvbmZpZyBiL2FyY2gvYXJtL2NvbmZp
Z3MveGNlcF9kZWZjb25maWcKaW5kZXggZjFmYmRmYzVjOGM2Li40ZDhlN2YyZWFlZjcgMTAwNjQ0
Ci0tLSBhL2FyY2gvYXJtL2NvbmZpZ3MveGNlcF9kZWZjb25maWcKKysrIGIvYXJjaC9hcm0vY29u
Zmlncy94Y2VwX2RlZmNvbmZpZwpAQCAtNTMsNyArNTMsNiBAQCBDT05GSUdfTkVUX0VUSEVSTkVU
PXkKICMgQ09ORklHX0lOUFVUX0tFWUJPQVJEIGlzIG5vdCBzZXQKICMgQ09ORklHX0lOUFVUX01P
VVNFIGlzIG5vdCBzZXQKICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RFVktN
RU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9QWEE9eQogQ09ORklHX1NFUklBTF9QWEFfQ09O
U09MRT15CiAjIENPTkZJR19MRUdBQ1lfUFRZUyBpcyBub3Qgc2V0CmRpZmYgLS1naXQgYS9hcmNo
L2g4MzAwL2NvbmZpZ3MvZWRvc2syNjc0X2RlZmNvbmZpZyBiL2FyY2gvaDgzMDAvY29uZmlncy9l
ZG9zazI2NzRfZGVmY29uZmlnCmluZGV4IDIzNzkxZGNmNmMyNS4uNzEzNzg4M2ZmNGM3IDEwMDY0
NAotLS0gYS9hcmNoL2g4MzAwL2NvbmZpZ3MvZWRvc2syNjc0X2RlZmNvbmZpZworKysgYi9hcmNo
L2g4MzAwL2NvbmZpZ3MvZWRvc2syNjc0X2RlZmNvbmZpZwpAQCAtMzIsNyArMzIsNiBAQCBDT05G
SUdfQklORk1UX0ZMQVQ9eQogIyBDT05GSUdfVlQgaXMgbm90IHNldAogIyBDT05GSUdfVU5JWDk4
X1BUWVMgaXMgbm90IHNldAogIyBDT05GSUdfTEVHQUNZX1BUWVMgaXMgbm90IHNldAotIyBDT05G
SUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX1NIX1NDST15CiBDT05GSUdfU0VS
SUFMX1NIX1NDSV9DT05TT0xFPXkKICMgQ09ORklHX0hXX1JBTkRPTSBpcyBub3Qgc2V0CmRpZmYg
LS1naXQgYS9hcmNoL2g4MzAwL2NvbmZpZ3MvaDgzMDBoLXNpbV9kZWZjb25maWcgYi9hcmNoL2g4
MzAwL2NvbmZpZ3MvaDgzMDBoLXNpbV9kZWZjb25maWcKaW5kZXggN2ZjOWMyZjBhY2MwLi5kNGUw
NjZhMTUyOWEgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgzMDAvY29uZmlncy9oODMwMGgtc2ltX2RlZmNv
bmZpZworKysgYi9hcmNoL2g4MzAwL2NvbmZpZ3MvaDgzMDBoLXNpbV9kZWZjb25maWcKQEAgLTMy
LDcgKzMyLDYgQEAgQ09ORklHX0JJTkZNVF9GTEFUPXkKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQK
ICMgQ09ORklHX1VOSVg5OF9QVFlTIGlzIG5vdCBzZXQKICMgQ09ORklHX0xFR0FDWV9QVFlTIGlz
IG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9TSF9T
Q0k9eQogQ09ORklHX1NFUklBTF9TSF9TQ0lfRUFSTFlDT049eQogIyBDT05GSUdfSFdfUkFORE9N
IGlzIG5vdCBzZXQKZGlmZiAtLWdpdCBhL2FyY2gvaDgzMDAvY29uZmlncy9oOHMtc2ltX2RlZmNv
bmZpZyBiL2FyY2gvaDgzMDAvY29uZmlncy9oOHMtc2ltX2RlZmNvbmZpZwppbmRleCAyMzc5MWRj
ZjZjMjUuLjcxMzc4ODNmZjRjNyAxMDA2NDQKLS0tIGEvYXJjaC9oODMwMC9jb25maWdzL2g4cy1z
aW1fZGVmY29uZmlnCisrKyBiL2FyY2gvaDgzMDAvY29uZmlncy9oOHMtc2ltX2RlZmNvbmZpZwpA
QCAtMzIsNyArMzIsNiBAQCBDT05GSUdfQklORk1UX0ZMQVQ9eQogIyBDT05GSUdfVlQgaXMgbm90
IHNldAogIyBDT05GSUdfVU5JWDk4X1BUWVMgaXMgbm90IHNldAogIyBDT05GSUdfTEVHQUNZX1BU
WVMgaXMgbm90IHNldAotIyBDT05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFM
X1NIX1NDST15CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9DT05TT0xFPXkKICMgQ09ORklHX0hXX1JB
TkRPTSBpcyBub3Qgc2V0CmRpZmYgLS1naXQgYS9hcmNoL2hleGFnb24vY29uZmlncy9jb21ldF9k
ZWZjb25maWcgYi9hcmNoL2hleGFnb24vY29uZmlncy9jb21ldF9kZWZjb25maWcKaW5kZXggZjE5
YWUyYWIwYWFhLi5jNWEyMTQ3MTZhMzggMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9jb25maWdz
L2NvbWV0X2RlZmNvbmZpZworKysgYi9hcmNoL2hleGFnb24vY29uZmlncy9jb21ldF9kZWZjb25m
aWcKQEAgLTM0LDcgKzM0LDYgQEAgQ09ORklHX05FVF9FVEhFUk5FVD15CiAjIENPTkZJR19TRVJJ
TyBpcyBub3Qgc2V0CiAjIENPTkZJR19DT05TT0xFX1RSQU5TTEFUSU9OUyBpcyBub3Qgc2V0CiBD
T05GSUdfTEVHQUNZX1BUWV9DT1VOVD02NAotIyBDT05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiAj
IENPTkZJR19IV19SQU5ET00gaXMgbm90IHNldAogQ09ORklHX1NQST15CiBDT05GSUdfU1BJX0RF
QlVHPXkKZGlmZiAtLWdpdCBhL2FyY2gvbTY4ay9jb25maWdzL2FtY29yZV9kZWZjb25maWcgYi9h
cmNoL202OGsvY29uZmlncy9hbWNvcmVfZGVmY29uZmlnCmluZGV4IDNhODRmMjRkNDFjOC4uNmQ5
ZWQyMTk4MTcwIDEwMDY0NAotLS0gYS9hcmNoL202OGsvY29uZmlncy9hbWNvcmVfZGVmY29uZmln
CisrKyBiL2FyY2gvbTY4ay9jb25maWdzL2FtY29yZV9kZWZjb25maWcKQEAgLTYwLDcgKzYwLDYg
QEAgQ09ORklHX0RNOTAwMD15CiAjIENPTkZJR19WVCBpcyBub3Qgc2V0CiAjIENPTkZJR19VTklY
OThfUFRZUyBpcyBub3Qgc2V0CiAjIENPTkZJR19ERVZNRU0gaXMgbm90IHNldAotIyBDT05GSUdf
REVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX01DRj15CiBDT05GSUdfU0VSSUFMX01D
Rl9CQVVEUkFURT0xMTUyMDAKIENPTkZJR19TRVJJQUxfTUNGX0NPTlNPTEU9eQpkaWZmIC0tZ2l0
IGEvYXJjaC9vcGVucmlzYy9jb25maWdzL29yMWtzaW1fZGVmY29uZmlnIGIvYXJjaC9vcGVucmlz
Yy9jb25maWdzL29yMWtzaW1fZGVmY29uZmlnCmluZGV4IDc1ZjJkYTMyNGQwZS4uNmUxZTAwNDA0
N2M3IDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL2NvbmZpZ3Mvb3Ixa3NpbV9kZWZjb25maWcK
KysrIGIvYXJjaC9vcGVucmlzYy9jb25maWdzL29yMWtzaW1fZGVmY29uZmlnCkBAIC00Myw3ICs0
Myw2IEBAIENPTkZJR19NSUNSRUxfUEhZPXkKICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKICMg
Q09ORklHX1ZUIGlzIG5vdCBzZXQKICMgQ09ORklHX0xFR0FDWV9QVFlTIGlzIG5vdCBzZXQKLSMg
Q09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF84MjUwPXkKIENPTkZJR19T
RVJJQUxfODI1MF9DT05TT0xFPXkKIENPTkZJR19TRVJJQUxfT0ZfUExBVEZPUk09eQpkaWZmIC0t
Z2l0IGEvYXJjaC9zaC9jb25maWdzL2Vkb3NrNzcwNV9kZWZjb25maWcgYi9hcmNoL3NoL2NvbmZp
Z3MvZWRvc2s3NzA1X2RlZmNvbmZpZwppbmRleCBlZjdjYzMxOTk3YjEuLjllZTM1MjY5YmVlMiAx
MDA2NDQKLS0tIGEvYXJjaC9zaC9jb25maWdzL2Vkb3NrNzcwNV9kZWZjb25maWcKKysrIGIvYXJj
aC9zaC9jb25maWdzL2Vkb3NrNzcwNV9kZWZjb25maWcKQEAgLTIzLDcgKzIzLDYgQEAgQ09ORklH
X1NIX1BDTEtfRlJFUT0zMTI1MDAwMAogIyBDT05GSUdfSU5QVVQgaXMgbm90IHNldAogIyBDT05G
SUdfU0VSSU8gaXMgbm90IHNldAogIyBDT05GSUdfVlQgaXMgbm90IHNldAotIyBDT05GSUdfREVW
S01FTSBpcyBub3Qgc2V0CiAjIENPTkZJR19VTklYOThfUFRZUyBpcyBub3Qgc2V0CiAjIENPTkZJ
R19MRUdBQ1lfUFRZUyBpcyBub3Qgc2V0CiAjIENPTkZJR19IV19SQU5ET00gaXMgbm90IHNldApk
aWZmIC0tZ2l0IGEvYXJjaC9zaC9jb25maWdzL3NlNzIwNl9kZWZjb25maWcgYi9hcmNoL3NoL2Nv
bmZpZ3Mvc2U3MjA2X2RlZmNvbmZpZwppbmRleCAzMTViMDRhOGRkMmYuLjYwMWQwNjIyNTBkMSAx
MDA2NDQKLS0tIGEvYXJjaC9zaC9jb25maWdzL3NlNzIwNl9kZWZjb25maWcKKysrIGIvYXJjaC9z
aC9jb25maWdzL3NlNzIwNl9kZWZjb25maWcKQEAgLTcxLDcgKzcxLDYgQEAgQ09ORklHX1NNQzkx
WD15CiAjIENPTkZJR19JTlBVVCBpcyBub3Qgc2V0CiAjIENPTkZJR19TRVJJTyBpcyBub3Qgc2V0
CiAjIENPTkZJR19WVCBpcyBub3Qgc2V0Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENP
TkZJR19TRVJJQUxfU0hfU0NJPXkKIENPTkZJR19TRVJJQUxfU0hfU0NJX05SX1VBUlRTPTQKIENP
TkZJR19TRVJJQUxfU0hfU0NJX0NPTlNPTEU9eQpkaWZmIC0tZ2l0IGEvYXJjaC9zaC9jb25maWdz
L3NoMjAwN19kZWZjb25maWcgYi9hcmNoL3NoL2NvbmZpZ3Mvc2gyMDA3X2RlZmNvbmZpZwppbmRl
eCA5OTk3NWRiNDYxZDguLjc5ZjAyZjFjMGRjOCAxMDA2NDQKLS0tIGEvYXJjaC9zaC9jb25maWdz
L3NoMjAwN19kZWZjb25maWcKKysrIGIvYXJjaC9zaC9jb25maWdzL3NoMjAwN19kZWZjb25maWcK
QEAgLTc1LDcgKzc1LDYgQEAgQ09ORklHX0lOUFVUX0ZGX01FTUxFU1M9eQogIyBDT05GSUdfSU5Q
VVRfTU9VU0UgaXMgbm90IHNldAogIyBDT05GSUdfU0VSSU8gaXMgbm90IHNldAogQ09ORklHX1ZU
X0hXX0NPTlNPTEVfQklORElORz15Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJ
R19TRVJJQUxfU0hfU0NJPXkKIENPTkZJR19TRVJJQUxfU0hfU0NJX0NPTlNPTEU9eQogIyBDT05G
SUdfTEVHQUNZX1BUWVMgaXMgbm90IHNldApkaWZmIC0tZ2l0IGEvYXJjaC9zaC9jb25maWdzL3No
NzcyNF9nZW5lcmljX2RlZmNvbmZpZyBiL2FyY2gvc2gvY29uZmlncy9zaDc3MjRfZ2VuZXJpY19k
ZWZjb25maWcKaW5kZXggMmM0NmMwMDA0NzgwLi5jYmM5Mzg5YTg5YTggMTAwNjQ0Ci0tLSBhL2Fy
Y2gvc2gvY29uZmlncy9zaDc3MjRfZ2VuZXJpY19kZWZjb25maWcKKysrIGIvYXJjaC9zaC9jb25m
aWdzL3NoNzcyNF9nZW5lcmljX2RlZmNvbmZpZwpAQCAtMTgsNyArMTgsNiBAQCBDT05GSUdfQ1BV
X0lETEU9eQogIyBDT05GSUdfSU5QVVQgaXMgbm90IHNldAogIyBDT05GSUdfU0VSSU8gaXMgbm90
IHNldAogIyBDT05GSUdfVlQgaXMgbm90IHNldAotIyBDT05GSUdfREVWS01FTSBpcyBub3Qgc2V0
CiBDT05GSUdfU0VSSUFMX1NIX1NDST15CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9OUl9VQVJUUz02
CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9DT05TT0xFPXkKZGlmZiAtLWdpdCBhL2FyY2gvc2gvY29u
Zmlncy9zaDc3NzBfZ2VuZXJpY19kZWZjb25maWcgYi9hcmNoL3NoL2NvbmZpZ3Mvc2g3NzcwX2dl
bmVyaWNfZGVmY29uZmlnCmluZGV4IDg4MTkzMTUzZTUxYi4uZWUyMzU3ZGViYTBmIDEwMDY0NAot
LS0gYS9hcmNoL3NoL2NvbmZpZ3Mvc2g3NzcwX2dlbmVyaWNfZGVmY29uZmlnCisrKyBiL2FyY2gv
c2gvY29uZmlncy9zaDc3NzBfZ2VuZXJpY19kZWZjb25maWcKQEAgLTIwLDcgKzIwLDYgQEAgQ09O
RklHX0NQVV9JRExFPXkKICMgQ09ORklHX0lOUFVUIGlzIG5vdCBzZXQKICMgQ09ORklHX1NFUklP
IGlzIG5vdCBzZXQKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMg
bm90IHNldAogQ09ORklHX1NFUklBTF9TSF9TQ0k9eQogQ09ORklHX1NFUklBTF9TSF9TQ0lfTlJf
VUFSVFM9NgogQ09ORklHX1NFUklBTF9TSF9TQ0lfQ09OU09MRT15CmRpZmYgLS1naXQgYS9hcmNo
L3NoL2NvbmZpZ3Mvc2g3Nzg1bGNyXzMyYml0X2RlZmNvbmZpZyBiL2FyY2gvc2gvY29uZmlncy9z
aDc3ODVsY3JfMzJiaXRfZGVmY29uZmlnCmluZGV4IDliODg1YzE0YzQwMC4uNWM3MjVjNzVmY2Vm
IDEwMDY0NAotLS0gYS9hcmNoL3NoL2NvbmZpZ3Mvc2g3Nzg1bGNyXzMyYml0X2RlZmNvbmZpZwor
KysgYi9hcmNoL3NoL2NvbmZpZ3Mvc2g3Nzg1bGNyXzMyYml0X2RlZmNvbmZpZwpAQCAtNjYsNyAr
NjYsNiBAQCBDT05GSUdfSU5QVVRfRkZfTUVNTEVTUz1tCiBDT05GSUdfSU5QVVRfRVZERVY9eQog
Q09ORklHX0lOUFVUX0VWQlVHPW0KIENPTkZJR19WVF9IV19DT05TT0xFX0JJTkRJTkc9eQotIyBD
T05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX1NIX1NDST15CiBDT05GSUdf
U0VSSUFMX1NIX1NDSV9OUl9VQVJUUz02CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9DT05TT0xFPXkK
ZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvY29uZmlncy9zcGFyYzY0X2RlZmNvbmZpZyBiL2FyY2gv
c3BhcmMvY29uZmlncy9zcGFyYzY0X2RlZmNvbmZpZwppbmRleCAxMmE0ZmIwYmQ1MmEuLjE4MDk5
MDk5NTgzZSAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9jb25maWdzL3NwYXJjNjRfZGVmY29uZmln
CisrKyBiL2FyY2gvc3BhcmMvY29uZmlncy9zcGFyYzY0X2RlZmNvbmZpZwpAQCAtMTIyLDcgKzEy
Miw2IEBAIENPTkZJR19JTlBVVF9TUEFSQ1NQS1I9eQogIyBDT05GSUdfU0VSSU9fU0VSUE9SVCBp
cyBub3Qgc2V0CiBDT05GSUdfU0VSSU9fUENJUFMyPW0KIENPTkZJR19TRVJJT19SQVc9bQotIyBD
T05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX1NVTlNVPXkKIENPTkZJR19T
RVJJQUxfU1VOU1VfQ09OU09MRT15CiBDT05GSUdfU0VSSUFMX1NVTlNBQj15CmRpZmYgLS1naXQg
YS9hcmNoL3h0ZW5zYS9jb25maWdzL3hpcF9rYzcwNV9kZWZjb25maWcgYi9hcmNoL3h0ZW5zYS9j
b25maWdzL3hpcF9rYzcwNV9kZWZjb25maWcKaW5kZXggNGYxZmY5NTMxZjZhLi4wNjIxNDhlMTcx
MzUgMTAwNjQ0Ci0tLSBhL2FyY2gveHRlbnNhL2NvbmZpZ3MveGlwX2tjNzA1X2RlZmNvbmZpZwor
KysgYi9hcmNoL3h0ZW5zYS9jb25maWdzL3hpcF9rYzcwNV9kZWZjb25maWcKQEAgLTcyLDcgKzcy
LDYgQEAgQ09ORklHX01BUlZFTExfUEhZPXkKICMgQ09ORklHX0lOUFVUX0tFWUJPQVJEIGlzIG5v
dCBzZXQKICMgQ09ORklHX0lOUFVUX01PVVNFIGlzIG5vdCBzZXQKICMgQ09ORklHX1NFUklPIGlz
IG5vdCBzZXQKLUNPTkZJR19ERVZLTUVNPXkKIENPTkZJR19TRVJJQUxfODI1MD15CiAjIENPTkZJ
R19TRVJJQUxfODI1MF9ERVBSRUNBVEVEX09QVElPTlMgaXMgbm90IHNldAogQ09ORklHX1NFUklB
TF84MjUwX0NPTlNPTEU9eQpkaWZmIC0tZ2l0IGEvZHJpdmVycy9jaGFyL0tjb25maWcgYi9kcml2
ZXJzL2NoYXIvS2NvbmZpZwppbmRleCBkMjI5YTJkMGMwMTcuLmIxNTFlMGZjZGViNSAxMDA2NDQK
LS0tIGEvZHJpdmVycy9jaGFyL0tjb25maWcKKysrIGIvZHJpdmVycy9jaGFyL0tjb25maWcKQEAg
LTMzNCwxNiArMzM0LDYgQEAgY29uZmlnIERFVk1FTQogCSAgbWVtb3J5LgogCSAgV2hlbiBpbiBk
b3VidCwgc2F5ICJZIi4KIAotY29uZmlnIERFVktNRU0KLQlib29sICIvZGV2L2ttZW0gdmlydHVh
bCBkZXZpY2Ugc3VwcG9ydCIKLQkjIE9uIGFybTY0LCBWTUFMTE9DX1NUQVJUIDwgUEFHRV9PRkZT
RVQsIHdoaWNoIGNvbmZ1c2VzIGttZW0gcmVhZC93cml0ZQotCWRlcGVuZHMgb24gIUFSTTY0Ci0J
aGVscAotCSAgU2F5IFkgaGVyZSBpZiB5b3Ugd2FudCB0byBzdXBwb3J0IHRoZSAvZGV2L2ttZW0g
ZGV2aWNlLiBUaGUKLQkgIC9kZXYva21lbSBkZXZpY2UgaXMgcmFyZWx5IHVzZWQsIGJ1dCBjYW4g
YmUgdXNlZCBmb3IgY2VydGFpbgotCSAga2luZCBvZiBrZXJuZWwgZGVidWdnaW5nIG9wZXJhdGlv
bnMuCi0JICBXaGVuIGluIGRvdWJ0LCBzYXkgIk4iLgotCiBjb25maWcgTlZSQU0KIAl0cmlzdGF0
ZSAiL2Rldi9udnJhbSBzdXBwb3J0IgogCWRlcGVuZHMgb24gWDg2IHx8IEhBVkVfQVJDSF9OVlJB
TV9PUFMKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2hhci9tZW0uYyBiL2RyaXZlcnMvY2hhci9tZW0u
YwppbmRleCA4NjliOWY1ZThlMDMuLjE1ZGM1NGZhMWQ0NyAxMDA2NDQKLS0tIGEvZHJpdmVycy9j
aGFyL21lbS5jCisrKyBiL2RyaXZlcnMvY2hhci9tZW0uYwpAQCAtNDAzLDIyMSArNDAzLDYgQEAg
c3RhdGljIGludCBtbWFwX21lbShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IHZtX2FyZWFfc3Ry
dWN0ICp2bWEpCiAJcmV0dXJuIDA7CiB9CiAKLXN0YXRpYyBpbnQgbW1hcF9rbWVtKHN0cnVjdCBm
aWxlICpmaWxlLCBzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSkKLXsKLQl1bnNpZ25lZCBsb25n
IHBmbjsKLQotCS8qIFR1cm4gYSBrZXJuZWwtdmlydHVhbCBhZGRyZXNzIGludG8gYSBwaHlzaWNh
bCBwYWdlIGZyYW1lICovCi0JcGZuID0gX19wYSgodTY0KXZtYS0+dm1fcGdvZmYgPDwgUEFHRV9T
SElGVCkgPj4gUEFHRV9TSElGVDsKLQotCS8qCi0JICogUkVELVBFTjogb24gc29tZSBhcmNoaXRl
Y3R1cmVzIHRoZXJlIGlzIG1vcmUgbWFwcGVkIG1lbW9yeSB0aGFuCi0JICogYXZhaWxhYmxlIGlu
IG1lbV9tYXAgd2hpY2ggcGZuX3ZhbGlkIGNoZWNrcyBmb3IuIFBlcmhhcHMgc2hvdWxkIGFkZCBh
Ci0JICogbmV3IG1hY3JvIGhlcmUuCi0JICoKLQkgKiBSRUQtUEVOOiB2bWFsbG9jIGlzIG5vdCBz
dXBwb3J0ZWQgcmlnaHQgbm93LgotCSAqLwotCWlmICghcGZuX3ZhbGlkKHBmbikpCi0JCXJldHVy
biAtRUlPOwotCi0Jdm1hLT52bV9wZ29mZiA9IHBmbjsKLQlyZXR1cm4gbW1hcF9tZW0oZmlsZSwg
dm1hKTsKLX0KLQotLyoKLSAqIFRoaXMgZnVuY3Rpb24gcmVhZHMgdGhlICp2aXJ0dWFsKiBtZW1v
cnkgYXMgc2VlbiBieSB0aGUga2VybmVsLgotICovCi1zdGF0aWMgc3NpemVfdCByZWFkX2ttZW0o
c3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2VyICpidWYsCi0JCQkgc2l6ZV90IGNvdW50LCBs
b2ZmX3QgKnBwb3MpCi17Ci0JdW5zaWduZWQgbG9uZyBwID0gKnBwb3M7Ci0Jc3NpemVfdCBsb3df
Y291bnQsIHJlYWQsIHN6OwotCWNoYXIgKmtidWY7IC8qIGstYWRkciBiZWNhdXNlIHZyZWFkKCkg
dGFrZXMgdm1saXN0X2xvY2sgcndsb2NrICovCi0JaW50IGVyciA9IDA7Ci0KLQlyZWFkID0gMDsK
LQlpZiAocCA8ICh1bnNpZ25lZCBsb25nKSBoaWdoX21lbW9yeSkgewotCQlsb3dfY291bnQgPSBj
b3VudDsKLQkJaWYgKGNvdW50ID4gKHVuc2lnbmVkIGxvbmcpaGlnaF9tZW1vcnkgLSBwKQotCQkJ
bG93X2NvdW50ID0gKHVuc2lnbmVkIGxvbmcpaGlnaF9tZW1vcnkgLSBwOwotCi0jaWZkZWYgX19B
UkNIX0hBU19OT19QQUdFX1pFUk9fTUFQUEVECi0JCS8qIHdlIGRvbid0IGhhdmUgcGFnZSAwIG1h
cHBlZCBvbiBzcGFyYyBhbmQgbTY4ay4uICovCi0JCWlmIChwIDwgUEFHRV9TSVpFICYmIGxvd19j
b3VudCA+IDApIHsKLQkJCXN6ID0gc2l6ZV9pbnNpZGVfcGFnZShwLCBsb3dfY291bnQpOwotCQkJ
aWYgKGNsZWFyX3VzZXIoYnVmLCBzeikpCi0JCQkJcmV0dXJuIC1FRkFVTFQ7Ci0JCQlidWYgKz0g
c3o7Ci0JCQlwICs9IHN6OwotCQkJcmVhZCArPSBzejsKLQkJCWxvd19jb3VudCAtPSBzejsKLQkJ
CWNvdW50IC09IHN6OwotCQl9Ci0jZW5kaWYKLQkJd2hpbGUgKGxvd19jb3VudCA+IDApIHsKLQkJ
CXN6ID0gc2l6ZV9pbnNpZGVfcGFnZShwLCBsb3dfY291bnQpOwotCi0JCQkvKgotCQkJICogT24g
aWE2NCBpZiBhIHBhZ2UgaGFzIGJlZW4gbWFwcGVkIHNvbWV3aGVyZSBhcwotCQkJICogdW5jYWNo
ZWQsIHRoZW4gaXQgbXVzdCBhbHNvIGJlIGFjY2Vzc2VkIHVuY2FjaGVkCi0JCQkgKiBieSB0aGUg
a2VybmVsIG9yIGRhdGEgY29ycnVwdGlvbiBtYXkgb2NjdXIKLQkJCSAqLwotCQkJa2J1ZiA9IHhs
YXRlX2Rldl9rbWVtX3B0cigodm9pZCAqKXApOwotCQkJaWYgKCF2aXJ0X2FkZHJfdmFsaWQoa2J1
ZikpCi0JCQkJcmV0dXJuIC1FTlhJTzsKLQotCQkJaWYgKGNvcHlfdG9fdXNlcihidWYsIGtidWYs
IHN6KSkKLQkJCQlyZXR1cm4gLUVGQVVMVDsKLQkJCWJ1ZiArPSBzejsKLQkJCXAgKz0gc3o7Ci0J
CQlyZWFkICs9IHN6OwotCQkJbG93X2NvdW50IC09IHN6OwotCQkJY291bnQgLT0gc3o7Ci0JCQlp
ZiAoc2hvdWxkX3N0b3BfaXRlcmF0aW9uKCkpIHsKLQkJCQljb3VudCA9IDA7Ci0JCQkJYnJlYWs7
Ci0JCQl9Ci0JCX0KLQl9Ci0KLQlpZiAoY291bnQgPiAwKSB7Ci0JCWtidWYgPSAoY2hhciAqKV9f
Z2V0X2ZyZWVfcGFnZShHRlBfS0VSTkVMKTsKLQkJaWYgKCFrYnVmKQotCQkJcmV0dXJuIC1FTk9N
RU07Ci0JCXdoaWxlIChjb3VudCA+IDApIHsKLQkJCXN6ID0gc2l6ZV9pbnNpZGVfcGFnZShwLCBj
b3VudCk7Ci0JCQlpZiAoIWlzX3ZtYWxsb2Nfb3JfbW9kdWxlX2FkZHIoKHZvaWQgKilwKSkgewot
CQkJCWVyciA9IC1FTlhJTzsKLQkJCQlicmVhazsKLQkJCX0KLQkJCXN6ID0gdnJlYWQoa2J1Ziwg
KGNoYXIgKilwLCBzeik7Ci0JCQlpZiAoIXN6KQotCQkJCWJyZWFrOwotCQkJaWYgKGNvcHlfdG9f
dXNlcihidWYsIGtidWYsIHN6KSkgewotCQkJCWVyciA9IC1FRkFVTFQ7Ci0JCQkJYnJlYWs7Ci0J
CQl9Ci0JCQljb3VudCAtPSBzejsKLQkJCWJ1ZiArPSBzejsKLQkJCXJlYWQgKz0gc3o7Ci0JCQlw
ICs9IHN6OwotCQkJaWYgKHNob3VsZF9zdG9wX2l0ZXJhdGlvbigpKQotCQkJCWJyZWFrOwotCQl9
Ci0JCWZyZWVfcGFnZSgodW5zaWduZWQgbG9uZylrYnVmKTsKLQl9Ci0JKnBwb3MgPSBwOwotCXJl
dHVybiByZWFkID8gcmVhZCA6IGVycjsKLX0KLQotCi1zdGF0aWMgc3NpemVfdCBkb193cml0ZV9r
bWVtKHVuc2lnbmVkIGxvbmcgcCwgY29uc3QgY2hhciBfX3VzZXIgKmJ1ZiwKLQkJCQlzaXplX3Qg
Y291bnQsIGxvZmZfdCAqcHBvcykKLXsKLQlzc2l6ZV90IHdyaXR0ZW4sIHN6OwotCXVuc2lnbmVk
IGxvbmcgY29waWVkOwotCi0Jd3JpdHRlbiA9IDA7Ci0jaWZkZWYgX19BUkNIX0hBU19OT19QQUdF
X1pFUk9fTUFQUEVECi0JLyogd2UgZG9uJ3QgaGF2ZSBwYWdlIDAgbWFwcGVkIG9uIHNwYXJjIGFu
ZCBtNjhrLi4gKi8KLQlpZiAocCA8IFBBR0VfU0laRSkgewotCQlzeiA9IHNpemVfaW5zaWRlX3Bh
Z2UocCwgY291bnQpOwotCQkvKiBIbW0uIERvIHNvbWV0aGluZz8gKi8KLQkJYnVmICs9IHN6Owot
CQlwICs9IHN6OwotCQljb3VudCAtPSBzejsKLQkJd3JpdHRlbiArPSBzejsKLQl9Ci0jZW5kaWYK
LQotCXdoaWxlIChjb3VudCA+IDApIHsKLQkJdm9pZCAqcHRyOwotCi0JCXN6ID0gc2l6ZV9pbnNp
ZGVfcGFnZShwLCBjb3VudCk7Ci0KLQkJLyoKLQkJICogT24gaWE2NCBpZiBhIHBhZ2UgaGFzIGJl
ZW4gbWFwcGVkIHNvbWV3aGVyZSBhcyB1bmNhY2hlZCwgdGhlbgotCQkgKiBpdCBtdXN0IGFsc28g
YmUgYWNjZXNzZWQgdW5jYWNoZWQgYnkgdGhlIGtlcm5lbCBvciBkYXRhCi0JCSAqIGNvcnJ1cHRp
b24gbWF5IG9jY3VyLgotCQkgKi8KLQkJcHRyID0geGxhdGVfZGV2X2ttZW1fcHRyKCh2b2lkICop
cCk7Ci0JCWlmICghdmlydF9hZGRyX3ZhbGlkKHB0cikpCi0JCQlyZXR1cm4gLUVOWElPOwotCi0J
CWNvcGllZCA9IGNvcHlfZnJvbV91c2VyKHB0ciwgYnVmLCBzeik7Ci0JCWlmIChjb3BpZWQpIHsK
LQkJCXdyaXR0ZW4gKz0gc3ogLSBjb3BpZWQ7Ci0JCQlpZiAod3JpdHRlbikKLQkJCQlicmVhazsK
LQkJCXJldHVybiAtRUZBVUxUOwotCQl9Ci0JCWJ1ZiArPSBzejsKLQkJcCArPSBzejsKLQkJY291
bnQgLT0gc3o7Ci0JCXdyaXR0ZW4gKz0gc3o7Ci0JCWlmIChzaG91bGRfc3RvcF9pdGVyYXRpb24o
KSkKLQkJCWJyZWFrOwotCX0KLQotCSpwcG9zICs9IHdyaXR0ZW47Ci0JcmV0dXJuIHdyaXR0ZW47
Ci19Ci0KLS8qCi0gKiBUaGlzIGZ1bmN0aW9uIHdyaXRlcyB0byB0aGUgKnZpcnR1YWwqIG1lbW9y
eSBhcyBzZWVuIGJ5IHRoZSBrZXJuZWwuCi0gKi8KLXN0YXRpYyBzc2l6ZV90IHdyaXRlX2ttZW0o
c3RydWN0IGZpbGUgKmZpbGUsIGNvbnN0IGNoYXIgX191c2VyICpidWYsCi0JCQkgIHNpemVfdCBj
b3VudCwgbG9mZl90ICpwcG9zKQotewotCXVuc2lnbmVkIGxvbmcgcCA9ICpwcG9zOwotCXNzaXpl
X3Qgd3JvdGUgPSAwOwotCXNzaXplX3QgdmlydHIgPSAwOwotCWNoYXIgKmtidWY7IC8qIGstYWRk
ciBiZWNhdXNlIHZ3cml0ZSgpIHRha2VzIHZtbGlzdF9sb2NrIHJ3bG9jayAqLwotCWludCBlcnIg
PSAwOwotCi0JaWYgKHAgPCAodW5zaWduZWQgbG9uZykgaGlnaF9tZW1vcnkpIHsKLQkJdW5zaWdu
ZWQgbG9uZyB0b193cml0ZSA9IG1pbl90KHVuc2lnbmVkIGxvbmcsIGNvdW50LAotCQkJCQkgICAg
ICAgKHVuc2lnbmVkIGxvbmcpaGlnaF9tZW1vcnkgLSBwKTsKLQkJd3JvdGUgPSBkb193cml0ZV9r
bWVtKHAsIGJ1ZiwgdG9fd3JpdGUsIHBwb3MpOwotCQlpZiAod3JvdGUgIT0gdG9fd3JpdGUpCi0J
CQlyZXR1cm4gd3JvdGU7Ci0JCXAgKz0gd3JvdGU7Ci0JCWJ1ZiArPSB3cm90ZTsKLQkJY291bnQg
LT0gd3JvdGU7Ci0JfQotCi0JaWYgKGNvdW50ID4gMCkgewotCQlrYnVmID0gKGNoYXIgKilfX2dl
dF9mcmVlX3BhZ2UoR0ZQX0tFUk5FTCk7Ci0JCWlmICgha2J1ZikKLQkJCXJldHVybiB3cm90ZSA/
IHdyb3RlIDogLUVOT01FTTsKLQkJd2hpbGUgKGNvdW50ID4gMCkgewotCQkJdW5zaWduZWQgbG9u
ZyBzeiA9IHNpemVfaW5zaWRlX3BhZ2UocCwgY291bnQpOwotCQkJdW5zaWduZWQgbG9uZyBuOwot
Ci0JCQlpZiAoIWlzX3ZtYWxsb2Nfb3JfbW9kdWxlX2FkZHIoKHZvaWQgKilwKSkgewotCQkJCWVy
ciA9IC1FTlhJTzsKLQkJCQlicmVhazsKLQkJCX0KLQkJCW4gPSBjb3B5X2Zyb21fdXNlcihrYnVm
LCBidWYsIHN6KTsKLQkJCWlmIChuKSB7Ci0JCQkJZXJyID0gLUVGQVVMVDsKLQkJCQlicmVhazsK
LQkJCX0KLQkJCXZ3cml0ZShrYnVmLCAoY2hhciAqKXAsIHN6KTsKLQkJCWNvdW50IC09IHN6Owot
CQkJYnVmICs9IHN6OwotCQkJdmlydHIgKz0gc3o7Ci0JCQlwICs9IHN6OwotCQkJaWYgKHNob3Vs
ZF9zdG9wX2l0ZXJhdGlvbigpKQotCQkJCWJyZWFrOwotCQl9Ci0JCWZyZWVfcGFnZSgodW5zaWdu
ZWQgbG9uZylrYnVmKTsKLQl9Ci0KLQkqcHBvcyA9IHA7Ci0JcmV0dXJuIHZpcnRyICsgd3JvdGUg
PyA6IGVycjsKLX0KLQogc3RhdGljIHNzaXplX3QgcmVhZF9wb3J0KHN0cnVjdCBmaWxlICpmaWxl
LCBjaGFyIF9fdXNlciAqYnVmLAogCQkJIHNpemVfdCBjb3VudCwgbG9mZl90ICpwcG9zKQogewpA
QCAtODU1LDcgKzY0MCw2IEBAIHN0YXRpYyBpbnQgb3Blbl9wb3J0KHN0cnVjdCBpbm9kZSAqaW5v
ZGUsIHN0cnVjdCBmaWxlICpmaWxwKQogI2RlZmluZSB3cml0ZV96ZXJvCXdyaXRlX251bGwKICNk
ZWZpbmUgd3JpdGVfaXRlcl96ZXJvCXdyaXRlX2l0ZXJfbnVsbAogI2RlZmluZSBvcGVuX21lbQlv
cGVuX3BvcnQKLSNkZWZpbmUgb3Blbl9rbWVtCW9wZW5fbWVtCiAKIHN0YXRpYyBjb25zdCBzdHJ1
Y3QgZmlsZV9vcGVyYXRpb25zIF9fbWF5YmVfdW51c2VkIG1lbV9mb3BzID0gewogCS5sbHNlZWsJ
CT0gbWVtb3J5X2xzZWVrLApAQCAtODY5LDE4ICs2NTMsNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0
IGZpbGVfb3BlcmF0aW9ucyBfX21heWJlX3VudXNlZCBtZW1fZm9wcyA9IHsKICNlbmRpZgogfTsK
IAotc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgX19tYXliZV91bnVzZWQga21l
bV9mb3BzID0gewotCS5sbHNlZWsJCT0gbWVtb3J5X2xzZWVrLAotCS5yZWFkCQk9IHJlYWRfa21l
bSwKLQkud3JpdGUJCT0gd3JpdGVfa21lbSwKLQkubW1hcAkJPSBtbWFwX2ttZW0sCi0JLm9wZW4J
CT0gb3Blbl9rbWVtLAotI2lmbmRlZiBDT05GSUdfTU1VCi0JLmdldF91bm1hcHBlZF9hcmVhID0g
Z2V0X3VubWFwcGVkX2FyZWFfbWVtLAotCS5tbWFwX2NhcGFiaWxpdGllcyA9IG1lbW9yeV9tbWFw
X2NhcGFiaWxpdGllcywKLSNlbmRpZgotfTsKLQogc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29w
ZXJhdGlvbnMgbnVsbF9mb3BzID0gewogCS5sbHNlZWsJCT0gbnVsbF9sc2VlaywKIAkucmVhZAkJ
PSByZWFkX251bGwsCkBAIC05MjQsOSArNjk2LDYgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBtZW1k
ZXYgewogfSBkZXZsaXN0W10gPSB7CiAjaWZkZWYgQ09ORklHX0RFVk1FTQogCSBbREVWTUVNX01J
Tk9SXSA9IHsgIm1lbSIsIDAsICZtZW1fZm9wcywgRk1PREVfVU5TSUdORURfT0ZGU0VUIH0sCi0j
ZW5kaWYKLSNpZmRlZiBDT05GSUdfREVWS01FTQotCSBbMl0gPSB7ICJrbWVtIiwgMCwgJmttZW1f
Zm9wcywgRk1PREVfVU5TSUdORURfT0ZGU0VUIH0sCiAjZW5kaWYKIAkgWzNdID0geyAibnVsbCIs
IDA2NjYsICZudWxsX2ZvcHMsIDAgfSwKICNpZmRlZiBDT05GSUdfREVWUE9SVApkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC9mcy5oIGIvaW5jbHVkZS9saW51eC9mcy5oCmluZGV4IGVjOGYzZGRm
NGE2YS4uYTcyNzE4NmVmNGNkIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2ZzLmgKKysrIGIv
aW5jbHVkZS9saW51eC9mcy5oCkBAIC0xNDQsNyArMTQ0LDcgQEAgdHlwZWRlZiBpbnQgKGRpb19p
b2RvbmVfdCkoc3RydWN0IGtpb2NiICppb2NiLCBsb2ZmX3Qgb2Zmc2V0LAogLyogRXhwZWN0IHJh
bmRvbSBhY2Nlc3MgcGF0dGVybiAqLwogI2RlZmluZSBGTU9ERV9SQU5ET00JCSgoX19mb3JjZSBm
bW9kZV90KTB4MTAwMCkKIAotLyogRmlsZSBpcyBodWdlIChlZy4gL2Rldi9rbWVtKTogdHJlYXQg
bG9mZl90IGFzIHVuc2lnbmVkICovCisvKiBGaWxlIGlzIGh1Z2UgKGVnLiAvZGV2L21lbSk6IHRy
ZWF0IGxvZmZfdCBhcyB1bnNpZ25lZCAqLwogI2RlZmluZSBGTU9ERV9VTlNJR05FRF9PRkZTRVQJ
KChfX2ZvcmNlIGZtb2RlX3QpMHgyMDAwKQogCiAvKiBGaWxlIGlzIG9wZW5lZCB3aXRoIE9fUEFU
SDsgYWxtb3N0IG5vdGhpbmcgY2FuIGJlIGRvbmUgd2l0aCBpdCAqLwpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9saW51eC92bWFsbG9jLmggYi9pbmNsdWRlL2xpbnV4L3ZtYWxsb2MuaAppbmRleCBkZjky
MjExY2Y3NzEuLjM5MGFmNjgwZTkxNiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC92bWFsbG9j
LmgKKysrIGIvaW5jbHVkZS9saW51eC92bWFsbG9jLmgKQEAgLTE5OCw3ICsxOTgsNyBAQCBzdGF0
aWMgaW5saW5lIHZvaWQgc2V0X3ZtX2ZsdXNoX3Jlc2V0X3Blcm1zKHZvaWQgKmFkZHIpCiB9CiAj
ZW5kaWYKIAotLyogZm9yIC9kZXYva21lbSAqLworLyogZm9yIC9wcm9jL2tjb3JlICovCiBleHRl
cm4gbG9uZyB2cmVhZChjaGFyICpidWYsIGNoYXIgKmFkZHIsIHVuc2lnbmVkIGxvbmcgY291bnQp
OwogZXh0ZXJuIGxvbmcgdndyaXRlKGNoYXIgKmJ1ZiwgY2hhciAqYWRkciwgdW5zaWduZWQgbG9u
ZyBjb3VudCk7CiAKZGlmZiAtLWdpdCBhL2tlcm5lbC9jb25maWdzL2FuZHJvaWQtYmFzZS5jb25m
aWcgYi9rZXJuZWwvY29uZmlncy9hbmRyb2lkLWJhc2UuY29uZmlnCmluZGV4IGQzZmQ0MjhmNGI5
Mi4uZWI3MDFiMmFjNzJmIDEwMDY0NAotLS0gYS9rZXJuZWwvY29uZmlncy9hbmRyb2lkLWJhc2Uu
Y29uZmlnCisrKyBiL2tlcm5lbC9jb25maWdzL2FuZHJvaWQtYmFzZS5jb25maWcKQEAgLTEsNSAr
MSw0IEBACiAjICBLRUVQIEFMUEhBQkVUSUNBTExZIFNPUlRFRAotIyBDT05GSUdfREVWS01FTSBp
cyBub3Qgc2V0CiAjIENPTkZJR19ERVZNRU0gaXMgbm90IHNldAogIyBDT05GSUdfRkhBTkRMRSBp
cyBub3Qgc2V0CiAjIENPTkZJR19JTkVUX0xSTyBpcyBub3Qgc2V0CmRpZmYgLS1naXQgYS9tbS9r
c20uYyBiL21tL2tzbS5jCmluZGV4IDk2OTRlZTJjNzFkZS4uOTAxY2FiODkyOTlkIDEwMDY0NAot
LS0gYS9tbS9rc20uYworKysgYi9tbS9rc20uYwpAQCAtNDYxLDcgKzQ2MSw3IEBAIHN0YXRpYyBp
bmxpbmUgYm9vbCBrc21fdGVzdF9leGl0KHN0cnVjdCBtbV9zdHJ1Y3QgKm1tKQogICogYnV0IHRh
a2luZyBncmVhdCBjYXJlIG9ubHkgdG8gdG91Y2ggYSBrc20gcGFnZSwgaW4gYSBWTV9NRVJHRUFC
TEUgdm1hLAogICogaW4gY2FzZSB0aGUgYXBwbGljYXRpb24gaGFzIHVubWFwcGVkIGFuZCByZW1h
cHBlZCBtbSxhZGRyIG1lYW53aGlsZS4KICAqIENvdWxkIGEga3NtIHBhZ2UgYXBwZWFyIGFueXdo
ZXJlIGVsc2U/ICBBY3R1YWxseSB5ZXMsIGluIGEgVk1fUEZOTUFQCi0gKiBtbWFwIG9mIC9kZXYv
bWVtIG9yIC9kZXYva21lbSwgd2hlcmUgd2Ugd291bGQgbm90IHdhbnQgdG8gdG91Y2ggaXQuCisg
KiBtbWFwIG9mIC9kZXYvbWVtLCB3aGVyZSB3ZSB3b3VsZCBub3Qgd2FudCB0byB0b3VjaCBpdC4K
ICAqCiAgKiBGQVVMVF9GTEFHL0ZPTExfUkVNT1RFIGFyZSBiZWNhdXNlIHdlIGRvIHRoaXMgb3V0
c2lkZSB0aGUgY29udGV4dAogICogb2YgdGhlIHByb2Nlc3MgdGhhdCBvd25zICd2bWEnLiAgV2Ug
YWxzbyBkbyBub3Qgd2FudCB0byBlbmZvcmNlCmRpZmYgLS1naXQgYS9tbS92bWFsbG9jLmMgYi9t
bS92bWFsbG9jLmMKaW5kZXggNGY1ZjhjOTA3ODk3Li5jY2I0MDViODI1ODEgMTAwNjQ0Ci0tLSBh
L21tL3ZtYWxsb2MuYworKysgYi9tbS92bWFsbG9jLmMKQEAgLTI4NzUsNyArMjg3NSw3IEBAIHN0
YXRpYyBpbnQgYWxpZ25lZF92d3JpdGUoY2hhciAqYnVmLCBjaGFyICphZGRyLCB1bnNpZ25lZCBs
b25nIGNvdW50KQogICogTm90ZTogSW4gdXN1YWwgb3BzLCB2cmVhZCgpIGlzIG5ldmVyIG5lY2Vz
c2FyeSBiZWNhdXNlIHRoZSBjYWxsZXIKICAqIHNob3VsZCBrbm93IHZtYWxsb2MoKSBhcmVhIGlz
IHZhbGlkIGFuZCBjYW4gdXNlIG1lbWNweSgpLgogICogVGhpcyBpcyBmb3Igcm91dGluZXMgd2hp
Y2ggaGF2ZSB0byBhY2Nlc3Mgdm1hbGxvYyBhcmVhIHdpdGhvdXQKLSAqIGFueSBpbmZvcm1hdGlv
biwgYXMgL2Rldi9rbWVtLgorICogYW55IGluZm9ybWF0aW9uLCBhcyAvcHJvYy9rY29yZS4KICAq
CiAgKiBSZXR1cm46IG51bWJlciBvZiBieXRlcyBmb3Igd2hpY2ggYWRkciBhbmQgYnVmIHNob3Vs
ZCBiZSBpbmNyZWFzZWQKICAqIChzYW1lIG51bWJlciBhcyBAY291bnQpIG9yICUwIGlmIFthZGRy
Li4uYWRkcitjb3VudCkgZG9lc24ndAotLSAKMi4yOS4yCgpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NA
bGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5m
by9vcGVucmlzYwo=
