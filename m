Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 3E1CE17D611
	for <lists+openrisc@lfdr.de>; Sun,  8 Mar 2020 21:11:41 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 04EB620A28;
	Sun,  8 Mar 2020 21:11:40 +0100 (CET)
Received: from mx0a-001b2d01.pphosted.com (mx0b-001b2d01.pphosted.com
 [148.163.158.5])
 by mail.librecores.org (Postfix) with ESMTPS id 46742209F3
 for <openrisc@lists.librecores.org>; Sun,  8 Mar 2020 11:55:04 +0100 (CET)
Received: from pps.filterd (m0098414.ppops.net [127.0.0.1])
 by mx0b-001b2d01.pphosted.com (8.16.0.42/8.16.0.42) with SMTP id
 028Ane8F064412
 for <openrisc@lists.librecores.org>; Sun, 8 Mar 2020 06:55:02 -0400
Received: from e06smtp01.uk.ibm.com (e06smtp01.uk.ibm.com [195.75.94.97])
 by mx0b-001b2d01.pphosted.com with ESMTP id 2ym8mq1xad-1
 (version=TLSv1.2 cipher=AES256-GCM-SHA384 bits=256 verify=NOT)
 for <openrisc@lists.librecores.org>; Sun, 08 Mar 2020 06:55:02 -0400
Received: from localhost
 by e06smtp01.uk.ibm.com with IBM ESMTP SMTP Gateway: Authorized Use Only!
 Violators will be prosecuted
 for <openrisc@lists.librecores.org> from <rppt@linux.ibm.com>;
 Sun, 8 Mar 2020 10:54:59 -0000
Received: from b06cxnps4076.portsmouth.uk.ibm.com (9.149.109.198)
 by e06smtp01.uk.ibm.com (192.168.101.131) with IBM ESMTP SMTP Gateway:
 Authorized Use Only! Violators will be prosecuted; 
 (version=TLSv1/SSLv3 cipher=AES256-GCM-SHA384 bits=256/256)
 Sun, 8 Mar 2020 10:54:50 -0000
Received: from b06wcsmtp001.portsmouth.uk.ibm.com
 (b06wcsmtp001.portsmouth.uk.ibm.com [9.149.105.160])
 by b06cxnps4076.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id
 028AsnRP44826770
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
 Sun, 8 Mar 2020 10:54:49 GMT
Received: from b06wcsmtp001.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id 349C4A4054;
 Sun,  8 Mar 2020 10:54:49 +0000 (GMT)
Received: from b06wcsmtp001.portsmouth.uk.ibm.com (unknown [127.0.0.1])
 by IMSVA (Postfix) with ESMTP id D0A2BA4060;
 Sun,  8 Mar 2020 10:54:45 +0000 (GMT)
Received: from linux.ibm.com (unknown [9.148.205.7])
 by b06wcsmtp001.portsmouth.uk.ibm.com (Postfix) with ESMTPS;
 Sun,  8 Mar 2020 10:54:45 +0000 (GMT)
Date: Sun, 8 Mar 2020 12:54:44 +0200
From: Mike Rapoport <rppt@linux.ibm.com>
To: Andrew Morton <akpm@linux-foundation.org>
References: <20200227084608.18223-1-rppt@kernel.org>
 <20200227084608.18223-8-rppt@kernel.org>
 <20200306200016.6f3865ada0daa68b645fe5d7@linux-foundation.org>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20200306200016.6f3865ada0daa68b645fe5d7@linux-foundation.org>
X-TM-AS-GCONF: 00
x-cbid: 20030810-4275-0000-0000-000003A97260
X-IBM-AV-DETECTION: SAVI=unused REMOTE=unused XFE=unused
x-cbparentid: 20030810-4276-0000-0000-000038BE86D2
Message-Id: <20200308105444.GE13982@linux.ibm.com>
X-Proofpoint-Virus-Version: vendor=fsecure engine=2.50.10434:6.0.138, 18.0.572
 definitions=2020-03-08_03:2020-03-06,
 2020-03-08 signatures=0
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0
 spamscore=0
 priorityscore=1501 bulkscore=0 adultscore=0 mlxlogscore=999 mlxscore=0
 suspectscore=5 malwarescore=0 phishscore=0 lowpriorityscore=0
 clxscore=1011 impostorscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.12.0-2001150001 definitions=main-2003080084
X-Mailman-Approved-At: Sun, 08 Mar 2020 21:11:35 +0100
Subject: Re: [OpenRISC] [PATCH v3 07/14] powerpc/32: drop get_pteptr()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 Geert Uytterhoeven <geert+renesas@glider.be>, linux-sh@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>, linux-mm@kvack.org,
 Paul Mackerras <paulus@samba.org>, linux-hexagon@vger.kernel.org,
 Will Deacon <will@kernel.org>, kvmarm@lists.cs.columbia.edu,
 Jonas Bonn <jonas@southpole.se>, linux-arch@vger.kernel.org,
 Brian Cain <bcain@codeaurora.org>, Marc Zyngier <maz@kernel.org>,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Catalin Marinas <catalin.marinas@arm.com>,
 Julien Thierry <julien.thierry.kdev@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp, Fenghua Yu <fenghua.yu@intel.com>,
 Arnd Bergmann <arnd@arndb.de>, Suzuki K Poulose <suzuki.poulose@arm.com>,
 kvm-ppc@vger.kernel.org, openrisc@lists.librecores.org,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Christophe Leroy <christophe.leroy@c-s.fr>, Tony Luck <tony.luck@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, linux-kernel@vger.kernel.org,
 James Morse <james.morse@arm.com>, Michael Ellerman <mpe@ellerman.id.au>,
 nios2-dev@lists.rocketboards.org, linuxppc-dev@lists.ozlabs.org,
 Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gRnJpLCBNYXIgMDYsIDIwMjAgYXQgMDg6MDA6MTZQTSAtMDgwMCwgQW5kcmV3IE1vcnRvbiB3
cm90ZToKPiBPbiBUaHUsIDI3IEZlYiAyMDIwIDEwOjQ2OjAxICswMjAwIE1pa2UgUmFwb3BvcnQg
PHJwcHRAa2VybmVsLm9yZz4gd3JvdGU6Cj4gCj4gPiBDb21taXQgOGQzMGMxNGNhYjMwICgicG93
ZXJwYy9tbTogUmV3b3JrIEkkL0QkIGNvaGVyZW5jeSAodjMpIikgYW5kCj4gPiBjb21taXQgOTBh
YzE5YThiMjFiICgiW1BPV0VSUENdIEFib2xpc2ggaW9wYSgpLCBtbV9wdG92KCksCj4gPiBpb19i
bG9ja19tYXBwaW5nKCkgZnJvbSBhcmNoL3Bvd2VycGMiKSByZW1vdmVkIHRoZSB1c2Ugb2YgZ2V0
X3B0ZXB0cigpCj4gPiBvdXRzaWRlIG9mIG1tL3BndGFibGVfMzIuYwo+ID4gCj4gPiBJbiBtbS9w
Z3RhYmxlXzMyLmMsIHRoZSBvbmx5IHVzZXIgb2YgZ2V0X3B0ZXB0cigpIGlzIF9fY2hhbmdlX3Bh
Z2VfYXR0cigpCj4gPiB3aGljaCBvcGVyYXRlcyBvbiBrZXJuZWwgY29udGV4dCBhbmQgb24gbG93
bWVtIHBhZ2VzIG9ubHkuCj4gPiAKPiA+IE1vdmUgcGFnZSB0YWJsZSB0cmF2ZXJzYWwgdG8gX19j
aGFuZ2VfcGFnZV9hdHRyKCkgYW5kIGRyb3AgZ2V0X3B0ZXB0cigpLgo+IAo+IFBlb3BsZSBoYXZl
IGJlZW4gY2hhbmdpbmcgdGhpbmdzIGluIGxpbnV4LW5leHQgYW5kIHRoZSBwb3dlcnBjIHBhdGNo
ZXMKPiBhcmUgaHVydGluZy4KPiAKPiBJJ2xsIGRpc2FibGUgdGhpcyBwYXRjaCBzZXJpZXMgZm9y
IG5vdy4gIENhbiB5b3UgcGxlYXNlIHJlZG8KPiBwb3dlcnBjLTMyLWRyb3AtZ2V0X3B0ZXB0ci5w
YXRjaCBhbmQKPiBwb3dlcnBjLWFkZC1zdXBwb3J0LWZvci1mb2xkZWQtcDRkLXBhZ2UtdGFibGVz
LnBhdGNoIChhbmQKPiBwb3dlcnBjLWFkZC1zdXBwb3J0LWZvci1mb2xkZWQtcDRkLXBhZ2UtdGFi
bGVzLWZpeC5wYXRjaCk/CiAKVGhpcyBpcyB0aGUgcG93ZXJwYy1hZGQtc3VwcG9ydC1mb3ItZm9s
ZGVkLXA0ZC1wYWdlLXRhYmxlcy5wYXRjaCBvbiB0b3Agb2YKY3VycmVudCBwb3dlcnBjL25leHQu
IFRoZSBwb3dlcnBjLTMyLWRyb3AtZ2V0X3B0ZXB0ci5wYXRjaCBpcyBhbHJlYWR5IHRoZXJlCmFu
ZCBJJ3ZlIGZvbGRlZCBwb3dlcnBjLWFkZC1zdXBwb3J0LWZvci1mb2xkZWQtcDRkLXBhZ2UtdGFi
bGVzLWZpeC5wYXRjaAppbnRvIHRoaXMgb25lLgoKRnJvbSBlMmI0MDU1MzdkOTE3Yzk5NDMwZWU5
M2I2OGZlNGNiNDNkN2I4Nzg3IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQpGcm9tOiBNaWtlIFJh
cG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+CkRhdGU6IFN1biwgMjQgTm92IDIwMTkgMTU6Mzg6
MDAgKzAyMDAKU3ViamVjdDogW1BBVENIIHY0XSBwb3dlcnBjOiBhZGQgc3VwcG9ydCBmb3IgZm9s
ZGVkIHA0ZCBwYWdlIHRhYmxlcwoKSW1wbGVtZW50IHByaW1pdGl2ZXMgbmVjZXNzYXJ5IGZvciB0
aGUgNHRoIGxldmVsIGZvbGRpbmcsIGFkZCB3YWxrcyBvZiBwNGQKbGV2ZWwgd2hlcmUgYXBwcm9w
cmlhdGUgYW5kIHJlcGxhY2UgNWxldmVsLWZpeHVwLmggd2l0aCBwZ3RhYmxlLW5vcDRkLmguCgpT
aWduZWQtb2ZmLWJ5OiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+ClRlc3RlZC1i
eTogQ2hyaXN0b3BoZSBMZXJveSA8Y2hyaXN0b3BoZS5sZXJveUBjLXMuZnI+ICMgOHh4IGFuZCA4
M3h4Ci0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmggIHwg
IDEgLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmggICAgIHwgIDQg
Ky0KIGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGdhbGxvYy5oICB8ICA0ICst
CiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3BndGFibGUuaCAgfCA2MCArKysr
KysrKysrLS0tLS0tLS0tCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3JhZGl4
LmggICAgfCAgNiArLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC8zMi9wZ3RhYmxl
LmggIHwgIDEgLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ2FsbG9jLmgg
IHwgIDIgKy0KIC4uLi9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJsZS00ay5oICAgICAgICB8
IDMyICsrKysrLS0tLS0KIGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJs
ZS5oICB8ICA2ICstCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAg
ICAgfCAxMCArKy0tCiBhcmNoL3Bvd2VycGMva3ZtL2Jvb2szc182NF9tbXVfcmFkaXguYyAgICAg
ICAgfCAzMiArKysrKystLS0tCiBhcmNoL3Bvd2VycGMvbGliL2NvZGUtcGF0Y2hpbmcuYyAgICAg
ICAgICAgICAgfCAgNyArKy0KIGFyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9oYXNoX3BndGFibGUu
YyAgICAgICB8ICA0ICstCiBhcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvcmFkaXhfcGd0YWJsZS5j
ICAgICAgfCAyNiArKysrKy0tLQogYXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L3N1YnBhZ2VfcHJv
dC5jICAgICAgIHwgIDYgKy0KIGFyY2gvcG93ZXJwYy9tbS9odWdldGxicGFnZS5jICAgICAgICAg
ICAgICAgICB8IDI4ICsrKysrLS0tLQogYXJjaC9wb3dlcnBjL21tL2thc2FuL2thc2FuX2luaXRf
MzIuYyAgICAgICAgIHwgIDEgLQogYXJjaC9wb3dlcnBjL21tL25vaGFzaC9ib29rM2VfcGd0YWJs
ZS5jICAgICAgIHwgMTUgKystLS0KIGFyY2gvcG93ZXJwYy9tbS9wZ3RhYmxlLmMgICAgICAgICAg
ICAgICAgICAgICB8IDMwICsrKysrKy0tLS0KIGFyY2gvcG93ZXJwYy9tbS9wZ3RhYmxlXzY0LmMg
ICAgICAgICAgICAgICAgICB8IDEwICsrLS0KIGFyY2gvcG93ZXJwYy9tbS9wdGR1bXAvaGFzaHBh
Z2V0YWJsZS5jICAgICAgICB8IDIwICsrKysrKy0KIGFyY2gvcG93ZXJwYy9tbS9wdGR1bXAvcHRk
dW1wLmMgICAgICAgICAgICAgICB8IDE0ICsrKy0tCiBhcmNoL3Bvd2VycGMveG1vbi94bW9uLmMg
ICAgICAgICAgICAgICAgICAgICAgfCAxOCArKystLS0KIDIzIGZpbGVzIGNoYW5nZWQsIDE5NyBp
bnNlcnRpb25zKCspLCAxNDAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBj
L2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9h
c20vYm9vazNzLzMyL3BndGFibGUuaAppbmRleCA3NTQ5MzkzYzRjNDMuLjYwNTJiNzIyMTZhNiAx
MDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmgK
KysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy8zMi9wZ3RhYmxlLmgKQEAgLTIs
NyArMiw2IEBACiAjaWZuZGVmIF9BU01fUE9XRVJQQ19CT09LM1NfMzJfUEdUQUJMRV9ICiAjZGVm
aW5lIF9BU01fUE9XRVJQQ19CT09LM1NfMzJfUEdUQUJMRV9ICiAKLSNkZWZpbmUgX19BUkNIX1VT
RV81TEVWRUxfSEFDSwogI2luY2x1ZGUgPGFzbS1nZW5lcmljL3BndGFibGUtbm9wbWQuaD4KIAog
I2luY2x1ZGUgPGFzbS9ib29rM3MvMzIvaGFzaC5oPgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBj
L2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20v
Ym9vazNzLzY0L2hhc2guaAppbmRleCAyNzgxZWJmNmFkZDQuLjg3NmQxNTI4YzJjZiAxMDA2NDQK
LS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmgKKysrIGIvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9oYXNoLmgKQEAgLTEzNCw5ICsxMzQsOSBA
QCBzdGF0aWMgaW5saW5lIGludCBnZXRfcmVnaW9uX2lkKHVuc2lnbmVkIGxvbmcgZWEpCiAKICNk
ZWZpbmUJaGFzaF9fcG1kX2JhZChwbWQpCQkocG1kX3ZhbChwbWQpICYgSF9QTURfQkFEX0JJVFMp
CiAjZGVmaW5lCWhhc2hfX3B1ZF9iYWQocHVkKQkJKHB1ZF92YWwocHVkKSAmIEhfUFVEX0JBRF9C
SVRTKQotc3RhdGljIGlubGluZSBpbnQgaGFzaF9fcGdkX2JhZChwZ2RfdCBwZ2QpCitzdGF0aWMg
aW5saW5lIGludCBoYXNoX19wNGRfYmFkKHA0ZF90IHA0ZCkKIHsKLQlyZXR1cm4gKHBnZF92YWwo
cGdkKSA9PSAwKTsKKwlyZXR1cm4gKHA0ZF92YWwocDRkKSA9PSAwKTsKIH0KICNpZmRlZiBDT05G
SUdfU1RSSUNUX0tFUk5FTF9SV1gKIGV4dGVybiB2b2lkIGhhc2hfX21hcmtfcm9kYXRhX3JvKHZv
aWQpOwpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ2Fs
bG9jLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3BnYWxsb2MuaAppbmRl
eCBhNDFlOTFiZDA1ODAuLjY5YzViMDUxNzM0ZiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2lu
Y2x1ZGUvYXNtL2Jvb2szcy82NC9wZ2FsbG9jLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUv
YXNtL2Jvb2szcy82NC9wZ2FsbG9jLmgKQEAgLTg1LDkgKzg1LDkgQEAgc3RhdGljIGlubGluZSB2
b2lkIHBnZF9mcmVlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwZ2RfdCAqcGdkKQogCWttZW1fY2Fj
aGVfZnJlZShQR1RfQ0FDSEUoUEdEX0lOREVYX1NJWkUpLCBwZ2QpOwogfQogCi1zdGF0aWMgaW5s
aW5lIHZvaWQgcGdkX3BvcHVsYXRlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwZ2RfdCAqcGdkLCBw
dWRfdCAqcHVkKQorc3RhdGljIGlubGluZSB2b2lkIHA0ZF9wb3B1bGF0ZShzdHJ1Y3QgbW1fc3Ry
dWN0ICptbSwgcDRkX3QgKnBnZCwgcHVkX3QgKnB1ZCkKIHsKLQkqcGdkID0gIF9fcGdkKF9fcGd0
YWJsZV9wdHJfdmFsKHB1ZCkgfCBQR0RfVkFMX0JJVFMpOworCSpwZ2QgPSAgX19wNGQoX19wZ3Rh
YmxlX3B0cl92YWwocHVkKSB8IFBHRF9WQUxfQklUUyk7CiB9CiAKIHN0YXRpYyBpbmxpbmUgcHVk
X3QgKnB1ZF9hbGxvY19vbmUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRk
cikKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJs
ZS5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmgKaW5kZXgg
MjAxYTY5ZTZhMzU1Li5mYTYwZTg1OTRiOWYgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNs
dWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2Fz
bS9ib29rM3MvNjQvcGd0YWJsZS5oCkBAIC0yLDcgKzIsNyBAQAogI2lmbmRlZiBfQVNNX1BPV0VS
UENfQk9PSzNTXzY0X1BHVEFCTEVfSF8KICNkZWZpbmUgX0FTTV9QT1dFUlBDX0JPT0szU182NF9Q
R1RBQkxFX0hfCiAKLSNpbmNsdWRlIDxhc20tZ2VuZXJpYy81bGV2ZWwtZml4dXAuaD4KKyNpbmNs
dWRlIDxhc20tZ2VuZXJpYy9wZ3RhYmxlLW5vcDRkLmg+CiAKICNpZm5kZWYgX19BU1NFTUJMWV9f
CiAjaW5jbHVkZSA8bGludXgvbW1kZWJ1Zy5oPgpAQCAtMjUxLDcgKzI1MSw3IEBAIGV4dGVybiB1
bnNpZ25lZCBsb25nIF9fcG1kX2ZyYWdfc2l6ZV9zaGlmdDsKIC8qIEJpdHMgdG8gbWFzayBvdXQg
ZnJvbSBhIFBVRCB0byBnZXQgdG8gdGhlIFBNRCBwYWdlICovCiAjZGVmaW5lIFBVRF9NQVNLRURf
QklUUwkJMHhjMDAwMDAwMDAwMDAwMGZmVUwKIC8qIEJpdHMgdG8gbWFzayBvdXQgZnJvbSBhIFBH
RCB0byBnZXQgdG8gdGhlIFBVRCBwYWdlICovCi0jZGVmaW5lIFBHRF9NQVNLRURfQklUUwkJMHhj
MDAwMDAwMDAwMDAwMGZmVUwKKyNkZWZpbmUgUDREX01BU0tFRF9CSVRTCQkweGMwMDAwMDAwMDAw
MDAwZmZVTAogCiAvKgogICogVXNlZCBhcyBhbiBpbmRpY2F0b3IgZm9yIHJjdSBjYWxsYmFjayBm
dW5jdGlvbnMKQEAgLTk0OSw1NCArOTQ5LDYwIEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBwdWRfYWNj
ZXNzX3Blcm1pdHRlZChwdWRfdCBwdWQsIGJvb2wgd3JpdGUpCiAJcmV0dXJuIHB0ZV9hY2Nlc3Nf
cGVybWl0dGVkKHB1ZF9wdGUocHVkKSwgd3JpdGUpOwogfQogCi0jZGVmaW5lIHBnZF93cml0ZShw
Z2QpCQlwdGVfd3JpdGUocGdkX3B0ZShwZ2QpKQorI2RlZmluZSBfX3A0ZF9yYXcoeCkJKChwNGRf
dCkgeyBfX3BnZF9yYXcoeCkgfSkKK3N0YXRpYyBpbmxpbmUgX19iZTY0IHA0ZF9yYXcocDRkX3Qg
eCkKK3sKKwlyZXR1cm4gcGdkX3Jhdyh4LnBnZCk7Cit9CisKKyNkZWZpbmUgcDRkX3dyaXRlKHA0
ZCkJCXB0ZV93cml0ZShwNGRfcHRlKHA0ZCkpCiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBwZ2RfY2xl
YXIocGdkX3QgKnBnZHApCitzdGF0aWMgaW5saW5lIHZvaWQgcDRkX2NsZWFyKHA0ZF90ICpwNGRw
KQogewotCSpwZ2RwID0gX19wZ2QoMCk7CisJKnA0ZHAgPSBfX3A0ZCgwKTsKIH0KIAotc3RhdGlj
IGlubGluZSBpbnQgcGdkX25vbmUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBpbnQgcDRkX25v
bmUocDRkX3QgcDRkKQogewotCXJldHVybiAhcGdkX3JhdyhwZ2QpOworCXJldHVybiAhcDRkX3Jh
dyhwNGQpOwogfQogCi1zdGF0aWMgaW5saW5lIGludCBwZ2RfcHJlc2VudChwZ2RfdCBwZ2QpCitz
dGF0aWMgaW5saW5lIGludCBwNGRfcHJlc2VudChwNGRfdCBwNGQpCiB7Ci0JcmV0dXJuICEhKHBn
ZF9yYXcocGdkKSAmIGNwdV90b19iZTY0KF9QQUdFX1BSRVNFTlQpKTsKKwlyZXR1cm4gISEocDRk
X3JhdyhwNGQpICYgY3B1X3RvX2JlNjQoX1BBR0VfUFJFU0VOVCkpOwogfQogCi1zdGF0aWMgaW5s
aW5lIHB0ZV90IHBnZF9wdGUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBwdGVfdCBwNGRfcHRl
KHA0ZF90IHA0ZCkKIHsKLQlyZXR1cm4gX19wdGVfcmF3KHBnZF9yYXcocGdkKSk7CisJcmV0dXJu
IF9fcHRlX3JhdyhwNGRfcmF3KHA0ZCkpOwogfQogCi1zdGF0aWMgaW5saW5lIHBnZF90IHB0ZV9w
Z2QocHRlX3QgcHRlKQorc3RhdGljIGlubGluZSBwNGRfdCBwdGVfcDRkKHB0ZV90IHB0ZSkKIHsK
LQlyZXR1cm4gX19wZ2RfcmF3KHB0ZV9yYXcocHRlKSk7CisJcmV0dXJuIF9fcDRkX3JhdyhwdGVf
cmF3KHB0ZSkpOwogfQogCi1zdGF0aWMgaW5saW5lIGludCBwZ2RfYmFkKHBnZF90IHBnZCkKK3N0
YXRpYyBpbmxpbmUgaW50IHA0ZF9iYWQocDRkX3QgcDRkKQogewogCWlmIChyYWRpeF9lbmFibGVk
KCkpCi0JCXJldHVybiByYWRpeF9fcGdkX2JhZChwZ2QpOwotCXJldHVybiBoYXNoX19wZ2RfYmFk
KHBnZCk7CisJCXJldHVybiByYWRpeF9fcDRkX2JhZChwNGQpOworCXJldHVybiBoYXNoX19wNGRf
YmFkKHA0ZCk7CiB9CiAKLSNkZWZpbmUgcGdkX2FjY2Vzc19wZXJtaXR0ZWQgcGdkX2FjY2Vzc19w
ZXJtaXR0ZWQKLXN0YXRpYyBpbmxpbmUgYm9vbCBwZ2RfYWNjZXNzX3Blcm1pdHRlZChwZ2RfdCBw
Z2QsIGJvb2wgd3JpdGUpCisjZGVmaW5lIHA0ZF9hY2Nlc3NfcGVybWl0dGVkIHA0ZF9hY2Nlc3Nf
cGVybWl0dGVkCitzdGF0aWMgaW5saW5lIGJvb2wgcDRkX2FjY2Vzc19wZXJtaXR0ZWQocDRkX3Qg
cDRkLCBib29sIHdyaXRlKQogewotCXJldHVybiBwdGVfYWNjZXNzX3Blcm1pdHRlZChwZ2RfcHRl
KHBnZCksIHdyaXRlKTsKKwlyZXR1cm4gcHRlX2FjY2Vzc19wZXJtaXR0ZWQocDRkX3B0ZShwNGQp
LCB3cml0ZSk7CiB9CiAKLWV4dGVybiBzdHJ1Y3QgcGFnZSAqcGdkX3BhZ2UocGdkX3QgcGdkKTsK
K2V4dGVybiBzdHJ1Y3QgcGFnZSAqcDRkX3BhZ2UocDRkX3QgcDRkKTsKIAogLyogUG9pbnRlcnMg
aW4gdGhlIHBhZ2UgdGFibGUgdHJlZSBhcmUgcGh5c2ljYWwgYWRkcmVzc2VzICovCiAjZGVmaW5l
IF9fcGd0YWJsZV9wdHJfdmFsKHB0cikJX19wYShwdHIpCiAKICNkZWZpbmUgcG1kX3BhZ2VfdmFk
ZHIocG1kKQlfX3ZhKHBtZF92YWwocG1kKSAmIH5QTURfTUFTS0VEX0JJVFMpCiAjZGVmaW5lIHB1
ZF9wYWdlX3ZhZGRyKHB1ZCkJX192YShwdWRfdmFsKHB1ZCkgJiB+UFVEX01BU0tFRF9CSVRTKQot
I2RlZmluZSBwZ2RfcGFnZV92YWRkcihwZ2QpCV9fdmEocGdkX3ZhbChwZ2QpICYgflBHRF9NQVNL
RURfQklUUykKKyNkZWZpbmUgcDRkX3BhZ2VfdmFkZHIocDRkKQlfX3ZhKHA0ZF92YWwocDRkKSAm
IH5QNERfTUFTS0VEX0JJVFMpCiAKICNkZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpICgoKGFkZHJl
c3MpID4+IChQR0RJUl9TSElGVCkpICYgKFBUUlNfUEVSX1BHRCAtIDEpKQogI2RlZmluZSBwdWRf
aW5kZXgoYWRkcmVzcykgKCgoYWRkcmVzcykgPj4gKFBVRF9TSElGVCkpICYgKFBUUlNfUEVSX1BV
RCAtIDEpKQpAQCAtMTAxMCw4ICsxMDE2LDggQEAgZXh0ZXJuIHN0cnVjdCBwYWdlICpwZ2RfcGFn
ZShwZ2RfdCBwZ2QpOwogCiAjZGVmaW5lIHBnZF9vZmZzZXQobW0sIGFkZHJlc3MpCSAoKG1tKS0+
cGdkICsgcGdkX2luZGV4KGFkZHJlc3MpKQogCi0jZGVmaW5lIHB1ZF9vZmZzZXQocGdkcCwgYWRk
cikJXAotCSgoKHB1ZF90ICopIHBnZF9wYWdlX3ZhZGRyKCoocGdkcCkpKSArIHB1ZF9pbmRleChh
ZGRyKSkKKyNkZWZpbmUgcHVkX29mZnNldChwNGRwLCBhZGRyKQlcCisJKCgocHVkX3QgKikgcDRk
X3BhZ2VfdmFkZHIoKihwNGRwKSkpICsgcHVkX2luZGV4KGFkZHIpKQogI2RlZmluZSBwbWRfb2Zm
c2V0KHB1ZHAsYWRkcikgXAogCSgoKHBtZF90ICopIHB1ZF9wYWdlX3ZhZGRyKCoocHVkcCkpKSAr
IHBtZF9pbmRleChhZGRyKSkKICNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGlyLGFkZHIpIFwK
QEAgLTEzNjgsMTEgKzEzNzQsMTEgQEAgc3RhdGljIGlubGluZSBib29sIHB1ZF9pc19sZWFmKHB1
ZF90IHB1ZCkKIAlyZXR1cm4gISEocHVkX3JhdyhwdWQpICYgY3B1X3RvX2JlNjQoX1BBR0VfUFRF
KSk7CiB9CiAKLSNkZWZpbmUgcGdkX2lzX2xlYWYgcGdkX2lzX2xlYWYKLSNkZWZpbmUgcGdkX2xl
YWYgcGdkX2lzX2xlYWYKLXN0YXRpYyBpbmxpbmUgYm9vbCBwZ2RfaXNfbGVhZihwZ2RfdCBwZ2Qp
CisjZGVmaW5lIHA0ZF9pc19sZWFmIHA0ZF9pc19sZWFmCisjZGVmaW5lIHA0ZF9sZWFmIHA0ZF9p
c19sZWFmCitzdGF0aWMgaW5saW5lIGJvb2wgcDRkX2lzX2xlYWYocDRkX3QgcDRkKQogewotCXJl
dHVybiAhIShwZ2RfcmF3KHBnZCkgJiBjcHVfdG9fYmU2NChfUEFHRV9QVEUpKTsKKwlyZXR1cm4g
ISEocDRkX3JhdyhwNGQpICYgY3B1X3RvX2JlNjQoX1BBR0VfUFRFKSk7CiB9CiAKICNlbmRpZiAv
KiBfX0FTU0VNQkxZX18gKi8KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9i
b29rM3MvNjQvcmFkaXguaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcmFk
aXguaAppbmRleCBkOTdkYjNhZDlhYWUuLjliY2EyYWM2NDIyMCAxMDA2NDQKLS0tIGEvYXJjaC9w
b3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9yYWRpeC5oCisrKyBiL2FyY2gvcG93ZXJwYy9p
bmNsdWRlL2FzbS9ib29rM3MvNjQvcmFkaXguaApAQCAtMzAsNyArMzAsNyBAQAogLyogRG9uJ3Qg
aGF2ZSBhbnl0aGluZyBpbiB0aGUgcmVzZXJ2ZWQgYml0cyBhbmQgbGVhZiBiaXRzICovCiAjZGVm
aW5lIFJBRElYX1BNRF9CQURfQklUUwkJMHg2MDAwMDAwMDAwMDAwMGUwVUwKICNkZWZpbmUgUkFE
SVhfUFVEX0JBRF9CSVRTCQkweDYwMDAwMDAwMDAwMDAwZTBVTAotI2RlZmluZSBSQURJWF9QR0Rf
QkFEX0JJVFMJCTB4NjAwMDAwMDAwMDAwMDBlMFVMCisjZGVmaW5lIFJBRElYX1A0RF9CQURfQklU
UwkJMHg2MDAwMDAwMDAwMDAwMGUwVUwKIAogI2RlZmluZSBSQURJWF9QTURfU0hJRlQJCShQQUdF
X1NISUZUICsgUkFESVhfUFRFX0lOREVYX1NJWkUpCiAjZGVmaW5lIFJBRElYX1BVRF9TSElGVAkJ
KFJBRElYX1BNRF9TSElGVCArIFJBRElYX1BNRF9JTkRFWF9TSVpFKQpAQCAtMjI3LDkgKzIyNyw5
IEBAIHN0YXRpYyBpbmxpbmUgaW50IHJhZGl4X19wdWRfYmFkKHB1ZF90IHB1ZCkKIH0KIAogCi1z
dGF0aWMgaW5saW5lIGludCByYWRpeF9fcGdkX2JhZChwZ2RfdCBwZ2QpCitzdGF0aWMgaW5saW5l
IGludCByYWRpeF9fcDRkX2JhZChwNGRfdCBwNGQpCiB7Ci0JcmV0dXJuICEhKHBnZF92YWwocGdk
KSAmIFJBRElYX1BHRF9CQURfQklUUyk7CisJcmV0dXJuICEhKHA0ZF92YWwocDRkKSAmIFJBRElY
X1A0RF9CQURfQklUUyk7CiB9CiAKICNpZmRlZiBDT05GSUdfVFJBTlNQQVJFTlRfSFVHRVBBR0UK
ZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5o
IGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC8zMi9wZ3RhYmxlLmgKaW5kZXggYjA0
YmEyNTdmZGRiLi4zZDBiYzk5ZGQ1MjAgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRl
L2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9u
b2hhc2gvMzIvcGd0YWJsZS5oCkBAIC0yLDcgKzIsNiBAQAogI2lmbmRlZiBfQVNNX1BPV0VSUENf
Tk9IQVNIXzMyX1BHVEFCTEVfSAogI2RlZmluZSBfQVNNX1BPV0VSUENfTk9IQVNIXzMyX1BHVEFC
TEVfSAogCi0jZGVmaW5lIF9fQVJDSF9VU0VfNUxFVkVMX0hBQ0sKICNpbmNsdWRlIDxhc20tZ2Vu
ZXJpYy9wZ3RhYmxlLW5vcG1kLmg+CiAKICNpZm5kZWYgX19BU1NFTUJMWV9fCmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BnYWxsb2MuaCBiL2FyY2gvcG93
ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGdhbGxvYy5oCmluZGV4IGI5NTM0YTc5MzI5My4u
NjY4YWVlNjAxN2U3IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNo
LzY0L3BnYWxsb2MuaAorKysgYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3Bn
YWxsb2MuaApAQCAtMTUsNyArMTUsNyBAQCBzdHJ1Y3Qgdm1lbW1hcF9iYWNraW5nIHsKIH07CiBl
eHRlcm4gc3RydWN0IHZtZW1tYXBfYmFja2luZyAqdm1lbW1hcF9saXN0OwogCi0jZGVmaW5lIHBn
ZF9wb3B1bGF0ZShNTSwgUEdELCBQVUQpCXBnZF9zZXQoUEdELCAodW5zaWduZWQgbG9uZylQVUQp
CisjZGVmaW5lIHA0ZF9wb3B1bGF0ZShNTSwgUDRELCBQVUQpCXA0ZF9zZXQoUDRELCAodW5zaWdu
ZWQgbG9uZylQVUQpCiAKIHN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9hbGxvY19vbmUoc3RydWN0
IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcikKIHsKZGlmZiAtLWdpdCBhL2FyY2gv
cG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJsZS00ay5oIGIvYXJjaC9wb3dlcnBj
L2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxlLTRrLmgKaW5kZXggYzQwZWMzMmI4MTk0Li44
MWIxYzU0ZTNjZjEgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gv
NjQvcGd0YWJsZS00ay5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQv
cGd0YWJsZS00ay5oCkBAIC0yLDcgKzIsNyBAQAogI2lmbmRlZiBfQVNNX1BPV0VSUENfTk9IQVNI
XzY0X1BHVEFCTEVfNEtfSAogI2RlZmluZSBfQVNNX1BPV0VSUENfTk9IQVNIXzY0X1BHVEFCTEVf
NEtfSAogCi0jaW5jbHVkZSA8YXNtLWdlbmVyaWMvNWxldmVsLWZpeHVwLmg+CisjaW5jbHVkZSA8
YXNtLWdlbmVyaWMvcGd0YWJsZS1ub3A0ZC5oPgogCiAvKgogICogRW50cmllcyBwZXIgcGFnZSBk
aXJlY3RvcnkgbGV2ZWwuICBUaGUgUFRFIGxldmVsIG11c3QgdXNlIGEgNjRiIHJlY29yZApAQCAt
NDUsNDEgKzQ1LDQxIEBACiAjZGVmaW5lIFBNRF9NQVNLRURfQklUUwkJMAogLyogQml0cyB0byBt
YXNrIG91dCBmcm9tIGEgUFVEIHRvIGdldCB0byB0aGUgUE1EIHBhZ2UgKi8KICNkZWZpbmUgUFVE
X01BU0tFRF9CSVRTCQkwCi0vKiBCaXRzIHRvIG1hc2sgb3V0IGZyb20gYSBQR0QgdG8gZ2V0IHRv
IHRoZSBQVUQgcGFnZSAqLwotI2RlZmluZSBQR0RfTUFTS0VEX0JJVFMJCTAKKy8qIEJpdHMgdG8g
bWFzayBvdXQgZnJvbSBhIFA0RCB0byBnZXQgdG8gdGhlIFBVRCBwYWdlICovCisjZGVmaW5lIFA0
RF9NQVNLRURfQklUUwkJMAogCiAKIC8qCiAgKiA0LWxldmVsIHBhZ2UgdGFibGVzIHJlbGF0ZWQg
Yml0cwogICovCiAKLSNkZWZpbmUgcGdkX25vbmUocGdkKQkJKCFwZ2RfdmFsKHBnZCkpCi0jZGVm
aW5lIHBnZF9iYWQocGdkKQkJKHBnZF92YWwocGdkKSA9PSAwKQotI2RlZmluZSBwZ2RfcHJlc2Vu
dChwZ2QpCShwZ2RfdmFsKHBnZCkgIT0gMCkKLSNkZWZpbmUgcGdkX3BhZ2VfdmFkZHIocGdkKQko
cGdkX3ZhbChwZ2QpICYgflBHRF9NQVNLRURfQklUUykKKyNkZWZpbmUgcDRkX25vbmUocDRkKQkJ
KCFwNGRfdmFsKHA0ZCkpCisjZGVmaW5lIHA0ZF9iYWQocDRkKQkJKHA0ZF92YWwocDRkKSA9PSAw
KQorI2RlZmluZSBwNGRfcHJlc2VudChwNGQpCShwNGRfdmFsKHA0ZCkgIT0gMCkKKyNkZWZpbmUg
cDRkX3BhZ2VfdmFkZHIocDRkKQkocDRkX3ZhbChwNGQpICYgflA0RF9NQVNLRURfQklUUykKIAog
I2lmbmRlZiBfX0FTU0VNQkxZX18KIAotc3RhdGljIGlubGluZSB2b2lkIHBnZF9jbGVhcihwZ2Rf
dCAqcGdkcCkKK3N0YXRpYyBpbmxpbmUgdm9pZCBwNGRfY2xlYXIocDRkX3QgKnA0ZHApCiB7Ci0J
KnBnZHAgPSBfX3BnZCgwKTsKKwkqcDRkcCA9IF9fcDRkKDApOwogfQogCi1zdGF0aWMgaW5saW5l
IHB0ZV90IHBnZF9wdGUocGdkX3QgcGdkKQorc3RhdGljIGlubGluZSBwdGVfdCBwNGRfcHRlKHA0
ZF90IHA0ZCkKIHsKLQlyZXR1cm4gX19wdGUocGdkX3ZhbChwZ2QpKTsKKwlyZXR1cm4gX19wdGUo
cDRkX3ZhbChwNGQpKTsKIH0KIAotc3RhdGljIGlubGluZSBwZ2RfdCBwdGVfcGdkKHB0ZV90IHB0
ZSkKK3N0YXRpYyBpbmxpbmUgcDRkX3QgcHRlX3A0ZChwdGVfdCBwdGUpCiB7Ci0JcmV0dXJuIF9f
cGdkKHB0ZV92YWwocHRlKSk7CisJcmV0dXJuIF9fcDRkKHB0ZV92YWwocHRlKSk7CiB9Ci1leHRl
cm4gc3RydWN0IHBhZ2UgKnBnZF9wYWdlKHBnZF90IHBnZCk7CitleHRlcm4gc3RydWN0IHBhZ2Ug
KnA0ZF9wYWdlKHA0ZF90IHA0ZCk7CiAKICNlbmRpZiAvKiAhX19BU1NFTUJMWV9fICovCiAKLSNk
ZWZpbmUgcHVkX29mZnNldChwZ2RwLCBhZGRyKQlcCi0gICgoKHB1ZF90ICopIHBnZF9wYWdlX3Zh
ZGRyKCoocGdkcCkpKSArIFwKKyNkZWZpbmUgcHVkX29mZnNldChwNGRwLCBhZGRyKQlcCisgICgo
KHB1ZF90ICopIHA0ZF9wYWdlX3ZhZGRyKCoocDRkcCkpKSArIFwKICAgICAoKChhZGRyKSA+PiBQ
VURfU0hJRlQpICYgKFBUUlNfUEVSX1BVRCAtIDEpKSkKIAogI2RlZmluZSBwdWRfRVJST1IoZSkg
XApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxl
LmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaAppbmRleCA5
YTMzYjhiZDg0MmQuLmIzNjBmMjYyYjljNiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1
ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNt
L25vaGFzaC82NC9wZ3RhYmxlLmgKQEAgLTE3NSwxMSArMTc1LDExIEBAIHN0YXRpYyBpbmxpbmUg
cHVkX3QgcHRlX3B1ZChwdGVfdCBwdGUpCiAJcmV0dXJuIF9fcHVkKHB0ZV92YWwocHRlKSk7CiB9
CiAjZGVmaW5lIHB1ZF93cml0ZShwdWQpCQlwdGVfd3JpdGUocHVkX3B0ZShwdWQpKQotI2RlZmlu
ZSBwZ2Rfd3JpdGUocGdkKQkJcHRlX3dyaXRlKHBnZF9wdGUocGdkKSkKKyNkZWZpbmUgcDRkX3dy
aXRlKHBnZCkJCXB0ZV93cml0ZShwNGRfcHRlKHA0ZCkpCiAKLXN0YXRpYyBpbmxpbmUgdm9pZCBw
Z2Rfc2V0KHBnZF90ICpwZ2RwLCB1bnNpZ25lZCBsb25nIHZhbCkKK3N0YXRpYyBpbmxpbmUgdm9p
ZCBwNGRfc2V0KHA0ZF90ICpwNGRwLCB1bnNpZ25lZCBsb25nIHZhbCkKIHsKLQkqcGdkcCA9IF9f
cGdkKHZhbCk7CisJKnA0ZHAgPSBfX3A0ZCh2YWwpOwogfQogCiAvKgpkaWZmIC0tZ2l0IGEvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2Fz
bS9wZ3RhYmxlLmgKaW5kZXggYjgwYmZkNDE4MjhkLi44YmMxZTVjM2M3YmUgMTAwNjQ0Ci0tLSBh
L2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wb3dlcnBjL2lu
Y2x1ZGUvYXNtL3BndGFibGUuaApAQCAtNDQsMTIgKzQ0LDEyIEBAIHN0cnVjdCBtbV9zdHJ1Y3Q7
CiAjaWZkZWYgQ09ORklHX1BQQzMyCiBzdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfcHRyKHN0cnVj
dCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIHZhKQogewotCXJldHVybiBwbWRfb2Zmc2V0
KHB1ZF9vZmZzZXQocGdkX29mZnNldChtbSwgdmEpLCB2YSksIHZhKTsKKwlyZXR1cm4gcG1kX29m
ZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdkX29mZnNldChtbSwgdmEpLCB2YSksIHZhKSwg
dmEpOwogfQogCiBzdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfcHRyX2sodW5zaWduZWQgbG9uZyB2
YSkKIHsKLQlyZXR1cm4gcG1kX29mZnNldChwdWRfb2Zmc2V0KHBnZF9vZmZzZXRfayh2YSksIHZh
KSwgdmEpOworCXJldHVybiBwbWRfb2Zmc2V0KHB1ZF9vZmZzZXQocDRkX29mZnNldChwZ2Rfb2Zm
c2V0X2sodmEpLCB2YSksIHZhKSwgdmEpOwogfQogCiBzdGF0aWMgaW5saW5lIHB0ZV90ICp2aXJ0
X3RvX2twdGUodW5zaWduZWQgbG9uZyB2YWRkcikKQEAgLTE1Niw5ICsxNTYsOSBAQCBzdGF0aWMg
aW5saW5lIGJvb2wgcHVkX2lzX2xlYWYocHVkX3QgcHVkKQogfQogI2VuZGlmCiAKLSNpZm5kZWYg
cGdkX2lzX2xlYWYKLSNkZWZpbmUgcGdkX2lzX2xlYWYgcGdkX2lzX2xlYWYKLXN0YXRpYyBpbmxp
bmUgYm9vbCBwZ2RfaXNfbGVhZihwZ2RfdCBwZ2QpCisjaWZuZGVmIHA0ZF9pc19sZWFmCisjZGVm
aW5lIHA0ZF9pc19sZWFmIHA0ZF9pc19sZWFmCitzdGF0aWMgaW5saW5lIGJvb2wgcDRkX2lzX2xl
YWYocDRkX3QgcDRkKQogewogCXJldHVybiBmYWxzZTsKIH0KZGlmZiAtLWdpdCBhL2FyY2gvcG93
ZXJwYy9rdm0vYm9vazNzXzY0X21tdV9yYWRpeC5jIGIvYXJjaC9wb3dlcnBjL2t2bS9ib29rM3Nf
NjRfbW11X3JhZGl4LmMKaW5kZXggMWQ3NWVkNjg0YjUzLi5lYThhOTYwMzhiYjQgMTAwNjQ0Ci0t
LSBhL2FyY2gvcG93ZXJwYy9rdm0vYm9vazNzXzY0X21tdV9yYWRpeC5jCisrKyBiL2FyY2gvcG93
ZXJwYy9rdm0vYm9vazNzXzY0X21tdV9yYWRpeC5jCkBAIC00OTksMTMgKzQ5OSwxNCBAQCB2b2lk
IGt2bXBwY19mcmVlX3BndGFibGVfcmFkaXgoc3RydWN0IGt2bSAqa3ZtLCBwZ2RfdCAqcGdkLCB1
bnNpZ25lZCBpbnQgbHBpZCkKIAl1bnNpZ25lZCBsb25nIGlnOwogCiAJZm9yIChpZyA9IDA7IGln
IDwgUFRSU19QRVJfUEdEOyArK2lnLCArK3BnZCkgeworCQlwNGRfdCAqcDRkID0gcDRkX29mZnNl
dChwZ2QsIDApOwogCQlwdWRfdCAqcHVkOwogCi0JCWlmICghcGdkX3ByZXNlbnQoKnBnZCkpCisJ
CWlmICghcDRkX3ByZXNlbnQoKnA0ZCkpCiAJCQljb250aW51ZTsKLQkJcHVkID0gcHVkX29mZnNl
dChwZ2QsIDApOworCQlwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwgMCk7CiAJCWt2bXBwY191bm1hcF9m
cmVlX3B1ZChrdm0sIHB1ZCwgbHBpZCk7Ci0JCXBnZF9jbGVhcihwZ2QpOworCQlwNGRfY2xlYXIo
cDRkKTsKIAl9CiB9CiAKQEAgLTU2Niw2ICs1NjcsNyBAQCBpbnQga3ZtcHBjX2NyZWF0ZV9wdGUo
c3RydWN0IGt2bSAqa3ZtLCBwZ2RfdCAqcGd0YWJsZSwgcHRlX3QgcHRlLAogCQkgICAgICB1bnNp
Z25lZCBsb25nICpybWFwcCwgc3RydWN0IHJtYXBfbmVzdGVkICoqbl9ybWFwKQogewogCXBnZF90
ICpwZ2Q7CisJcDRkX3QgKnA0ZDsKIAlwdWRfdCAqcHVkLCAqbmV3X3B1ZCA9IE5VTEw7CiAJcG1k
X3QgKnBtZCwgKm5ld19wbWQgPSBOVUxMOwogCXB0ZV90ICpwdGVwLCAqbmV3X3B0ZXAgPSBOVUxM
OwpAQCAtNTczLDkgKzU3NSwxMSBAQCBpbnQga3ZtcHBjX2NyZWF0ZV9wdGUoc3RydWN0IGt2bSAq
a3ZtLCBwZ2RfdCAqcGd0YWJsZSwgcHRlX3QgcHRlLAogCiAJLyogVHJhdmVyc2UgdGhlIGd1ZXN0
J3MgMm5kLWxldmVsIHRyZWUsIGFsbG9jYXRlIG5ldyBsZXZlbHMgbmVlZGVkICovCiAJcGdkID0g
cGd0YWJsZSArIHBnZF9pbmRleChncGEpOworCXA0ZCA9IHA0ZF9vZmZzZXQocGdkLCBncGEpOwor
CiAJcHVkID0gTlVMTDsKLQlpZiAocGdkX3ByZXNlbnQoKnBnZCkpCi0JCXB1ZCA9IHB1ZF9vZmZz
ZXQocGdkLCBncGEpOworCWlmIChwNGRfcHJlc2VudCgqcDRkKSkKKwkJcHVkID0gcHVkX29mZnNl
dChwNGQsIGdwYSk7CiAJZWxzZQogCQluZXdfcHVkID0gcHVkX2FsbG9jX29uZShrdm0tPm1tLCBn
cGEpOwogCkBAIC01OTYsMTMgKzYwMCwxMyBAQCBpbnQga3ZtcHBjX2NyZWF0ZV9wdGUoc3RydWN0
IGt2bSAqa3ZtLCBwZ2RfdCAqcGd0YWJsZSwgcHRlX3QgcHRlLAogCiAJLyogTm93IHRyYXZlcnNl
IGFnYWluIHVuZGVyIHRoZSBsb2NrIGFuZCBjaGFuZ2UgdGhlIHRyZWUgKi8KIAlyZXQgPSAtRU5P
TUVNOwotCWlmIChwZ2Rfbm9uZSgqcGdkKSkgeworCWlmIChwNGRfbm9uZSgqcDRkKSkgewogCQlp
ZiAoIW5ld19wdWQpCiAJCQlnb3RvIG91dF91bmxvY2s7Ci0JCXBnZF9wb3B1bGF0ZShrdm0tPm1t
LCBwZ2QsIG5ld19wdWQpOworCQlwNGRfcG9wdWxhdGUoa3ZtLT5tbSwgcDRkLCBuZXdfcHVkKTsK
IAkJbmV3X3B1ZCA9IE5VTEw7CiAJfQotCXB1ZCA9IHB1ZF9vZmZzZXQocGdkLCBncGEpOworCXB1
ZCA9IHB1ZF9vZmZzZXQocDRkLCBncGEpOwogCWlmIChwdWRfaXNfbGVhZigqcHVkKSkgewogCQl1
bnNpZ25lZCBsb25nIGhncGEgPSBncGEgJiBQVURfTUFTSzsKIApAQCAtMTIxOSw3ICsxMjIzLDgg
QEAgc3RhdGljIHNzaXplX3QgZGVidWdmc19yYWRpeF9yZWFkKHN0cnVjdCBmaWxlICpmaWxlLCBj
aGFyIF9fdXNlciAqYnVmLAogCXVuc2lnbmVkIGxvbmcgZ3BhOwogCXBnZF90ICpwZ3Q7CiAJc3Ry
dWN0IGt2bV9uZXN0ZWRfZ3Vlc3QgKm5lc3RlZDsKLQlwZ2RfdCBwZ2QsICpwZ2RwOworCXBnZF90
ICpwZ2RwOworCXA0ZF90IHA0ZCwgKnA0ZHA7CiAJcHVkX3QgcHVkLCAqcHVkcDsKIAlwbWRfdCBw
bWQsICpwbWRwOwogCXB0ZV90ICpwdGVwOwpAQCAtMTI5MiwxMyArMTI5NywxNCBAQCBzdGF0aWMg
c3NpemVfdCBkZWJ1Z2ZzX3JhZGl4X3JlYWQoc3RydWN0IGZpbGUgKmZpbGUsIGNoYXIgX191c2Vy
ICpidWYsCiAJCX0KIAogCQlwZ2RwID0gcGd0ICsgcGdkX2luZGV4KGdwYSk7Ci0JCXBnZCA9IFJF
QURfT05DRSgqcGdkcCk7Ci0JCWlmICghKHBnZF92YWwocGdkKSAmIF9QQUdFX1BSRVNFTlQpKSB7
Ci0JCQlncGEgPSAoZ3BhICYgUEdESVJfTUFTSykgKyBQR0RJUl9TSVpFOworCQlwNGRwID0gcDRk
X29mZnNldChwZ2RwLCBncGEpOworCQlwNGQgPSBSRUFEX09OQ0UoKnA0ZHApOworCQlpZiAoIShw
NGRfdmFsKHA0ZCkgJiBfUEFHRV9QUkVTRU5UKSkgeworCQkJZ3BhID0gKGdwYSAmIFA0RF9NQVNL
KSArIFA0RF9TSVpFOwogCQkJY29udGludWU7CiAJCX0KIAotCQlwdWRwID0gcHVkX29mZnNldCgm
cGdkLCBncGEpOworCQlwdWRwID0gcHVkX29mZnNldCgmcDRkLCBncGEpOwogCQlwdWQgPSBSRUFE
X09OQ0UoKnB1ZHApOwogCQlpZiAoIShwdWRfdmFsKHB1ZCkgJiBfUEFHRV9QUkVTRU5UKSkgewog
CQkJZ3BhID0gKGdwYSAmIFBVRF9NQVNLKSArIFBVRF9TSVpFOwpkaWZmIC0tZ2l0IGEvYXJjaC9w
b3dlcnBjL2xpYi9jb2RlLXBhdGNoaW5nLmMgYi9hcmNoL3Bvd2VycGMvbGliL2NvZGUtcGF0Y2hp
bmcuYwppbmRleCAzMzQ1ZjAzOWE4NzYuLjdhNTlmNjg2M2NlYyAxMDA2NDQKLS0tIGEvYXJjaC9w
b3dlcnBjL2xpYi9jb2RlLXBhdGNoaW5nLmMKKysrIGIvYXJjaC9wb3dlcnBjL2xpYi9jb2RlLXBh
dGNoaW5nLmMKQEAgLTEwNywxMyArMTA3LDE4IEBAIHN0YXRpYyBpbmxpbmUgaW50IHVubWFwX3Bh
dGNoX2FyZWEodW5zaWduZWQgbG9uZyBhZGRyKQogCXB0ZV90ICpwdGVwOwogCXBtZF90ICpwbWRw
OwogCXB1ZF90ICpwdWRwOworCXA0ZF90ICpwNGRwOwogCXBnZF90ICpwZ2RwOwogCiAJcGdkcCA9
IHBnZF9vZmZzZXRfayhhZGRyKTsKIAlpZiAodW5saWtlbHkoIXBnZHApKQogCQlyZXR1cm4gLUVJ
TlZBTDsKIAotCXB1ZHAgPSBwdWRfb2Zmc2V0KHBnZHAsIGFkZHIpOworCXA0ZHAgPSBwNGRfb2Zm
c2V0KHBnZHAsIGFkZHIpOworCWlmICh1bmxpa2VseSghcDRkcCkpCisJCXJldHVybiAtRUlOVkFM
OworCisJcHVkcCA9IHB1ZF9vZmZzZXQocDRkcCwgYWRkcik7CiAJaWYgKHVubGlrZWx5KCFwdWRw
KSkKIAkJcmV0dXJuIC1FSU5WQUw7CiAKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9tbS9ib29r
M3M2NC9oYXNoX3BndGFibGUuYyBiL2FyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9oYXNoX3BndGFi
bGUuYwppbmRleCA2NDczM2I5Y2IyMGEuLjljZDE1OTM3ZTg4YSAxMDA2NDQKLS0tIGEvYXJjaC9w
b3dlcnBjL21tL2Jvb2szczY0L2hhc2hfcGd0YWJsZS5jCisrKyBiL2FyY2gvcG93ZXJwYy9tbS9i
b29rM3M2NC9oYXNoX3BndGFibGUuYwpAQCAtMTQ4LDYgKzE0OCw3IEBAIHZvaWQgaGFzaF9fdm1l
bW1hcF9yZW1vdmVfbWFwcGluZyh1bnNpZ25lZCBsb25nIHN0YXJ0LAogaW50IGhhc2hfX21hcF9r
ZXJuZWxfcGFnZSh1bnNpZ25lZCBsb25nIGVhLCB1bnNpZ25lZCBsb25nIHBhLCBwZ3Byb3RfdCBw
cm90KQogewogCXBnZF90ICpwZ2RwOworCXA0ZF90ICpwNGRwOwogCXB1ZF90ICpwdWRwOwogCXBt
ZF90ICpwbWRwOwogCXB0ZV90ICpwdGVwOwpAQCAtMTU1LDcgKzE1Niw4IEBAIGludCBoYXNoX19t
YXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwgcGdwcm90
X3QgcHJvdCkKIAlCVUlMRF9CVUdfT04oVEFTS19TSVpFX1VTRVI2NCA+IEhfUEdUQUJMRV9SQU5H
RSk7CiAJaWYgKHNsYWJfaXNfYXZhaWxhYmxlKCkpIHsKIAkJcGdkcCA9IHBnZF9vZmZzZXRfayhl
YSk7Ci0JCXB1ZHAgPSBwdWRfYWxsb2MoJmluaXRfbW0sIHBnZHAsIGVhKTsKKwkJcDRkcCA9IHA0
ZF9vZmZzZXQocGdkcCwgZWEpOworCQlwdWRwID0gcHVkX2FsbG9jKCZpbml0X21tLCBwNGRwLCBl
YSk7CiAJCWlmICghcHVkcCkKIAkJCXJldHVybiAtRU5PTUVNOwogCQlwbWRwID0gcG1kX2FsbG9j
KCZpbml0X21tLCBwdWRwLCBlYSk7CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNz
NjQvcmFkaXhfcGd0YWJsZS5jIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L3JhZGl4X3BndGFi
bGUuYwppbmRleCBkZDFiZWE0NTMyNWMuLmZjM2QwYjA0NjBiMCAxMDA2NDQKLS0tIGEvYXJjaC9w
b3dlcnBjL21tL2Jvb2szczY0L3JhZGl4X3BndGFibGUuYworKysgYi9hcmNoL3Bvd2VycGMvbW0v
Ym9vazNzNjQvcmFkaXhfcGd0YWJsZS5jCkBAIC02NCwxNyArNjQsMTkgQEAgc3RhdGljIGludCBl
YXJseV9tYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwK
IHsKIAl1bnNpZ25lZCBsb25nIHBmbiA9IHBhID4+IFBBR0VfU0hJRlQ7CiAJcGdkX3QgKnBnZHA7
CisJcDRkX3QgKnA0ZHA7CiAJcHVkX3QgKnB1ZHA7CiAJcG1kX3QgKnBtZHA7CiAJcHRlX3QgKnB0
ZXA7CiAKIAlwZ2RwID0gcGdkX29mZnNldF9rKGVhKTsKLQlpZiAocGdkX25vbmUoKnBnZHApKSB7
CisJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOworCWlmIChwNGRfbm9uZSgqcDRkcCkpIHsK
IAkJcHVkcCA9IGVhcmx5X2FsbG9jX3BndGFibGUoUFVEX1RBQkxFX1NJWkUsIG5pZCwKIAkJCQkJ
CXJlZ2lvbl9zdGFydCwgcmVnaW9uX2VuZCk7Ci0JCXBnZF9wb3B1bGF0ZSgmaW5pdF9tbSwgcGdk
cCwgcHVkcCk7CisJCXA0ZF9wb3B1bGF0ZSgmaW5pdF9tbSwgcDRkcCwgcHVkcCk7CiAJfQotCXB1
ZHAgPSBwdWRfb2Zmc2V0KHBnZHAsIGVhKTsKKwlwdWRwID0gcHVkX29mZnNldChwNGRwLCBlYSk7
CiAJaWYgKG1hcF9wYWdlX3NpemUgPT0gUFVEX1NJWkUpIHsKIAkJcHRlcCA9IChwdGVfdCAqKXB1
ZHA7CiAJCWdvdG8gc2V0X3RoZV9wdGU7CkBAIC0xMTQsNiArMTE2LDcgQEAgc3RhdGljIGludCBf
X21hcF9rZXJuZWxfcGFnZSh1bnNpZ25lZCBsb25nIGVhLCB1bnNpZ25lZCBsb25nIHBhLAogewog
CXVuc2lnbmVkIGxvbmcgcGZuID0gcGEgPj4gUEFHRV9TSElGVDsKIAlwZ2RfdCAqcGdkcDsKKwlw
NGRfdCAqcDRkcDsKIAlwdWRfdCAqcHVkcDsKIAlwbWRfdCAqcG1kcDsKIAlwdGVfdCAqcHRlcDsK
QEAgLTEzNiw3ICsxMzksOCBAQCBzdGF0aWMgaW50IF9fbWFwX2tlcm5lbF9wYWdlKHVuc2lnbmVk
IGxvbmcgZWEsIHVuc2lnbmVkIGxvbmcgcGEsCiAJICogYm9vdC4KIAkgKi8KIAlwZ2RwID0gcGdk
X29mZnNldF9rKGVhKTsKLQlwdWRwID0gcHVkX2FsbG9jKCZpbml0X21tLCBwZ2RwLCBlYSk7CisJ
cDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOworCXB1ZHAgPSBwdWRfYWxsb2MoJmluaXRfbW0s
IHA0ZHAsIGVhKTsKIAlpZiAoIXB1ZHApCiAJCXJldHVybiAtRU5PTUVNOwogCWlmIChtYXBfcGFn
ZV9zaXplID09IFBVRF9TSVpFKSB7CkBAIC0xNzMsNiArMTc3LDcgQEAgdm9pZCByYWRpeF9fY2hh
bmdlX21lbW9yeV9yYW5nZSh1bnNpZ25lZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCwK
IHsKIAl1bnNpZ25lZCBsb25nIGlkeDsKIAlwZ2RfdCAqcGdkcDsKKwlwNGRfdCAqcDRkcDsKIAlw
dWRfdCAqcHVkcDsKIAlwbWRfdCAqcG1kcDsKIAlwdGVfdCAqcHRlcDsKQEAgLTE4NSw3ICsxOTAs
OCBAQCB2b2lkIHJhZGl4X19jaGFuZ2VfbWVtb3J5X3JhbmdlKHVuc2lnbmVkIGxvbmcgc3RhcnQs
IHVuc2lnbmVkIGxvbmcgZW5kLAogCiAJZm9yIChpZHggPSBzdGFydDsgaWR4IDwgZW5kOyBpZHgg
Kz0gUEFHRV9TSVpFKSB7CiAJCXBnZHAgPSBwZ2Rfb2Zmc2V0X2soaWR4KTsKLQkJcHVkcCA9IHB1
ZF9hbGxvYygmaW5pdF9tbSwgcGdkcCwgaWR4KTsKKwkJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwg
aWR4KTsKKwkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9tbSwgcDRkcCwgaWR4KTsKIAkJaWYgKCFw
dWRwKQogCQkJY29udGludWU7CiAJCWlmIChwdWRfaXNfbGVhZigqcHVkcCkpIHsKQEAgLTg0Nyw2
ICs4NTMsNyBAQCBzdGF0aWMgdm9pZCBfX21lbWluaXQgcmVtb3ZlX3BhZ2V0YWJsZSh1bnNpZ25l
ZCBsb25nIHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCkKIAl1bnNpZ25lZCBsb25nIGFkZHIsIG5l
eHQ7CiAJcHVkX3QgKnB1ZF9iYXNlOwogCXBnZF90ICpwZ2Q7CisJcDRkX3QgKnA0ZDsKIAogCXNw
aW5fbG9jaygmaW5pdF9tbS5wYWdlX3RhYmxlX2xvY2spOwogCkBAIC04NTQsMTUgKzg2MSwxNiBA
QCBzdGF0aWMgdm9pZCBfX21lbWluaXQgcmVtb3ZlX3BhZ2V0YWJsZSh1bnNpZ25lZCBsb25nIHN0
YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCkKIAkJbmV4dCA9IHBnZF9hZGRyX2VuZChhZGRyLCBlbmQp
OwogCiAJCXBnZCA9IHBnZF9vZmZzZXRfayhhZGRyKTsKLQkJaWYgKCFwZ2RfcHJlc2VudCgqcGdk
KSkKKwkJcDRkID0gcDRkX29mZnNldChwZ2QsIGFkZHIpOworCQlpZiAoIXA0ZF9wcmVzZW50KCpw
NGQpKQogCQkJY29udGludWU7CiAKLQkJaWYgKHBnZF9pc19sZWFmKCpwZ2QpKSB7Ci0JCQlzcGxp
dF9rZXJuZWxfbWFwcGluZyhhZGRyLCBlbmQsIFBHRElSX1NJWkUsIChwdGVfdCAqKXBnZCk7CisJ
CWlmIChwNGRfaXNfbGVhZigqcDRkKSkgeworCQkJc3BsaXRfa2VybmVsX21hcHBpbmcoYWRkciwg
ZW5kLCBQNERfU0laRSwgKHB0ZV90ICopcDRkKTsKIAkJCWNvbnRpbnVlOwogCQl9CiAKLQkJcHVk
X2Jhc2UgPSAocHVkX3QgKilwZ2RfcGFnZV92YWRkcigqcGdkKTsKKwkJcHVkX2Jhc2UgPSAocHVk
X3QgKilwNGRfcGFnZV92YWRkcigqcDRkKTsKIAkJcmVtb3ZlX3B1ZF90YWJsZShwdWRfYmFzZSwg
YWRkciwgbmV4dCk7CiAJfQogCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQv
c3VicGFnZV9wcm90LmMgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvc3VicGFnZV9wcm90LmMK
aW5kZXggMmVmMjRhNTNmNGM5Li4yNWEwYzA0NGJkOTMgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJw
Yy9tbS9ib29rM3M2NC9zdWJwYWdlX3Byb3QuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNz
NjQvc3VicGFnZV9wcm90LmMKQEAgLTU0LDE1ICs1NCwxNyBAQCBzdGF0aWMgdm9pZCBocHRlX2Zs
dXNoX3JhbmdlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIGFkZHIsCiAJCQkg
ICAgIGludCBucGFnZXMpCiB7CiAJcGdkX3QgKnBnZDsKKwlwNGRfdCAqcDRkOwogCXB1ZF90ICpw
dWQ7CiAJcG1kX3QgKnBtZDsKIAlwdGVfdCAqcHRlOwogCXNwaW5sb2NrX3QgKnB0bDsKIAogCXBn
ZCA9IHBnZF9vZmZzZXQobW0sIGFkZHIpOwotCWlmIChwZ2Rfbm9uZSgqcGdkKSkKKwlwNGQgPSBw
NGRfb2Zmc2V0KHBnZCwgYWRkcik7CisJaWYgKHA0ZF9ub25lKCpwNGQpKQogCQlyZXR1cm47Ci0J
cHVkID0gcHVkX29mZnNldChwZ2QsIGFkZHIpOworCXB1ZCA9IHB1ZF9vZmZzZXQocDRkLCBhZGRy
KTsKIAlpZiAocHVkX25vbmUoKnB1ZCkpCiAJCXJldHVybjsKIAlwbWQgPSBwbWRfb2Zmc2V0KHB1
ZCwgYWRkcik7CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vaHVnZXRsYnBhZ2UuYyBiL2Fy
Y2gvcG93ZXJwYy9tbS9odWdldGxicGFnZS5jCmluZGV4IDczZDQ4NzNmYzdmOC4uNDNkNDYzZjIw
ZmMzIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vaHVnZXRsYnBhZ2UuYworKysgYi9hcmNo
L3Bvd2VycGMvbW0vaHVnZXRsYnBhZ2UuYwpAQCAtMTEyLDYgKzExMiw3IEBAIHN0YXRpYyBpbnQg
X19odWdlcHRlX2FsbG9jKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBodWdlcGRfdCAqaHBkcCwKIHB0
ZV90ICpodWdlX3B0ZV9hbGxvYyhzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBh
ZGRyLCB1bnNpZ25lZCBsb25nIHN6KQogewogCXBnZF90ICpwZzsKKwlwNGRfdCAqcDQ7CiAJcHVk
X3QgKnB1OwogCXBtZF90ICpwbTsKIAlodWdlcGRfdCAqaHBkcCA9IE5VTEw7CkBAIC0xMjEsMjAg
KzEyMiwyMSBAQCBwdGVfdCAqaHVnZV9wdGVfYWxsb2Moc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVu
c2lnbmVkIGxvbmcgYWRkciwgdW5zaWduZWQgbG9uZyBzegogCiAJYWRkciAmPSB+KHN6LTEpOwog
CXBnID0gcGdkX29mZnNldChtbSwgYWRkcik7CisJcDQgPSBwNGRfb2Zmc2V0KHBnLCBhZGRyKTsK
IAogI2lmZGVmIENPTkZJR19QUENfQk9PSzNTXzY0CiAJaWYgKHBzaGlmdCA9PSBQR0RJUl9TSElG
VCkKIAkJLyogMTZHQiBodWdlIHBhZ2UgKi8KLQkJcmV0dXJuIChwdGVfdCAqKSBwZzsKKwkJcmV0
dXJuIChwdGVfdCAqKSBwNDsKIAllbHNlIGlmIChwc2hpZnQgPiBQVURfU0hJRlQpIHsKIAkJLyoK
IAkJICogV2UgbmVlZCB0byB1c2UgaHVnZXBkIHRhYmxlCiAJCSAqLwogCQlwdGwgPSAmbW0tPnBh
Z2VfdGFibGVfbG9jazsKLQkJaHBkcCA9IChodWdlcGRfdCAqKXBnOworCQlocGRwID0gKGh1Z2Vw
ZF90ICopcDQ7CiAJfSBlbHNlIHsKIAkJcGRzaGlmdCA9IFBVRF9TSElGVDsKLQkJcHUgPSBwdWRf
YWxsb2MobW0sIHBnLCBhZGRyKTsKKwkJcHUgPSBwdWRfYWxsb2MobW0sIHA0LCBhZGRyKTsKIAkJ
aWYgKCFwdSkKIAkJCXJldHVybiBOVUxMOwogCQlpZiAocHNoaWZ0ID09IFBVRF9TSElGVCkKQEAg
LTE1OSwxMCArMTYxLDEwIEBAIHB0ZV90ICpodWdlX3B0ZV9hbGxvYyhzdHJ1Y3QgbW1fc3RydWN0
ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyLCB1bnNpZ25lZCBsb25nIHN6CiAjZWxzZQogCWlmIChw
c2hpZnQgPj0gUEdESVJfU0hJRlQpIHsKIAkJcHRsID0gJm1tLT5wYWdlX3RhYmxlX2xvY2s7Ci0J
CWhwZHAgPSAoaHVnZXBkX3QgKilwZzsKKwkJaHBkcCA9IChodWdlcGRfdCAqKXA0OwogCX0gZWxz
ZSB7CiAJCXBkc2hpZnQgPSBQVURfU0hJRlQ7Ci0JCXB1ID0gcHVkX2FsbG9jKG1tLCBwZywgYWRk
cik7CisJCXB1ID0gcHVkX2FsbG9jKG1tLCBwNCwgYWRkcik7CiAJCWlmICghcHUpCiAJCQlyZXR1
cm4gTlVMTDsKIAkJaWYgKHBzaGlmdCA+PSBQVURfU0hJRlQpIHsKQEAgLTM4NCw3ICszODYsNyBA
QCBzdGF0aWMgdm9pZCBodWdldGxiX2ZyZWVfcG1kX3JhbmdlKHN0cnVjdCBtbXVfZ2F0aGVyICp0
bGIsIHB1ZF90ICpwdWQsCiAJbW1fZGVjX25yX3BtZHModGxiLT5tbSk7CiB9CiAKLXN0YXRpYyB2
b2lkIGh1Z2V0bGJfZnJlZV9wdWRfcmFuZ2Uoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwgcGdkX3Qg
KnBnZCwKK3N0YXRpYyB2b2lkIGh1Z2V0bGJfZnJlZV9wdWRfcmFuZ2Uoc3RydWN0IG1tdV9nYXRo
ZXIgKnRsYiwgcDRkX3QgKnA0ZCwKIAkJCQkgICB1bnNpZ25lZCBsb25nIGFkZHIsIHVuc2lnbmVk
IGxvbmcgZW5kLAogCQkJCSAgIHVuc2lnbmVkIGxvbmcgZmxvb3IsIHVuc2lnbmVkIGxvbmcgY2Vp
bGluZykKIHsKQEAgLTM5NCw3ICszOTYsNyBAQCBzdGF0aWMgdm9pZCBodWdldGxiX2ZyZWVfcHVk
X3JhbmdlKHN0cnVjdCBtbXVfZ2F0aGVyICp0bGIsIHBnZF90ICpwZ2QsCiAKIAlzdGFydCA9IGFk
ZHI7CiAJZG8gewotCQlwdWQgPSBwdWRfb2Zmc2V0KHBnZCwgYWRkcik7CisJCXB1ZCA9IHB1ZF9v
ZmZzZXQocDRkLCBhZGRyKTsKIAkJbmV4dCA9IHB1ZF9hZGRyX2VuZChhZGRyLCBlbmQpOwogCQlp
ZiAoIWlzX2h1Z2VwZChfX2h1Z2VwZChwdWRfdmFsKCpwdWQpKSkpIHsKIAkJCWlmIChwdWRfbm9u
ZV9vcl9jbGVhcl9iYWQocHVkKSkKQEAgLTQyOSw4ICs0MzEsOCBAQCBzdGF0aWMgdm9pZCBodWdl
dGxiX2ZyZWVfcHVkX3JhbmdlKHN0cnVjdCBtbXVfZ2F0aGVyICp0bGIsIHBnZF90ICpwZ2QsCiAJ
aWYgKGVuZCAtIDEgPiBjZWlsaW5nIC0gMSkKIAkJcmV0dXJuOwogCi0JcHVkID0gcHVkX29mZnNl
dChwZ2QsIHN0YXJ0KTsKLQlwZ2RfY2xlYXIocGdkKTsKKwlwdWQgPSBwdWRfb2Zmc2V0KHA0ZCwg
c3RhcnQpOworCXA0ZF9jbGVhcihwNGQpOwogCXB1ZF9mcmVlX3RsYih0bGIsIHB1ZCwgc3RhcnQp
OwogCW1tX2RlY19ucl9wdWRzKHRsYi0+bW0pOwogfQpAQCAtNDQzLDYgKzQ0NSw3IEBAIHZvaWQg
aHVnZXRsYl9mcmVlX3BnZF9yYW5nZShzdHJ1Y3QgbW11X2dhdGhlciAqdGxiLAogCQkJICAgIHVu
c2lnbmVkIGxvbmcgZmxvb3IsIHVuc2lnbmVkIGxvbmcgY2VpbGluZykKIHsKIAlwZ2RfdCAqcGdk
OworCXA0ZF90ICpwNGQ7CiAJdW5zaWduZWQgbG9uZyBuZXh0OwogCiAJLyoKQEAgLTQ2NSwxMCAr
NDY4LDExIEBAIHZvaWQgaHVnZXRsYl9mcmVlX3BnZF9yYW5nZShzdHJ1Y3QgbW11X2dhdGhlciAq
dGxiLAogCWRvIHsKIAkJbmV4dCA9IHBnZF9hZGRyX2VuZChhZGRyLCBlbmQpOwogCQlwZ2QgPSBw
Z2Rfb2Zmc2V0KHRsYi0+bW0sIGFkZHIpOworCQlwNGQgPSBwNGRfb2Zmc2V0KHBnZCwgYWRkcik7
CiAJCWlmICghaXNfaHVnZXBkKF9faHVnZXBkKHBnZF92YWwoKnBnZCkpKSkgewotCQkJaWYgKHBn
ZF9ub25lX29yX2NsZWFyX2JhZChwZ2QpKQorCQkJaWYgKHA0ZF9ub25lX29yX2NsZWFyX2JhZChw
NGQpKQogCQkJCWNvbnRpbnVlOwotCQkJaHVnZXRsYl9mcmVlX3B1ZF9yYW5nZSh0bGIsIHBnZCwg
YWRkciwgbmV4dCwgZmxvb3IsIGNlaWxpbmcpOworCQkJaHVnZXRsYl9mcmVlX3B1ZF9yYW5nZSh0
bGIsIHA0ZCwgYWRkciwgbmV4dCwgZmxvb3IsIGNlaWxpbmcpOwogCQl9IGVsc2UgewogCQkJdW5z
aWduZWQgbG9uZyBtb3JlOwogCQkJLyoKQEAgLTQ4MSw3ICs0ODUsNyBAQCB2b2lkIGh1Z2V0bGJf
ZnJlZV9wZ2RfcmFuZ2Uoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwKIAkJCWlmIChtb3JlID4gbmV4
dCkKIAkJCQluZXh0ID0gbW9yZTsKIAotCQkJZnJlZV9odWdlcGRfcmFuZ2UodGxiLCAoaHVnZXBk
X3QgKilwZ2QsIFBHRElSX1NISUZULAorCQkJZnJlZV9odWdlcGRfcmFuZ2UodGxiLCAoaHVnZXBk
X3QgKilwNGQsIFBHRElSX1NISUZULAogCQkJCQkgIGFkZHIsIG5leHQsIGZsb29yLCBjZWlsaW5n
KTsKIAkJfQogCX0gd2hpbGUgKGFkZHIgPSBuZXh0LCBhZGRyICE9IGVuZCk7CmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvbW0va2FzYW4va2FzYW5faW5pdF8zMi5jIGIvYXJjaC9wb3dlcnBjL21t
L2thc2FuL2thc2FuX2luaXRfMzIuYwppbmRleCBiMTk1ZDA4NTk3MGEuLmM4MjNmMjk0ZWNmMCAx
MDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL2thc2FuL2thc2FuX2luaXRfMzIuYworKysgYi9h
cmNoL3Bvd2VycGMvbW0va2FzYW4va2FzYW5faW5pdF8zMi5jCkBAIC0zNyw3ICszNyw2IEBAIHN0
YXRpYyBpbnQgX19pbml0IGthc2FuX2luaXRfc2hhZG93X3BhZ2VfdGFibGVzKHVuc2lnbmVkIGxv
bmcga19zdGFydCwgdW5zaWduZWQKIAlwdGVfdCAqbmV3ID0gTlVMTDsKIAogCXBtZCA9IHBtZF9w
dHJfayhrX3N0YXJ0KTsKLQogCWZvciAoa19jdXIgPSBrX3N0YXJ0OyBrX2N1ciAhPSBrX2VuZDsg
a19jdXIgPSBrX25leHQsIHBtZCsrKSB7CiAJCWtfbmV4dCA9IHBnZF9hZGRyX2VuZChrX2N1ciwg
a19lbmQpOwogCQlpZiAoKHZvaWQgKilwbWRfcGFnZV92YWRkcigqcG1kKSAhPSBrYXNhbl9lYXJs
eV9zaGFkb3dfcHRlKQpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL25vaGFzaC9ib29rM2Vf
cGd0YWJsZS5jIGIvYXJjaC9wb3dlcnBjL21tL25vaGFzaC9ib29rM2VfcGd0YWJsZS5jCmluZGV4
IDQ2MzdmZGQ0NjljZi4uNzc4ODRlMjQyODFkIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0v
bm9oYXNoL2Jvb2szZV9wZ3RhYmxlLmMKKysrIGIvYXJjaC9wb3dlcnBjL21tL25vaGFzaC9ib29r
M2VfcGd0YWJsZS5jCkBAIC03Myw2ICs3Myw3IEBAIHN0YXRpYyB2b2lkIF9faW5pdCAqZWFybHlf
YWxsb2NfcGd0YWJsZSh1bnNpZ25lZCBsb25nIHNpemUpCiBpbnQgX19yZWYgbWFwX2tlcm5lbF9w
YWdlKHVuc2lnbmVkIGxvbmcgZWEsIHVuc2lnbmVkIGxvbmcgcGEsIHBncHJvdF90IHByb3QpCiB7
CiAJcGdkX3QgKnBnZHA7CisJcDRkX3QgKnA0ZHA7CiAJcHVkX3QgKnB1ZHA7CiAJcG1kX3QgKnBt
ZHA7CiAJcHRlX3QgKnB0ZXA7CkBAIC04MCw3ICs4MSw4IEBAIGludCBfX3JlZiBtYXBfa2VybmVs
X3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwgcGdwcm90X3QgcHJvdCkK
IAlCVUlMRF9CVUdfT04oVEFTS19TSVpFX1VTRVI2NCA+IFBHVEFCTEVfUkFOR0UpOwogCWlmIChz
bGFiX2lzX2F2YWlsYWJsZSgpKSB7CiAJCXBnZHAgPSBwZ2Rfb2Zmc2V0X2soZWEpOwotCQlwdWRw
ID0gcHVkX2FsbG9jKCZpbml0X21tLCBwZ2RwLCBlYSk7CisJCXA0ZHAgPSBwNGRfb2Zmc2V0KHBn
ZHAsIGVhKTsKKwkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9tbSwgcDRkcCwgZWEpOwogCQlpZiAo
IXB1ZHApCiAJCQlyZXR1cm4gLUVOT01FTTsKIAkJcG1kcCA9IHBtZF9hbGxvYygmaW5pdF9tbSwg
cHVkcCwgZWEpOwpAQCAtOTEsMTMgKzkzLDEyIEBAIGludCBfX3JlZiBtYXBfa2VybmVsX3BhZ2Uo
dW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQgbG9uZyBwYSwgcGdwcm90X3QgcHJvdCkKIAkJCXJl
dHVybiAtRU5PTUVNOwogCX0gZWxzZSB7CiAJCXBnZHAgPSBwZ2Rfb2Zmc2V0X2soZWEpOwotI2lm
bmRlZiBfX1BBR0VUQUJMRV9QVURfRk9MREVECi0JCWlmIChwZ2Rfbm9uZSgqcGdkcCkpIHsKLQkJ
CXB1ZHAgPSBlYXJseV9hbGxvY19wZ3RhYmxlKFBVRF9UQUJMRV9TSVpFKTsKLQkJCXBnZF9wb3B1
bGF0ZSgmaW5pdF9tbSwgcGdkcCwgcHVkcCk7CisJCXA0ZHAgPSBwNGRfb2Zmc2V0KHBnZHAsIGVh
KTsKKwkJaWYgKHA0ZF9ub25lKCpwNGRwKSkgeworCQkJcG1kcCA9IGVhcmx5X2FsbG9jX3BndGFi
bGUoUE1EX1RBQkxFX1NJWkUpOworCQkJcDRkX3BvcHVsYXRlKCZpbml0X21tLCBwNGRwLCBwbWRw
KTsKIAkJfQotI2VuZGlmIC8qICFfX1BBR0VUQUJMRV9QVURfRk9MREVEICovCi0JCXB1ZHAgPSBw
dWRfb2Zmc2V0KHBnZHAsIGVhKTsKKwkJcHVkcCA9IHB1ZF9vZmZzZXQocDRkcCwgZWEpOwogCQlp
ZiAocHVkX25vbmUoKnB1ZHApKSB7CiAJCQlwbWRwID0gZWFybHlfYWxsb2NfcGd0YWJsZShQTURf
VEFCTEVfU0laRSk7CiAJCQlwdWRfcG9wdWxhdGUoJmluaXRfbW0sIHB1ZHAsIHBtZHApOwpkaWZm
IC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL3BndGFibGUuYyBiL2FyY2gvcG93ZXJwYy9tbS9wZ3Rh
YmxlLmMKaW5kZXggZTM3NTliNjlmODFiLi5jMjQ5OTI3MWY2YzEgMTAwNjQ0Ci0tLSBhL2FyY2gv
cG93ZXJwYy9tbS9wZ3RhYmxlLmMKKysrIGIvYXJjaC9wb3dlcnBjL21tL3BndGFibGUuYwpAQCAt
MjY1LDYgKzI2NSw3IEBAIGludCBodWdlX3B0ZXBfc2V0X2FjY2Vzc19mbGFncyhzdHJ1Y3Qgdm1f
YXJlYV9zdHJ1Y3QgKnZtYSwKIHZvaWQgYXNzZXJ0X3B0ZV9sb2NrZWQoc3RydWN0IG1tX3N0cnVj
dCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcikKIHsKIAlwZ2RfdCAqcGdkOworCXA0ZF90ICpwNGQ7
CiAJcHVkX3QgKnB1ZDsKIAlwbWRfdCAqcG1kOwogCkBAIC0yNzIsNyArMjczLDkgQEAgdm9pZCBh
c3NlcnRfcHRlX2xvY2tlZChzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRy
KQogCQlyZXR1cm47CiAJcGdkID0gbW0tPnBnZCArIHBnZF9pbmRleChhZGRyKTsKIAlCVUdfT04o
cGdkX25vbmUoKnBnZCkpOwotCXB1ZCA9IHB1ZF9vZmZzZXQocGdkLCBhZGRyKTsKKwlwNGQgPSBw
NGRfb2Zmc2V0KHBnZCwgYWRkcik7CisJQlVHX09OKHA0ZF9ub25lKCpwNGQpKTsKKwlwdWQgPSBw
dWRfb2Zmc2V0KHA0ZCwgYWRkcik7CiAJQlVHX09OKHB1ZF9ub25lKCpwdWQpKTsKIAlwbWQgPSBw
bWRfb2Zmc2V0KHB1ZCwgYWRkcik7CiAJLyoKQEAgLTMxMiwxMiArMzE1LDEzIEBAIEVYUE9SVF9T
WU1CT0xfR1BMKHZtYWxsb2NfdG9fcGh5cyk7CiBwdGVfdCAqX19maW5kX2xpbnV4X3B0ZShwZ2Rf
dCAqcGdkaXIsIHVuc2lnbmVkIGxvbmcgZWEsCiAJCQlib29sICppc190aHAsIHVuc2lnbmVkICpo
cGFnZV9zaGlmdCkKIHsKLQlwZ2RfdCBwZ2QsICpwZ2RwOworCXBnZF90ICpwZ2RwOworCXA0ZF90
IHA0ZCwgKnA0ZHA7CiAJcHVkX3QgcHVkLCAqcHVkcDsKIAlwbWRfdCBwbWQsICpwbWRwOwogCXB0
ZV90ICpyZXRfcHRlOwogCWh1Z2VwZF90ICpocGRwID0gTlVMTDsKLQl1bnNpZ25lZCBwZHNoaWZ0
ID0gUEdESVJfU0hJRlQ7CisJdW5zaWduZWQgcGRzaGlmdDsKIAogCWlmIChocGFnZV9zaGlmdCkK
IAkJKmhwYWdlX3NoaWZ0ID0gMDsKQEAgLTMyNSwyNCArMzI5LDI4IEBAIHB0ZV90ICpfX2ZpbmRf
bGludXhfcHRlKHBnZF90ICpwZ2RpciwgdW5zaWduZWQgbG9uZyBlYSwKIAlpZiAoaXNfdGhwKQog
CQkqaXNfdGhwID0gZmFsc2U7CiAKLQlwZ2RwID0gcGdkaXIgKyBwZ2RfaW5kZXgoZWEpOwotCXBn
ZCAgPSBSRUFEX09OQ0UoKnBnZHApOwogCS8qCiAJICogQWx3YXlzIG9wZXJhdGUgb24gdGhlIGxv
Y2FsIHN0YWNrIHZhbHVlLiBUaGlzIG1ha2Ugc3VyZSB0aGUKIAkgKiB2YWx1ZSBkb24ndCBnZXQg
dXBkYXRlZCBieSBhIHBhcmFsbGVsIFRIUCBzcGxpdC9jb2xsYXBzZSwKIAkgKiBwYWdlIGZhdWx0
IG9yIGEgcGFnZSB1bm1hcC4gVGhlIHJldHVybiBwdGVfdCAqIGlzIHN0aWxsIG5vdAogCSAqIHN0
YWJsZS4gU28gc2hvdWxkIGJlIGNoZWNrZWQgdGhlcmUgZm9yIGFib3ZlIGNvbmRpdGlvbnMuCisJ
ICogVG9wIGxldmVsIGlzIGFuIGV4Y2VwdGlvbiBiZWNhdXNlIGl0IGlzIGZvbGRlZCBpbnRvIHA0
ZC4KIAkgKi8KLQlpZiAocGdkX25vbmUocGdkKSkKKwlwZ2RwID0gcGdkaXIgKyBwZ2RfaW5kZXgo
ZWEpOworCXA0ZHAgPSBwNGRfb2Zmc2V0KHBnZHAsIGVhKTsKKwlwNGQgID0gUkVBRF9PTkNFKCpw
NGRwKTsKKwlwZHNoaWZ0ID0gUDREX1NISUZUOworCisJaWYgKHA0ZF9ub25lKHA0ZCkpCiAJCXJl
dHVybiBOVUxMOwogCi0JaWYgKHBnZF9pc19sZWFmKHBnZCkpIHsKLQkJcmV0X3B0ZSA9IChwdGVf
dCAqKXBnZHA7CisJaWYgKHA0ZF9pc19sZWFmKHA0ZCkpIHsKKwkJcmV0X3B0ZSA9IChwdGVfdCAq
KXA0ZHA7CiAJCWdvdG8gb3V0OwogCX0KIAotCWlmIChpc19odWdlcGQoX19odWdlcGQocGdkX3Zh
bChwZ2QpKSkpIHsKLQkJaHBkcCA9IChodWdlcGRfdCAqKSZwZ2Q7CisJaWYgKGlzX2h1Z2VwZChf
X2h1Z2VwZChwNGRfdmFsKHA0ZCkpKSkgeworCQlocGRwID0gKGh1Z2VwZF90ICopJnA0ZDsKIAkJ
Z290byBvdXRfaHVnZTsKIAl9CiAKQEAgLTM1Miw3ICszNjAsNyBAQCBwdGVfdCAqX19maW5kX2xp
bnV4X3B0ZShwZ2RfdCAqcGdkaXIsIHVuc2lnbmVkIGxvbmcgZWEsCiAJICogaXJxIGRpc2FibGVk
CiAJICovCiAJcGRzaGlmdCA9IFBVRF9TSElGVDsKLQlwdWRwID0gcHVkX29mZnNldCgmcGdkLCBl
YSk7CisJcHVkcCA9IHB1ZF9vZmZzZXQoJnA0ZCwgZWEpOwogCXB1ZCAgPSBSRUFEX09OQ0UoKnB1
ZHApOwogCiAJaWYgKHB1ZF9ub25lKHB1ZCkpCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0v
cGd0YWJsZV82NC5jIGIvYXJjaC9wb3dlcnBjL21tL3BndGFibGVfNjQuYwppbmRleCBlNzg4MzJk
Y2U3YmIuLjFmODZhODhmZDRiYiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL3BndGFibGVf
NjQuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vcGd0YWJsZV82NC5jCkBAIC0xMDEsMTMgKzEwMSwx
MyBAQCBFWFBPUlRfU1lNQk9MKF9fcHRlX2ZyYWdfc2l6ZV9zaGlmdCk7CiAKICNpZm5kZWYgX19Q
QUdFVEFCTEVfUFVEX0ZPTERFRAogLyogNCBsZXZlbCBwYWdlIHRhYmxlICovCi1zdHJ1Y3QgcGFn
ZSAqcGdkX3BhZ2UocGdkX3QgcGdkKQorc3RydWN0IHBhZ2UgKnA0ZF9wYWdlKHA0ZF90IHA0ZCkK
IHsKLQlpZiAocGdkX2lzX2xlYWYocGdkKSkgewotCQlWTV9XQVJOX09OKCFwZ2RfaHVnZShwZ2Qp
KTsKLQkJcmV0dXJuIHB0ZV9wYWdlKHBnZF9wdGUocGdkKSk7CisJaWYgKHA0ZF9pc19sZWFmKHA0
ZCkpIHsKKwkJVk1fV0FSTl9PTighcDRkX2h1Z2UocDRkKSk7CisJCXJldHVybiBwdGVfcGFnZShw
NGRfcHRlKHA0ZCkpOwogCX0KLQlyZXR1cm4gdmlydF90b19wYWdlKHBnZF9wYWdlX3ZhZGRyKHBn
ZCkpOworCXJldHVybiB2aXJ0X3RvX3BhZ2UocDRkX3BhZ2VfdmFkZHIocDRkKSk7CiB9CiAjZW5k
aWYKIApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL3B0ZHVtcC9oYXNocGFnZXRhYmxlLmMg
Yi9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL2hhc2hwYWdldGFibGUuYwppbmRleCBiNmVkOTU3ODM4
MmYuLjZhYWViMWViM2I5YyAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL3B0ZHVtcC9oYXNo
cGFnZXRhYmxlLmMKKysrIGIvYXJjaC9wb3dlcnBjL21tL3B0ZHVtcC9oYXNocGFnZXRhYmxlLmMK
QEAgLTQxNyw5ICs0MTcsOSBAQCBzdGF0aWMgdm9pZCB3YWxrX3BtZChzdHJ1Y3QgcGdfc3RhdGUg
KnN0LCBwdWRfdCAqcHVkLCB1bnNpZ25lZCBsb25nIHN0YXJ0KQogCX0KIH0KIAotc3RhdGljIHZv
aWQgd2Fsa19wdWQoc3RydWN0IHBnX3N0YXRlICpzdCwgcGdkX3QgKnBnZCwgdW5zaWduZWQgbG9u
ZyBzdGFydCkKK3N0YXRpYyB2b2lkIHdhbGtfcHVkKHN0cnVjdCBwZ19zdGF0ZSAqc3QsIHA0ZF90
ICpwNGQsIHVuc2lnbmVkIGxvbmcgc3RhcnQpCiB7Ci0JcHVkX3QgKnB1ZCA9IHB1ZF9vZmZzZXQo
cGdkLCAwKTsKKwlwdWRfdCAqcHVkID0gcHVkX29mZnNldChwNGQsIDApOwogCXVuc2lnbmVkIGxv
bmcgYWRkcjsKIAl1bnNpZ25lZCBpbnQgaTsKIApAQCAtNDMxLDYgKzQzMSwyMCBAQCBzdGF0aWMg
dm9pZCB3YWxrX3B1ZChzdHJ1Y3QgcGdfc3RhdGUgKnN0LCBwZ2RfdCAqcGdkLCB1bnNpZ25lZCBs
b25nIHN0YXJ0KQogCX0KIH0KIAorc3RhdGljIHZvaWQgd2Fsa19wNGQoc3RydWN0IHBnX3N0YXRl
ICpzdCwgcGdkX3QgKnBnZCwgdW5zaWduZWQgbG9uZyBzdGFydCkKK3sKKwlwNGRfdCAqcDRkID0g
cDRkX29mZnNldChwZ2QsIDApOworCXVuc2lnbmVkIGxvbmcgYWRkcjsKKwl1bnNpZ25lZCBpbnQg
aTsKKworCWZvciAoaSA9IDA7IGkgPCBQVFJTX1BFUl9QNEQ7IGkrKywgcDRkKyspIHsKKwkJYWRk
ciA9IHN0YXJ0ICsgaSAqIFA0RF9TSVpFOworCQlpZiAoIXA0ZF9ub25lKCpwNGQpKQorCQkJLyog
cDRkIGV4aXN0cyAqLworCQkJd2Fsa19wdWQoc3QsIHA0ZCwgYWRkcik7CisJfQorfQorCiBzdGF0
aWMgdm9pZCB3YWxrX3BhZ2V0YWJsZXMoc3RydWN0IHBnX3N0YXRlICpzdCkKIHsKIAlwZ2RfdCAq
cGdkID0gcGdkX29mZnNldF9rKDBVTCk7CkBAIC00NDUsNyArNDU5LDcgQEAgc3RhdGljIHZvaWQg
d2Fsa19wYWdldGFibGVzKHN0cnVjdCBwZ19zdGF0ZSAqc3QpCiAJCWFkZHIgPSBLRVJOX1ZJUlRf
U1RBUlQgKyBpICogUEdESVJfU0laRTsKIAkJaWYgKCFwZ2Rfbm9uZSgqcGdkKSkKIAkJCS8qIHBn
ZCBleGlzdHMgKi8KLQkJCXdhbGtfcHVkKHN0LCBwZ2QsIGFkZHIpOworCQkJd2Fsa19wNGQoc3Qs
IHBnZCwgYWRkcik7CiAJfQogfQogCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vcHRkdW1w
L3B0ZHVtcC5jIGIvYXJjaC9wb3dlcnBjL21tL3B0ZHVtcC9wdGR1bXAuYwppbmRleCBkOTJiYjhl
YTIyOWMuLjUwN2NiOTc5M2IyNiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL3B0ZHVtcC9w
dGR1bXAuYworKysgYi9hcmNoL3Bvd2VycGMvbW0vcHRkdW1wL3B0ZHVtcC5jCkBAIC0yNzcsOSAr
Mjc3LDkgQEAgc3RhdGljIHZvaWQgd2Fsa19wbWQoc3RydWN0IHBnX3N0YXRlICpzdCwgcHVkX3Qg
KnB1ZCwgdW5zaWduZWQgbG9uZyBzdGFydCkKIAl9CiB9CiAKLXN0YXRpYyB2b2lkIHdhbGtfcHVk
KHN0cnVjdCBwZ19zdGF0ZSAqc3QsIHBnZF90ICpwZ2QsIHVuc2lnbmVkIGxvbmcgc3RhcnQpCitz
dGF0aWMgdm9pZCB3YWxrX3B1ZChzdHJ1Y3QgcGdfc3RhdGUgKnN0LCBwNGRfdCAqcDRkLCB1bnNp
Z25lZCBsb25nIHN0YXJ0KQogewotCXB1ZF90ICpwdWQgPSBwdWRfb2Zmc2V0KHBnZCwgMCk7CisJ
cHVkX3QgKnB1ZCA9IHB1ZF9vZmZzZXQocDRkLCAwKTsKIAl1bnNpZ25lZCBsb25nIGFkZHI7CiAJ
dW5zaWduZWQgaW50IGk7CiAKQEAgLTMwNCwxMSArMzA0LDEzIEBAIHN0YXRpYyB2b2lkIHdhbGtf
cGFnZXRhYmxlcyhzdHJ1Y3QgcGdfc3RhdGUgKnN0KQogCSAqIHRoZSBoYXNoIHBhZ2V0YWJsZS4K
IAkgKi8KIAlmb3IgKGkgPSBwZ2RfaW5kZXgoYWRkcik7IGkgPCBQVFJTX1BFUl9QR0Q7IGkrKywg
cGdkKyssIGFkZHIgKz0gUEdESVJfU0laRSkgewotCQlpZiAoIXBnZF9ub25lKCpwZ2QpICYmICFw
Z2RfaXNfbGVhZigqcGdkKSkKLQkJCS8qIHBnZCBleGlzdHMgKi8KLQkJCXdhbGtfcHVkKHN0LCBw
Z2QsIGFkZHIpOworCQlwNGRfdCAqcDRkID0gcDRkX29mZnNldChwZ2QsIDApOworCisJCWlmICgh
cDRkX25vbmUoKnA0ZCkgJiYgIXA0ZF9pc19sZWFmKCpwNGQpKQorCQkJLyogcDRkIGV4aXN0cyAq
LworCQkJd2Fsa19wdWQoc3QsIHA0ZCwgYWRkcik7CiAJCWVsc2UKLQkJCW5vdGVfcGFnZShzdCwg
YWRkciwgMSwgcGdkX3ZhbCgqcGdkKSk7CisJCQlub3RlX3BhZ2Uoc3QsIGFkZHIsIDEsIHA0ZF92
YWwoKnA0ZCkpOwogCX0KIH0KIApkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL3htb24veG1vbi5j
IGIvYXJjaC9wb3dlcnBjL3htb24veG1vbi5jCmluZGV4IGU4Yzg0ZDI2NTYwMi4uMGUxY2M3Mjc1
NTY2IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMveG1vbi94bW9uLmMKKysrIGIvYXJjaC9wb3dl
cnBjL3htb24veG1vbi5jCkBAIC0zMTMwLDYgKzMxMzAsNyBAQCBzdGF0aWMgdm9pZCBzaG93X3B0
ZSh1bnNpZ25lZCBsb25nIGFkZHIpCiAJc3RydWN0IHRhc2tfc3RydWN0ICp0c2sgPSBOVUxMOwog
CXN0cnVjdCBtbV9zdHJ1Y3QgKm1tOwogCXBnZF90ICpwZ2RwLCAqcGdkaXI7CisJcDRkX3QgKnA0
ZHA7CiAJcHVkX3QgKnB1ZHA7CiAJcG1kX3QgKnBtZHA7CiAJcHRlX3QgKnB0ZXA7CkBAIC0zMTYx
LDIwICszMTYyLDIxIEBAIHN0YXRpYyB2b2lkIHNob3dfcHRlKHVuc2lnbmVkIGxvbmcgYWRkcikK
IAkJcGdkaXIgPSBwZ2Rfb2Zmc2V0KG1tLCAwKTsKIAl9CiAKLQlpZiAocGdkX25vbmUoKnBnZHAp
KSB7Ci0JCXByaW50Zigibm8gbGludXggcGFnZSB0YWJsZSBmb3IgYWRkcmVzc1xuIik7CisJcDRk
cCA9IHA0ZF9vZmZzZXQocGdkcCwgYWRkcik7CisKKwlpZiAocDRkX25vbmUoKnA0ZHApKSB7CisJ
CXByaW50ZigiTm8gdmFsaWQgUDREXG4iKTsKIAkJcmV0dXJuOwogCX0KIAotCXByaW50ZigicGdk
ICBAIDB4JXB4XG4iLCBwZ2Rpcik7Ci0KLQlpZiAocGdkX2lzX2xlYWYoKnBnZHApKSB7Ci0JCWZv
cm1hdF9wdGUocGdkcCwgcGdkX3ZhbCgqcGdkcCkpOworCWlmIChwNGRfaXNfbGVhZigqcDRkcCkp
IHsKKwkJZm9ybWF0X3B0ZShwNGRwLCBwNGRfdmFsKCpwNGRwKSk7CiAJCXJldHVybjsKIAl9Ci0J
cHJpbnRmKCJwZ2RwIEAgMHglcHggPSAweCUwMTZseFxuIiwgcGdkcCwgcGdkX3ZhbCgqcGdkcCkp
OwogCi0JcHVkcCA9IHB1ZF9vZmZzZXQocGdkcCwgYWRkcik7CisJcHJpbnRmKCJwNGRwIEAgMHgl
cHggPSAweCUwMTZseFxuIiwgcDRkcCwgcDRkX3ZhbCgqcDRkcCkpOworCisJcHVkcCA9IHB1ZF9v
ZmZzZXQocDRkcCwgYWRkcik7CiAKIAlpZiAocHVkX25vbmUoKnB1ZHApKSB7CiAJCXByaW50Zigi
Tm8gdmFsaWQgUFVEXG4iKTsKLS0gCjIuMjUuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3Rz
LmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3Bl
bnJpc2MK
