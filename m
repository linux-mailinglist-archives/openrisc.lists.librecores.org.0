Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id DC5F73427DF
	for <lists+openrisc@lfdr.de>; Fri, 19 Mar 2021 22:32:39 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 3E8D7211D8;
	Fri, 19 Mar 2021 22:32:39 +0100 (CET)
Received: from us-smtp-delivery-124.mimecast.com
 (us-smtp-delivery-124.mimecast.com [216.205.24.124])
 by mail.librecores.org (Postfix) with ESMTP id A2E8D2116A
 for <openrisc@lists.librecores.org>; Fri, 19 Mar 2021 15:35:56 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1616164555;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=WBpjOhjd+vmj4vtopl/ZTa7342hJ/aupO1u5xG6bHHA=;
 b=N0fhW12/G7YMyCp4PWhxEEN5Irh7YpbpVXr9OBSiHRDIOd61PYvqeNQ0jDmgjCHp9m6POq
 Popump+mQj/9D2jTZI2BDzNSm4cR0eckkV1yWllMlgtAa2RZJhnP7QjbVr+MXUbYAdDVh9
 UTJsr0zBXK7rfxkm5xjuHFGheRenWWU=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-575-kwSHoBYePxSz9aJeiEKzFQ-1; Fri, 19 Mar 2021 10:35:53 -0400
X-MC-Unique: kwSHoBYePxSz9aJeiEKzFQ-1
Received: from smtp.corp.redhat.com (int-mx02.intmail.prod.int.phx2.redhat.com
 [10.5.11.12])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 5EEEB1092F01;
 Fri, 19 Mar 2021 14:35:46 +0000 (UTC)
Received: from t480s.redhat.com (ovpn-112-11.ams2.redhat.com [10.36.112.11])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 7DE20610F4;
 Fri, 19 Mar 2021 14:35:24 +0000 (UTC)
From: David Hildenbrand <david@redhat.com>
To: linux-kernel@vger.kernel.org
Date: Fri, 19 Mar 2021 15:34:50 +0100
Message-Id: <20210319143452.25948-2-david@redhat.com>
In-Reply-To: <20210319143452.25948-1-david@redhat.com>
References: <20210319143452.25948-1-david@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.12
X-Mailman-Approved-At: Fri, 19 Mar 2021 22:32:37 +0100
Subject: [OpenRISC] [PATCH RFC 1/3] drivers/char: remove /dev/kmem for good
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Andrew Lunn <andrew@lunn.ch>, Hillf Danton <hdanton@sina.com>,
 Michal Hocko <mhocko@suse.com>, David Hildenbrand <david@redhat.com>,
 Viresh Kumar <viresh.kumar@linaro.org>, Liviu Dudau <liviu.dudau@arm.com>,
 Alexandre Belloni <alexandre.belloni@bootlin.com>,
 "Pavel Machek \(CIP\)" <pavel@denx.de>, linux-mm@kvack.org,
 Oleksiy Avramchenko <oleksiy.avramchenko@sonymobile.com>,
 Krzysztof Kozlowski <krzk@kernel.org>, Pavel Machek <pavel@ucw.cz>,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 Linux API <linux-api@vger.kernel.org>, Sam Ravnborg <sam@ravnborg.org>,
 Thomas Gleixner <tglx@linutronix.de>, Jonas Bonn <jonas@southpole.se>,
 Rob Herring <robh@kernel.org>, Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>,
 Brian Cain <bcain@codeaurora.org>, Jonathan Corbet <corbet@lwn.net>,
 linux-sh@vger.kernel.org, Xiaoming Ni <nixiaoming@huawei.com>,
 Gregory Clement <gregory.clement@bootlin.com>, linux-doc@vger.kernel.org,
 Russell King <linux@armlinux.org.uk>, Matthew Wilcox <willy@infradead.org>,
 Corentin Labbe <clabbe@baylibre.com>, Rich Felker <dalias@libc.org>,
 Sebastian Hesselbarth <sebastian.hesselbarth@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp, linux-xtensa@linux-xtensa.org,
 Robert Richter <rric@kernel.org>, Arnd Bergmann <arnd@arndb.de>,
 Steven Rostedt <rostedt@goodmis.org>,
 Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Alexander Viro <viro@zeniv.linux.org.uk>,
 huang ying <huang.ying.caritas@gmail.com>,
 linux-arm-kernel@lists.infradead.org, Kairui Song <kasong@redhat.com>,
 William Cohen <wcohen@redhat.com>, Chris Zankel <chris@zankel.net>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Max Filippov <jcmvbkbc@gmail.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 Randy Dunlap <rdunlap@infradead.org>, Theodore Dubois <tblodt@icloud.com>,
 Minchan Kim <minchan@kernel.org>, "Eric W. Biederman" <ebiederm@xmission.com>,
 "Alexander A. Klimov" <grandmaster@al2klimov.de>,
 Sudeep Holla <sudeep.holla@arm.com>, linux-fsdevel@vger.kernel.org,
 Andrew Morton <akpm@linux-foundation.org>,
 Linus Torvalds <torvalds@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RXhwbG9yaW5nIC9kZXYva21lbSBhbmQgL2Rldi9tZW0gaW4gdGhlIGNvbnRleHQgb2YgbWVtb3J5
IGhvdCh1bilwbHVnIGFuZAptZW1vcnkgYmFsbG9vbmluZywgSSBzdGFydGVkIHF1ZXN0aW9uaW5n
IHRoZSBleGlzdGFuY2Ugb2YgL2Rldi9rbWVtLgoKQ29tcGFyaW5nIGl0IHdpdGggdGhlIC9wcm9j
L2tjb3JlIGltcGxlbWVudGF0aW9uLCBpdCBkb2VzIG5vdCBzZWVtIHRvIGJlCmFibGUgdG8gZGVh
bCB3aXRoIHRoaW5ncyBsaWtlCmEpIFBhZ2VzIHVubWFwcGVkIGZyb20gdGhlIGRpcmVjdCBtYXBw
aW5nIChlLmcuLCB0byBiZSB1c2VkIGJ5IHNlY3JldG1lbSkKICAtPiBrZXJuX2FkZHJfdmFsaWQo
KS4gdmlydF9hZGRyX3ZhbGlkKCkgaXMgbm90IHN1ZmZpY2llbnQuCmIpIFNwZWNpYWwgY2FzZXMg
bGlrZSBnYXJ0IGFwZXJ0dXJlIG1lbW9yeSB0aGF0IGlzIG5vdCB0byBiZSB0b3VjaGVkCiAgLT4g
bWVtX3Bmbl9pc19yYW0oKQpVbmxlc3MgSSBhbSBtaXNzaW5nIHNvbWV0aGluZywgaXQncyBhdCBs
ZWFzdCBicm9rZW4gaW4gc29tZSBjYXNlcyBhbmQgbWlnaHQKZmF1bHQvY3Jhc2ggdGhlIG1hY2hp
bmUuCgpMb29rcyBsaWtlIGl0cyBleGlzdGFuY2UgaGFzIGJlZW4gcXVlc3Rpb25lZCBiZWZvcmUg
aW4gMjAwNSBhbmQgMjAxMApbMV0sIGFmdGVyIH4xMSBhZGRpdGlvbmFsIHllYXJzLCBpdCBtaWdo
dCBtYWtlIHNlbnNlIHRvIHJldml2ZSB0aGUKZGlzY3Vzc2lvbi4KCkNPTkZJR19ERVZLTUVNIGlz
IG9ubHkgZW5hYmxlZCBpbiBhIHNpbmdsZSBkZWZjb25maWcgKG9uIHB1cnBvc2Ugb3IgYnkKbWlz
dGFrZT8pLiBBbGwgZGlzdHJpYnV0aW9ucyBJIGxvb2tlZCBhdCBkaXNhYmxlIGl0LgoKMSkgL2Rl
di9rbWVtIHdhcyBwb3B1bGFyIGZvciByb290a2l0cyBbMl0gYmVmb3JlIGl0IGdvdCBkaXNhYmxl
ZAogICBiYXNpY2FsbHkgZXZlcnl3aGVyZS4gVWJ1bnR1IGRvY3VtZW50cyBbM10gIlRoZXJlIGlz
IG5vIG1vZGVybiB1c2VyIG9mCiAgIC9kZXYva21lbSBhbnkgbW9yZSBiZXlvbmQgYXR0YWNrZXJz
IHVzaW5nIGl0IHRvIGxvYWQga2VybmVsIHJvb3RraXRzLiIuCiAgIFJIRUwgZG9jdW1lbnRzIGlu
IGEgQlogWzVdICJpdCBzZXJ2ZWQgbm8gcHJhY3RpY2FsIHB1cnBvc2Ugb3RoZXIgdGhhbiB0bwog
ICBzZXJ2ZSBhcyBhIHBvdGVudGlhbCBzZWN1cml0eSBwcm9ibGVtIG9yIHRvIGVuYWJsZSBiaW5h
cnkgbW9kdWxlIGRyaXZlcnMKICAgdG8gYWNjZXNzIHN0cnVjdHVyZXMvZnVuY3Rpb25zIHRoZXkg
c2hvdWxkbid0IGJlIHRvdWNoaW5nIgoKMikgL3Byb2Mva2NvcmUgaXMgYSBkZWNlbnQgaW50ZXJm
YWNlIHRvIGhhdmUgYSBjb250cm9sbGVkIHdheSB0byByZWFkCiAgIGtlcm5lbCBtZW1vcnkgZm9y
IGRlYnVnZ2luZyBwdXBvc2VzLiAod2lsbCBuZWVkIHNvbWUgZXh0ZW5zaW9ucyB0bwogICBkZWFs
IHdpdGggbWVtb3J5IG9mZmxpbmluZy91bnBsdWcsIG1lbW9yeSBiYWxsb29uaW5nLCBhbmQgcG9p
c29uZWQKICAgcGFnZXMsIHRob3VnaCkKCjMpIEl0IG1pZ2h0IGJlIHVzZWZ1bCBmb3IgY29ybmVy
IGNhc2UgZGVidWdnaW5nIFsxXS4gS0RCL0tHREIgbWlnaHQgYmUgYQogICBiZXR0ZXIgZml0LCBl
c3BlY2lhbGx5LCB0byB3cml0ZSByYW5kb20gbWVtb3J5OyBoYXJkZXIgdG8gc2hvb3QKICAgeW91
cnNlbGYgaW50byB0aGUgZm9vdC4KCjQpICJLZXJuZWwgTWVtb3J5IEVkaXRvciIgaGFzbid0IHNl
ZW4gYW55IHVwZGF0ZXMgc2luY2UgMjAwMCBhbmQgc2VlbXMKICAgdG8gYmUgaW5jb21wYXRpYmxl
IHdpdGggNjRiaXQgWzFdLiBGb3IgZWR1Y2F0aW9uYWwgcHVycG9zZXMsCiAgIC9wcm9jL2tjb3Jl
IG1pZ2h0IGJlIHVzZWQgdG8gbW9uaXRvciB2YWx1ZSB1cGRhdGVzIC0tIG9yIG9sZGVyCiAgIGtl
cm5lbHMgY2FuIGJlIHVzZWQuCgo1KSBJdCdzIGJyb2tlbiBvbiBhcm02NCwgYW5kIHRoZXJlZm9y
ZSwgY29tcGxldGVseSBkaXNhYmxlZCB0aGVyZS4KCkxvb2tzIGxpa2UgaXQncyBlc3NlbnRpYWxs
eSB1bnVzZWQgYW5kIGhhcyBiZWVuIHJlcGxhY2VkIGJ5IGJldHRlcgpzdWl0ZWQgaW50ZXJmYWNl
cyBmb3IgaW5kaXZpZHVhbCB0YXNrcyAoL3Byb2Mva2NvcmUsIEtEQi9LR0RCKS4gTGV0J3MKanVz
dCByZW1vdmUgaXQuCgpbMV0gaHR0cHM6Ly9sd24ubmV0L0FydGljbGVzLzE0NzkwMS8KWzJdIGh0
dHBzOi8vd3d3LmxpbnV4am91cm5hbC5jb20vYXJ0aWNsZS8xMDUwNQpbM10gaHR0cHM6Ly93aWtp
LnVidW50dS5jb20vU2VjdXJpdHkvRmVhdHVyZXMjQS4yRmRldi4yRmttZW1fZGlzYWJsZWQKWzRd
IGh0dHBzOi8vc291cmNlZm9yZ2UubmV0L3Byb2plY3RzL2ttZS8KWzVdIGh0dHBzOi8vYnVnemls
bGEucmVkaGF0LmNvbS9zaG93X2J1Zy5jZ2k/aWQ9MTU0Nzk2CgpDYzogQW5kcmV3IE1vcnRvbiA8
YWtwbUBsaW51eC1mb3VuZGF0aW9uLm9yZz4KQ2M6IEhpbGxmIERhbnRvbiA8aGRhbnRvbkBzaW5h
LmNvbT4KQ2M6IE1pY2hhbCBIb2NrbyA8bWhvY2tvQHN1c2UuY29tPgpDYzogTWF0dGhldyBXaWxj
b3ggPHdpbGx5QGluZnJhZGVhZC5vcmc+CkNjOiBPbGVrc2l5IEF2cmFtY2hlbmtvIDxvbGVrc2l5
LmF2cmFtY2hlbmtvQHNvbnltb2JpbGUuY29tPgpDYzogU3RldmVuIFJvc3RlZHQgPHJvc3RlZHRA
Z29vZG1pcy5vcmc+CkNjOiBNaW5jaGFuIEtpbSA8bWluY2hhbkBrZXJuZWwub3JnPgpDYzogaHVh
bmcgeWluZyA8aHVhbmcueWluZy5jYXJpdGFzQGdtYWlsLmNvbT4KQ2M6IEpvbmF0aGFuIENvcmJl
dCA8Y29yYmV0QGx3bi5uZXQ+CkNjOiBSdXNzZWxsIEtpbmcgPGxpbnV4QGFybWxpbnV4Lm9yZy51
az4KQ2M6IExpdml1IER1ZGF1IDxsaXZpdS5kdWRhdUBhcm0uY29tPgpDYzogU3VkZWVwIEhvbGxh
IDxzdWRlZXAuaG9sbGFAYXJtLmNvbT4KQ2M6IExvcmVuem8gUGllcmFsaXNpIDxsb3JlbnpvLnBp
ZXJhbGlzaUBhcm0uY29tPgpDYzogQW5kcmV3IEx1bm4gPGFuZHJld0BsdW5uLmNoPgpDYzogR3Jl
Z29yeSBDbGVtZW50IDxncmVnb3J5LmNsZW1lbnRAYm9vdGxpbi5jb20+CkNjOiBTZWJhc3RpYW4g
SGVzc2VsYmFydGggPHNlYmFzdGlhbi5oZXNzZWxiYXJ0aEBnbWFpbC5jb20+CkNjOiBZb3NoaW5v
cmkgU2F0byA8eXNhdG9AdXNlcnMuc291cmNlZm9yZ2UuanA+CkNjOiBCcmlhbiBDYWluIDxiY2Fp
bkBjb2RlYXVyb3JhLm9yZz4KQ2M6IEdlZXJ0IFV5dHRlcmhvZXZlbiA8Z2VlcnRAbGludXgtbTY4
ay5vcmc+CkNjOiBKb25hcyBCb25uIDxqb25hc0Bzb3V0aHBvbGUuc2U+CkNjOiBTdGVmYW4gS3Jp
c3RpYW5zc29uIDxzdGVmYW4ua3Jpc3RpYW5zc29uQHNhdW5hbGFodGkuZmk+CkNjOiBTdGFmZm9y
ZCBIb3JuZSA8c2hvcm5lQGdtYWlsLmNvbT4KQ2M6IFJpY2ggRmVsa2VyIDxkYWxpYXNAbGliYy5v
cmc+CkNjOiAiRGF2aWQgUy4gTWlsbGVyIiA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KQ2M6IENocmlz
IFphbmtlbCA8Y2hyaXNAemFua2VsLm5ldD4KQ2M6IE1heCBGaWxpcHBvdiA8amNtdmJrYmNAZ21h
aWwuY29tPgpDYzogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KQ2M6IEdyZWcgS3JvYWgt
SGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+CkNjOiBBbGV4YW5kZXIgVmlybyA8
dmlyb0B6ZW5pdi5saW51eC5vcmcudWs+CkNjOiBSb2IgSGVycmluZyA8cm9iaEBrZXJuZWwub3Jn
PgpDYzogIlBhdmVsIE1hY2hlayAoQ0lQKSIgPHBhdmVsQGRlbnguZGU+CkNjOiBUaGVvZG9yZSBE
dWJvaXMgPHRibG9kdEBpY2xvdWQuY29tPgpDYzogIkFsZXhhbmRlciBBLiBLbGltb3YiIDxncmFu
ZG1hc3RlckBhbDJrbGltb3YuZGU+CkNjOiBQYXZlbCBNYWNoZWsgPHBhdmVsQHVjdy5jej4KQ2M6
IFNhbSBSYXZuYm9yZyA8c2FtQHJhdm5ib3JnLm9yZz4KQ2M6IEFsZXhhbmRyZSBCZWxsb25pIDxh
bGV4YW5kcmUuYmVsbG9uaUBib290bGluLmNvbT4KQ2M6IEFuZHJleSBaaGl6aGlraW4gPGFuZHJl
eS56aGl6aGlraW5AbGVpY2EtZ2Vvc3lzdGVtcy5jb20+CkNjOiBSYW5keSBEdW5sYXAgPHJkdW5s
YXBAaW5mcmFkZWFkLm9yZz4KQ2M6IEtyenlzenRvZiBLb3psb3dza2kgPGtyemtAa2VybmVsLm9y
Zz4KQ2M6IFZpcmVzaCBLdW1hciA8dmlyZXNoLmt1bWFyQGxpbmFyby5vcmc+CkNjOiAiRXJpYyBX
LiBCaWVkZXJtYW4iIDxlYmllZGVybUB4bWlzc2lvbi5jb20+CkNjOiBUaG9tYXMgR2xlaXhuZXIg
PHRnbHhAbGludXRyb25peC5kZT4KQ2M6IFhpYW9taW5nIE5pIDxuaXhpYW9taW5nQGh1YXdlaS5j
b20+CkNjOiBSb2JlcnQgUmljaHRlciA8cnJpY0BrZXJuZWwub3JnPgpDYzogV2lsbGlhbSBDb2hl
biA8d2NvaGVuQHJlZGhhdC5jb20+CkNjOiBDb3JlbnRpbiBMYWJiZSA8Y2xhYmJlQGJheWxpYnJl
LmNvbT4KQ2M6IEthaXJ1aSBTb25nIDxrYXNvbmdAcmVkaGF0LmNvbT4KQ2M6IExpbnVzIFRvcnZh
bGRzIDx0b3J2YWxkc0BsaW51eC1mb3VuZGF0aW9uLm9yZz4KQ2M6IGxpbnV4LWRvY0B2Z2VyLmtl
cm5lbC5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LWFybS1r
ZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogdWNsaW51eC1oOC1kZXZlbEBsaXN0cy5zb3Vy
Y2Vmb3JnZS5qcApDYzogbGludXgtaGV4YWdvbkB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LW02
OGtAbGlzdHMubGludXgtbTY4ay5vcmcKQ2M6IG9wZW5yaXNjQGxpc3RzLmxpYnJlY29yZXMub3Jn
CkNjOiBsaW51eC1zaEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IHNwYXJjbGludXhAdmdlci5rZXJuZWwu
b3JnCkNjOiBsaW51eC14dGVuc2FAbGludXgteHRlbnNhLm9yZwpDYzogbGludXgtZnNkZXZlbEB2
Z2VyLmtlcm5lbC5vcmcKQ2M6IExpbnV4IEFQSSA8bGludXgtYXBpQHZnZXIua2VybmVsLm9yZz4K
U2lnbmVkLW9mZi1ieTogRGF2aWQgSGlsZGVuYnJhbmQgPGRhdmlkQHJlZGhhdC5jb20+Ci0tLQog
RG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9kZXZpY2VzLnR4dCAgICAgfCAgIDIgKy0KIGFyY2gv
YXJtL2NvbmZpZ3MvZG92ZV9kZWZjb25maWcgICAgICAgICAgIHwgICAxIC0KIGFyY2gvYXJtL2Nv
bmZpZ3MvbWFnaWNpYW5fZGVmY29uZmlnICAgICAgIHwgICAxIC0KIGFyY2gvYXJtL2NvbmZpZ3Mv
bW94YXJ0X2RlZmNvbmZpZyAgICAgICAgIHwgICAxIC0KIGFyY2gvYXJtL2NvbmZpZ3MvbXBzMl9k
ZWZjb25maWcgICAgICAgICAgIHwgICAxIC0KIGFyY2gvYXJtL2NvbmZpZ3MvbXZlYnVfdjVfZGVm
Y29uZmlnICAgICAgIHwgICAxIC0KIGFyY2gvYXJtL2NvbmZpZ3MveGNlcF9kZWZjb25maWcgICAg
ICAgICAgIHwgICAxIC0KIGFyY2gvaDgzMDAvY29uZmlncy9lZG9zazI2NzRfZGVmY29uZmlnICAg
IHwgICAxIC0KIGFyY2gvaDgzMDAvY29uZmlncy9oODMwMGgtc2ltX2RlZmNvbmZpZyAgIHwgICAx
IC0KIGFyY2gvaDgzMDAvY29uZmlncy9oOHMtc2ltX2RlZmNvbmZpZyAgICAgIHwgICAxIC0KIGFy
Y2gvaGV4YWdvbi9jb25maWdzL2NvbWV0X2RlZmNvbmZpZyAgICAgIHwgICAxIC0KIGFyY2gvbTY4
ay9jb25maWdzL2FtY29yZV9kZWZjb25maWcgICAgICAgIHwgICAxIC0KIGFyY2gvb3BlbnJpc2Mv
Y29uZmlncy9vcjFrc2ltX2RlZmNvbmZpZyAgIHwgICAxIC0KIGFyY2gvc2gvY29uZmlncy9lZG9z
azc3MDVfZGVmY29uZmlnICAgICAgIHwgICAxIC0KIGFyY2gvc2gvY29uZmlncy9zZTcyMDZfZGVm
Y29uZmlnICAgICAgICAgIHwgICAxIC0KIGFyY2gvc2gvY29uZmlncy9zaDIwMDdfZGVmY29uZmln
ICAgICAgICAgIHwgICAxIC0KIGFyY2gvc2gvY29uZmlncy9zaDc3MjRfZ2VuZXJpY19kZWZjb25m
aWcgIHwgICAxIC0KIGFyY2gvc2gvY29uZmlncy9zaDc3NzBfZ2VuZXJpY19kZWZjb25maWcgIHwg
ICAxIC0KIGFyY2gvc2gvY29uZmlncy9zaDc3ODVsY3JfMzJiaXRfZGVmY29uZmlnIHwgICAxIC0K
IGFyY2gvc3BhcmMvY29uZmlncy9zcGFyYzY0X2RlZmNvbmZpZyAgICAgIHwgICAxIC0KIGFyY2gv
eHRlbnNhL2NvbmZpZ3MveGlwX2tjNzA1X2RlZmNvbmZpZyAgIHwgICAxIC0KIGRyaXZlcnMvY2hh
ci9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgIHwgIDEwIC0KIGRyaXZlcnMvY2hhci9tZW0u
YyAgICAgICAgICAgICAgICAgICAgICAgIHwgMjMxIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGlu
Y2x1ZGUvbGludXgvZnMuaCAgICAgICAgICAgICAgICAgICAgICAgIHwgICAyICstCiBpbmNsdWRl
L2xpbnV4L3ZtYWxsb2MuaCAgICAgICAgICAgICAgICAgICB8ICAgMiArLQoga2VybmVsL2NvbmZp
Z3MvYW5kcm9pZC1iYXNlLmNvbmZpZyAgICAgICAgfCAgIDEgLQogbW0va3NtLmMgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIG1tL3ZtYWxsb2MuYyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgICAyICstCiAyOCBmaWxlcyBjaGFuZ2VkLCA1IGluc2VydGlv
bnMoKyksIDI2NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2FkbWlu
LWd1aWRlL2RldmljZXMudHh0IGIvRG9jdW1lbnRhdGlvbi9hZG1pbi1ndWlkZS9kZXZpY2VzLnR4
dAppbmRleCA2M2ZkNGU2YTAxNGIuLmJlZmZkNWU5MTMwYSAxMDA2NDQKLS0tIGEvRG9jdW1lbnRh
dGlvbi9hZG1pbi1ndWlkZS9kZXZpY2VzLnR4dAorKysgYi9Eb2N1bWVudGF0aW9uL2FkbWluLWd1
aWRlL2RldmljZXMudHh0CkBAIC00LDcgKzQsNyBAQAogCiAgICAxIGNoYXIJTWVtb3J5IGRldmlj
ZXMKIAkJICAxID0gL2Rldi9tZW0JCVBoeXNpY2FsIG1lbW9yeSBhY2Nlc3MKLQkJICAyID0gL2Rl
di9rbWVtCQlLZXJuZWwgdmlydHVhbCBtZW1vcnkgYWNjZXNzCisJCSAgMiA9IC9kZXYva21lbQkJ
T0JTT0xFVEUgLSByZXBsYWNlZCBieSAvcHJvYy9rY29yZQogCQkgIDMgPSAvZGV2L251bGwJCU51
bGwgZGV2aWNlCiAJCSAgNCA9IC9kZXYvcG9ydAkJSS9PIHBvcnQgYWNjZXNzCiAJCSAgNSA9IC9k
ZXYvemVybwkJTnVsbCBieXRlIHNvdXJjZQpkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vY29uZmlncy9k
b3ZlX2RlZmNvbmZpZyBiL2FyY2gvYXJtL2NvbmZpZ3MvZG92ZV9kZWZjb25maWcKaW5kZXggZTcw
Yzk5N2Q1ZjRjLi5iOTM1MTYyYThiYmEgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL2NvbmZpZ3MvZG92
ZV9kZWZjb25maWcKKysrIGIvYXJjaC9hcm0vY29uZmlncy9kb3ZlX2RlZmNvbmZpZwpAQCAtNjMs
NyArNjMsNiBAQCBDT05GSUdfSU5QVVRfRVZERVY9eQogIyBDT05GSUdfTU9VU0VfUFMyIGlzIG5v
dCBzZXQKICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKIENPTkZJR19MRUdBQ1lfUFRZX0NPVU5U
PTE2Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxfODI1MD15CiBD
T05GSUdfU0VSSUFMXzgyNTBfQ09OU09MRT15CiBDT05GSUdfU0VSSUFMXzgyNTBfUlVOVElNRV9V
QVJUUz0yCmRpZmYgLS1naXQgYS9hcmNoL2FybS9jb25maWdzL21hZ2ljaWFuX2RlZmNvbmZpZyBi
L2FyY2gvYXJtL2NvbmZpZ3MvbWFnaWNpYW5fZGVmY29uZmlnCmluZGV4IGI0NjcwZDQyZjM3OC4u
YWJkZTFmYjIzYjIwIDEwMDY0NAotLS0gYS9hcmNoL2FybS9jb25maWdzL21hZ2ljaWFuX2RlZmNv
bmZpZworKysgYi9hcmNoL2FybS9jb25maWdzL21hZ2ljaWFuX2RlZmNvbmZpZwpAQCAtNzIsNyAr
NzIsNiBAQCBDT05GSUdfSU5QVVRfVE9VQ0hTQ1JFRU49eQogQ09ORklHX0lOUFVUX01JU0M9eQog
Q09ORklHX0lOUFVUX1VJTlBVVD1tCiAjIENPTkZJR19TRVJJTyBpcyBub3Qgc2V0Ci0jIENPTkZJ
R19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxfUFhBPXkKICMgQ09ORklHX0xFR0FD
WV9QVFlTIGlzIG5vdCBzZXQKICMgQ09ORklHX0hXX1JBTkRPTSBpcyBub3Qgc2V0CmRpZmYgLS1n
aXQgYS9hcmNoL2FybS9jb25maWdzL21veGFydF9kZWZjb25maWcgYi9hcmNoL2FybS9jb25maWdz
L21veGFydF9kZWZjb25maWcKaW5kZXggNjgzNGU5N2FmMzQ4Li5lYWNjMDg5ZDg2YzUgMTAwNjQ0
Ci0tLSBhL2FyY2gvYXJtL2NvbmZpZ3MvbW94YXJ0X2RlZmNvbmZpZworKysgYi9hcmNoL2FybS9j
b25maWdzL21veGFydF9kZWZjb25maWcKQEAgLTc5LDcgKzc5LDYgQEAgQ09ORklHX0lOUFVUX0VW
QlVHPXkKICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQK
ICMgQ09ORklHX0xFR0FDWV9QVFlTIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90
IHNldAogQ09ORklHX1NFUklBTF84MjUwPXkKIENPTkZJR19TRVJJQUxfODI1MF9DT05TT0xFPXkK
IENPTkZJR19TRVJJQUxfODI1MF9OUl9VQVJUUz0xCmRpZmYgLS1naXQgYS9hcmNoL2FybS9jb25m
aWdzL21wczJfZGVmY29uZmlnIGIvYXJjaC9hcm0vY29uZmlncy9tcHMyX2RlZmNvbmZpZwppbmRl
eCAxZDkyM2RiYjk5MjguLjg5ZjRhNmZmMzBiZCAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vY29uZmln
cy9tcHMyX2RlZmNvbmZpZworKysgYi9hcmNoL2FybS9jb25maWdzL21wczJfZGVmY29uZmlnCkBA
IC02OSw3ICs2OSw2IEBAIENPTkZJR19TTVNDOTExWD15CiAjIENPTkZJR19WVCBpcyBub3Qgc2V0
CiAjIENPTkZJR19MRUdBQ1lfUFRZUyBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX05PTlNUQU5E
QVJEPXkKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9NUFMyX1VB
UlRfQ09OU09MRT15CiBDT05GSUdfU0VSSUFMX01QUzJfVUFSVD15CiAjIENPTkZJR19IV19SQU5E
T00gaXMgbm90IHNldApkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vY29uZmlncy9tdmVidV92NV9kZWZj
b25maWcgYi9hcmNoL2FybS9jb25maWdzL212ZWJ1X3Y1X2RlZmNvbmZpZwppbmRleCA0ZjE2NzE2
YmZjMzIuLmQ1N2ZmMzBkYWJmZiAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vY29uZmlncy9tdmVidV92
NV9kZWZjb25maWcKKysrIGIvYXJjaC9hcm0vY29uZmlncy9tdmVidV92NV9kZWZjb25maWcKQEAg
LTEwMCw3ICsxMDAsNiBAQCBDT05GSUdfSU5QVVRfRVZERVY9eQogQ09ORklHX0tFWUJPQVJEX0dQ
SU89eQogIyBDT05GSUdfSU5QVVRfTU9VU0UgaXMgbm90IHNldAogQ09ORklHX0xFR0FDWV9QVFlf
Q09VTlQ9MTYKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF84MjUw
PXkKIENPTkZJR19TRVJJQUxfODI1MF9DT05TT0xFPXkKIENPTkZJR19TRVJJQUxfODI1MF9SVU5U
SU1FX1VBUlRTPTIKZGlmZiAtLWdpdCBhL2FyY2gvYXJtL2NvbmZpZ3MveGNlcF9kZWZjb25maWcg
Yi9hcmNoL2FybS9jb25maWdzL3hjZXBfZGVmY29uZmlnCmluZGV4IGYxZmJkZmM1YzhjNi4uNGQ4
ZTdmMmVhZWY3IDEwMDY0NAotLS0gYS9hcmNoL2FybS9jb25maWdzL3hjZXBfZGVmY29uZmlnCisr
KyBiL2FyY2gvYXJtL2NvbmZpZ3MveGNlcF9kZWZjb25maWcKQEAgLTUzLDcgKzUzLDYgQEAgQ09O
RklHX05FVF9FVEhFUk5FVD15CiAjIENPTkZJR19JTlBVVF9LRVlCT0FSRCBpcyBub3Qgc2V0CiAj
IENPTkZJR19JTlBVVF9NT1VTRSBpcyBub3Qgc2V0CiAjIENPTkZJR19TRVJJTyBpcyBub3Qgc2V0
Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxfUFhBPXkKIENPTkZJ
R19TRVJJQUxfUFhBX0NPTlNPTEU9eQogIyBDT05GSUdfTEVHQUNZX1BUWVMgaXMgbm90IHNldApk
aWZmIC0tZ2l0IGEvYXJjaC9oODMwMC9jb25maWdzL2Vkb3NrMjY3NF9kZWZjb25maWcgYi9hcmNo
L2g4MzAwL2NvbmZpZ3MvZWRvc2syNjc0X2RlZmNvbmZpZwppbmRleCAyMzc5MWRjZjZjMjUuLjcx
Mzc4ODNmZjRjNyAxMDA2NDQKLS0tIGEvYXJjaC9oODMwMC9jb25maWdzL2Vkb3NrMjY3NF9kZWZj
b25maWcKKysrIGIvYXJjaC9oODMwMC9jb25maWdzL2Vkb3NrMjY3NF9kZWZjb25maWcKQEAgLTMy
LDcgKzMyLDYgQEAgQ09ORklHX0JJTkZNVF9GTEFUPXkKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQK
ICMgQ09ORklHX1VOSVg5OF9QVFlTIGlzIG5vdCBzZXQKICMgQ09ORklHX0xFR0FDWV9QVFlTIGlz
IG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9TSF9T
Q0k9eQogQ09ORklHX1NFUklBTF9TSF9TQ0lfQ09OU09MRT15CiAjIENPTkZJR19IV19SQU5ET00g
aXMgbm90IHNldApkaWZmIC0tZ2l0IGEvYXJjaC9oODMwMC9jb25maWdzL2g4MzAwaC1zaW1fZGVm
Y29uZmlnIGIvYXJjaC9oODMwMC9jb25maWdzL2g4MzAwaC1zaW1fZGVmY29uZmlnCmluZGV4IDdm
YzljMmYwYWNjMC4uZDRlMDY2YTE1MjlhIDEwMDY0NAotLS0gYS9hcmNoL2g4MzAwL2NvbmZpZ3Mv
aDgzMDBoLXNpbV9kZWZjb25maWcKKysrIGIvYXJjaC9oODMwMC9jb25maWdzL2g4MzAwaC1zaW1f
ZGVmY29uZmlnCkBAIC0zMiw3ICszMiw2IEBAIENPTkZJR19CSU5GTVRfRkxBVD15CiAjIENPTkZJ
R19WVCBpcyBub3Qgc2V0CiAjIENPTkZJR19VTklYOThfUFRZUyBpcyBub3Qgc2V0CiAjIENPTkZJ
R19MRUdBQ1lfUFRZUyBpcyBub3Qgc2V0Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENP
TkZJR19TRVJJQUxfU0hfU0NJPXkKIENPTkZJR19TRVJJQUxfU0hfU0NJX0VBUkxZQ09OPXkKICMg
Q09ORklHX0hXX1JBTkRPTSBpcyBub3Qgc2V0CmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL2NvbmZp
Z3MvaDhzLXNpbV9kZWZjb25maWcgYi9hcmNoL2g4MzAwL2NvbmZpZ3MvaDhzLXNpbV9kZWZjb25m
aWcKaW5kZXggMjM3OTFkY2Y2YzI1Li43MTM3ODgzZmY0YzcgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgz
MDAvY29uZmlncy9oOHMtc2ltX2RlZmNvbmZpZworKysgYi9hcmNoL2g4MzAwL2NvbmZpZ3MvaDhz
LXNpbV9kZWZjb25maWcKQEAgLTMyLDcgKzMyLDYgQEAgQ09ORklHX0JJTkZNVF9GTEFUPXkKICMg
Q09ORklHX1ZUIGlzIG5vdCBzZXQKICMgQ09ORklHX1VOSVg5OF9QVFlTIGlzIG5vdCBzZXQKICMg
Q09ORklHX0xFR0FDWV9QVFlTIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNl
dAogQ09ORklHX1NFUklBTF9TSF9TQ0k9eQogQ09ORklHX1NFUklBTF9TSF9TQ0lfQ09OU09MRT15
CiAjIENPTkZJR19IV19SQU5ET00gaXMgbm90IHNldApkaWZmIC0tZ2l0IGEvYXJjaC9oZXhhZ29u
L2NvbmZpZ3MvY29tZXRfZGVmY29uZmlnIGIvYXJjaC9oZXhhZ29uL2NvbmZpZ3MvY29tZXRfZGVm
Y29uZmlnCmluZGV4IGYxOWFlMmFiMGFhYS4uYzVhMjE0NzE2YTM4IDEwMDY0NAotLS0gYS9hcmNo
L2hleGFnb24vY29uZmlncy9jb21ldF9kZWZjb25maWcKKysrIGIvYXJjaC9oZXhhZ29uL2NvbmZp
Z3MvY29tZXRfZGVmY29uZmlnCkBAIC0zNCw3ICszNCw2IEBAIENPTkZJR19ORVRfRVRIRVJORVQ9
eQogIyBDT05GSUdfU0VSSU8gaXMgbm90IHNldAogIyBDT05GSUdfQ09OU09MRV9UUkFOU0xBVElP
TlMgaXMgbm90IHNldAogQ09ORklHX0xFR0FDWV9QVFlfQ09VTlQ9NjQKLSMgQ09ORklHX0RFVktN
RU0gaXMgbm90IHNldAogIyBDT05GSUdfSFdfUkFORE9NIGlzIG5vdCBzZXQKIENPTkZJR19TUEk9
eQogQ09ORklHX1NQSV9ERUJVRz15CmRpZmYgLS1naXQgYS9hcmNoL202OGsvY29uZmlncy9hbWNv
cmVfZGVmY29uZmlnIGIvYXJjaC9tNjhrL2NvbmZpZ3MvYW1jb3JlX2RlZmNvbmZpZwppbmRleCAz
YTg0ZjI0ZDQxYzguLjZkOWVkMjE5ODE3MCAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL2NvbmZpZ3Mv
YW1jb3JlX2RlZmNvbmZpZworKysgYi9hcmNoL202OGsvY29uZmlncy9hbWNvcmVfZGVmY29uZmln
CkBAIC02MCw3ICs2MCw2IEBAIENPTkZJR19ETTkwMDA9eQogIyBDT05GSUdfVlQgaXMgbm90IHNl
dAogIyBDT05GSUdfVU5JWDk4X1BUWVMgaXMgbm90IHNldAogIyBDT05GSUdfREVWTUVNIGlzIG5v
dCBzZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9NQ0Y9eQog
Q09ORklHX1NFUklBTF9NQ0ZfQkFVRFJBVEU9MTE1MjAwCiBDT05GSUdfU0VSSUFMX01DRl9DT05T
T0xFPXkKZGlmZiAtLWdpdCBhL2FyY2gvb3BlbnJpc2MvY29uZmlncy9vcjFrc2ltX2RlZmNvbmZp
ZyBiL2FyY2gvb3BlbnJpc2MvY29uZmlncy9vcjFrc2ltX2RlZmNvbmZpZwppbmRleCA3NWYyZGEz
MjRkMGUuLjZlMWUwMDQwNDdjNyAxMDA2NDQKLS0tIGEvYXJjaC9vcGVucmlzYy9jb25maWdzL29y
MWtzaW1fZGVmY29uZmlnCisrKyBiL2FyY2gvb3BlbnJpc2MvY29uZmlncy9vcjFrc2ltX2RlZmNv
bmZpZwpAQCAtNDMsNyArNDMsNiBAQCBDT05GSUdfTUlDUkVMX1BIWT15CiAjIENPTkZJR19TRVJJ
TyBpcyBub3Qgc2V0CiAjIENPTkZJR19WVCBpcyBub3Qgc2V0CiAjIENPTkZJR19MRUdBQ1lfUFRZ
UyBpcyBub3Qgc2V0Ci0jIENPTkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxf
ODI1MD15CiBDT05GSUdfU0VSSUFMXzgyNTBfQ09OU09MRT15CiBDT05GSUdfU0VSSUFMX09GX1BM
QVRGT1JNPXkKZGlmZiAtLWdpdCBhL2FyY2gvc2gvY29uZmlncy9lZG9zazc3MDVfZGVmY29uZmln
IGIvYXJjaC9zaC9jb25maWdzL2Vkb3NrNzcwNV9kZWZjb25maWcKaW5kZXggZWY3Y2MzMTk5N2Ix
Li45ZWUzNTI2OWJlZTIgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gvY29uZmlncy9lZG9zazc3MDVfZGVm
Y29uZmlnCisrKyBiL2FyY2gvc2gvY29uZmlncy9lZG9zazc3MDVfZGVmY29uZmlnCkBAIC0yMyw3
ICsyMyw2IEBAIENPTkZJR19TSF9QQ0xLX0ZSRVE9MzEyNTAwMDAKICMgQ09ORklHX0lOUFVUIGlz
IG5vdCBzZXQKICMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKICMgQ09ORklHX1ZUIGlzIG5vdCBz
ZXQKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogIyBDT05GSUdfVU5JWDk4X1BUWVMgaXMg
bm90IHNldAogIyBDT05GSUdfTEVHQUNZX1BUWVMgaXMgbm90IHNldAogIyBDT05GSUdfSFdfUkFO
RE9NIGlzIG5vdCBzZXQKZGlmZiAtLWdpdCBhL2FyY2gvc2gvY29uZmlncy9zZTcyMDZfZGVmY29u
ZmlnIGIvYXJjaC9zaC9jb25maWdzL3NlNzIwNl9kZWZjb25maWcKaW5kZXggMzE1YjA0YThkZDJm
Li42MDFkMDYyMjUwZDEgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gvY29uZmlncy9zZTcyMDZfZGVmY29u
ZmlnCisrKyBiL2FyY2gvc2gvY29uZmlncy9zZTcyMDZfZGVmY29uZmlnCkBAIC03MSw3ICs3MSw2
IEBAIENPTkZJR19TTUM5MVg9eQogIyBDT05GSUdfSU5QVVQgaXMgbm90IHNldAogIyBDT05GSUdf
U0VSSU8gaXMgbm90IHNldAogIyBDT05GSUdfVlQgaXMgbm90IHNldAotIyBDT05GSUdfREVWS01F
TSBpcyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX1NIX1NDST15CiBDT05GSUdfU0VSSUFMX1NIX1ND
SV9OUl9VQVJUUz00CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9DT05TT0xFPXkKZGlmZiAtLWdpdCBh
L2FyY2gvc2gvY29uZmlncy9zaDIwMDdfZGVmY29uZmlnIGIvYXJjaC9zaC9jb25maWdzL3NoMjAw
N19kZWZjb25maWcKaW5kZXggOTk5NzVkYjQ2MWQ4Li43OWYwMmYxYzBkYzggMTAwNjQ0Ci0tLSBh
L2FyY2gvc2gvY29uZmlncy9zaDIwMDdfZGVmY29uZmlnCisrKyBiL2FyY2gvc2gvY29uZmlncy9z
aDIwMDdfZGVmY29uZmlnCkBAIC03NSw3ICs3NSw2IEBAIENPTkZJR19JTlBVVF9GRl9NRU1MRVNT
PXkKICMgQ09ORklHX0lOUFVUX01PVVNFIGlzIG5vdCBzZXQKICMgQ09ORklHX1NFUklPIGlzIG5v
dCBzZXQKIENPTkZJR19WVF9IV19DT05TT0xFX0JJTkRJTkc9eQotIyBDT05GSUdfREVWS01FTSBp
cyBub3Qgc2V0CiBDT05GSUdfU0VSSUFMX1NIX1NDST15CiBDT05GSUdfU0VSSUFMX1NIX1NDSV9D
T05TT0xFPXkKICMgQ09ORklHX0xFR0FDWV9QVFlTIGlzIG5vdCBzZXQKZGlmZiAtLWdpdCBhL2Fy
Y2gvc2gvY29uZmlncy9zaDc3MjRfZ2VuZXJpY19kZWZjb25maWcgYi9hcmNoL3NoL2NvbmZpZ3Mv
c2g3NzI0X2dlbmVyaWNfZGVmY29uZmlnCmluZGV4IDJjNDZjMDAwNDc4MC4uY2JjOTM4OWE4OWE4
IDEwMDY0NAotLS0gYS9hcmNoL3NoL2NvbmZpZ3Mvc2g3NzI0X2dlbmVyaWNfZGVmY29uZmlnCisr
KyBiL2FyY2gvc2gvY29uZmlncy9zaDc3MjRfZ2VuZXJpY19kZWZjb25maWcKQEAgLTE4LDcgKzE4
LDYgQEAgQ09ORklHX0NQVV9JRExFPXkKICMgQ09ORklHX0lOUFVUIGlzIG5vdCBzZXQKICMgQ09O
RklHX1NFUklPIGlzIG5vdCBzZXQKICMgQ09ORklHX1ZUIGlzIG5vdCBzZXQKLSMgQ09ORklHX0RF
VktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9TSF9TQ0k9eQogQ09ORklHX1NFUklBTF9T
SF9TQ0lfTlJfVUFSVFM9NgogQ09ORklHX1NFUklBTF9TSF9TQ0lfQ09OU09MRT15CmRpZmYgLS1n
aXQgYS9hcmNoL3NoL2NvbmZpZ3Mvc2g3NzcwX2dlbmVyaWNfZGVmY29uZmlnIGIvYXJjaC9zaC9j
b25maWdzL3NoNzc3MF9nZW5lcmljX2RlZmNvbmZpZwppbmRleCA4ODE5MzE1M2U1MWIuLmVlMjM1
N2RlYmEwZiAxMDA2NDQKLS0tIGEvYXJjaC9zaC9jb25maWdzL3NoNzc3MF9nZW5lcmljX2RlZmNv
bmZpZworKysgYi9hcmNoL3NoL2NvbmZpZ3Mvc2g3NzcwX2dlbmVyaWNfZGVmY29uZmlnCkBAIC0y
MCw3ICsyMCw2IEBAIENPTkZJR19DUFVfSURMRT15CiAjIENPTkZJR19JTlBVVCBpcyBub3Qgc2V0
CiAjIENPTkZJR19TRVJJTyBpcyBub3Qgc2V0CiAjIENPTkZJR19WVCBpcyBub3Qgc2V0Ci0jIENP
TkZJR19ERVZLTUVNIGlzIG5vdCBzZXQKIENPTkZJR19TRVJJQUxfU0hfU0NJPXkKIENPTkZJR19T
RVJJQUxfU0hfU0NJX05SX1VBUlRTPTYKIENPTkZJR19TRVJJQUxfU0hfU0NJX0NPTlNPTEU9eQpk
aWZmIC0tZ2l0IGEvYXJjaC9zaC9jb25maWdzL3NoNzc4NWxjcl8zMmJpdF9kZWZjb25maWcgYi9h
cmNoL3NoL2NvbmZpZ3Mvc2g3Nzg1bGNyXzMyYml0X2RlZmNvbmZpZwppbmRleCA5Yjg4NWMxNGM0
MDAuLjVjNzI1Yzc1ZmNlZiAxMDA2NDQKLS0tIGEvYXJjaC9zaC9jb25maWdzL3NoNzc4NWxjcl8z
MmJpdF9kZWZjb25maWcKKysrIGIvYXJjaC9zaC9jb25maWdzL3NoNzc4NWxjcl8zMmJpdF9kZWZj
b25maWcKQEAgLTY2LDcgKzY2LDYgQEAgQ09ORklHX0lOUFVUX0ZGX01FTUxFU1M9bQogQ09ORklH
X0lOUFVUX0VWREVWPXkKIENPTkZJR19JTlBVVF9FVkJVRz1tCiBDT05GSUdfVlRfSFdfQ09OU09M
RV9CSU5ESU5HPXkKLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9T
SF9TQ0k9eQogQ09ORklHX1NFUklBTF9TSF9TQ0lfTlJfVUFSVFM9NgogQ09ORklHX1NFUklBTF9T
SF9TQ0lfQ09OU09MRT15CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2NvbmZpZ3Mvc3BhcmM2NF9k
ZWZjb25maWcgYi9hcmNoL3NwYXJjL2NvbmZpZ3Mvc3BhcmM2NF9kZWZjb25maWcKaW5kZXggMTJh
NGZiMGJkNTJhLi4xODA5OTA5OTU4M2UgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvY29uZmlncy9z
cGFyYzY0X2RlZmNvbmZpZworKysgYi9hcmNoL3NwYXJjL2NvbmZpZ3Mvc3BhcmM2NF9kZWZjb25m
aWcKQEAgLTEyMiw3ICsxMjIsNiBAQCBDT05GSUdfSU5QVVRfU1BBUkNTUEtSPXkKICMgQ09ORklH
X1NFUklPX1NFUlBPUlQgaXMgbm90IHNldAogQ09ORklHX1NFUklPX1BDSVBTMj1tCiBDT05GSUdf
U0VSSU9fUkFXPW0KLSMgQ09ORklHX0RFVktNRU0gaXMgbm90IHNldAogQ09ORklHX1NFUklBTF9T
VU5TVT15CiBDT05GSUdfU0VSSUFMX1NVTlNVX0NPTlNPTEU9eQogQ09ORklHX1NFUklBTF9TVU5T
QUI9eQpkaWZmIC0tZ2l0IGEvYXJjaC94dGVuc2EvY29uZmlncy94aXBfa2M3MDVfZGVmY29uZmln
IGIvYXJjaC94dGVuc2EvY29uZmlncy94aXBfa2M3MDVfZGVmY29uZmlnCmluZGV4IDRmMWZmOTUz
MWY2YS4uMDYyMTQ4ZTE3MTM1IDEwMDY0NAotLS0gYS9hcmNoL3h0ZW5zYS9jb25maWdzL3hpcF9r
YzcwNV9kZWZjb25maWcKKysrIGIvYXJjaC94dGVuc2EvY29uZmlncy94aXBfa2M3MDVfZGVmY29u
ZmlnCkBAIC03Miw3ICs3Miw2IEBAIENPTkZJR19NQVJWRUxMX1BIWT15CiAjIENPTkZJR19JTlBV
VF9LRVlCT0FSRCBpcyBub3Qgc2V0CiAjIENPTkZJR19JTlBVVF9NT1VTRSBpcyBub3Qgc2V0CiAj
IENPTkZJR19TRVJJTyBpcyBub3Qgc2V0Ci1DT05GSUdfREVWS01FTT15CiBDT05GSUdfU0VSSUFM
XzgyNTA9eQogIyBDT05GSUdfU0VSSUFMXzgyNTBfREVQUkVDQVRFRF9PUFRJT05TIGlzIG5vdCBz
ZXQKIENPTkZJR19TRVJJQUxfODI1MF9DT05TT0xFPXkKZGlmZiAtLWdpdCBhL2RyaXZlcnMvY2hh
ci9LY29uZmlnIGIvZHJpdmVycy9jaGFyL0tjb25maWcKaW5kZXggZDIyOWEyZDBjMDE3Li5iMTUx
ZTBmY2RlYjUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvY2hhci9LY29uZmlnCisrKyBiL2RyaXZlcnMv
Y2hhci9LY29uZmlnCkBAIC0zMzQsMTYgKzMzNCw2IEBAIGNvbmZpZyBERVZNRU0KIAkgIG1lbW9y
eS4KIAkgIFdoZW4gaW4gZG91YnQsIHNheSAiWSIuCiAKLWNvbmZpZyBERVZLTUVNCi0JYm9vbCAi
L2Rldi9rbWVtIHZpcnR1YWwgZGV2aWNlIHN1cHBvcnQiCi0JIyBPbiBhcm02NCwgVk1BTExPQ19T
VEFSVCA8IFBBR0VfT0ZGU0VULCB3aGljaCBjb25mdXNlcyBrbWVtIHJlYWQvd3JpdGUKLQlkZXBl
bmRzIG9uICFBUk02NAotCWhlbHAKLQkgIFNheSBZIGhlcmUgaWYgeW91IHdhbnQgdG8gc3VwcG9y
dCB0aGUgL2Rldi9rbWVtIGRldmljZS4gVGhlCi0JICAvZGV2L2ttZW0gZGV2aWNlIGlzIHJhcmVs
eSB1c2VkLCBidXQgY2FuIGJlIHVzZWQgZm9yIGNlcnRhaW4KLQkgIGtpbmQgb2Yga2VybmVsIGRl
YnVnZ2luZyBvcGVyYXRpb25zLgotCSAgV2hlbiBpbiBkb3VidCwgc2F5ICJOIi4KLQogY29uZmln
IE5WUkFNCiAJdHJpc3RhdGUgIi9kZXYvbnZyYW0gc3VwcG9ydCIKIAlkZXBlbmRzIG9uIFg4NiB8
fCBIQVZFX0FSQ0hfTlZSQU1fT1BTCmRpZmYgLS1naXQgYS9kcml2ZXJzL2NoYXIvbWVtLmMgYi9k
cml2ZXJzL2NoYXIvbWVtLmMKaW5kZXggODY5YjlmNWU4ZTAzLi4xNWRjNTRmYTFkNDcgMTAwNjQ0
Ci0tLSBhL2RyaXZlcnMvY2hhci9tZW0uYworKysgYi9kcml2ZXJzL2NoYXIvbWVtLmMKQEAgLTQw
MywyMjEgKzQwMyw2IEBAIHN0YXRpYyBpbnQgbW1hcF9tZW0oc3RydWN0IGZpbGUgKmZpbGUsIHN0
cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hKQogCXJldHVybiAwOwogfQogCi1zdGF0aWMgaW50IG1t
YXBfa21lbShzdHJ1Y3QgZmlsZSAqZmlsZSwgc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCi17
Ci0JdW5zaWduZWQgbG9uZyBwZm47Ci0KLQkvKiBUdXJuIGEga2VybmVsLXZpcnR1YWwgYWRkcmVz
cyBpbnRvIGEgcGh5c2ljYWwgcGFnZSBmcmFtZSAqLwotCXBmbiA9IF9fcGEoKHU2NCl2bWEtPnZt
X3Bnb2ZmIDw8IFBBR0VfU0hJRlQpID4+IFBBR0VfU0hJRlQ7Ci0KLQkvKgotCSAqIFJFRC1QRU46
IG9uIHNvbWUgYXJjaGl0ZWN0dXJlcyB0aGVyZSBpcyBtb3JlIG1hcHBlZCBtZW1vcnkgdGhhbgot
CSAqIGF2YWlsYWJsZSBpbiBtZW1fbWFwIHdoaWNoIHBmbl92YWxpZCBjaGVja3MgZm9yLiBQZXJo
YXBzIHNob3VsZCBhZGQgYQotCSAqIG5ldyBtYWNybyBoZXJlLgotCSAqCi0JICogUkVELVBFTjog
dm1hbGxvYyBpcyBub3Qgc3VwcG9ydGVkIHJpZ2h0IG5vdy4KLQkgKi8KLQlpZiAoIXBmbl92YWxp
ZChwZm4pKQotCQlyZXR1cm4gLUVJTzsKLQotCXZtYS0+dm1fcGdvZmYgPSBwZm47Ci0JcmV0dXJu
IG1tYXBfbWVtKGZpbGUsIHZtYSk7Ci19Ci0KLS8qCi0gKiBUaGlzIGZ1bmN0aW9uIHJlYWRzIHRo
ZSAqdmlydHVhbCogbWVtb3J5IGFzIHNlZW4gYnkgdGhlIGtlcm5lbC4KLSAqLwotc3RhdGljIHNz
aXplX3QgcmVhZF9rbWVtKHN0cnVjdCBmaWxlICpmaWxlLCBjaGFyIF9fdXNlciAqYnVmLAotCQkJ
IHNpemVfdCBjb3VudCwgbG9mZl90ICpwcG9zKQotewotCXVuc2lnbmVkIGxvbmcgcCA9ICpwcG9z
OwotCXNzaXplX3QgbG93X2NvdW50LCByZWFkLCBzejsKLQljaGFyICprYnVmOyAvKiBrLWFkZHIg
YmVjYXVzZSB2cmVhZCgpIHRha2VzIHZtbGlzdF9sb2NrIHJ3bG9jayAqLwotCWludCBlcnIgPSAw
OwotCi0JcmVhZCA9IDA7Ci0JaWYgKHAgPCAodW5zaWduZWQgbG9uZykgaGlnaF9tZW1vcnkpIHsK
LQkJbG93X2NvdW50ID0gY291bnQ7Ci0JCWlmIChjb3VudCA+ICh1bnNpZ25lZCBsb25nKWhpZ2hf
bWVtb3J5IC0gcCkKLQkJCWxvd19jb3VudCA9ICh1bnNpZ25lZCBsb25nKWhpZ2hfbWVtb3J5IC0g
cDsKLQotI2lmZGVmIF9fQVJDSF9IQVNfTk9fUEFHRV9aRVJPX01BUFBFRAotCQkvKiB3ZSBkb24n
dCBoYXZlIHBhZ2UgMCBtYXBwZWQgb24gc3BhcmMgYW5kIG02OGsuLiAqLwotCQlpZiAocCA8IFBB
R0VfU0laRSAmJiBsb3dfY291bnQgPiAwKSB7Ci0JCQlzeiA9IHNpemVfaW5zaWRlX3BhZ2UocCwg
bG93X2NvdW50KTsKLQkJCWlmIChjbGVhcl91c2VyKGJ1Ziwgc3opKQotCQkJCXJldHVybiAtRUZB
VUxUOwotCQkJYnVmICs9IHN6OwotCQkJcCArPSBzejsKLQkJCXJlYWQgKz0gc3o7Ci0JCQlsb3df
Y291bnQgLT0gc3o7Ci0JCQljb3VudCAtPSBzejsKLQkJfQotI2VuZGlmCi0JCXdoaWxlIChsb3df
Y291bnQgPiAwKSB7Ci0JCQlzeiA9IHNpemVfaW5zaWRlX3BhZ2UocCwgbG93X2NvdW50KTsKLQot
CQkJLyoKLQkJCSAqIE9uIGlhNjQgaWYgYSBwYWdlIGhhcyBiZWVuIG1hcHBlZCBzb21ld2hlcmUg
YXMKLQkJCSAqIHVuY2FjaGVkLCB0aGVuIGl0IG11c3QgYWxzbyBiZSBhY2Nlc3NlZCB1bmNhY2hl
ZAotCQkJICogYnkgdGhlIGtlcm5lbCBvciBkYXRhIGNvcnJ1cHRpb24gbWF5IG9jY3VyCi0JCQkg
Ki8KLQkJCWtidWYgPSB4bGF0ZV9kZXZfa21lbV9wdHIoKHZvaWQgKilwKTsKLQkJCWlmICghdmly
dF9hZGRyX3ZhbGlkKGtidWYpKQotCQkJCXJldHVybiAtRU5YSU87Ci0KLQkJCWlmIChjb3B5X3Rv
X3VzZXIoYnVmLCBrYnVmLCBzeikpCi0JCQkJcmV0dXJuIC1FRkFVTFQ7Ci0JCQlidWYgKz0gc3o7
Ci0JCQlwICs9IHN6OwotCQkJcmVhZCArPSBzejsKLQkJCWxvd19jb3VudCAtPSBzejsKLQkJCWNv
dW50IC09IHN6OwotCQkJaWYgKHNob3VsZF9zdG9wX2l0ZXJhdGlvbigpKSB7Ci0JCQkJY291bnQg
PSAwOwotCQkJCWJyZWFrOwotCQkJfQotCQl9Ci0JfQotCi0JaWYgKGNvdW50ID4gMCkgewotCQlr
YnVmID0gKGNoYXIgKilfX2dldF9mcmVlX3BhZ2UoR0ZQX0tFUk5FTCk7Ci0JCWlmICgha2J1ZikK
LQkJCXJldHVybiAtRU5PTUVNOwotCQl3aGlsZSAoY291bnQgPiAwKSB7Ci0JCQlzeiA9IHNpemVf
aW5zaWRlX3BhZ2UocCwgY291bnQpOwotCQkJaWYgKCFpc192bWFsbG9jX29yX21vZHVsZV9hZGRy
KCh2b2lkICopcCkpIHsKLQkJCQllcnIgPSAtRU5YSU87Ci0JCQkJYnJlYWs7Ci0JCQl9Ci0JCQlz
eiA9IHZyZWFkKGtidWYsIChjaGFyICopcCwgc3opOwotCQkJaWYgKCFzeikKLQkJCQlicmVhazsK
LQkJCWlmIChjb3B5X3RvX3VzZXIoYnVmLCBrYnVmLCBzeikpIHsKLQkJCQllcnIgPSAtRUZBVUxU
OwotCQkJCWJyZWFrOwotCQkJfQotCQkJY291bnQgLT0gc3o7Ci0JCQlidWYgKz0gc3o7Ci0JCQly
ZWFkICs9IHN6OwotCQkJcCArPSBzejsKLQkJCWlmIChzaG91bGRfc3RvcF9pdGVyYXRpb24oKSkK
LQkJCQlicmVhazsKLQkJfQotCQlmcmVlX3BhZ2UoKHVuc2lnbmVkIGxvbmcpa2J1Zik7Ci0JfQot
CSpwcG9zID0gcDsKLQlyZXR1cm4gcmVhZCA/IHJlYWQgOiBlcnI7Ci19Ci0KLQotc3RhdGljIHNz
aXplX3QgZG9fd3JpdGVfa21lbSh1bnNpZ25lZCBsb25nIHAsIGNvbnN0IGNoYXIgX191c2VyICpi
dWYsCi0JCQkJc2l6ZV90IGNvdW50LCBsb2ZmX3QgKnBwb3MpCi17Ci0Jc3NpemVfdCB3cml0dGVu
LCBzejsKLQl1bnNpZ25lZCBsb25nIGNvcGllZDsKLQotCXdyaXR0ZW4gPSAwOwotI2lmZGVmIF9f
QVJDSF9IQVNfTk9fUEFHRV9aRVJPX01BUFBFRAotCS8qIHdlIGRvbid0IGhhdmUgcGFnZSAwIG1h
cHBlZCBvbiBzcGFyYyBhbmQgbTY4ay4uICovCi0JaWYgKHAgPCBQQUdFX1NJWkUpIHsKLQkJc3og
PSBzaXplX2luc2lkZV9wYWdlKHAsIGNvdW50KTsKLQkJLyogSG1tLiBEbyBzb21ldGhpbmc/ICov
Ci0JCWJ1ZiArPSBzejsKLQkJcCArPSBzejsKLQkJY291bnQgLT0gc3o7Ci0JCXdyaXR0ZW4gKz0g
c3o7Ci0JfQotI2VuZGlmCi0KLQl3aGlsZSAoY291bnQgPiAwKSB7Ci0JCXZvaWQgKnB0cjsKLQot
CQlzeiA9IHNpemVfaW5zaWRlX3BhZ2UocCwgY291bnQpOwotCi0JCS8qCi0JCSAqIE9uIGlhNjQg
aWYgYSBwYWdlIGhhcyBiZWVuIG1hcHBlZCBzb21ld2hlcmUgYXMgdW5jYWNoZWQsIHRoZW4KLQkJ
ICogaXQgbXVzdCBhbHNvIGJlIGFjY2Vzc2VkIHVuY2FjaGVkIGJ5IHRoZSBrZXJuZWwgb3IgZGF0
YQotCQkgKiBjb3JydXB0aW9uIG1heSBvY2N1ci4KLQkJICovCi0JCXB0ciA9IHhsYXRlX2Rldl9r
bWVtX3B0cigodm9pZCAqKXApOwotCQlpZiAoIXZpcnRfYWRkcl92YWxpZChwdHIpKQotCQkJcmV0
dXJuIC1FTlhJTzsKLQotCQljb3BpZWQgPSBjb3B5X2Zyb21fdXNlcihwdHIsIGJ1Ziwgc3opOwot
CQlpZiAoY29waWVkKSB7Ci0JCQl3cml0dGVuICs9IHN6IC0gY29waWVkOwotCQkJaWYgKHdyaXR0
ZW4pCi0JCQkJYnJlYWs7Ci0JCQlyZXR1cm4gLUVGQVVMVDsKLQkJfQotCQlidWYgKz0gc3o7Ci0J
CXAgKz0gc3o7Ci0JCWNvdW50IC09IHN6OwotCQl3cml0dGVuICs9IHN6OwotCQlpZiAoc2hvdWxk
X3N0b3BfaXRlcmF0aW9uKCkpCi0JCQlicmVhazsKLQl9Ci0KLQkqcHBvcyArPSB3cml0dGVuOwot
CXJldHVybiB3cml0dGVuOwotfQotCi0vKgotICogVGhpcyBmdW5jdGlvbiB3cml0ZXMgdG8gdGhl
ICp2aXJ0dWFsKiBtZW1vcnkgYXMgc2VlbiBieSB0aGUga2VybmVsLgotICovCi1zdGF0aWMgc3Np
emVfdCB3cml0ZV9rbWVtKHN0cnVjdCBmaWxlICpmaWxlLCBjb25zdCBjaGFyIF9fdXNlciAqYnVm
LAotCQkJICBzaXplX3QgY291bnQsIGxvZmZfdCAqcHBvcykKLXsKLQl1bnNpZ25lZCBsb25nIHAg
PSAqcHBvczsKLQlzc2l6ZV90IHdyb3RlID0gMDsKLQlzc2l6ZV90IHZpcnRyID0gMDsKLQljaGFy
ICprYnVmOyAvKiBrLWFkZHIgYmVjYXVzZSB2d3JpdGUoKSB0YWtlcyB2bWxpc3RfbG9jayByd2xv
Y2sgKi8KLQlpbnQgZXJyID0gMDsKLQotCWlmIChwIDwgKHVuc2lnbmVkIGxvbmcpIGhpZ2hfbWVt
b3J5KSB7Ci0JCXVuc2lnbmVkIGxvbmcgdG9fd3JpdGUgPSBtaW5fdCh1bnNpZ25lZCBsb25nLCBj
b3VudCwKLQkJCQkJICAgICAgICh1bnNpZ25lZCBsb25nKWhpZ2hfbWVtb3J5IC0gcCk7Ci0JCXdy
b3RlID0gZG9fd3JpdGVfa21lbShwLCBidWYsIHRvX3dyaXRlLCBwcG9zKTsKLQkJaWYgKHdyb3Rl
ICE9IHRvX3dyaXRlKQotCQkJcmV0dXJuIHdyb3RlOwotCQlwICs9IHdyb3RlOwotCQlidWYgKz0g
d3JvdGU7Ci0JCWNvdW50IC09IHdyb3RlOwotCX0KLQotCWlmIChjb3VudCA+IDApIHsKLQkJa2J1
ZiA9IChjaGFyICopX19nZXRfZnJlZV9wYWdlKEdGUF9LRVJORUwpOwotCQlpZiAoIWtidWYpCi0J
CQlyZXR1cm4gd3JvdGUgPyB3cm90ZSA6IC1FTk9NRU07Ci0JCXdoaWxlIChjb3VudCA+IDApIHsK
LQkJCXVuc2lnbmVkIGxvbmcgc3ogPSBzaXplX2luc2lkZV9wYWdlKHAsIGNvdW50KTsKLQkJCXVu
c2lnbmVkIGxvbmcgbjsKLQotCQkJaWYgKCFpc192bWFsbG9jX29yX21vZHVsZV9hZGRyKCh2b2lk
ICopcCkpIHsKLQkJCQllcnIgPSAtRU5YSU87Ci0JCQkJYnJlYWs7Ci0JCQl9Ci0JCQluID0gY29w
eV9mcm9tX3VzZXIoa2J1ZiwgYnVmLCBzeik7Ci0JCQlpZiAobikgewotCQkJCWVyciA9IC1FRkFV
TFQ7Ci0JCQkJYnJlYWs7Ci0JCQl9Ci0JCQl2d3JpdGUoa2J1ZiwgKGNoYXIgKilwLCBzeik7Ci0J
CQljb3VudCAtPSBzejsKLQkJCWJ1ZiArPSBzejsKLQkJCXZpcnRyICs9IHN6OwotCQkJcCArPSBz
ejsKLQkJCWlmIChzaG91bGRfc3RvcF9pdGVyYXRpb24oKSkKLQkJCQlicmVhazsKLQkJfQotCQlm
cmVlX3BhZ2UoKHVuc2lnbmVkIGxvbmcpa2J1Zik7Ci0JfQotCi0JKnBwb3MgPSBwOwotCXJldHVy
biB2aXJ0ciArIHdyb3RlID8gOiBlcnI7Ci19Ci0KIHN0YXRpYyBzc2l6ZV90IHJlYWRfcG9ydChz
dHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBfX3VzZXIgKmJ1ZiwKIAkJCSBzaXplX3QgY291bnQsIGxv
ZmZfdCAqcHBvcykKIHsKQEAgLTg1NSw3ICs2NDAsNiBAQCBzdGF0aWMgaW50IG9wZW5fcG9ydChz
dHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmlscCkKICNkZWZpbmUgd3JpdGVfemVy
bwl3cml0ZV9udWxsCiAjZGVmaW5lIHdyaXRlX2l0ZXJfemVybwl3cml0ZV9pdGVyX251bGwKICNk
ZWZpbmUgb3Blbl9tZW0Jb3Blbl9wb3J0Ci0jZGVmaW5lIG9wZW5fa21lbQlvcGVuX21lbQogCiBz
dGF0aWMgY29uc3Qgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBfX21heWJlX3VudXNlZCBtZW1fZm9w
cyA9IHsKIAkubGxzZWVrCQk9IG1lbW9yeV9sc2VlaywKQEAgLTg2OSwxOCArNjUzLDYgQEAgc3Rh
dGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlvbnMgX19tYXliZV91bnVzZWQgbWVtX2ZvcHMg
PSB7CiAjZW5kaWYKIH07CiAKLXN0YXRpYyBjb25zdCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIF9f
bWF5YmVfdW51c2VkIGttZW1fZm9wcyA9IHsKLQkubGxzZWVrCQk9IG1lbW9yeV9sc2VlaywKLQku
cmVhZAkJPSByZWFkX2ttZW0sCi0JLndyaXRlCQk9IHdyaXRlX2ttZW0sCi0JLm1tYXAJCT0gbW1h
cF9rbWVtLAotCS5vcGVuCQk9IG9wZW5fa21lbSwKLSNpZm5kZWYgQ09ORklHX01NVQotCS5nZXRf
dW5tYXBwZWRfYXJlYSA9IGdldF91bm1hcHBlZF9hcmVhX21lbSwKLQkubW1hcF9jYXBhYmlsaXRp
ZXMgPSBtZW1vcnlfbW1hcF9jYXBhYmlsaXRpZXMsCi0jZW5kaWYKLX07Ci0KIHN0YXRpYyBjb25z
dCBzdHJ1Y3QgZmlsZV9vcGVyYXRpb25zIG51bGxfZm9wcyA9IHsKIAkubGxzZWVrCQk9IG51bGxf
bHNlZWssCiAJLnJlYWQJCT0gcmVhZF9udWxsLApAQCAtOTI0LDkgKzY5Niw2IEBAIHN0YXRpYyBj
b25zdCBzdHJ1Y3QgbWVtZGV2IHsKIH0gZGV2bGlzdFtdID0gewogI2lmZGVmIENPTkZJR19ERVZN
RU0KIAkgW0RFVk1FTV9NSU5PUl0gPSB7ICJtZW0iLCAwLCAmbWVtX2ZvcHMsIEZNT0RFX1VOU0lH
TkVEX09GRlNFVCB9LAotI2VuZGlmCi0jaWZkZWYgQ09ORklHX0RFVktNRU0KLQkgWzJdID0geyAi
a21lbSIsIDAsICZrbWVtX2ZvcHMsIEZNT0RFX1VOU0lHTkVEX09GRlNFVCB9LAogI2VuZGlmCiAJ
IFszXSA9IHsgIm51bGwiLCAwNjY2LCAmbnVsbF9mb3BzLCAwIH0sCiAjaWZkZWYgQ09ORklHX0RF
VlBPUlQKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvZnMuaCBiL2luY2x1ZGUvbGludXgvZnMu
aAppbmRleCBlYzhmM2RkZjRhNmEuLmE3MjcxODZlZjRjZCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9s
aW51eC9mcy5oCisrKyBiL2luY2x1ZGUvbGludXgvZnMuaApAQCAtMTQ0LDcgKzE0NCw3IEBAIHR5
cGVkZWYgaW50IChkaW9faW9kb25lX3QpKHN0cnVjdCBraW9jYiAqaW9jYiwgbG9mZl90IG9mZnNl
dCwKIC8qIEV4cGVjdCByYW5kb20gYWNjZXNzIHBhdHRlcm4gKi8KICNkZWZpbmUgRk1PREVfUkFO
RE9NCQkoKF9fZm9yY2UgZm1vZGVfdCkweDEwMDApCiAKLS8qIEZpbGUgaXMgaHVnZSAoZWcuIC9k
ZXYva21lbSk6IHRyZWF0IGxvZmZfdCBhcyB1bnNpZ25lZCAqLworLyogRmlsZSBpcyBodWdlIChl
Zy4gL2Rldi9tZW0pOiB0cmVhdCBsb2ZmX3QgYXMgdW5zaWduZWQgKi8KICNkZWZpbmUgRk1PREVf
VU5TSUdORURfT0ZGU0VUCSgoX19mb3JjZSBmbW9kZV90KTB4MjAwMCkKIAogLyogRmlsZSBpcyBv
cGVuZWQgd2l0aCBPX1BBVEg7IGFsbW9zdCBub3RoaW5nIGNhbiBiZSBkb25lIHdpdGggaXQgKi8K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvdm1hbGxvYy5oIGIvaW5jbHVkZS9saW51eC92bWFs
bG9jLmgKaW5kZXggZGY5MjIxMWNmNzcxLi4zOTBhZjY4MGU5MTYgMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvbGludXgvdm1hbGxvYy5oCisrKyBiL2luY2x1ZGUvbGludXgvdm1hbGxvYy5oCkBAIC0xOTgs
NyArMTk4LDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHNldF92bV9mbHVzaF9yZXNldF9wZXJtcyh2
b2lkICphZGRyKQogfQogI2VuZGlmCiAKLS8qIGZvciAvZGV2L2ttZW0gKi8KKy8qIGZvciAvcHJv
Yy9rY29yZSAqLwogZXh0ZXJuIGxvbmcgdnJlYWQoY2hhciAqYnVmLCBjaGFyICphZGRyLCB1bnNp
Z25lZCBsb25nIGNvdW50KTsKIGV4dGVybiBsb25nIHZ3cml0ZShjaGFyICpidWYsIGNoYXIgKmFk
ZHIsIHVuc2lnbmVkIGxvbmcgY291bnQpOwogCmRpZmYgLS1naXQgYS9rZXJuZWwvY29uZmlncy9h
bmRyb2lkLWJhc2UuY29uZmlnIGIva2VybmVsL2NvbmZpZ3MvYW5kcm9pZC1iYXNlLmNvbmZpZwpp
bmRleCBkM2ZkNDI4ZjRiOTIuLmViNzAxYjJhYzcyZiAxMDA2NDQKLS0tIGEva2VybmVsL2NvbmZp
Z3MvYW5kcm9pZC1iYXNlLmNvbmZpZworKysgYi9rZXJuZWwvY29uZmlncy9hbmRyb2lkLWJhc2Uu
Y29uZmlnCkBAIC0xLDUgKzEsNCBAQAogIyAgS0VFUCBBTFBIQUJFVElDQUxMWSBTT1JURUQKLSMg
Q09ORklHX0RFVktNRU0gaXMgbm90IHNldAogIyBDT05GSUdfREVWTUVNIGlzIG5vdCBzZXQKICMg
Q09ORklHX0ZIQU5ETEUgaXMgbm90IHNldAogIyBDT05GSUdfSU5FVF9MUk8gaXMgbm90IHNldApk
aWZmIC0tZ2l0IGEvbW0va3NtLmMgYi9tbS9rc20uYwppbmRleCA5Njk0ZWUyYzcxZGUuLjkwMWNh
Yjg5Mjk5ZCAxMDA2NDQKLS0tIGEvbW0va3NtLmMKKysrIGIvbW0va3NtLmMKQEAgLTQ2MSw3ICs0
NjEsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wga3NtX3Rlc3RfZXhpdChzdHJ1Y3QgbW1fc3RydWN0
ICptbSkKICAqIGJ1dCB0YWtpbmcgZ3JlYXQgY2FyZSBvbmx5IHRvIHRvdWNoIGEga3NtIHBhZ2Us
IGluIGEgVk1fTUVSR0VBQkxFIHZtYSwKICAqIGluIGNhc2UgdGhlIGFwcGxpY2F0aW9uIGhhcyB1
bm1hcHBlZCBhbmQgcmVtYXBwZWQgbW0sYWRkciBtZWFud2hpbGUuCiAgKiBDb3VsZCBhIGtzbSBw
YWdlIGFwcGVhciBhbnl3aGVyZSBlbHNlPyAgQWN0dWFsbHkgeWVzLCBpbiBhIFZNX1BGTk1BUAot
ICogbW1hcCBvZiAvZGV2L21lbSBvciAvZGV2L2ttZW0sIHdoZXJlIHdlIHdvdWxkIG5vdCB3YW50
IHRvIHRvdWNoIGl0LgorICogbW1hcCBvZiAvZGV2L21lbSwgd2hlcmUgd2Ugd291bGQgbm90IHdh
bnQgdG8gdG91Y2ggaXQuCiAgKgogICogRkFVTFRfRkxBRy9GT0xMX1JFTU9URSBhcmUgYmVjYXVz
ZSB3ZSBkbyB0aGlzIG91dHNpZGUgdGhlIGNvbnRleHQKICAqIG9mIHRoZSBwcm9jZXNzIHRoYXQg
b3ducyAndm1hJy4gIFdlIGFsc28gZG8gbm90IHdhbnQgdG8gZW5mb3JjZQpkaWZmIC0tZ2l0IGEv
bW0vdm1hbGxvYy5jIGIvbW0vdm1hbGxvYy5jCmluZGV4IDRmNWY4YzkwNzg5Ny4uY2NiNDA1Yjgy
NTgxIDEwMDY0NAotLS0gYS9tbS92bWFsbG9jLmMKKysrIGIvbW0vdm1hbGxvYy5jCkBAIC0yODc1
LDcgKzI4NzUsNyBAQCBzdGF0aWMgaW50IGFsaWduZWRfdndyaXRlKGNoYXIgKmJ1ZiwgY2hhciAq
YWRkciwgdW5zaWduZWQgbG9uZyBjb3VudCkKICAqIE5vdGU6IEluIHVzdWFsIG9wcywgdnJlYWQo
KSBpcyBuZXZlciBuZWNlc3NhcnkgYmVjYXVzZSB0aGUgY2FsbGVyCiAgKiBzaG91bGQga25vdyB2
bWFsbG9jKCkgYXJlYSBpcyB2YWxpZCBhbmQgY2FuIHVzZSBtZW1jcHkoKS4KICAqIFRoaXMgaXMg
Zm9yIHJvdXRpbmVzIHdoaWNoIGhhdmUgdG8gYWNjZXNzIHZtYWxsb2MgYXJlYSB3aXRob3V0Ci0g
KiBhbnkgaW5mb3JtYXRpb24sIGFzIC9kZXYva21lbS4KKyAqIGFueSBpbmZvcm1hdGlvbiwgYXMg
L3Byb2Mva2NvcmUuCiAgKgogICogUmV0dXJuOiBudW1iZXIgb2YgYnl0ZXMgZm9yIHdoaWNoIGFk
ZHIgYW5kIGJ1ZiBzaG91bGQgYmUgaW5jcmVhc2VkCiAgKiAoc2FtZSBudW1iZXIgYXMgQGNvdW50
KSBvciAlMCBpZiBbYWRkci4uLmFkZHIrY291bnQpIGRvZXNuJ3QKLS0gCjIuMjkuMgoKX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGlu
ZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVj
b3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
