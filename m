Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 603944C67B5
	for <lists+openrisc@lfdr.de>; Mon, 28 Feb 2022 11:50:21 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 47B482484E;
	Mon, 28 Feb 2022 11:50:21 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id 5BB0024846
 for <openrisc@lists.librecores.org>; Mon, 28 Feb 2022 11:50:19 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id D633511FB;
 Mon, 28 Feb 2022 02:50:18 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.47.185])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 479283F73D;
 Mon, 28 Feb 2022 02:50:11 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org,
	akpm@linux-foundation.org
Date: Mon, 28 Feb 2022 16:17:34 +0530
Message-Id: <1646045273-9343-12-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
References: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
Subject: [OpenRISC] [PATCH V3 11/30] mm/mmap: Drop protection_map[]
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 linux-mips@vger.kernel.org, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-csky@vger.kernel.org, Christoph Hellwig <hch@infradead.org>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Anshuman Khandual <anshuman.khandual@arm.com>, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 linux-arm-kernel@lists.infradead.org, linux-parisc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-alpha@vger.kernel.org,
 linuxppc-dev@lists.ozlabs.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhlcmUgYXJlIG5vIG90aGVyIHVzZXJzIGZvciBwcm90ZWN0aW9uX21hcFtdLiBIZW5jZSBqdXN0
IGRyb3AgdGhpcyBhcnJheQpjb25zdHJ1Y3QgYW5kIGluc3RlYWQgZGVmaW5lIF9fdm1fZ2V0X3Bh
Z2VfcHJvdCgpIHdoaWNoIHdpbGwgcHJvdmlkZSBwYWdlCnByb3RlY3Rpb24gbWFwIGJhc2VkIG9u
IHZtX2ZsYWdzIGNvbWJpbmF0aW9uIHN3aXRjaC4KCkNjOiBBbmRyZXcgTW9ydG9uIDxha3BtQGxp
bnV4LWZvdW5kYXRpb24ub3JnPgpDYzogbGludXgtbW1Aa3ZhY2sub3JnCkNjOiBsaW51eC1rZXJu
ZWxAdmdlci5rZXJuZWwub3JnClNpZ25lZC1vZmYtYnk6IEFuc2h1bWFuIEtoYW5kdWFsIDxhbnNo
dW1hbi5raGFuZHVhbEBhcm0uY29tPgotLS0KIGRyaXZlcnMvZ3B1L2RybS9kcm1fdm0uYyB8ICA0
ICstLQogaW5jbHVkZS9saW51eC9tbS5oICAgICAgIHwgIDYgLS0tLQogbW0vbW1hcC5jICAgICAg
ICAgICAgICAgIHwgNjMgKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLQog
MyBmaWxlcyBjaGFuZ2VkLCA0NCBpbnNlcnRpb25zKCspLCAyOSBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9kcml2ZXJzL2dwdS9kcm0vZHJtX3ZtLmMgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX3Zt
LmMKaW5kZXggZTk1N2Q0ODUxZGMwLi4xNDg2MmRmNzUzMmYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMv
Z3B1L2RybS9kcm1fdm0uYworKysgYi9kcml2ZXJzL2dwdS9kcm0vZHJtX3ZtLmMKQEAgLTQ4Miw3
ICs0ODIsNyBAQCBzdGF0aWMgaW50IGRybV9tbWFwX2RtYShzdHJ1Y3QgZmlsZSAqZmlscCwgc3Ry
dWN0IHZtX2FyZWFfc3RydWN0ICp2bWEpCiAjZWxzZQogCQkvKiBZZSBnYWRzIHRoaXMgaXMgdWds
eS4gIFdpdGggbW9yZSB0aG91Z2h0CiAJCSAgIHdlIGNvdWxkIG1vdmUgdGhpcyB1cCBoaWdoZXIg
YW5kIHVzZQotCQkgICBgcHJvdGVjdGlvbl9tYXAnIGluc3RlYWQuICAqLworCQkgICBgdm1fZ2V0
X3BhZ2VfcHJvdCgpJyBpbnN0ZWFkLiAgKi8KIAkJdm1hLT52bV9wYWdlX3Byb3QgPQogCQkgICAg
X19wZ3Byb3QocHRlX3ZhbAogCQkJICAgICAocHRlX3dycHJvdGVjdApAQCAtNTY2LDcgKzU2Niw3
IEBAIHN0YXRpYyBpbnQgZHJtX21tYXBfbG9ja2VkKHN0cnVjdCBmaWxlICpmaWxwLCBzdHJ1Y3Qg
dm1fYXJlYV9zdHJ1Y3QgKnZtYSkKICNlbHNlCiAJCS8qIFllIGdhZHMgdGhpcyBpcyB1Z2x5LiAg
V2l0aCBtb3JlIHRob3VnaHQKIAkJICAgd2UgY291bGQgbW92ZSB0aGlzIHVwIGhpZ2hlciBhbmQg
dXNlCi0JCSAgIGBwcm90ZWN0aW9uX21hcCcgaW5zdGVhZC4gICovCisJCSAgIGB2bV9nZXRfcGFn
ZV9wcm90KCknIGluc3RlYWQuICAqLwogCQl2bWEtPnZtX3BhZ2VfcHJvdCA9CiAJCSAgICBfX3Bn
cHJvdChwdGVfdmFsCiAJCQkgICAgIChwdGVfd3Jwcm90ZWN0CmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgKaW5kZXggMjEzY2M1NjliMTkyLi5mZjc0
YmQyZDc4NTAgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbW0uaAorKysgYi9pbmNsdWRlL2xp
bnV4L21tLmgKQEAgLTQxOCwxMiArNDE4LDYgQEAgZXh0ZXJuIHVuc2lnbmVkIGludCBrb2Jqc2l6
ZShjb25zdCB2b2lkICpvYmpwKTsKICNlbmRpZgogI2RlZmluZSBWTV9GTEFHU19DTEVBUgkoQVJD
SF9WTV9QS0VZX0ZMQUdTIHwgVk1fQVJDSF9DTEVBUikKIAotLyoKLSAqIG1hcHBpbmcgZnJvbSB0
aGUgY3VycmVudGx5IGFjdGl2ZSB2bV9mbGFncyBwcm90ZWN0aW9uIGJpdHMgKHRoZQotICogbG93
IGZvdXIgYml0cykgdG8gYSBwYWdlIHByb3RlY3Rpb24gbWFzay4uCi0gKi8KLWV4dGVybiBwZ3By
b3RfdCBwcm90ZWN0aW9uX21hcFsxNl07Ci0KIC8qCiAgKiBUaGUgZGVmYXVsdCBmYXVsdCBmbGFn
cyB0aGF0IHNob3VsZCBiZSB1c2VkIGJ5IG1vc3Qgb2YgdGhlCiAgKiBhcmNoLXNwZWNpZmljIHBh
Z2UgZmF1bHQgaGFuZGxlcnMuCmRpZmYgLS1naXQgYS9tbS9tbWFwLmMgYi9tbS9tbWFwLmMKaW5k
ZXggZjIzMTBmNmU3NDY2Li43OGVlYWMyNzdhODAgMTAwNjQ0Ci0tLSBhL21tL21tYXAuYworKysg
Yi9tbS9tbWFwLmMKQEAgLTEwMiwyNCArMTAyLDYgQEAgc3RhdGljIHZvaWQgdW5tYXBfcmVnaW9u
KHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLAogICoJCQkJCQkJCXc6IChubykgbm8KICAqCQkJCQkJCQl4
OiAoeWVzKSB5ZXMKICAqLwotcGdwcm90X3QgcHJvdGVjdGlvbl9tYXBbMTZdIF9fcm9fYWZ0ZXJf
aW5pdCA9IHsKLQlbVk1fTk9ORV0JCQkJCT0gX19QMDAwLAotCVtWTV9SRUFEXQkJCQkJPSBfX1Aw
MDEsCi0JW1ZNX1dSSVRFXQkJCQkJPSBfX1AwMTAsCi0JW1ZNX1dSSVRFIHwgVk1fUkVBRF0JCQkJ
PSBfX1AwMTEsCi0JW1ZNX0VYRUNdCQkJCQk9IF9fUDEwMCwKLQlbVk1fRVhFQyB8IFZNX1JFQURd
CQkJCT0gX19QMTAxLAotCVtWTV9FWEVDIHwgVk1fV1JJVEVdCQkJCT0gX19QMTEwLAotCVtWTV9F
WEVDIHwgVk1fV1JJVEUgfCBWTV9SRUFEXQkJCT0gX19QMTExLAotCVtWTV9TSEFSRURdCQkJCQk9
IF9fUzAwMCwKLQlbVk1fU0hBUkVEIHwgVk1fUkVBRF0JCQkJPSBfX1MwMDEsCi0JW1ZNX1NIQVJF
RCB8IFZNX1dSSVRFXQkJCQk9IF9fUzAxMCwKLQlbVk1fU0hBUkVEIHwgVk1fV1JJVEUgfCBWTV9S
RUFEXQkJPSBfX1MwMTEsCi0JW1ZNX1NIQVJFRCB8IFZNX0VYRUNdCQkJCT0gX19TMTAwLAotCVtW
TV9TSEFSRUQgfCBWTV9FWEVDIHwgVk1fUkVBRF0JCQk9IF9fUzEwMSwKLQlbVk1fU0hBUkVEIHwg
Vk1fRVhFQyB8IFZNX1dSSVRFXQkJPSBfX1MxMTAsCi0JW1ZNX1NIQVJFRCB8IFZNX0VYRUMgfCBW
TV9XUklURSB8IFZNX1JFQURdCT0gX19TMTExCi19OwogCiAjaWZuZGVmIENPTkZJR19BUkNIX0hB
U19GSUxURVJfUEdQUk9UCiBzdGF0aWMgaW5saW5lIHBncHJvdF90IGFyY2hfZmlsdGVyX3BncHJv
dChwZ3Byb3RfdCBwcm90KQpAQCAtMTI4LDEwICsxMTAsNDkgQEAgc3RhdGljIGlubGluZSBwZ3By
b3RfdCBhcmNoX2ZpbHRlcl9wZ3Byb3QocGdwcm90X3QgcHJvdCkKIH0KICNlbmRpZgogCitzdGF0
aWMgaW5saW5lIHBncHJvdF90IF9fdm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2Zs
YWdzKQoreworCXN3aXRjaCAodm1fZmxhZ3MgJiAoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhF
QyB8IFZNX1NIQVJFRCkpIHsKKwljYXNlIFZNX05PTkU6CisJCXJldHVybiBfX1AwMDA7CisJY2Fz
ZSBWTV9SRUFEOgorCQlyZXR1cm4gX19QMDAxOworCWNhc2UgVk1fV1JJVEU6CisJCXJldHVybiBf
X1AwMTA7CisJY2FzZSBWTV9SRUFEIHwgVk1fV1JJVEU6CisJCXJldHVybiBfX1AwMTE7CisJY2Fz
ZSBWTV9FWEVDOgorCQlyZXR1cm4gX19QMTAwOworCWNhc2UgVk1fRVhFQyB8IFZNX1JFQUQ6CisJ
CXJldHVybiBfX1AxMDE7CisJY2FzZSBWTV9FWEVDIHwgVk1fV1JJVEU6CisJCXJldHVybiBfX1Ax
MTA7CisJY2FzZSBWTV9FWEVDIHwgVk1fUkVBRCB8IFZNX1dSSVRFOgorCQlyZXR1cm4gX19QMTEx
OworCWNhc2UgVk1fU0hBUkVEOgorCQlyZXR1cm4gX19TMDAwOworCWNhc2UgVk1fU0hBUkVEIHwg
Vk1fUkVBRDoKKwkJcmV0dXJuIF9fUzAwMTsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX1dSSVRFOgor
CQlyZXR1cm4gX19TMDEwOworCWNhc2UgVk1fU0hBUkVEIHwgVk1fUkVBRCB8IFZNX1dSSVRFOgor
CQlyZXR1cm4gX19TMDExOworCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQzoKKwkJcmV0dXJuIF9f
UzEwMDsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX0VYRUMgfCBWTV9SRUFEOgorCQlyZXR1cm4gX19T
MTAxOworCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQyB8IFZNX1dSSVRFOgorCQlyZXR1cm4gX19T
MTEwOworCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQyB8IFZNX1JFQUQgfCBWTV9XUklURToKKwkJ
cmV0dXJuIF9fUzExMTsKKwlkZWZhdWx0OgorCQlCVUlMRF9CVUcoKTsKKwl9Cit9CisKIHBncHJv
dF90IHZtX2dldF9wYWdlX3Byb3QodW5zaWduZWQgbG9uZyB2bV9mbGFncykKIHsKLQlwZ3Byb3Rf
dCByZXQgPSBfX3BncHJvdChwZ3Byb3RfdmFsKHByb3RlY3Rpb25fbWFwW3ZtX2ZsYWdzICYKLQkJ
CQkoVk1fUkVBRHxWTV9XUklURXxWTV9FWEVDfFZNX1NIQVJFRCldKSB8CisJcGdwcm90X3QgcmV0
ID0gX19wZ3Byb3QocGdwcm90X3ZhbChfX3ZtX2dldF9wYWdlX3Byb3Qodm1fZmxhZ3MpKSB8CiAJ
CQlwZ3Byb3RfdmFsKGFyY2hfdm1fZ2V0X3BhZ2VfcHJvdCh2bV9mbGFncykpKTsKIAogCXJldHVy
biBhcmNoX2ZpbHRlcl9wZ3Byb3QocmV0KTsKQEAgLTE2ODQsNyArMTcwNSw3IEBAIFNZU0NBTExf
REVGSU5FMShvbGRfbW1hcCwgc3RydWN0IG1tYXBfYXJnX3N0cnVjdCBfX3VzZXIgKiwgYXJnKQog
LyoKICAqIFNvbWUgc2hhcmVkIG1hcHBpbmdzIHdpbGwgd2FudCB0aGUgcGFnZXMgbWFya2VkIHJl
YWQtb25seQogICogdG8gdHJhY2sgd3JpdGUgZXZlbnRzLiBJZiBzbywgd2UnbGwgZG93bmdyYWRl
IHZtX3BhZ2VfcHJvdAotICogdG8gdGhlIHByaXZhdGUgdmVyc2lvbiAodXNpbmcgcHJvdGVjdGlv
bl9tYXBbXSB3aXRob3V0IHRoZQorICogdG8gdGhlIHByaXZhdGUgdmVyc2lvbiAodXNpbmcgdm1f
Z2V0X3BhZ2VfcHJvdCgpIHdpdGhvdXQgdGhlCiAgKiBWTV9TSEFSRUQgYml0KS4KICAqLwogaW50
IHZtYV93YW50c193cml0ZW5vdGlmeShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwgcGdwcm90
X3Qgdm1fcGFnZV9wcm90KQotLSAKMi4yNS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMu
bGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVu
cmlzYwo=
