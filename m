Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 9C760439350
	for <lists+openrisc@lfdr.de>; Mon, 25 Oct 2021 12:06:20 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id DEA0124228;
	Mon, 25 Oct 2021 12:06:19 +0200 (CEST)
Received: from desiato.infradead.org (desiato.infradead.org [90.155.92.199])
 by mail.librecores.org (Postfix) with ESMTPS id A1BF4211B2
 for <openrisc@lists.librecores.org>; Mon, 25 Oct 2021 12:06:18 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=desiato.20200630; h=In-Reply-To:Content-Type:MIME-Version:
 References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
 Content-Transfer-Encoding:Content-ID:Content-Description;
 bh=TtyK3av3pkaiMykavTGaDM6XNPkfaMC/Qw98VdDm88M=; b=FuGGoJzIaLi6akAmQ/RTmY/IG2
 u5cuzhlm4yc7GEKNrXVs1+RpY7lLVKm9qaVIS9/yKlpebNVXnxirMEy7IX7cb/eIjf7Dnb0N5TAH3
 roREYhqSFrvuXWHrQnv1cqfjhnoRz5o36XBKC7i7Aszky1D31K2tvaIcTtrVCn5xWdQ54mVVj9C6K
 riaxVaL2edmcxptXF0R3lZtmyjN8YKLOkYvAsnRqCnanzCXB5LrD7lcKDpEZhbEfzk+s24OeME/4+
 HtMeQuhPX+wXBWpJ2g1w3itWeIXuBLDDEJIOSZgbIQ9oSFJdRb2SuMJj1k1I7v04V14480lmenZ2M
 3ELxGSBw==;
Received: from j217100.upc-j.chello.nl ([24.132.217.100]
 helo=noisy.programming.kicks-ass.net)
 by desiato.infradead.org with esmtpsa (Exim 4.94.2 #2 (Red Hat Linux))
 id 1mewro-00C7gG-9c; Mon, 25 Oct 2021 10:06:08 +0000
Received: from hirez.programming.kicks-ass.net
 (hirez.programming.kicks-ass.net [192.168.1.225])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits))
 (Client did not present a certificate)
 by noisy.programming.kicks-ass.net (Postfix) with ESMTPS id 6D8BC3001BF;
 Mon, 25 Oct 2021 12:06:07 +0200 (CEST)
Received: by hirez.programming.kicks-ass.net (Postfix, from userid 1000)
 id 522FA2007E060; Mon, 25 Oct 2021 12:06:07 +0200 (CEST)
Date: Mon, 25 Oct 2021 12:06:07 +0200
From: Peter Zijlstra <peterz@infradead.org>
To: Arnd Bergmann <arnd@kernel.org>
Message-ID: <YXaBj4YTMrZLOPD/@hirez.programming.kicks-ass.net>
References: <20211022120058.1031690-1-arnd@kernel.org>
 <cc8e3c58-457d-fdf3-6a62-98bde0cefdea@redhat.com>
 <CAK8P3a0YjaRS+aUCOKGjsfkR3TM49PrG6U4ftG_Fz+OFuyCb0w@mail.gmail.com>
 <YXZ/iLB7BvZtzDMp@hirez.programming.kicks-ass.net>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <YXZ/iLB7BvZtzDMp@hirez.programming.kicks-ass.net>
Subject: Re: [OpenRISC] [PATCH] locking: remove spin_lock_flags() etc
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 "James E.J. Bottomley" <James.Bottomley@hansenpartnership.com>,
 Paul Mackerras <paulus@samba.org>, Alexander Gordeev <agordeev@linux.ibm.com>,
 Will Deacon <will@kernel.org>, Jonas Bonn <jonas@southpole.se>,
 linux-s390 <linux-s390@vger.kernel.org>, Arnd Bergmann <arnd@arndb.de>,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 Christian Borntraeger <borntraeger@de.ibm.com>, Ingo Molnar <mingo@redhat.com>,
 Waiman Long <longman@redhat.com>, Heiko Carstens <hca@linux.ibm.com>,
 Vasily Gorbik <gor@linux.ibm.com>, Boqun Feng <boqun.feng@gmail.com>,
 Openrisc <openrisc@lists.librecores.org>,
 Parisc List <linux-parisc@vger.kernel.org>,
 Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
 linuxppc-dev <linuxppc-dev@lists.ozlabs.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gTW9uLCBPY3QgMjUsIDIwMjEgYXQgMTE6NTc6MjhBTSArMDIwMCwgUGV0ZXIgWmlqbHN0cmEg
d3JvdGU6Cj4gT24gU2F0LCBPY3QgMjMsIDIwMjEgYXQgMDY6MDQ6NTdQTSArMDIwMCwgQXJuZCBC
ZXJnbWFubiB3cm90ZToKPiA+IE9uIFNhdCwgT2N0IDIzLCAyMDIxIGF0IDM6MzcgQU0gV2FpbWFu
IExvbmcgPGxvbmdtYW5AcmVkaGF0LmNvbT4gd3JvdGU6Cj4gPiA+PiBPbiAxMC8yMi8yMSA3OjU5
IEFNLCBBcm5kIEJlcmdtYW5uIHdyb3RlOgo+ID4gPiA+IEZyb206IEFybmQgQmVyZ21hbm4gPGFy
bmRAYXJuZGIuZGU+Cj4gPiA+ID4KPiA+ID4gPiBBcyB0aGlzIGlzIGFsbCBkZWFkIGNvZGUsIGp1
c3QgcmVtb3ZlIGl0IGFuZCB0aGUgaGVscGVyIGZ1bmN0aW9ucyBidWlsdAo+ID4gPiA+IGFyb3Vu
ZCBpdC4gRm9yIGFyY2gvaWE2NCwgdGhlIGlubGluZSBhc20gY291bGQgYmUgY2xlYW5lZCB1cCwg
YnV0Cj4gPiA+ID4gaXQgc2VlbXMgc2FmZXIgdG8gbGVhdmUgaXQgdW50b3VjaGVkLgo+ID4gPiA+
Cj4gPiA+ID4gU2lnbmVkLW9mZi1ieTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KPiA+
ID4KPiA+ID4gRG9lcyB0aGF0IG1lYW4gd2UgY2FuIGFsc28gcmVtb3ZlIHRoZSBHRU5FUklDX0xP
Q0tCUkVBSyBjb25maWcgb3B0aW9uCj4gPiA+IGZyb20gdGhlIEtjb25maWcgZmlsZXMgYXMgd2Vs
bD8KPiA+IAo+ID4gIEkgY291bGRuJ3QgZmlndXJlIHRoaXMgb3V0Lgo+ID4gCj4gPiBXaGF0IEkg
c2VlIGlzIHRoYXQgdGhlIG9ubHkgYXJjaGl0ZWN0dXJlcyBzZXR0aW5nIEdFTkVSSUNfTE9DS0JS
RUFLIGFyZQo+ID4gbmRzMzIsIHBhcmlzYywgcG93ZXJwYywgczM5MCwgc2ggYW5kIHNwYXJjNjQs
IHdoaWxlIHRoZSBvbmx5IGFyY2hpdGVjdHVyZXMKPiA+IGltcGxlbWVudGluZyBhcmNoX3NwaW5f
aXNfY29udGVuZGVkKCkgYXJlIGFybTMyLCBjc2t5IGFuZCBpYTY0Lgo+ID4gCj4gPiBUaGUgcGFy
dCBJIGRvbid0IHVuZGVyc3RhbmQgaXMgd2hldGhlciB0aGUgb3B0aW9uIGFjdHVhbGx5IGRvZXMg
YW55dGhpbmcKPiA+IHVzZWZ1bCBhbnkgbW9yZSBhZnRlciBjb21taXQgZDg5YzcwMzU2YWNmICgi
bG9ja2luZy9jb3JlOiBSZW1vdmUgYnJlYWtfbG9jawo+ID4gZmllbGQgd2hlbiBDT05GSUdfR0VO
RVJJQ19MT0NLQlJFQUs9eSIpLgo+IAo+IFVyZ2gsIHdoYXQgYSBtZXNzLi4gQUZBSUNUIHRoZXJl
J3Mgc3RpbGwgY29kZSBpbgo+IGtlcm5lbC9sb2NraW5nL3NwaW5sb2NrLmMgdGhhdCByZWxpZXMg
b24gaXQuIFNwZWNpZmljYWxseSB3aGVuCj4gR0VORVJJQ19MT0NLQlJFQUs9eSB3ZSBzZWVtIHRv
IGNyZWF0ZSBfbG9jayooKSB2YXJpYW50cyB0aGF0IGFyZQo+IGJhc2ljYWxseSBUYVMgbG9ja3Mg
d2hpY2ggZHJvcCBwcmVlbXB0L2lycSBkaXNhYmxlIHdoaWxlIHNwaW5uaW5nLgo+IAo+IEFueWJv
ZHkgaGF2aW5nIHRoaXMgb24gYW5kIG5vdCBoYXZpbmcgbmF0aXZlIFRhUyBsb2NrcyBpcyBpbiBm
b3IgYSBydWRlCj4gc3VycHJpc2UgSSBzdXBwb3NlLi4uIHNwYXJjNjQgYmVpbmcgdGhlIG9idmlv
dXMgY2FuZGlkYXRlIHRoZXJlIDovCgpTb21ldGhpbmcgbGlrZSB0aGUgKnRvdGFsbHkqdW50ZXN0
ZWQqIHBhdGNoIGJlbG93IHdvdWxkIHJpcCBpdCBhbGwgb3V0LgoKLS0tCiBhcmNoL2lhNjQvS2Nv
bmZpZyAgICAgICAgICAgICAgICB8ICAzIC0tCiBhcmNoL25kczMyL0tjb25maWcgICAgICAgICAg
ICAgICB8ICA0IC0tCiBhcmNoL3BhcmlzYy9LY29uZmlnICAgICAgICAgICAgICB8ICA1IC0tLQog
YXJjaC9wb3dlcnBjL0tjb25maWcgICAgICAgICAgICAgfCAgNSAtLS0KIGFyY2gvczM5MC9LY29u
ZmlnICAgICAgICAgICAgICAgIHwgIDMgLS0KIGFyY2gvc2gvS2NvbmZpZyAgICAgICAgICAgICAg
ICAgIHwgIDQgLS0KIGFyY2gvc3BhcmMvS2NvbmZpZyAgICAgICAgICAgICAgIHwgIDYgLS0tCiBp
bmNsdWRlL2xpbnV4L3J3bG9ja19hcGlfc21wLmggICB8ICA0ICstCiBpbmNsdWRlL2xpbnV4L3Nw
aW5sb2NrX2FwaV9zbXAuaCB8ICA0ICstCiBrZXJuZWwvS2NvbmZpZy5sb2NrcyAgICAgICAgICAg
ICB8IDI2ICsrKysrKy0tLS0tLQoga2VybmVsL2xvY2tpbmcvc3BpbmxvY2suYyAgICAgICAgfCA5
MCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAxMSBmaWxlcyBjaGFu
Z2VkLCAxNyBpbnNlcnRpb25zKCspLCAxMzcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJj
aC9pYTY0L0tjb25maWcgYi9hcmNoL2lhNjQvS2NvbmZpZwppbmRleCAxZTMzNjY2ZmE2NzkuLjVl
YzNhYmJhM2M4MSAxMDA2NDQKLS0tIGEvYXJjaC9pYTY0L0tjb25maWcKKysrIGIvYXJjaC9pYTY0
L0tjb25maWcKQEAgLTgxLDkgKzgxLDYgQEAgY29uZmlnIE1NVQogY29uZmlnIFNUQUNLVFJBQ0Vf
U1VQUE9SVAogCWRlZl9ib29sIHkKIAotY29uZmlnIEdFTkVSSUNfTE9DS0JSRUFLCi0JZGVmX2Jv
b2wgbgotCiBjb25maWcgR0VORVJJQ19DQUxJQlJBVEVfREVMQVkKIAlib29sCiAJZGVmYXVsdCB5
CmRpZmYgLS1naXQgYS9hcmNoL25kczMyL0tjb25maWcgYi9hcmNoL25kczMyL0tjb25maWcKaW5k
ZXggYWVhMjZlNzM5NTQzLi42OTkwMDhkYmQ2YzIgMTAwNjQ0Ci0tLSBhL2FyY2gvbmRzMzIvS2Nv
bmZpZworKysgYi9hcmNoL25kczMyL0tjb25maWcKQEAgLTU5LDEwICs1OSw2IEBAIGNvbmZpZyBH
RU5FUklDX0NTVU0KIGNvbmZpZyBHRU5FUklDX0hXRUlHSFQKIAlkZWZfYm9vbCB5CiAKLWNvbmZp
ZyBHRU5FUklDX0xPQ0tCUkVBSwotCWRlZl9ib29sIHkKLQlkZXBlbmRzIG9uIFBSRUVNUFRJT04K
LQogY29uZmlnIFNUQUNLVFJBQ0VfU1VQUE9SVAogCWRlZl9ib29sIHkKIApkaWZmIC0tZ2l0IGEv
YXJjaC9wYXJpc2MvS2NvbmZpZyBiL2FyY2gvcGFyaXNjL0tjb25maWcKaW5kZXggMjdhOGI0OWFm
MTFmLi5hZmU3MGJjZGRlMmMgMTAwNjQ0Ci0tLSBhL2FyY2gvcGFyaXNjL0tjb25maWcKKysrIGIv
YXJjaC9wYXJpc2MvS2NvbmZpZwpAQCAtODYsMTEgKzg2LDYgQEAgY29uZmlnIEFSQ0hfREVGQ09O
RklHCiAJZGVmYXVsdCAiYXJjaC9wYXJpc2MvY29uZmlncy9nZW5lcmljLTMyYml0X2RlZmNvbmZp
ZyIgaWYgITY0QklUCiAJZGVmYXVsdCAiYXJjaC9wYXJpc2MvY29uZmlncy9nZW5lcmljLTY0Yml0
X2RlZmNvbmZpZyIgaWYgNjRCSVQKIAotY29uZmlnIEdFTkVSSUNfTE9DS0JSRUFLCi0JYm9vbAot
CWRlZmF1bHQgeQotCWRlcGVuZHMgb24gU01QICYmIFBSRUVNUFRJT04KLQogY29uZmlnIEFSQ0hf
SEFTX0lMT0cyX1UzMgogCWJvb2wKIAlkZWZhdWx0IG4KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJw
Yy9LY29uZmlnIGIvYXJjaC9wb3dlcnBjL0tjb25maWcKaW5kZXggYmE1YjY2MTg5MzU4Li5lNzgy
YzllYTNmODEgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9LY29uZmlnCisrKyBiL2FyY2gvcG93
ZXJwYy9LY29uZmlnCkBAIC05OCwxMSArOTgsNiBAQCBjb25maWcgTE9DS0RFUF9TVVBQT1JUCiAJ
Ym9vbAogCWRlZmF1bHQgeQogCi1jb25maWcgR0VORVJJQ19MT0NLQlJFQUsKLQlib29sCi0JZGVm
YXVsdCB5Ci0JZGVwZW5kcyBvbiBTTVAgJiYgUFJFRU1QVElPTgotCiBjb25maWcgR0VORVJJQ19I
V0VJR0hUCiAJYm9vbAogCWRlZmF1bHQgeQpkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL0tjb25maWcg
Yi9hcmNoL3MzOTAvS2NvbmZpZwppbmRleCBiODZkZTYxYjhjYWEuLmU0ZmYwNWY1MzkzYiAxMDA2
NDQKLS0tIGEvYXJjaC9zMzkwL0tjb25maWcKKysrIGIvYXJjaC9zMzkwL0tjb25maWcKQEAgLTI2
LDkgKzI2LDYgQEAgY29uZmlnIEdFTkVSSUNfQlVHCiBjb25maWcgR0VORVJJQ19CVUdfUkVMQVRJ
VkVfUE9JTlRFUlMKIAlkZWZfYm9vbCB5CiAKLWNvbmZpZyBHRU5FUklDX0xPQ0tCUkVBSwotCWRl
Zl9ib29sIHkgaWYgUFJFRU1QVElPTgotCiBjb25maWcgUEdTVEUKIAlkZWZfYm9vbCB5IGlmIEtW
TQogCmRpZmYgLS1naXQgYS9hcmNoL3NoL0tjb25maWcgYi9hcmNoL3NoL0tjb25maWcKaW5kZXgg
NjkwNGY0YmRiZjAwLi4yNmYxY2YyYzY5YTMgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gvS2NvbmZpZwor
KysgYi9hcmNoL3NoL0tjb25maWcKQEAgLTg2LDEwICs4Niw2IEBAIGNvbmZpZyBHRU5FUklDX0hX
RUlHSFQKIGNvbmZpZyBHRU5FUklDX0NBTElCUkFURV9ERUxBWQogCWJvb2wKIAotY29uZmlnIEdF
TkVSSUNfTE9DS0JSRUFLCi0JZGVmX2Jvb2wgeQotCWRlcGVuZHMgb24gU01QICYmIFBSRUVNUFRJ
T04KLQogY29uZmlnIEFSQ0hfU1VTUEVORF9QT1NTSUJMRQogCWRlZl9ib29sIG4KIApkaWZmIC0t
Z2l0IGEvYXJjaC9zcGFyYy9LY29uZmlnIGIvYXJjaC9zcGFyYy9LY29uZmlnCmluZGV4IGIxMjBl
ZDk0N2Y1MC4uZTc3ZTcyNTRlYWEwIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL0tjb25maWcKKysr
IGIvYXJjaC9zcGFyYy9LY29uZmlnCkBAIC0yNDYsMTIgKzI0Niw2IEBAIGNvbmZpZyBVUzNfTUMK
IAogCSAgSWYgaW4gZG91YnQsIHNheSBZLCBhcyB0aGlzIGluZm9ybWF0aW9uIGNhbiBiZSB2ZXJ5
IHVzZWZ1bC4KIAotIyBHbG9iYWwgdGhpbmdzIGFjcm9zcyBhbGwgU3VuIG1hY2hpbmVzLgotY29u
ZmlnIEdFTkVSSUNfTE9DS0JSRUFLCi0JYm9vbAotCWRlZmF1bHQgeQotCWRlcGVuZHMgb24gU1BB
UkM2NCAmJiBTTVAgJiYgUFJFRU1QVElPTgotCiBjb25maWcgTlVNQQogCWJvb2wgIk5VTUEgc3Vw
cG9ydCIKIAlkZXBlbmRzIG9uIFNQQVJDNjQgJiYgU01QCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L3J3bG9ja19hcGlfc21wLmggYi9pbmNsdWRlL2xpbnV4L3J3bG9ja19hcGlfc21wLmgKaW5k
ZXggYWJmYjUzYWIxMWJlLi5hMjgxZDgxZWY4ZWUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgv
cndsb2NrX2FwaV9zbXAuaAorKysgYi9pbmNsdWRlL2xpbnV4L3J3bG9ja19hcGlfc21wLmgKQEAg
LTE0MSw3ICsxNDEsNyBAQCBzdGF0aWMgaW5saW5lIGludCBfX3Jhd193cml0ZV90cnlsb2NrKHJ3
bG9ja190ICpsb2NrKQogICogZXZlbiBvbiBDT05GSUdfUFJFRU1QVCwgYmVjYXVzZSBsb2NrZGVw
IGFzc3VtZXMgdGhhdCBpbnRlcnJ1cHRzIGFyZQogICogbm90IHJlLWVuYWJsZWQgZHVyaW5nIGxv
Y2stYWNxdWlyZSAod2hpY2ggdGhlIHByZWVtcHQtc3Bpbi1vcHMgZG8pOgogICovCi0jaWYgIWRl
ZmluZWQoQ09ORklHX0dFTkVSSUNfTE9DS0JSRUFLKSB8fCBkZWZpbmVkKENPTkZJR19ERUJVR19M
T0NLX0FMTE9DKQorI2lmIGRlZmluZWQoQ09ORklHX0RFQlVHX0xPQ0tfQUxMT0MpCiAKIHN0YXRp
YyBpbmxpbmUgdm9pZCBfX3Jhd19yZWFkX2xvY2socndsb2NrX3QgKmxvY2spCiB7CkBAIC0yMTEs
NyArMjExLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIF9fcmF3X3dyaXRlX2xvY2socndsb2NrX3Qg
KmxvY2spCiAJTE9DS19DT05URU5ERUQobG9jaywgZG9fcmF3X3dyaXRlX3RyeWxvY2ssIGRvX3Jh
d193cml0ZV9sb2NrKTsKIH0KIAotI2VuZGlmIC8qICFDT05GSUdfR0VORVJJQ19MT0NLQlJFQUsg
fHwgQ09ORklHX0RFQlVHX0xPQ0tfQUxMT0MgKi8KKyNlbmRpZiAvKiBDT05GSUdfREVCVUdfTE9D
S19BTExPQyAqLwogCiBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfd3JpdGVfdW5sb2NrKHJ3bG9j
a190ICpsb2NrKQogewpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21w
LmggYi9pbmNsdWRlL2xpbnV4L3NwaW5sb2NrX2FwaV9zbXAuaAppbmRleCA2YjhlMWEwYjEzN2Iu
LmZiNDM3MjQzZWIyZSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21w
LmgKKysrIGIvaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21wLmgKQEAgLTk5LDcgKzk5LDcg
QEAgc3RhdGljIGlubGluZSBpbnQgX19yYXdfc3Bpbl90cnlsb2NrKHJhd19zcGlubG9ja190ICps
b2NrKQogICogZXZlbiBvbiBDT05GSUdfUFJFRU1QVElPTiwgYmVjYXVzZSBsb2NrZGVwIGFzc3Vt
ZXMgdGhhdCBpbnRlcnJ1cHRzIGFyZQogICogbm90IHJlLWVuYWJsZWQgZHVyaW5nIGxvY2stYWNx
dWlyZSAod2hpY2ggdGhlIHByZWVtcHQtc3Bpbi1vcHMgZG8pOgogICovCi0jaWYgIWRlZmluZWQo
Q09ORklHX0dFTkVSSUNfTE9DS0JSRUFLKSB8fCBkZWZpbmVkKENPTkZJR19ERUJVR19MT0NLX0FM
TE9DKQorI2lmIGRlZmluZWQoQ09ORklHX0RFQlVHX0xPQ0tfQUxMT0MpCiAKIHN0YXRpYyBpbmxp
bmUgdW5zaWduZWQgbG9uZyBfX3Jhd19zcGluX2xvY2tfaXJxc2F2ZShyYXdfc3BpbmxvY2tfdCAq
bG9jaykKIHsKQEAgLTE0Myw3ICsxNDMsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgX19yYXdfc3Bp
bl9sb2NrKHJhd19zcGlubG9ja190ICpsb2NrKQogCUxPQ0tfQ09OVEVOREVEKGxvY2ssIGRvX3Jh
d19zcGluX3RyeWxvY2ssIGRvX3Jhd19zcGluX2xvY2spOwogfQogCi0jZW5kaWYgLyogIUNPTkZJ
R19HRU5FUklDX0xPQ0tCUkVBSyB8fCBDT05GSUdfREVCVUdfTE9DS19BTExPQyAqLworI2VuZGlm
IC8qIENPTkZJR19ERUJVR19MT0NLX0FMTE9DICovCiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jh
d19zcGluX3VubG9jayhyYXdfc3BpbmxvY2tfdCAqbG9jaykKIHsKZGlmZiAtLWdpdCBhL2tlcm5l
bC9LY29uZmlnLmxvY2tzIGIva2VybmVsL0tjb25maWcubG9ja3MKaW5kZXggNDE5OGYwMjczZWNk
Li44ZTBiNTAxMTg5ZTggMTAwNjQ0Ci0tLSBhL2tlcm5lbC9LY29uZmlnLmxvY2tzCisrKyBiL2tl
cm5lbC9LY29uZmlnLmxvY2tzCkBAIC05Myw3ICs5Myw3IEBAIGNvbmZpZyBVTklOTElORV9TUElO
X1VOTE9DSwogCiAjCiAjIGxvY2tfKiBmdW5jdGlvbnMgYXJlIGlubGluZWQgd2hlbjoKLSMgICAt
IERFQlVHX1NQSU5MT0NLPW4gYW5kIEdFTkVSSUNfTE9DS0JSRUFLPW4gYW5kIEFSQ0hfSU5MSU5F
XypMT0NLPXkKKyMgICAtIERFQlVHX1NQSU5MT0NLPW4gYW5kIEFSQ0hfSU5MSU5FXypMT0NLPXkK
ICMKICMgdHJ5bG9ja18qIGZ1bmN0aW9ucyBhcmUgaW5saW5lZCB3aGVuOgogIyAgIC0gREVCVUdf
U1BJTkxPQ0s9biBhbmQgQVJDSF9JTkxJTkVfKkxPQ0s9eQpAQCAtMTE5LDE5ICsxMTksMTkgQEAg
Y29uZmlnIElOTElORV9TUElOX1RSWUxPQ0tfQkgKIAogY29uZmlnIElOTElORV9TUElOX0xPQ0sK
IAlkZWZfYm9vbCB5Ci0JZGVwZW5kcyBvbiAhR0VORVJJQ19MT0NLQlJFQUsgJiYgQVJDSF9JTkxJ
TkVfU1BJTl9MT0NLCisJZGVwZW5kcyBvbiBBUkNIX0lOTElORV9TUElOX0xPQ0sKIAogY29uZmln
IElOTElORV9TUElOX0xPQ0tfQkgKIAlkZWZfYm9vbCB5Ci0JZGVwZW5kcyBvbiAhR0VORVJJQ19M
T0NLQlJFQUsgJiYgQVJDSF9JTkxJTkVfU1BJTl9MT0NLX0JICisJZGVwZW5kcyBvbiBBUkNIX0lO
TElORV9TUElOX0xPQ0tfQkgKIAogY29uZmlnIElOTElORV9TUElOX0xPQ0tfSVJRCiAJZGVmX2Jv
b2wgeQotCWRlcGVuZHMgb24gIUdFTkVSSUNfTE9DS0JSRUFLICYmIEFSQ0hfSU5MSU5FX1NQSU5f
TE9DS19JUlEKKwlkZXBlbmRzIG9uIEFSQ0hfSU5MSU5FX1NQSU5fTE9DS19JUlEKIAogY29uZmln
IElOTElORV9TUElOX0xPQ0tfSVJRU0FWRQogCWRlZl9ib29sIHkKLQlkZXBlbmRzIG9uICFHRU5F
UklDX0xPQ0tCUkVBSyAmJiBBUkNIX0lOTElORV9TUElOX0xPQ0tfSVJRU0FWRQorCWRlcGVuZHMg
b24gQVJDSF9JTkxJTkVfU1BJTl9MT0NLX0lSUVNBVkUKIAogY29uZmlnIElOTElORV9TUElOX1VO
TE9DS19CSAogCWRlZl9ib29sIHkKQEAgLTE1MiwxOSArMTUyLDE5IEBAIGNvbmZpZyBJTkxJTkVf
UkVBRF9UUllMT0NLCiAKIGNvbmZpZyBJTkxJTkVfUkVBRF9MT0NLCiAJZGVmX2Jvb2wgeQotCWRl
cGVuZHMgb24gIUdFTkVSSUNfTE9DS0JSRUFLICYmIEFSQ0hfSU5MSU5FX1JFQURfTE9DSworCWRl
cGVuZHMgb24gQVJDSF9JTkxJTkVfUkVBRF9MT0NLCiAKIGNvbmZpZyBJTkxJTkVfUkVBRF9MT0NL
X0JICiAJZGVmX2Jvb2wgeQotCWRlcGVuZHMgb24gIUdFTkVSSUNfTE9DS0JSRUFLICYmIEFSQ0hf
SU5MSU5FX1JFQURfTE9DS19CSAorCWRlcGVuZHMgb24gQVJDSF9JTkxJTkVfUkVBRF9MT0NLX0JI
CiAKIGNvbmZpZyBJTkxJTkVfUkVBRF9MT0NLX0lSUQogCWRlZl9ib29sIHkKLQlkZXBlbmRzIG9u
ICFHRU5FUklDX0xPQ0tCUkVBSyAmJiBBUkNIX0lOTElORV9SRUFEX0xPQ0tfSVJRCisJZGVwZW5k
cyBvbiBBUkNIX0lOTElORV9SRUFEX0xPQ0tfSVJRCiAKIGNvbmZpZyBJTkxJTkVfUkVBRF9MT0NL
X0lSUVNBVkUKIAlkZWZfYm9vbCB5Ci0JZGVwZW5kcyBvbiAhR0VORVJJQ19MT0NLQlJFQUsgJiYg
QVJDSF9JTkxJTkVfUkVBRF9MT0NLX0lSUVNBVkUKKwlkZXBlbmRzIG9uIEFSQ0hfSU5MSU5FX1JF
QURfTE9DS19JUlFTQVZFCiAKIGNvbmZpZyBJTkxJTkVfUkVBRF9VTkxPQ0sKIAlkZWZfYm9vbCB5
CkBAIC0xODksMTkgKzE4OSwxOSBAQCBjb25maWcgSU5MSU5FX1dSSVRFX1RSWUxPQ0sKIAogY29u
ZmlnIElOTElORV9XUklURV9MT0NLCiAJZGVmX2Jvb2wgeQotCWRlcGVuZHMgb24gIUdFTkVSSUNf
TE9DS0JSRUFLICYmIEFSQ0hfSU5MSU5FX1dSSVRFX0xPQ0sKKwlkZXBlbmRzIG9uIEFSQ0hfSU5M
SU5FX1dSSVRFX0xPQ0sKIAogY29uZmlnIElOTElORV9XUklURV9MT0NLX0JICiAJZGVmX2Jvb2wg
eQotCWRlcGVuZHMgb24gIUdFTkVSSUNfTE9DS0JSRUFLICYmIEFSQ0hfSU5MSU5FX1dSSVRFX0xP
Q0tfQkgKKwlkZXBlbmRzIG9uIEFSQ0hfSU5MSU5FX1dSSVRFX0xPQ0tfQkgKIAogY29uZmlnIElO
TElORV9XUklURV9MT0NLX0lSUQogCWRlZl9ib29sIHkKLQlkZXBlbmRzIG9uICFHRU5FUklDX0xP
Q0tCUkVBSyAmJiBBUkNIX0lOTElORV9XUklURV9MT0NLX0lSUQorCWRlcGVuZHMgb24gQVJDSF9J
TkxJTkVfV1JJVEVfTE9DS19JUlEKIAogY29uZmlnIElOTElORV9XUklURV9MT0NLX0lSUVNBVkUK
IAlkZWZfYm9vbCB5Ci0JZGVwZW5kcyBvbiAhR0VORVJJQ19MT0NLQlJFQUsgJiYgQVJDSF9JTkxJ
TkVfV1JJVEVfTE9DS19JUlFTQVZFCisJZGVwZW5kcyBvbiBBUkNIX0lOTElORV9XUklURV9MT0NL
X0lSUVNBVkUKIAogY29uZmlnIElOTElORV9XUklURV9VTkxPQ0sKIAlkZWZfYm9vbCB5CmRpZmYg
LS1naXQgYS9rZXJuZWwvbG9ja2luZy9zcGlubG9jay5jIGIva2VybmVsL2xvY2tpbmcvc3Bpbmxv
Y2suYwppbmRleCBjNTgzMGNmYTM3OWEuLmQ5NGVlOTU1ODVmYyAxMDA2NDQKLS0tIGEva2VybmVs
L2xvY2tpbmcvc3BpbmxvY2suYworKysgYi9rZXJuZWwvbG9ja2luZy9zcGlubG9jay5jCkBAIC0y
OSwxOSArMjksNiBAQCBFWFBPUlRfUEVSX0NQVV9TWU1CT0woX19tbWlvd2Jfc3RhdGUpOwogI2Vu
ZGlmCiAjZW5kaWYKIAotLyoKLSAqIElmIGxvY2tkZXAgaXMgZW5hYmxlZCB0aGVuIHdlIHVzZSB0
aGUgbm9uLXByZWVtcHRpb24gc3Bpbi1vcHMKLSAqIGV2ZW4gb24gQ09ORklHX1BSRUVNUFQsIGJl
Y2F1c2UgbG9ja2RlcCBhc3N1bWVzIHRoYXQgaW50ZXJydXB0cyBhcmUKLSAqIG5vdCByZS1lbmFi
bGVkIGR1cmluZyBsb2NrLWFjcXVpcmUgKHdoaWNoIHRoZSBwcmVlbXB0LXNwaW4tb3BzIGRvKToK
LSAqLwotI2lmICFkZWZpbmVkKENPTkZJR19HRU5FUklDX0xPQ0tCUkVBSykgfHwgZGVmaW5lZChD
T05GSUdfREVCVUdfTE9DS19BTExPQykKLS8qCi0gKiBUaGUgX19sb2NrX2Z1bmN0aW9uIGlubGlu
ZXMgYXJlIHRha2VuIGZyb20KLSAqIHNwaW5sb2NrIDogaW5jbHVkZS9saW51eC9zcGlubG9ja19h
cGlfc21wLmgKLSAqIHJ3bG9jayAgIDogaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5oCi0g
Ki8KLSNlbHNlCi0KIC8qCiAgKiBTb21lIGFyY2hpdGVjdHVyZXMgY2FuIHJlbGF4IGluIGZhdm91
ciBvZiB0aGUgQ1BVIG93bmluZyB0aGUgbG9jay4KICAqLwpAQCAtNTUsODMgKzQyLDYgQEAgRVhQ
T1JUX1BFUl9DUFVfU1lNQk9MKF9fbW1pb3diX3N0YXRlKTsKICMgZGVmaW5lIGFyY2hfc3Bpbl9y
ZWxheChsKQljcHVfcmVsYXgoKQogI2VuZGlmCiAKLS8qCi0gKiBXZSBidWlsZCB0aGUgX19sb2Nr
X2Z1bmN0aW9uIGlubGluZXMgaGVyZS4gVGhleSBhcmUgdG9vIGxhcmdlIGZvcgotICogaW5saW5p
bmcgYWxsIG92ZXIgdGhlIHBsYWNlLCBidXQgaGVyZSBpcyBvbmx5IG9uZSB1c2VyIHBlciBmdW5j
dGlvbgotICogd2hpY2ggZW1iZWRzIHRoZW0gaW50byB0aGUgY2FsbGluZyBfbG9ja19mdW5jdGlv
biBiZWxvdy4KLSAqCi0gKiBUaGlzIGNvdWxkIGJlIGEgbG9uZy1oZWxkIGxvY2suIFdlIGJvdGgg
cHJlcGFyZSB0byBzcGluIGZvciBhIGxvbmcKLSAqIHRpbWUgKG1ha2luZyBfdGhpc18gQ1BVIHBy
ZWVtcHRpYmxlIGlmIHBvc3NpYmxlKSwgYW5kIHdlIGFsc28gc2lnbmFsCi0gKiB0b3dhcmRzIHRo
YXQgb3RoZXIgQ1BVIHRoYXQgaXQgc2hvdWxkIGJyZWFrIHRoZSBsb2NrIEFTQVAuCi0gKi8KLSNk
ZWZpbmUgQlVJTERfTE9DS19PUFMob3AsIGxvY2t0eXBlKQkJCQkJXAotdm9pZCBfX2xvY2tmdW5j
IF9fcmF3XyMjb3AjI19sb2NrKGxvY2t0eXBlIyNfdCAqbG9jaykJCQlcCi17CQkJCQkJCQkJXAot
CWZvciAoOzspIHsJCQkJCQkJXAotCQlwcmVlbXB0X2Rpc2FibGUoKTsJCQkJCVwKLQkJaWYgKGxp
a2VseShkb19yYXdfIyNvcCMjX3RyeWxvY2sobG9jaykpKQkJXAotCQkJYnJlYWs7CQkJCQkJXAot
CQlwcmVlbXB0X2VuYWJsZSgpOwkJCQkJXAotCQkJCQkJCQkJXAotCQlhcmNoXyMjb3AjI19yZWxh
eCgmbG9jay0+cmF3X2xvY2spOwkJCVwKLQl9CQkJCQkJCQlcCi19CQkJCQkJCQkJXAotCQkJCQkJ
CQkJXAotdW5zaWduZWQgbG9uZyBfX2xvY2tmdW5jIF9fcmF3XyMjb3AjI19sb2NrX2lycXNhdmUo
bG9ja3R5cGUjI190ICpsb2NrKQlcCi17CQkJCQkJCQkJXAotCXVuc2lnbmVkIGxvbmcgZmxhZ3M7
CQkJCQkJXAotCQkJCQkJCQkJXAotCWZvciAoOzspIHsJCQkJCQkJXAotCQlwcmVlbXB0X2Rpc2Fi
bGUoKTsJCQkJCVwKLQkJbG9jYWxfaXJxX3NhdmUoZmxhZ3MpOwkJCQkJXAotCQlpZiAobGlrZWx5
KGRvX3Jhd18jI29wIyNfdHJ5bG9jayhsb2NrKSkpCQlcCi0JCQlicmVhazsJCQkJCQlcCi0JCWxv
Y2FsX2lycV9yZXN0b3JlKGZsYWdzKTsJCQkJXAotCQlwcmVlbXB0X2VuYWJsZSgpOwkJCQkJXAot
CQkJCQkJCQkJXAotCQlhcmNoXyMjb3AjI19yZWxheCgmbG9jay0+cmF3X2xvY2spOwkJCVwKLQl9
CQkJCQkJCQlcCi0JCQkJCQkJCQlcCi0JcmV0dXJuIGZsYWdzOwkJCQkJCQlcCi19CQkJCQkJCQkJ
XAotCQkJCQkJCQkJXAotdm9pZCBfX2xvY2tmdW5jIF9fcmF3XyMjb3AjI19sb2NrX2lycShsb2Nr
dHlwZSMjX3QgKmxvY2spCQlcCi17CQkJCQkJCQkJXAotCV9yYXdfIyNvcCMjX2xvY2tfaXJxc2F2
ZShsb2NrKTsJCQkJCVwKLX0JCQkJCQkJCQlcCi0JCQkJCQkJCQlcCi12b2lkIF9fbG9ja2Z1bmMg
X19yYXdfIyNvcCMjX2xvY2tfYmgobG9ja3R5cGUjI190ICpsb2NrKQkJXAotewkJCQkJCQkJCVwK
LQl1bnNpZ25lZCBsb25nIGZsYWdzOwkJCQkJCVwKLQkJCQkJCQkJCVwKLQkvKgkJCQkJCQkqLwlc
Ci0JLyogQ2FyZWZ1bDogd2UgbXVzdCBleGNsdWRlIHNvZnRpcnFzIHRvbywgaGVuY2UgdGhlCSov
CVwKLQkvKiBpcnEtZGlzYWJsaW5nLiBXZSB1c2UgdGhlIGdlbmVyaWMgcHJlZW1wdGlvbi1hd2Fy
ZQkqLwlcCi0JLyogZnVuY3Rpb246CQkJCQkJKi8JXAotCS8qKi8JCQkJCQkJCVwKLQlmbGFncyA9
IF9yYXdfIyNvcCMjX2xvY2tfaXJxc2F2ZShsb2NrKTsJCQkJXAotCWxvY2FsX2JoX2Rpc2FibGUo
KTsJCQkJCQlcCi0JbG9jYWxfaXJxX3Jlc3RvcmUoZmxhZ3MpOwkJCQkJXAotfQkJCQkJCQkJCVwK
LQotLyoKLSAqIEJ1aWxkIHByZWVtcHRpb24tZnJpZW5kbHkgdmVyc2lvbnMgb2YgdGhlIGZvbGxv
d2luZwotICogbG9jay1zcGlubmluZyBmdW5jdGlvbnM6Ci0gKgotICogICAgICAgICBfX1tzcGlu
fHJlYWR8d3JpdGVdX2xvY2soKQotICogICAgICAgICBfX1tzcGlufHJlYWR8d3JpdGVdX2xvY2tf
aXJxKCkKLSAqICAgICAgICAgX19bc3BpbnxyZWFkfHdyaXRlXV9sb2NrX2lycXNhdmUoKQotICog
ICAgICAgICBfX1tzcGlufHJlYWR8d3JpdGVdX2xvY2tfYmgoKQotICovCi1CVUlMRF9MT0NLX09Q
UyhzcGluLCByYXdfc3BpbmxvY2spOwotCi0jaWZuZGVmIENPTkZJR19QUkVFTVBUX1JUCi1CVUlM
RF9MT0NLX09QUyhyZWFkLCByd2xvY2spOwotQlVJTERfTE9DS19PUFMod3JpdGUsIHJ3bG9jayk7
Ci0jZW5kaWYKLQotI2VuZGlmCi0KICNpZm5kZWYgQ09ORklHX0lOTElORV9TUElOX1RSWUxPQ0sK
IGludCBfX2xvY2tmdW5jIF9yYXdfc3Bpbl90cnlsb2NrKHJhd19zcGlubG9ja190ICpsb2NrKQog
ewpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklT
QyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0
cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
