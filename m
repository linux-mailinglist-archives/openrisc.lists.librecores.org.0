Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 87D0563668
	for <lists+openrisc@lfdr.de>; Tue,  9 Jul 2019 15:06:46 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 70D6C20364;
	Tue,  9 Jul 2019 15:06:46 +0200 (CEST)
Received: from mail-pg1-f180.google.com (mail-pg1-f180.google.com
 [209.85.215.180])
 by mail.librecores.org (Postfix) with ESMTPS id 5DA812035F
 for <openrisc@lists.librecores.org>; Tue,  9 Jul 2019 15:06:44 +0200 (CEST)
Received: by mail-pg1-f180.google.com with SMTP id w10so9418921pgj.7
 for <openrisc@lists.librecores.org>; Tue, 09 Jul 2019 06:06:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=e2NEaeI2qFw/fHkUYBYs4MNHcZuPug+262wwct+dg6k=;
 b=njDhidX/uT47jtr6muBDFt6cdhfaJquf+Sej3c19GZFyPeyirNvz+UW2vVOhVpS4Hf
 6X7efocubmAjUrhYY51K6hydTQ0TVCfpFzrAXqSHLMTywJ7ULOWHwtz/VtlSwsXdnY++
 IjZeNsXjumCLlJg0a2c61S2XT7HtDcq8F8mO2ZF/EXxLfXCCDkqooQ4eXgwxuSO1zaVD
 QHWyCuIe6MSTsu7x2zDdu2Z8GewgOA6ocEXFJBvYJZxuCt7R3Dovp7dqQNwLVITDhT9R
 fi0fv3A7lZVhNKnANG8zDjAUIOic70dttHBA27joGBlWd4yzgmucBFh29wF3pV8Aaoi6
 96LQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=e2NEaeI2qFw/fHkUYBYs4MNHcZuPug+262wwct+dg6k=;
 b=s2ESx1QnKOg4AbbApg2a8/k3kUt80w6AD0TL+jr60SXnxo/WD/3vIRiESQHsh5ZKcy
 PxNFMiUeVdiJfICMhxBpCgZCSU/OVxq0oefPek3n3aqVzIFEfAQ387A0W6aXSvzephy1
 NuSpzT1MAae5VnFdAqiKVW/BJBk8EhGjHt+KfH/hczN3jptUThH8fExCWv6SY9vWMSvb
 Oi/sgbueUfKTGfwre1N9mbuMey8cBFUgnkT1IOEM1ursjGbtyTf2dlusdp3WguZ2KC0o
 05tKqr87BGF+4tzssqJaEw34oKUeo2L7l64ku3hIa4Twegsvr6Q6xaLe89Jfl35CTTnu
 OTHw==
X-Gm-Message-State: APjAAAWrQvcn6j3h4Tm5Xq1Gu03rbPD3BbMHkNua9PeiC/NzboQPvAN0
 7L+6oG03Ao5uQM521XFHUII=
X-Google-Smtp-Source: APXvYqwaFJoh7M/ikueOjmibJZGHRWe5YrLbB2JG6H56WecWESODf/9Xq+INf8UmuVkfykB4uTmeeA==
X-Received: by 2002:a17:90a:3225:: with SMTP id
 k34mr32513183pjb.31.1562677602751; 
 Tue, 09 Jul 2019 06:06:42 -0700 (PDT)
Received: from localhost (g223.61-115-60.ppp.wakwak.ne.jp. [61.115.60.223])
 by smtp.gmail.com with ESMTPSA id p7sm25502130pfp.131.2019.07.09.06.06.41
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Tue, 09 Jul 2019 06:06:42 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GCC patches <gcc-patches@gcc.gnu.org>
Date: Tue,  9 Jul 2019 22:06:24 +0900
Message-Id: <20190709130626.11226-4-shorne@gmail.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190709130626.11226-1-shorne@gmail.com>
References: <20190709130626.11226-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v3 3/5] or1k: Add mrori option, fix option docs
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Segher Boessenkool <segher@kernel.crashing.org>,
 Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>,
 Openrisc <openrisc@lists.librecores.org>, Jeff Law <law@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Z2NjL0NoYW5nZUxvZzoKCgkqIGNvbmZpZy5nY2MgKG9yMWsqLSotKik6IEFkZCBtcm9yaSBhbmQg
bXJvciB0byB2YWxpZGF0aW9uLgoJKiBkb2MvaW52b2tlLnRleGkgKE9wZW5SSVNDIE9wdGlvbnMp
OiBBZGQgbXJvcmkgb3B0aW9uLCByZXdyaXRlIGFsbAoJZG9jdW1lbmF0aW9uIHRvIGJlIG1vcmUg
Y2xlYXIuCgkqIGNvbmZpZy9vcjFrL2VsZi5vcHQgKG1ib2FyZD0sIG1uZXdsaWIpOiBSZXdyaXRl
IGRvY3VtZW50YXRpb24gdG8gYmUKCW1vcmUgY2xlYXIuCgkqIGNvbmZpZy9vcjFrL29yMWsub3B0
IChtcm9yaSk6IE5ldyBvcHRpb24uCgkobWhhcmQtZGl2LCBtc29mdC1kaXYsIG1oYXJkLW11bCwg
bXNvZnQtbXVsLCBtY21vdiwgbXJvciwgbXNleHQsCgltc2ZpbW0sIG1zaGZ0aW1tKTogUmV3cml0
ZSBkb2N1bWVudGF0aW9uIHRvIGJlIG1vcmUgY2xlYXIuCgkqIGNvbmZpZy9vcjFrL3ByZWRpY2F0
ZXMubWQgKHJvcl9yZWdfb3JfdTZfb3BlcmFuZCk6IE5ldyBwcmVkaWNhdGUuCgkqIGNvbmZpZy9v
cjFrL29yMWsubWQgKGluc25fc3VwcG9ydCk6IEFkZCByb3IgYW5kIHJvcmkuCgkoZW5hYmxlZCk6
IEFkZCBjb25kaXRpb25zIGZvciByb3IgYW5kIHJvcmkuCgkocm90cnNpMyk6IFJlcGxhY2UgY29u
ZGl0aW9uIGZvciBzaGZ0aW1tIHdpdGggcm9yIGFuZCByb3JpLgoKZ2NjL3Rlc3RzdWl0ZS9DaGFu
Z2VMb2c6CgoJKiBnY2MudGFyZ2V0L29yMWsvcm9yLTQuYzogTmV3IGZpbGUuCgkqIGdjYy50YXJn
ZXQvb3Ixay9yb3ItNS5jOiBOZXcgZmlsZS4KCSogZ2NjLnRhcmdldC9vcjFrL3NoZnRpbW0tMS5j
OiBVcGRhdGUgdGVzdCBmcm9tIHJvdGF0ZSB0byBzaGlmdAoJYXMgdGhlIHNoZnRpbW0gb3B0aW9u
IG5vIGxvbmdlciBjb250cm9scyByb3RhdGUuCi0tLQpDaGFuZ2VzIHNpbmNlIHYyOgogLSBGaXgg
aXNzdWUgd2l0aCByb3IgcHJlZGljYXRlIHBvaW50ZWQgb3V0IGJ5IFNlZ2hlci4KIC0gQWRkZWQg
cm9yLTUuYyB0ZXN0IHRvIGNvbmZpcm0vZml4IElDRS4KCiBnY2MvY29uZmlnLmdjYyAgICAgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAxICsKIGdjYy9jb25maWcvb3Ixay9lbGYub3B0ICAgICAg
ICAgICAgICAgICAgIHwgIDYgKy0tCiBnY2MvY29uZmlnL29yMWsvb3Ixay5tZCAgICAgICAgICAg
ICAgICAgICB8IDE0ICsrKystLQogZ2NjL2NvbmZpZy9vcjFrL29yMWsub3B0ICAgICAgICAgICAg
ICAgICAgfCA1NiArKysrKysrKysrKysrLS0tLS0tLS0tLQogZ2NjL2NvbmZpZy9vcjFrL3ByZWRp
Y2F0ZXMubWQgICAgICAgICAgICAgfCAgNyArKysKIGdjYy9kb2MvaW52b2tlLnRleGkgICAgICAg
ICAgICAgICAgICAgICAgIHwgNTYgKysrKysrKysrKysrKy0tLS0tLS0tLS0KIGdjYy90ZXN0c3Vp
dGUvZ2NjLnRhcmdldC9vcjFrL3Jvci00LmMgICAgIHwgIDggKysrKwogZ2NjL3Rlc3RzdWl0ZS9n
Y2MudGFyZ2V0L29yMWsvcm9yLTUuYyAgICAgfCAgOSArKysrCiBnY2MvdGVzdHN1aXRlL2djYy50
YXJnZXQvb3Ixay9zaGZ0aW1tLTEuYyB8ICA4ICsrLS0KIDkgZmlsZXMgY2hhbmdlZCwgMTA0IGlu
c2VydGlvbnMoKyksIDYxIGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IGdjYy90ZXN0
c3VpdGUvZ2NjLnRhcmdldC9vcjFrL3Jvci00LmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBnY2MvdGVz
dHN1aXRlL2djYy50YXJnZXQvb3Ixay9yb3ItNS5jCgpkaWZmIC0tZ2l0IGEvZ2NjL2NvbmZpZy5n
Y2MgYi9nY2MvY29uZmlnLmdjYwppbmRleCBjMjgxYzQxOGIyOC4uYWVhYjhiNDU0NGUgMTAwNjQ0
Ci0tLSBhL2djYy9jb25maWcuZ2NjCisrKyBiL2djYy9jb25maWcuZ2NjCkBAIC0yNTc4LDYgKzI1
NzgsNyBAQCBvcjFrKi0qLSopCiAJZm9yIG9yMWtfbXVsdGlsaWIgaW4gJHtvcjFrX211bHRpbGli
c307IGRvCiAJCWNhc2UgJHtvcjFrX211bHRpbGlifSBpbgogCQltY21vdiB8IG1zZXh0IHwgbXNm
aW1tIHwgXAorCQltcm9yIHwgbXJvcmkgfCBcCiAJCW1oYXJkLWRpdiB8IG1oYXJkLW11bCB8IFwK
IAkJbXNvZnQtZGl2IHwgbXNvZnQtbXVsICkKIAkJCVRNX01VTFRJTElCX0NPTkZJRz0iJHtUTV9N
VUxUSUxJQl9DT05GSUd9LCR7b3Ixa19tdWx0aWxpYn0iCmRpZmYgLS1naXQgYS9nY2MvY29uZmln
L29yMWsvZWxmLm9wdCBiL2djYy9jb25maWcvb3Ixay9lbGYub3B0CmluZGV4IDY0MWI2ZGRkNGJl
Li4yZDRkMTg3NWQwMiAxMDA2NDQKLS0tIGEvZ2NjL2NvbmZpZy9vcjFrL2VsZi5vcHQKKysrIGIv
Z2NjL2NvbmZpZy9vcjFrL2VsZi5vcHQKQEAgLTI1LDkgKzI1LDkgQEAKIAogbWJvYXJkPQogVGFy
Z2V0IFJlamVjdE5lZ2F0aXZlIEpvaW5lZAotQ29uZmlndXJlIGJvYXJkIHNwZWNpZmljIHJ1bnRp
bWUuCitDb25maWd1cmUgdGhlIG5ld2xpYiBib2FyZCBzcGVjaWZpYyBydW50aW1lLiAgVGhlIGRl
ZmF1bHQgaXMgb3Ixa3NpbS4KIAogbW5ld2xpYgogVGFyZ2V0IFJlamVjdE5lZ2F0aXZlCi1Gb3Ig
Y29tcGF0aWJpbGl0eSwgaXQncyBhbHdheXMgbmV3bGliIGZvciBlbGYgbm93LgotCitUaGlzIG9w
dGlvbiBpcyBpZ25vcmVkOyBpdCBpcyBwcm92aWRlZCBmb3IgY29tcGF0aWJpbGl0eSBwdXJwb3Nl
cyBvbmx5LiAgVGhpcwordXNlZCB0byBzZWxlY3QgbGlua2VyIGFuZCBwcmVwcm9jZXNzb3Igb3B0
aW9ucyBmb3IgdXNlIHdpdGggbmV3bGliLgpkaWZmIC0tZ2l0IGEvZ2NjL2NvbmZpZy9vcjFrL29y
MWsubWQgYi9nY2MvY29uZmlnL29yMWsvb3Ixay5tZAppbmRleCA3NTdkODk5YzQ0Mi4uMGZhYTBm
YTRjNDcgMTAwNjQ0Ci0tLSBhL2djYy9jb25maWcvb3Ixay9vcjFrLm1kCisrKyBiL2djYy9jb25m
aWcvb3Ixay9vcjFrLm1kCkBAIC02Myw3ICs2Myw3IEBACiAgICJhbHUsc3QsbGQsY29udHJvbCxt
dWx0aSIKICAgKGNvbnN0X3N0cmluZyAiYWx1IikpCiAKLShkZWZpbmVfYXR0ciAiaW5zbl9zdXBw
b3J0IiAiY2xhc3MxLHNleHQsc2ZpbW0sc2hmdGltbSIgKGNvbnN0X3N0cmluZyAiY2xhc3MxIikp
CisoZGVmaW5lX2F0dHIgImluc25fc3VwcG9ydCIgImNsYXNzMSxzZXh0LHNmaW1tLHNoZnRpbW0s
cm9yLHJvcmkiIChjb25zdF9zdHJpbmcgImNsYXNzMSIpKQogCiAoZGVmaW5lX2F0dHIgImVuYWJs
ZWQiICIiCiAgIChjb25kIFsoZXFfYXR0ciAiaW5zbl9zdXBwb3J0IiAiY2xhc3MxIikgKGNvbnN0
X2ludCAxKQpAQCAtNzIsNyArNzIsMTEgQEAKIAkgKGFuZCAoZXFfYXR0ciAiaW5zbl9zdXBwb3J0
IiAic2ZpbW0iKQogCSAgICAgIChuZSAoc3ltYm9sX3JlZiAiVEFSR0VUX1NGSU1NIikgKGNvbnN0
X2ludCAwKSkpIChjb25zdF9pbnQgMSkKIAkgKGFuZCAoZXFfYXR0ciAiaW5zbl9zdXBwb3J0IiAi
c2hmdGltbSIpCi0JICAgICAgKG5lIChzeW1ib2xfcmVmICJUQVJHRVRfU0hGVElNTSIpIChjb25z
dF9pbnQgMCkpKSAoY29uc3RfaW50IDEpXQorCSAgICAgIChuZSAoc3ltYm9sX3JlZiAiVEFSR0VU
X1NIRlRJTU0iKSAoY29uc3RfaW50IDApKSkgKGNvbnN0X2ludCAxKQorCSAoYW5kIChlcV9hdHRy
ICJpbnNuX3N1cHBvcnQiICJyb3IiKQorCSAgICAgIChuZSAoc3ltYm9sX3JlZiAiVEFSR0VUX1JP
UiIpIChjb25zdF9pbnQgMCkpKSAoY29uc3RfaW50IDEpCisJIChhbmQgKGVxX2F0dHIgImluc25f
c3VwcG9ydCIgInJvcmkiKQorCSAgICAgIChuZSAoc3ltYm9sX3JlZiAiVEFSR0VUX1JPUkkiKSAo
Y29uc3RfaW50IDApKSkgKGNvbnN0X2ludCAxKV0KIAkoY29uc3RfaW50IDApKSkKIAogOzsgRGVz
Y3JpYmUgYSB1c2VyJ3MgYXNtIHN0YXRlbWVudC4KQEAgLTE3OCwxMiArMTgyLDEyIEBACiAoZGVm
aW5lX2luc24gInJvdHJzaTMiCiAgIFsoc2V0IChtYXRjaF9vcGVyYW5kOlNJIDAgInJlZ2lzdGVy
X29wZXJhbmQiICI9cixyIikKIAkocm90YXRlcnQ6U0kgKG1hdGNoX29wZXJhbmQ6U0kgMSAicmVn
aXN0ZXJfb3BlcmFuZCIgICJyLHIiKQotCQkgIChtYXRjaF9vcGVyYW5kOlNJIDIgInJlZ19vcl91
Nl9vcGVyYW5kIiAicixuIikpKV0KLSAgIlRBUkdFVF9ST1IiCisJCSAgICAgKG1hdGNoX29wZXJh
bmQ6U0kgMiAicm9yX3JlZ19vcl91Nl9vcGVyYW5kIiAicixuIikpKV0KKyAgIlRBUkdFVF9ST1Ig
fHwgVEFSR0VUX1JPUkkiCiAgICJACiAgICBsLnJvclx0JTAsICUxLCAlMgogICAgbC5yb3JpXHQl
MCwgJTEsICUyIgotICBbKHNldF9hdHRyICJpbnNuX3N1cHBvcnQiICIqLHNoZnRpbW0iKV0pCisg
IFsoc2V0X2F0dHIgImluc25fc3VwcG9ydCIgInJvcixyb3JpIildKQogCiAoZGVmaW5lX2luc24g
ImFuZHNpMyIKICAgWyhzZXQgKG1hdGNoX29wZXJhbmQ6U0kgMCAicmVnaXN0ZXJfb3BlcmFuZCIg
Ij1yLHIiKQpkaWZmIC0tZ2l0IGEvZ2NjL2NvbmZpZy9vcjFrL29yMWsub3B0IGIvZ2NjL2NvbmZp
Zy9vcjFrL29yMWsub3B0CmluZGV4IDdiZGJkODQyZGQ0Li5jMmY2NGM1ZGQ0NSAxMDA2NDQKLS0t
IGEvZ2NjL2NvbmZpZy9vcjFrL29yMWsub3B0CisrKyBiL2djYy9jb25maWcvb3Ixay9vcjFrLm9w
dApAQCAtMjEsNDcgKzIxLDU1IEBACiA7IFNlZSB0aGUgR0NDIGludGVybmFscyBtYW51YWwgKG9w
dGlvbnMudGV4aSkgZm9yIGEgZGVzY3JpcHRpb24gb2YKIDsgdGhpcyBmaWxlJ3MgZm9ybWF0Lgog
Ci07IFBsZWFzZSB0cnkgdG8ga2VlcCB0aGlzIGZpbGUgaW4gQVNDSUkgY29sbGF0aW5nIG9yZGVy
LgotCiBtaGFyZC1kaXYKIFRhcmdldCBSZWplY3ROZWdhdGl2ZSBJbnZlcnNlTWFzayhTT0ZUX0RJ
VikKLVVzZSBoYXJkd2FyZSBkaXZpZGUgaW5zdHJ1Y3Rpb25zLCB1c2UgLW1zb2Z0LWRpdiBmb3Ig
ZW11bGF0aW9uLgorRW5hYmxlIGdlbmVyYXRpb24gb2YgaGFyZHdhcmUgZGl2aWRlIChsLmRpdiwg
bC5kaXZ1KSBpbnN0cnVjdGlvbnMuICBUaGlzIGlzIHRoZQorZGVmYXVsdDsgdXNlIC1tc29mdC1k
aXYgdG8gb3ZlcnJpZGUuCisKK21zb2Z0LWRpdgorVGFyZ2V0IFJlamVjdE5lZ2F0aXZlIE1hc2so
U09GVF9ESVYpCitFbmFibGUgZ2VuZXJhdGlvbiBvZiBiaW5hcmllcyB3aGljaCB1c2UgZnVuY3Rp
b25zIGZyb20gbGliZ2NjIHRvIHBlcmZvcm0gZGl2aWRlCitvcGVyYXRpb25zLiAgVGhlIGRlZmF1
bHQgaXMgLW1oYXJkLWRpdi4KIAogbWhhcmQtbXVsCiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgSW52
ZXJzZU1hc2soU09GVF9NVUwpLgotVXNlIGhhcmR3YXJlIG11bHRpcGx5IGluc3RydWN0aW9ucywg
dXNlIC1tc29mdC1tdWwgZm9yIGVtdWxhdGlvbi4KK0VuYWJsZSBnZW5lcmF0aW9uIG9mIGhhcmR3
YXJlIG11bHRpcGx5IGluc3RydWN0aW9ucyAobC5tdWwsIGwubXVsaSkgaW5zdHJ1Y3Rpb25zLgor
VGhpcyBpcyB0aGUgZGVmYXVsdDsgdXNlIC1tc29mdC1tdWwgdG8gb3ZlcnJpZGUuCisKK21zb2Z0
LW11bAorVGFyZ2V0IFJlamVjdE5lZ2F0aXZlIE1hc2soU09GVF9NVUwpLgorRW5hYmxlIGdlbmVy
YXRpb24gb2YgYmluYXJpZXMgd2hpY2ggdXNlIGZ1bmN0aW9ucyBmcm9tIGxpYmdjYyB0byBwZXJm
b3JtCittdWx0aXBseSBvcGVyYXRpb25zLiBUaGUgZGVmYXVsdCBpcyAtbWhhcmQtbXVsLgogCiBt
Y21vdgogVGFyZ2V0IFJlamVjdE5lZ2F0aXZlIE1hc2soQ01PVikKLUFsbG93cyBnZW5lcmF0aW9u
IG9mIGJpbmFyaWVzIHdoaWNoIHVzZSB0aGUgbC5jbW92IGluc3RydWN0aW9uLiAgSWYgeW91ciB0
YXJnZXQKLWRvZXMgbm90IHN1cHBvcnQgdGhpcyB0aGUgY29tcGlsZXIgd2lsbCBnZW5lcmF0ZSB0
aGUgZXF1aXZhbGVudCB1c2luZyBzZXQgYW5kCi1icmFuY2guCitFbmFibGUgZ2VuZXJhdGlvbiBv
ZiBjb25kaXRpb25hbCBtb3ZlIChsLmNtb3YpIGluc3RydWN0aW9ucy4gIEJ5IGRlZmF1bHQgdGhl
CitlcXVpdmFsZW50IHdpbGwgYmUgZ2VuZXJhdGVkIHVzaW5nIHVzaW5nIHNldCBhbmQgYnJhbmNo
LgogCiBtcm9yCiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhST1IpCi1BbGxvd3MgZ2VuZXJh
dGlvbiBvZiBiaW5hcmllcyB3aGljaCB1c2UgdGhlIGwucm9yaSBpbnN0cnVjdGlvbnMuCitFbmFi
bGUgZ2VuZXJhdGlvbiBvZiByb3RhdGUgcmlnaHQgKGwucm9yKSBpbnN0cnVjdGlvbnMuICBCeSBk
ZWZhdWx0IGZ1bmN0aW9ucworZnJvbSBsaWJnY2MgYXJlIHVzZWQgdG8gcGVyZm9ybSByb3RhdGUg
cmlnaHQgb3BlcmF0aW9ucy4KKworbXJvcmkKK1RhcmdldCBSZWplY3ROZWdhdGl2ZSBNYXNrKFJP
UkkpCitFbmFibGUgZ2VuZXJhdGlvbiBvZiByb3RhdGUgcmlnaHQgd2l0aCBpbW1lZGlhdGUgKGwu
cm9yaSkgaW5zdHJ1Y3Rpb25zLiAgQnkKK2RlZmF1bHQgZnVuY3Rpb25zIGZyb20gbGliZ2NjIGFy
ZSB1c2VkIHRvIHBlcmZvcm0gcm90YXRlIHJpZ2h0IHdpdGggaW1tZWRpYXRlCitvcGVyYXRpb25z
LgogCiBtc2V4dAogVGFyZ2V0IFJlamVjdE5lZ2F0aXZlIE1hc2soU0VYVCkKLUFsbG93cyBnZW5l
cmF0aW9uIG9mIGJpbmFyaWVzIHdoaWNoIHVzZSBzaWduLWV4dGVuc2lvbiBpbnN0cnVjdGlvbnMu
ICBJZiB5b3VyCi10YXJnZXQgZG9lcyBub3Qgc3VwcG9ydCB0aGlzIHRoZSBjb21waWxlciB3aWxs
IHVzZSBtZW1vcnkgbG9hZHMgdG8gcGVyZm9ybSBzaWduCi1leHRlbnNpb24uCitFbmFibGUgZ2Vu
ZXJhdGlvbiBvZiBzaWduIGV4dGVuc2lvbiAobC5leHQqKSBpbnN0cnVjdGlvbnMuICBCeSBkZWZh
dWx0IG1lbW9yeQorbG9hZHMgYXJlIHVzZWQgdG8gcGVyZm9ybSBzaWduIGV4dGVuc2lvbi4KIAog
bXNmaW1tCiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhTRklNTSkKLUFsbG93cyBnZW5lcmF0
aW9uIG9mIGJpbmFyaWVzIHdoaWNoIHVzZSBsLnNmKmkgaW5zdHJ1Y3Rpb25zLiAgSWYgeW91ciB0
YXJnZXQKLWRvZXMgbm90IHN1cHBvcnQgdGhpcyB0aGUgY29tcGlsZXIgd2lsbCBnZW5lcmF0ZSBp
bnN0cnVjdGlvbnMgdG8gc3RvcmUgdGhlCi1pbW1lZGlhdGUgdG8gYSByZWdpc3RlciBmaXJzdC4K
K0VuYWJsZSBnZW5lcmF0aW9uIG9mIGNvbXBhcmUgYW5kIHNldCBmbGFnIHdpdGggaW1tZWRpYXRl
IChsLnNmKmkpIGluc3RydWN0aW9ucy4KK0J5IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rpb25zIHdp
bGwgYmUgZ2VuZXJhdGVkIHRvIHN0b3JlIHRoZSBpbW1lZGlhdGUgdG8gYQorcmVnaXN0ZXIgZmly
c3QuCiAKIG1zaGZ0aW1tCiBUYXJnZXQgUmVqZWN0TmVnYXRpdmUgTWFzayhTSEZUSU1NKQotQWxs
b3dzIGdlbmVyYXRpb24gb2YgYmluYXJpZXMgd2hpY2ggc3VwcG9ydCBzaGlmdHMgYW5kIHJvdGF0
ZSBpbnN0cnVjdGlvbnMKLXN1cHBvcnRpbmcgaW1tZWRpYXRlIGFyZ3VtZW50cywgZm9yIGV4YW1w
bGUgbC5yb3JpLgotCi1tc29mdC1kaXYKLVRhcmdldCBSZWplY3ROZWdhdGl2ZSBNYXNrKFNPRlRf
RElWKQotVXNlIGRpdmlkZSBlbXVsYXRpb24uCi0KLW1zb2Z0LW11bAotVGFyZ2V0IFJlamVjdE5l
Z2F0aXZlIE1hc2soU09GVF9NVUwpLgotVXNlIG11bHRpcGx5IGVtdWxhdGlvbi4KK0VuYWJsZSBn
ZW5lcmF0aW9uIG9mIHNoaWZ0IHdpdGggaW1tZWRpYXRlIChsLnNyYWksIGwuc3JsaSwgbC5zbGxp
KSBpbnN0cnVjdGlvbnMuCitCeSBkZWZhdWx0IGV4dHJhIGluc3RydWN0aW9ucyB3aWxsIGJlIGdl
bmVyYXRlZCB0byBzdG9yZSB0aGUgaW1tZWRpYXRlIHRvIGEKK3JlZ2lzdGVyIGZpcnN0LgpkaWZm
IC0tZ2l0IGEvZ2NjL2NvbmZpZy9vcjFrL3ByZWRpY2F0ZXMubWQgYi9nY2MvY29uZmlnL29yMWsv
cHJlZGljYXRlcy5tZAppbmRleCBkYWQxYzVkNGJlMy4uNWU5N2JmNDg0NjcgMTAwNjQ0Ci0tLSBh
L2djYy9jb25maWcvb3Ixay9wcmVkaWNhdGVzLm1kCisrKyBiL2djYy9jb25maWcvb3Ixay9wcmVk
aWNhdGVzLm1kCkBAIC01Myw2ICs1MywxMyBAQAogICAgIChtYXRjaF90ZXN0ICJJTlRWQUwgKG9w
KSA+PSAtMzI3NjggJiYgSU5UVkFMIChvcCkgPD0gMzI3NjciKQogICAgIChtYXRjaF9vcGVyYW5k
IDAgInJlZ2lzdGVyX29wZXJhbmQiKSkpCiAKKyhkZWZpbmVfcHJlZGljYXRlICJyb3JfcmVnX29y
X3U2X29wZXJhbmQiCisgIChpZl90aGVuX2Vsc2UgKG1hdGNoX2NvZGUgImNvbnN0X2ludCIpCisg
ICAgKGFuZCAobWF0Y2hfdGVzdCAiSU5UVkFMIChvcCkgPj0gMCAmJiBJTlRWQUwgKG9wKSA8PSAw
eDNmIikKKwkgKG1hdGNoX3Rlc3QgIlRBUkdFVF9ST1JJIikpCisgICAgKGFuZCAobWF0Y2hfb3Bl
cmFuZCAwICJyZWdpc3Rlcl9vcGVyYW5kIikKKwkgKG1hdGNoX3Rlc3QgIlRBUkdFVF9ST1IiKSkp
KQorCiAoZGVmaW5lX3ByZWRpY2F0ZSAiY2FsbF9pbnNuX29wZXJhbmQiCiAgIChpb3IgKG1hdGNo
X2NvZGUgInN5bWJvbF9yZWYiKQogICAgICAgIChtYXRjaF9vcGVyYW5kIDAgInJlZ2lzdGVyX29w
ZXJhbmQiKSkpCmRpZmYgLS1naXQgYS9nY2MvZG9jL2ludm9rZS50ZXhpIGIvZ2NjL2RvYy9pbnZv
a2UudGV4aQppbmRleCA2MzgyYTg0MDI4MS4uMWYxZjczNjcyYmQgMTAwNjQ0Ci0tLSBhL2djYy9k
b2MvaW52b2tlLnRleGkKKysrIGIvZ2NjL2RvYy9pbnZva2UudGV4aQpAQCAtMTAzMyw3ICsxMDMz
LDcgQEAgT2JqZWN0aXZlLUMgYW5kIE9iamVjdGl2ZS1DKysgRGlhbGVjdHN9LgogQGVtcGh7T3Bl
blJJU0MgT3B0aW9uc30KIEBnY2NvcHRsaXN0ey1tYm9hcmQ9QHZhcntuYW1lfSAgLW1uZXdsaWIg
IC1taGFyZC1tdWwgIC1taGFyZC1kaXYgQGdvbAogLW1zb2Z0LW11bCAgLW1zb2Z0LWRpdiBAZ29s
Ci0tbWNtb3YgIC1tcm9yICAtbXNleHQgIC1tc2ZpbW0gIC1tc2hmdGltbX0KKy1tY21vdiAgLW1y
b3IgIC1tcm9yaSAgLW1zZXh0ICAtbXNmaW1tICAtbXNoZnRpbW19CiAKIEBlbXBoe1BEUC0xMSBP
cHRpb25zfQogQGdjY29wdGxpc3R7LW1mcHUgIC1tc29mdC1mbG9hdCAgLW1hYzAgIC1tbm8tYWMw
ICAtbTQwICAtbTQ1ICAtbTEwIEBnb2wKQEAgLTIzNjMyLDUwICsyMzYzMiw1NiBAQCBuZXdsaWIg
Ym9hcmQgbGlicmFyeSBsaW5raW5nLiAgVGhlIGRlZmF1bHQgaXMgQGNvZGV7b3Ixa3NpbX0uCiAK
IEBpdGVtIC1tbmV3bGliCiBAb3BpbmRleCBtbmV3bGliCi1Gb3IgY29tcGF0aWJpbGl0eSwgaXQn
cyBhbHdheXMgbmV3bGliIGZvciBlbGYgbm93LgorVGhpcyBvcHRpb24gaXMgaWdub3JlZDsgaXQg
aXMgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZXMgb25seS4gIFRoaXMgdXNlZCB0bworc2VsZWN0
IGxpbmtlciBhbmQgcHJlcHJvY2Vzc29yIG9wdGlvbnMgZm9yIHVzZSB3aXRoIG5ld2xpYi4KIAot
QGl0ZW0gLW1oYXJkLWRpdgorQGl0ZW0gLW1zb2Z0LWRpdgorQGl0ZW14IC1taGFyZC1kaXYKK0Bv
cGluZGV4IG1zb2Z0LWRpdgogQG9waW5kZXggbWhhcmQtZGl2Ci1HZW5lcmF0ZSBjb2RlIGZvciBo
YXJkd2FyZSB3aGljaCBzdXBwb3J0cyBkaXZpZGUgaW5zdHJ1Y3Rpb25zLiAgVGhpcyBpcyB0aGUK
LWRlZmF1bHQuCitTZWxlY3Qgc29mdHdhcmUgb3IgaGFyZHdhcmUgZGl2aWRlIChAY29kZXtsLmRp
dn0sIEBjb2Rle2wuZGl2dX0pIGluc3RydWN0aW9ucy4KK1RoaXMgZGVmYXVsdCBpcyBoYXJkd2Fy
ZSBkaXZpZGUuCiAKLUBpdGVtIC1taGFyZC1tdWwKK0BpdGVtIC1tc29mdC1tdWwKK0BpdGVteCAt
bWhhcmQtbXVsCitAb3BpbmRleCBtc29mdC1tdWwKIEBvcGluZGV4IG1oYXJkLW11bAotR2VuZXJh
dGUgY29kZSBmb3IgaGFyZHdhcmUgd2hpY2ggc3VwcG9ydHMgbXVsdGlwbHkgaW5zdHJ1Y3Rpb25z
LiAgVGhpcyBpcyB0aGUKLWRlZmF1bHQuCitTZWxlY3Qgc29mdHdhcmUgb3IgaGFyZHdhcmUgbXVs
dGlwbHkgKEBjb2Rle2wubXVsfSwgQGNvZGV7bC5tdWxpfSkgaW5zdHJ1Y3Rpb25zLgorVGhpcyBk
ZWZhdWx0IGlzIGhhcmR3YXJlIG11bHRpcGx5LgogCiBAaXRlbSAtbWNtb3YKIEBvcGluZGV4IG1j
bW92Ci1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyB0aGUgY29uZGl0
aW9uYWwgbW92ZSAoQGNvZGV7bC5jbW92fSkKLWluc3RydWN0aW9uLgorRW5hYmxlIGdlbmVyYXRp
b24gb2YgY29uZGl0aW9uYWwgbW92ZSAoQGNvZGV7bC5jbW92fSkgaW5zdHJ1Y3Rpb25zLiAgQnkK
K2RlZmF1bHQgdGhlIGVxdWl2YWxlbnQgd2lsbCBiZSBnZW5lcmF0ZWQgdXNpbmcgdXNpbmcgc2V0
IGFuZCBicmFuY2guCiAKIEBpdGVtIC1tcm9yCiBAb3BpbmRleCBtcm9yCi1HZW5lcmF0ZSBjb2Rl
IGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyByb3RhdGUgcmlnaHQgaW5zdHJ1Y3Rpb25zLgor
RW5hYmxlIGdlbmVyYXRpb24gb2Ygcm90YXRlIHJpZ2h0IChAY29kZXtsLnJvcn0pIGluc3RydWN0
aW9ucy4gIEJ5IGRlZmF1bHQKK2Z1bmN0aW9ucyBmcm9tIEBmaWxle2xpYmdjY30gYXJlIHVzZWQg
dG8gcGVyZm9ybSByb3RhdGUgcmlnaHQgb3BlcmF0aW9ucy4KKworQGl0ZW0gLW1yb3JpCitAb3Bp
bmRleCBtcm9yaQorRW5hYmxlIGdlbmVyYXRpb24gb2Ygcm90YXRlIHJpZ2h0IHdpdGggaW1tZWRp
YXRlIChAY29kZXtsLnJvcml9KSBpbnN0cnVjdGlvbnMuCitCeSBkZWZhdWx0IGZ1bmN0aW9ucyBm
cm9tIEBmaWxle2xpYmdjY30gYXJlIHVzZWQgdG8gcGVyZm9ybSByb3RhdGUgcmlnaHQgd2l0aAor
aW1tZWRpYXRlIG9wZXJhdGlvbnMuCiAKIEBpdGVtIC1tc2V4dAogQG9waW5kZXggbXNleHQKLUdl
bmVyYXRlIGNvZGUgZm9yIGhhcmR3YXJlIHdoaWNoIHN1cHBvcnRzIHNpZ24tZXh0ZW5zaW9uIGlu
c3RydWN0aW9ucy4KK0VuYWJsZSBnZW5lcmF0aW9uIG9mIHNpZ24gZXh0ZW5zaW9uIChAY29kZXts
LmV4dCp9KSBpbnN0cnVjdGlvbnMuICBCeSBkZWZhdWx0CittZW1vcnkgbG9hZHMgYXJlIHVzZWQg
dG8gcGVyZm9ybSBzaWduIGV4dGVuc2lvbi4KIAogQGl0ZW0gLW1zZmltbQogQG9waW5kZXggbXNm
aW1tCi1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCBzdXBwb3J0cyBzZXQgZmxhZyBp
bW1lZGlhdGUgKEBjb2Rle2wuc2YqaX0pCi1pbnN0cnVjdGlvbnMuCitFbmFibGUgZ2VuZXJhdGlv
biBvZiBjb21wYXJlIGFuZCBzZXQgZmxhZyB3aXRoIGltbWVkaWF0ZSAoQGNvZGV7bC5zZippfSkK
K2luc3RydWN0aW9ucy4gIEJ5IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rpb25zIHdpbGwgYmUgZ2Vu
ZXJhdGVkIHRvIHN0b3JlIHRoZQoraW1tZWRpYXRlIHRvIGEgcmVnaXN0ZXIgZmlyc3QuCiAKIEBp
dGVtIC1tc2hmdGltbQogQG9waW5kZXggbXNoZnRpbW0KLUdlbmVyYXRlIGNvZGUgZm9yIGhhcmR3
YXJlIHdoaWNoIHN1cHBvcnRzIHNoaWZ0IGltbWVkaWF0ZSByZWxhdGVkIGluc3RydWN0aW9ucwot
KGkuZS4gQGNvZGV7bC5zcmFpfSwgQGNvZGV7bC5zcmxpfSwgQGNvZGV7bC5zbGxpfSwgQGNvZGV7
MS5yb3JpfSkuICBOb3RlLCB0bwotZW5hYmxlIGdlbmVyYXRpb24gb2YgdGhlIEBjb2Rle2wucm9y
aX0gaW5zdHJ1Y3Rpb24gdGhlIEBvcHRpb257LW1yb3J9IGZsYWcgbXVzdAotYWxzbyBiZSBzcGVj
aWZpZWQuCitFbmFibGUgZ2VuZXJhdGlvbiBvZiBzaGlmdCB3aXRoIGltbWVkaWF0ZSAoQGNvZGV7
bC5zcmFpfSwgQGNvZGV7bC5zcmxpfSwKK0Bjb2Rle2wuc2xsaX0pIGluc3RydWN0aW9ucy4gIEJ5
IGRlZmF1bHQgZXh0cmEgaW5zdHJ1Y3Rpb25zIHdpbGwgYmUgZ2VuZXJhdGVkCit0byBzdG9yZSB0
aGUgaW1tZWRpYXRlIHRvIGEgcmVnaXN0ZXIgZmlyc3QuCiAKLUBpdGVtIC1tc29mdC1kaXYKLUBv
cGluZGV4IG1zb2Z0LWRpdgotR2VuZXJhdGUgY29kZSBmb3IgaGFyZHdhcmUgd2hpY2ggcmVxdWly
ZXMgZGl2aWRlIGluc3RydWN0aW9uIGVtdWxhdGlvbi4KLQotQGl0ZW0gLW1zb2Z0LW11bAotQG9w
aW5kZXggbXNvZnQtbXVsCi1HZW5lcmF0ZSBjb2RlIGZvciBoYXJkd2FyZSB3aGljaCByZXF1aXJl
cyBtdWx0aXBseSBpbnN0cnVjdGlvbiBlbXVsYXRpb24uCiAKIEBlbmQgdGFibGUKIApkaWZmIC0t
Z2l0IGEvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvcm9yLTQuYyBiL2djYy90ZXN0c3Vp
dGUvZ2NjLnRhcmdldC9vcjFrL3Jvci00LmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMDAuLjc0ODljZTViNmEyCi0tLSAvZGV2L251bGwKKysrIGIvZ2NjL3Rlc3RzdWl0ZS9n
Y2MudGFyZ2V0L29yMWsvcm9yLTQuYwpAQCAtMCwwICsxLDggQEAKKy8qIHsgZGctZG8gY29tcGls
ZSB9ICovCisvKiB7IGRnLW9wdGlvbnMgIi1tcm9yaSAtTzIiIH0gKi8KKwordW5zaWduZWQgaW50
IHJvdGF0ZTYgKHVuc2lnbmVkIGludCBhKSB7CisgIHJldHVybiAoIGEgPj4gNiApIHwgKCBhIDw8
ICggMzIgLSA2ICkgKTsKK30KKworLyogeyBkZy1maW5hbCB7IHNjYW4tYXNzZW1ibGVyICJsLnJv
cmkiIH0gfSAqLwpkaWZmIC0tZ2l0IGEvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvcm9y
LTUuYyBiL2djYy90ZXN0c3VpdGUvZ2NjLnRhcmdldC9vcjFrL3Jvci01LmMKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAuLmRkNTZhY2NiYTYwCi0tLSAvZGV2L251bGwKKysr
IGIvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvcm9yLTUuYwpAQCAtMCwwICsxLDkgQEAK
Ky8qIHsgZGctZG8gY29tcGlsZSB9ICovCisvKiB7IGRnLW9wdGlvbnMgIi1tcm9yaSAtTzIiIH0g
Ki8KKy8qIHsgZGctc2tpcC1pZiAiIiB7ICotKi0qIH0gIHsgIi1tcm9yIiB9IHsgIiIgfSB9ICov
CisKK3Vuc2lnbmVkIGludCByb3RhdGUgKHVuc2lnbmVkIGludCBhLCBpbnQgYikgeworICByZXR1
cm4gKCBhID4+IGIgKSB8ICggYSA8PCAoIDMyIC0gYiApICk7Cit9CisKKy8qIHsgZGctZmluYWwg
eyBzY2FuLWFzc2VtYmxlci1ub3QgImwucm9yIiB9IH0gKi8KZGlmZiAtLWdpdCBhL2djYy90ZXN0
c3VpdGUvZ2NjLnRhcmdldC9vcjFrL3NoZnRpbW0tMS5jIGIvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFy
Z2V0L29yMWsvc2hmdGltbS0xLmMKaW5kZXggYmU4ZDllOGI4OTUuLjNhOGRjMDZkZjc5IDEwMDY0
NAotLS0gYS9nY2MvdGVzdHN1aXRlL2djYy50YXJnZXQvb3Ixay9zaGZ0aW1tLTEuYworKysgYi9n
Y2MvdGVzdHN1aXRlL2djYy50YXJnZXQvb3Ixay9zaGZ0aW1tLTEuYwpAQCAtMSw4ICsxLDggQEAK
IC8qIHsgZGctZG8gY29tcGlsZSB9ICovCi0vKiB7IGRnLW9wdGlvbnMgIi1tcm9yIC1tc2hmdGlt
bSAtTzIiIH0gKi8KKy8qIHsgZGctb3B0aW9ucyAiLW1zaGZ0aW1tIC1PMiIgfSAqLwogCi11bnNp
Z25lZCBpbnQgcm90YXRlNiAodW5zaWduZWQgaW50IGEpIHsKLSAgcmV0dXJuICggYSA+PiA2ICkg
fCAoIGEgPDwgKCAzMiAtIDYgKSApOwordW5zaWduZWQgaW50IHNoaWZ0NiAodW5zaWduZWQgaW50
IGEpIHsKKyAgcmV0dXJuIGEgPDwgNjsKIH0KIAotLyogeyBkZy1maW5hbCB7IHNjYW4tYXNzZW1i
bGVyICJsLnJvcmkiIH0gfSAqLworLyogeyBkZy1maW5hbCB7IHNjYW4tYXNzZW1ibGVyICJsLnNs
bGkiIH0gfSAqLwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVj
b3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
