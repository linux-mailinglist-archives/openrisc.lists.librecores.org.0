Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 5F05523B3DC
	for <lists+openrisc@lfdr.de>; Tue,  4 Aug 2020 06:24:30 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 3FFBF20D9C;
	Tue,  4 Aug 2020 06:24:30 +0200 (CEST)
Received: from mail-pl1-f194.google.com (mail-pl1-f194.google.com
 [209.85.214.194])
 by mail.librecores.org (Postfix) with ESMTPS id 72DBE20D95
 for <openrisc@lists.librecores.org>; Tue,  4 Aug 2020 06:24:28 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id t10so16823564plz.10
 for <openrisc@lists.librecores.org>; Mon, 03 Aug 2020 21:24:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=emsoU0j9Bl5DmKGC3Jly3v8Cf8b0+9+ogMOi2z5kCao=;
 b=L7RkbU2Iai6g9CmdbmnHyIL7JsWkGWUhHF0C7lKbuZiZSMAFjBcwqo82dv5oTFJGdq
 0jfduXbPOjdGtiDFE/m5iRd44icpYl2Ynv/eXjp6D/sHyaRDTlHcPHdM906JLTCcKAO+
 RIkq9VOv5pG9QgvbnY83YEg5P5/bQvKKtz8Tacuk2TjHSxXw/dIWdtGR4jM5LKyaA0cc
 CRUos3/71SRz22X73b6cBijBER5SQXmeU7THgECPCK+N84h79ZBAZnO0vWm1DA0zSpbR
 2rMm63LGPYZAHidcdThsLO5Uqzbq6y2hyJ2vLCP6S76UMDH1Mq32jcZEgnztUNedXOCP
 LavQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=emsoU0j9Bl5DmKGC3Jly3v8Cf8b0+9+ogMOi2z5kCao=;
 b=VxheiRVgCmVhR4ssUYQoGgVCcYYz3hyqUhRY4ugFBYO04/2FkHWtg+skXsQR1ZmFRy
 EGLd1QLTaW6D1/Wd1jTed51ZZOXSbzy+KYeQ34NXh84CDjvwKLHHfDekUUOrExL6KmRo
 D24D9asfBZJ8DKVVGTxJuGEDVUA8ZLP6vmQ65Aq7bvrMlHVzQvGAjlUesYr4p5GSnIEt
 tBRTpf0smZW7YZeMawsKfd79+9sYtjnkvD+nonQEvmJ7il6ldc6SgR/F/iU30oMQNxgP
 9FZdA0OwNvG0oY+zuy5Y9poORejYdAZInxLaXAQ02tf+u2Gdy6B57KLVNaUuqMhffDKS
 eYQQ==
X-Gm-Message-State: AOAM533nExvBc2Acy+GGBLKWUq6pbXLix21ijPDJSx8uk3PWT8l4G3Jo
 WM8GK0A/Qzg4qi8EVMpQLEM=
X-Google-Smtp-Source: ABdhPJwCxgLNp6RG+s4Eib/cNNTTB5lKMKo1VizRt2ibbN0azwTSUR+dSxuGvWe/Y7yWmXMLNQeDNA==
X-Received: by 2002:a17:902:700b:: with SMTP id
 y11mr17730309plk.290.1596515067045; 
 Mon, 03 Aug 2020 21:24:27 -0700 (PDT)
Received: from localhost (g223.115-65-55.ppp.wakwak.ne.jp. [115.65.55.223])
 by smtp.gmail.com with ESMTPSA id q66sm20287259pga.29.2020.08.03.21.24.25
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 03 Aug 2020 21:24:26 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: LKML <linux-kernel@vger.kernel.org>
Date: Tue,  4 Aug 2020 13:23:53 +0900
Message-Id: <20200804042354.3930694-6-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200804042354.3930694-1-shorne@gmail.com>
References: <20200804042354.3930694-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 5/6] openrisc: signal: Fix sparse address space
 warnings
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Jonas Bonn <jonas@southpole.se>, openrisc@lists.librecores.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhlIF9fdXNlciBhbm5vdGF0aW9ucyBpbiBzaWduYWwuYyB3ZXJlIG1vc3RseSBtaXNzaW5nLiAg
VGhlIG1pc3NpbmcKYW5ub3RhdGlvbnMgY2F1c2VkIHRoZSB3YXJuaW5ncyBsaXN0ZWQgYmVsb3cu
ICBUaGlzIHBhdGNoIGZpeGVzIHRoZW0gdXAKYnkgYWRkaW5nIHRoZSBfX3VzZXIgYW5ub3RhdGlv
bnMuCgphcmNoL29wZW5yaXNjL2tlcm5lbC9zaWduYWwuYzo3MTozODogd2FybmluZzogaW5jb3Jy
ZWN0IHR5cGUgaW4gaW5pdGlhbGl6ZXIgKGRpZmZlcmVudCBhZGRyZXNzIHNwYWNlcykKYXJjaC9v
cGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6NzE6Mzg6ICAgIGV4cGVjdGVkIHN0cnVjdCBydF9zaWdm
cmFtZSAqZnJhbWUKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6NzE6Mzg6ICAgIGdvdCBz
dHJ1Y3QgcnRfc2lnZnJhbWUgW25vZGVyZWZdIF9fdXNlciAqCmFyY2gvb3BlbnJpc2Mva2VybmVs
L3NpZ25hbC5jOjgyOjE0OiB3YXJuaW5nOiBpbmNvcnJlY3QgdHlwZSBpbiBhcmd1bWVudCAxIChk
aWZmZXJlbnQgYWRkcmVzcyBzcGFjZXMpCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjgy
OjE0OiAgICBleHBlY3RlZCB2b2lkIGNvbnN0IHZvbGF0aWxlIFtub2RlcmVmXSBfX3VzZXIgKgph
cmNoL29wZW5yaXNjL2tlcm5lbC9zaWduYWwuYzo4MjoxNDogICAgZ290IHN0cnVjdCBydF9zaWdm
cmFtZSAqZnJhbWUKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6ODQ6Mzc6IHdhcm5pbmc6
IGluY29ycmVjdCB0eXBlIGluIGFyZ3VtZW50IDIgKGRpZmZlcmVudCBhZGRyZXNzIHNwYWNlcykK
YXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6ODQ6Mzc6ICAgIGV4cGVjdGVkIHZvaWQgY29u
c3QgW25vZGVyZWZdIF9fdXNlciAqZnJvbQphcmNoL29wZW5yaXNjL2tlcm5lbC9zaWduYWwuYzo4
NDozNzogICAgZ290IHN0cnVjdCBzaWdzZXRfdCAqCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25h
bC5jOjg5OjM5OiB3YXJuaW5nOiBpbmNvcnJlY3QgdHlwZSBpbiBhcmd1bWVudCAyIChkaWZmZXJl
bnQgYWRkcmVzcyBzcGFjZXMpCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjg5OjM5OiAg
ICBleHBlY3RlZCBzdHJ1Y3Qgc2lnY29udGV4dCBbbm9kZXJlZl0gX191c2VyICpzYwphcmNoL29w
ZW5yaXNjL2tlcm5lbC9zaWduYWwuYzo4OTozOTogICAgZ290IHN0cnVjdCBzaWdjb250ZXh0ICoK
YXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6OTI6MzE6IHdhcm5pbmc6IGluY29ycmVjdCB0
eXBlIGluIGFyZ3VtZW50IDEgKGRpZmZlcmVudCBhZGRyZXNzIHNwYWNlcykKYXJjaC9vcGVucmlz
Yy9rZXJuZWwvc2lnbmFsLmM6OTI6MzE6ICAgIGV4cGVjdGVkIHN0cnVjdCBzaWdhbHRzdGFjayBj
b25zdCBbbm9kZXJlZl0gW3VzZXJ0eXBlXSBfX3VzZXIgKgphcmNoL29wZW5yaXNjL2tlcm5lbC9z
aWduYWwuYzo5MjozMTogICAgZ290IHN0cnVjdCBzaWdhbHRzdGFjayAqCmFyY2gvb3BlbnJpc2Mv
a2VybmVsL3NpZ25hbC5jOjE1ODoxNTogd2FybmluZzogaW5jb3JyZWN0IHR5cGUgaW4gYXNzaWdu
bWVudCAoZGlmZmVyZW50IGFkZHJlc3Mgc3BhY2VzKQphcmNoL29wZW5yaXNjL2tlcm5lbC9zaWdu
YWwuYzoxNTg6MTU6ICAgIGV4cGVjdGVkIHN0cnVjdCBydF9zaWdmcmFtZSAqZnJhbWUKYXJjaC9v
cGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6MTU4OjE1OiAgICBnb3Qgdm9pZCBbbm9kZXJlZl0gX191
c2VyICoKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6MTYwOjE0OiB3YXJuaW5nOiBpbmNv
cnJlY3QgdHlwZSBpbiBhcmd1bWVudCAxIChkaWZmZXJlbnQgYWRkcmVzcyBzcGFjZXMpCmFyY2gv
b3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE2MDoxNDogICAgZXhwZWN0ZWQgdm9pZCBjb25zdCB2
b2xhdGlsZSBbbm9kZXJlZl0gX191c2VyICoKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6
MTYwOjE0OiAgICBnb3Qgc3RydWN0IHJ0X3NpZ2ZyYW1lICpmcmFtZQphcmNoL29wZW5yaXNjL2tl
cm5lbC9zaWduYWwuYzoxNjU6NDY6IHdhcm5pbmc6IGluY29ycmVjdCB0eXBlIGluIGFyZ3VtZW50
IDEgKGRpZmZlcmVudCBhZGRyZXNzIHNwYWNlcykKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFs
LmM6MTY1OjQ2OiAgICBleHBlY3RlZCBzdHJ1Y3Qgc2lnaW5mbyBbbm9kZXJlZl0gW3VzZXJ0eXBl
XSBfX3VzZXIgKnRvCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE2NTo0NjogICAgZ290
IHN0cnVjdCBzaWdpbmZvICoKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFsLmM6MTcwOjMzOiB3
YXJuaW5nOiBpbmNvcnJlY3QgdHlwZSBpbiBhcmd1bWVudCAxIChkaWZmZXJlbnQgYWRkcmVzcyBz
cGFjZXMpCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE3MDozMzogICAgZXhwZWN0ZWQg
c3RydWN0IHNpZ2FsdHN0YWNrIFtub2RlcmVmXSBbdXNlcnR5cGVdIF9fdXNlciAqCmFyY2gvb3Bl
bnJpc2Mva2VybmVsL3NpZ25hbC5jOjE3MDozMzogICAgZ290IHN0cnVjdCBzaWdhbHRzdGFjayAq
CmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE3MTo0MDogd2FybmluZzogaW5jb3JyZWN0
IHR5cGUgaW4gYXJndW1lbnQgMiAoZGlmZmVyZW50IGFkZHJlc3Mgc3BhY2VzKQphcmNoL29wZW5y
aXNjL2tlcm5lbC9zaWduYWwuYzoxNzE6NDA6ICAgIGV4cGVjdGVkIHN0cnVjdCBzaWdjb250ZXh0
IFtub2RlcmVmXSBfX3VzZXIgKnNjCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE3MTo0
MDogICAgZ290IHN0cnVjdCBzaWdjb250ZXh0ICoKYXJjaC9vcGVucmlzYy9rZXJuZWwvc2lnbmFs
LmM6MTczOjMyOiB3YXJuaW5nOiBpbmNvcnJlY3QgdHlwZSBpbiBhcmd1bWVudCAxIChkaWZmZXJl
bnQgYWRkcmVzcyBzcGFjZXMpCmFyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jOjE3MzozMjog
ICAgZXhwZWN0ZWQgdm9pZCBbbm9kZXJlZl0gX191c2VyICp0bwphcmNoL29wZW5yaXNjL2tlcm5l
bC9zaWduYWwuYzoxNzM6MzI6ICAgIGdvdCBzdHJ1Y3Qgc2lnc2V0X3QgKgoKU2lnbmVkLW9mZi1i
eTogU3RhZmZvcmQgSG9ybmUgPHNob3JuZUBnbWFpbC5jb20+Ci0tLQogYXJjaC9vcGVucmlzYy9r
ZXJuZWwvc2lnbmFsLmMgfCAxNCArKysrKysrLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDcgaW5z
ZXJ0aW9ucygrKSwgNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL29wZW5yaXNjL2tl
cm5lbC9zaWduYWwuYyBiL2FyY2gvb3BlbnJpc2Mva2VybmVsL3NpZ25hbC5jCmluZGV4IDRmMDc1
NDg3NGQ3OC4uN2NlMDcyODQxMmY2IDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL2tlcm5lbC9z
aWduYWwuYworKysgYi9hcmNoL29wZW5yaXNjL2tlcm5lbC9zaWduYWwuYwpAQCAtNjgsNyArNjgs
NyBAQCBzdGF0aWMgaW50IHJlc3RvcmVfc2lnY29udGV4dChzdHJ1Y3QgcHRfcmVncyAqcmVncywK
IAogYXNtbGlua2FnZSBsb25nIF9zeXNfcnRfc2lncmV0dXJuKHN0cnVjdCBwdF9yZWdzICpyZWdz
KQogewotCXN0cnVjdCBydF9zaWdmcmFtZSAqZnJhbWUgPSAoc3RydWN0IHJ0X3NpZ2ZyYW1lIF9f
dXNlciAqKXJlZ3MtPnNwOworCXN0cnVjdCBydF9zaWdmcmFtZSBfX3VzZXIgKmZyYW1lID0gKHN0
cnVjdCBydF9zaWdmcmFtZSBfX3VzZXIgKilyZWdzLT5zcDsKIAlzaWdzZXRfdCBzZXQ7CiAKIAkv
KgpAQCAtNzYsNyArNzYsNyBAQCBhc21saW5rYWdlIGxvbmcgX3N5c19ydF9zaWdyZXR1cm4oc3Ry
dWN0IHB0X3JlZ3MgKnJlZ3MpCiAJICogdGhlbiBmcmFtZSBzaG91bGQgYmUgZHdvcmQgYWxpZ25l
ZCBoZXJlLiAgSWYgaXQncwogCSAqIG5vdCwgdGhlbiB0aGUgdXNlciBpcyB0cnlpbmcgdG8gbWVz
cyB3aXRoIHVzLgogCSAqLwotCWlmICgoKGxvbmcpZnJhbWUpICYgMykKKwlpZiAoKChfX2ZvcmNl
IHVuc2lnbmVkIGxvbmcpZnJhbWUpICYgMykKIAkJZ290byBiYWRmcmFtZTsKIAogCWlmICghYWNj
ZXNzX29rKGZyYW1lLCBzaXplb2YoKmZyYW1lKSkpCkBAIC0xNTEsNyArMTUxLDcgQEAgc3RhdGlj
IGlubGluZSB2b2lkIF9fdXNlciAqZ2V0X3NpZ2ZyYW1lKHN0cnVjdCBrc2lnbmFsICprc2lnLAog
c3RhdGljIGludCBzZXR1cF9ydF9mcmFtZShzdHJ1Y3Qga3NpZ25hbCAqa3NpZywgc2lnc2V0X3Qg
KnNldCwKIAkJCSAgc3RydWN0IHB0X3JlZ3MgKnJlZ3MpCiB7Ci0Jc3RydWN0IHJ0X3NpZ2ZyYW1l
ICpmcmFtZTsKKwlzdHJ1Y3QgcnRfc2lnZnJhbWUgX191c2VyICpmcmFtZTsKIAl1bnNpZ25lZCBs
b25nIHJldHVybl9pcDsKIAlpbnQgZXJyID0gMDsKIApAQCAtMTgxLDEwICsxODEsMTAgQEAgc3Rh
dGljIGludCBzZXR1cF9ydF9mcmFtZShzdHJ1Y3Qga3NpZ25hbCAqa3NpZywgc2lnc2V0X3QgKnNl
dCwKIAkJbC5vcmkgcjExLHIwLF9fTlJfc2lncmV0dXJuCiAJCWwuc3lzIDEKIAkgKi8KLQllcnIg
fD0gX19wdXRfdXNlcigweGE5NjAsICAgICAgICAgICAgIChzaG9ydCAqKShmcmFtZS0+cmV0Y29k
ZSArIDApKTsKLQllcnIgfD0gX19wdXRfdXNlcihfX05SX3J0X3NpZ3JldHVybiwgIChzaG9ydCAq
KShmcmFtZS0+cmV0Y29kZSArIDIpKTsKLQllcnIgfD0gX19wdXRfdXNlcigweDIwMDAwMDAxLCAo
dW5zaWduZWQgbG9uZyAqKShmcmFtZS0+cmV0Y29kZSArIDQpKTsKLQllcnIgfD0gX19wdXRfdXNl
cigweDE1MDAwMDAwLCAodW5zaWduZWQgbG9uZyAqKShmcmFtZS0+cmV0Y29kZSArIDgpKTsKKwll
cnIgfD0gX19wdXRfdXNlcigweGE5NjAsICAgICAgICAgICAgIChzaG9ydCBfX3VzZXIgKikoZnJh
bWUtPnJldGNvZGUgKyAwKSk7CisJZXJyIHw9IF9fcHV0X3VzZXIoX19OUl9ydF9zaWdyZXR1cm4s
ICAoc2hvcnQgX191c2VyICopKGZyYW1lLT5yZXRjb2RlICsgMikpOworCWVyciB8PSBfX3B1dF91
c2VyKDB4MjAwMDAwMDEsICh1bnNpZ25lZCBsb25nIF9fdXNlciAqKShmcmFtZS0+cmV0Y29kZSAr
IDQpKTsKKwllcnIgfD0gX19wdXRfdXNlcigweDE1MDAwMDAwLCAodW5zaWduZWQgbG9uZyBfX3Vz
ZXIgKikoZnJhbWUtPnJldGNvZGUgKyA4KSk7CiAKIAlpZiAoZXJyKQogCQlyZXR1cm4gLUVGQVVM
VDsKLS0gCjIuMjYuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3Jn
Cmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
