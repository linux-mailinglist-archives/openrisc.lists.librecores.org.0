Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id A88D31E5034
	for <lists+openrisc@lfdr.de>; Wed, 27 May 2020 23:19:25 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 60634205F5;
	Wed, 27 May 2020 23:19:25 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id E8E2020AC1
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 19:06:17 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id B032F20727;
 Thu, 14 May 2020 17:06:02 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1589475976;
 bh=na+woAr1Rb/Lbbk03AUz/L3J6fAEndCBFoSpnnyUKaU=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=fL0N1KNZmA6s5Ubf3GVJL9IP3tSYr1uvNzhyV77c29VHFlOFsFTz8KceUKlkyrNl3
 y8tr6Meh7lGdfB+RKuQ1zJL02OBYckoSc+0z1fGWDi7s0XQmwyTGvsdnTROT2jZqUt
 fg+08iD0H1uZZNJuXfUw5Ietx8dBaDOE04CUbeDw=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Thu, 14 May 2020 20:03:25 +0300
Message-Id: <20200514170327.31389-11-rppt@kernel.org>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200514170327.31389-1-rppt@kernel.org>
References: <20200514170327.31389-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 27 May 2020 23:18:58 +0200
Subject: [OpenRISC] [PATCH v2 10/12] mm: consolidate pmd_index() and
 pmd_offset() definitions
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Max Filippov <jcmvbkbc@gmail.com>,
 Guo Ren <guoren@kernel.org>, Matthew Wilcox <willy@infradead.org>,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Vincent Chen <deanbo422@gmail.com>,
 Will Deacon <will@kernel.org>, Greg Ungerer <gerg@linux-m68k.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, Brian Cain <bcain@codeaurora.org>,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>, Mike Rapoport <rppt@linux.ibm.com>,
 Ingo Molnar <mingo@redhat.com>, linux-parisc@vger.kernel.org,
 Mark Salter <msalter@redhat.com>, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Arnd Bergmann <arnd@arndb.de>, linux-alpha@vger.kernel.org,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 Tony Luck <tony.luck@intel.com>, Borislav Petkov <bp@alien8.de>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 linux-csky@vger.kernel.org, Guan Xuetao <gxt@pku.edu.cn>,
 linux-arm-kernel@lists.infradead.org, Chris Zankel <chris@zankel.net>,
 Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Thomas Gleixner <tglx@linutronix.de>, Richard Weinberger <richard@nod.at>,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKQWxsIGFyY2hpdGVjdHVy
ZXMgZGVmaW5lIHBtZF9pbmRleCgpIGFzCgoJKGFkZHJlc3MgPj4gUE1EX1NISUZUKSAmIChQVFJT
X1BFUl9QTUQgLSAxKQoKYW5kIGFsbCBhcmNoaXRlY3R1cmVzIHRoYXQgaGF2ZSBhdCBsZWFzdCB0
aHJlZS1sZXZlbCBwYWdlIHRhYmxlcyBkZWZpbmUKcG1kX29mZnNldCgpIGFzIGFuIGVudHJ5IGlu
IHRoZSBhcnJheSBvZiBQTURzIGluZGV4ZWQgYnkgdGhlIHBtZF9pbmRleCgpLgoKRm9yIHRoZSBt
b3N0IGFyY2hpdGVjdHVyZXMgdGhlIHBtZF9vZmZzZXQoKSBpbXBsZW1lbnRhdGlvbiByZWxpZXMg
b24KdGhlIGF2YWlsYWJpbGl0eSBvZiBwdWRfcGFnZV92YWRkcigpIHRoYXQgY29udmVydHMgYSBQ
TUQgZW50cnkgdmFsdWUgdG8gdGhlCnZpcnR1YWwgYWRkcmVzcyBvZiB0aGUgcGFnZSBjb250YWlu
aW5nIFBNRCBhcnJheS4KCkxldCdzIHVzZSBzdWNoIGltcGxlbWVudGF0aW9uIGFzIGEgZ2VuZXJp
YyBhbmQgZHJvcCBtb3N0IG9mIHRoZSBkZWZpbml0aW9ucwpvZiBwbWRfaW5kZXgoKSBhbmQgcG1k
X29mZnNldCgpIGluIDxhc20vcGd0YWJsZS5oPiBmaWxlcy4KClRoZSBhcmNoaXRlY3R1cmVzIHRo
YXQgZGlkbid0IHByb3ZpZGUgcHVkX3BhZ2VfdmFkZHIoKSBhcmUgdXBkYXRlZCB0bwpoYXZlIHRo
YXQgZGVmaW5lZC4KClRoZSBnZW5lcmljIGltcGxlbWVudGF0aW9uIGNhbiBiZSBvdmVycmlkZGVu
IGJ5IGFuIGFyY2hpdGVjdHVyZSBhbmQgdGhpcwphYmlsaXR5IGlzIGN1cnJlbnRseSBpbiB1c2Ug
YnkgdGhlcmUgYXJjaGl0ZWN0dXJlczoKKiBhbHBoYSBoYXMgc3BlY2lhbCByZXF1aXJlbWVudHMg
Zm9yIG1lbW9yeSBhY2Nlc3Mgb3JkZXJpbmcKKiBhcm0gaGFzIGN1c3RvbSBkZWZpbml0aW9uIG9m
IGZvbGRlZCAyLWxldmVsIHBhZ2UgdGFibGVzCiogczM5MCBoYXMgY3VzdG9tIGRlZmluaXRpb25z
IG9mIGFsbCBwYWdlIHRhYmxlIGFjY2Vzc29ycwoKU2lnbmVkLW9mZi1ieTogTWlrZSBSYXBvcG9y
dCA8cnBwdEBsaW51eC5pYm0uY29tPgotLS0KIGFyY2gvYWxwaGEvaW5jbHVkZS9hc20vcGd0YWJs
ZS5oICAgICAgICAgICAgIHwgIDEgKwogYXJjaC9hcm0vaW5jbHVkZS9hc20vcGd0YWJsZS0ybGV2
ZWwuaCAgICAgICAgfCAgMSArCiBhcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLTNsZXZlbC5o
ICAgICAgICB8ICA3IC0tLS0tCiBhcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLW5vbW11Lmgg
ICAgICAgICB8ICAxIC0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAg
ICAgIHwgIDggKysrKy0tCiBhcmNoL2M2eC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAg
ICAgICB8ICAxIC0KIGFyY2gvY3NreS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgICAg
IHwgIDEgLQogYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgfCAg
OSAtLS0tLS0KIGFyY2gvaWE2NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgICAgIHwg
IDQgLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vbW90b3JvbGFfcGd0YWJsZS5oICAgICB8ICA3
IC0tLS0tCiBhcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICB8ICAx
IC0KIGFyY2gvbWlwcy9pbmNsdWRlL2FzbS9wZ3RhYmxlLTMyLmggICAgICAgICAgIHwgIDEgLQog
YXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtNjQuaCAgICAgICAgICAgfCAgNiAtLS0tCiBh
cmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgICB8ICA4IC0tLS0tLQog
YXJjaC9wYXJpc2Mva2VybmVsL3BjaS1kbWEuYyAgICAgICAgICAgICAgICAgfCAgMiArLQogYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmggfCAgMyAtLQogYXJjaC9w
b3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxlLmggfCAgMyAtLQogYXJjaC9yaXNj
di9pbmNsdWRlL2FzbS9wZ3RhYmxlLTY0LmggICAgICAgICAgfCAgNyAtLS0tLQogYXJjaC9yaXNj
di9tbS9pbml0LmMgICAgICAgICAgICAgICAgICAgICAgICAgfCAxMiArKysrLS0tLQogYXJjaC9z
MzkwL2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICAgfCAgMSArCiBhcmNoL3NoL2lu
Y2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmggICAgICAgICB8ICA3IC0tLS0tCiBhcmNoL3NoL2lu
Y2x1ZGUvYXNtL3BndGFibGVfMzIuaCAgICAgICAgICAgICB8ICAxIC0KIGFyY2gvc2gvaW5jbHVk
ZS9hc20vcGd0YWJsZV82NC5oICAgICAgICAgICAgIHwgIDEgLQogYXJjaC9zcGFyYy9pbmNsdWRl
L2FzbS9wZ3RhYmxlXzMyLmggICAgICAgICAgfCAgOSArLS0tLS0KIGFyY2gvc3BhcmMvaW5jbHVk
ZS9hc20vcGd0YWJsZV82NC5oICAgICAgICAgIHwgIDcgKy0tLS0KIGFyY2gvdW0vaW5jbHVkZS9h
c20vcGd0YWJsZS0zbGV2ZWwuaCAgICAgICAgIHwgIDQgLS0tCiBhcmNoL3VtL2luY2x1ZGUvYXNt
L3BndGFibGUuaCAgICAgICAgICAgICAgICB8ICA0IC0tLQogYXJjaC94ODYvaW5jbHVkZS9hc20v
cGd0YWJsZS5oICAgICAgICAgICAgICAgfCAxNyAtLS0tLS0tLS0tLS0KIGluY2x1ZGUvYXNtLWdl
bmVyaWMvcGd0YWJsZS1ub3BtZC5oICAgICAgICAgIHwgIDEgKwogaW5jbHVkZS9saW51eC9wZ3Rh
YmxlLmggICAgICAgICAgICAgICAgICAgICAgfCAyOSArKysrKysrKysrKysrKysrKystLQogMzAg
ZmlsZXMgY2hhbmdlZCwgNDQgaW5zZXJ0aW9ucygrKSwgMTIwIGRlbGV0aW9ucygtKQoKZGlmZiAt
LWdpdCBhL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9hbHBoYS9pbmNs
dWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggZGFjMjBkMDNiNzI3Li4zMTQ5NzNkMjgxMGQgMTAwNjQ0
Ci0tLSBhL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvYWxwaGEv
aW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC0zMDUsNiArMzA1LDcgQEAgZXh0ZXJuIGlubGluZSBw
bWRfdCAqIHBtZF9vZmZzZXQocHVkX3QgKiBkaXIsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKIAlz
bXBfcmVhZF9iYXJyaWVyX2RlcGVuZHMoKTsgLyogc2VlIGFib3ZlICovCiAJcmV0dXJuIHJldDsK
IH0KKyNkZWZpbmUgcG1kX29mZnNldCBwbWRfb2Zmc2V0CiAKIC8qIEZpbmQgYW4gZW50cnkgaW4g
dGhlIHRoaXJkLWxldmVsIHBhZ2UgdGFibGUuLiAqLwogZXh0ZXJuIGlubGluZSBwdGVfdCAqIHB0
ZV9vZmZzZXRfa2VybmVsKHBtZF90ICogZGlyLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCmRpZmYg
LS1naXQgYS9hcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLTJsZXZlbC5oIGIvYXJjaC9hcm0v
aW5jbHVkZS9hc20vcGd0YWJsZS0ybGV2ZWwuaAppbmRleCA5ZTA4NGE0NjRhOTcuLjM1MDJjMmY3
NDZjYSAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vaW5jbHVkZS9hc20vcGd0YWJsZS0ybGV2ZWwuaAor
KysgYi9hcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLTJsZXZlbC5oCkBAIC0xODcsNiArMTg3
LDcgQEAgc3RhdGljIGlubGluZSBwbWRfdCAqcG1kX29mZnNldChwdWRfdCAqcHVkLCB1bnNpZ25l
ZCBsb25nIGFkZHIpCiB7CiAJcmV0dXJuIChwbWRfdCAqKXB1ZDsKIH0KKyNkZWZpbmUgcG1kX29m
ZnNldCBwbWRfb2Zmc2V0CiAKICNkZWZpbmUgcG1kX2xhcmdlKHBtZCkJCShwbWRfdmFsKHBtZCkg
JiAyKQogI2RlZmluZSBwbWRfbGVhZihwbWQpCQkocG1kX3ZhbChwbWQpICYgMikKZGlmZiAtLWdp
dCBhL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmggYi9hcmNoL2FybS9pbmNs
dWRlL2FzbS9wZ3RhYmxlLTNsZXZlbC5oCmluZGV4IDE5MzNhZWQ5ZjY4ZC4uZmJiNjY5M2MzMzUy
IDEwMDY0NAotLS0gYS9hcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLTNsZXZlbC5oCisrKyBi
L2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmgKQEAgLTEzMywxMyArMTMzLDYg
QEAgc3RhdGljIGlubGluZSBwbWRfdCAqcHVkX3BhZ2VfdmFkZHIocHVkX3QgcHVkKQogCXJldHVy
biBfX3ZhKHB1ZF92YWwocHVkKSAmIFBIWVNfTUFTSyAmIChzMzIpUEFHRV9NQVNLKTsKIH0KIAot
LyogRmluZCBhbiBlbnRyeSBpbiB0aGUgc2Vjb25kLWxldmVsIHBhZ2UgdGFibGUuLiAqLwotI2Rl
ZmluZSBwbWRfaW5kZXgoYWRkcikJCSgoKGFkZHIpID4+IFBNRF9TSElGVCkgJiAoUFRSU19QRVJf
UE1EIC0gMSkpCi1zdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfb2Zmc2V0KHB1ZF90ICpwdWQsIHVu
c2lnbmVkIGxvbmcgYWRkcikKLXsKLQlyZXR1cm4gKHBtZF90ICopcHVkX3BhZ2VfdmFkZHIoKnB1
ZCkgKyBwbWRfaW5kZXgoYWRkcik7Ci19Ci0KICNkZWZpbmUgcG1kX2JhZChwbWQpCQkoIShwbWRf
dmFsKHBtZCkgJiAyKSkKIAogI2RlZmluZSBjb3B5X3BtZChwbWRwZCxwbWRwcykJCVwKZGlmZiAt
LWdpdCBhL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUtbm9tbXUuaCBiL2FyY2gvYXJtL2lu
Y2x1ZGUvYXNtL3BndGFibGUtbm9tbXUuaAppbmRleCAxYTc1OGYxNGUwYzMuLmQxNmFiYTQ4ZmEw
YSAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vaW5jbHVkZS9hc20vcGd0YWJsZS1ub21tdS5oCisrKyBi
L2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUtbm9tbXUuaApAQCAtMjIsNyArMjIsNiBAQAog
I2RlZmluZSBwZ2RfYmFkKHBnZCkJCSgwKQogI2RlZmluZSBwZ2RfY2xlYXIocGdkcCkKICNkZWZp
bmUga2Vybl9hZGRyX3ZhbGlkKGFkZHIpCSgxKQotI2RlZmluZQlwbWRfb2Zmc2V0KGEsIGIpCSgo
dm9pZCAqKTApCiAvKiBGSVhNRSAqLwogLyoKICAqIFBNRF9TSElGVCBkZXRlcm1pbmVzIHRoZSBz
aXplIG9mIHRoZSBhcmVhIGEgc2Vjb25kLWxldmVsIHBhZ2UgdGFibGUgY2FuIG1hcApkaWZmIC0t
Z2l0IGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL2FybTY0L2luY2x1
ZGUvYXNtL3BndGFibGUuaAppbmRleCA1ZTNlZjRjYjg1NWEuLmQwMTc1MzM1YTJmMiAxMDA2NDQK
LS0tIGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9hcm02NC9p
bmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTU2NiwxMSArNTY2LDEzIEBAIHN0YXRpYyBpbmxpbmUg
cGh5c19hZGRyX3QgcHVkX3BhZ2VfcGFkZHIocHVkX3QgcHVkKQogCXJldHVybiBfX3B1ZF90b19w
aHlzKHB1ZCk7CiB9CiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHNlY29uZC1sZXZlbCBwYWdl
IHRhYmxlLiAqLwotI2RlZmluZSBwbWRfaW5kZXgoYWRkcikJCSgoKGFkZHIpID4+IFBNRF9TSElG
VCkgJiAoUFRSU19QRVJfUE1EIC0gMSkpCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHVk
X3BhZ2VfdmFkZHIocHVkX3QgcHVkKQoreworCXJldHVybiAodW5zaWduZWQgbG9uZylfX3ZhKHB1
ZF9wYWdlX3BhZGRyKHB1ZCkpOworfQogCisvKiBGaW5kIGFuIGVudHJ5IGluIHRoZSBzZWNvbmQt
bGV2ZWwgcGFnZSB0YWJsZS4gKi8KICNkZWZpbmUgcG1kX29mZnNldF9waHlzKGRpciwgYWRkcikJ
KHB1ZF9wYWdlX3BhZGRyKFJFQURfT05DRSgqKGRpcikpKSArIHBtZF9pbmRleChhZGRyKSAqIHNp
emVvZihwbWRfdCkpCi0jZGVmaW5lIHBtZF9vZmZzZXQoZGlyLCBhZGRyKQkJKChwbWRfdCAqKV9f
dmEocG1kX29mZnNldF9waHlzKChkaXIpLCAoYWRkcikpKSkKIAogI2RlZmluZSBwbWRfc2V0X2Zp
eG1hcChhZGRyKQkJKChwbWRfdCAqKXNldF9maXhtYXBfb2Zmc2V0KEZJWF9QTUQsIGFkZHIpKQog
I2RlZmluZSBwbWRfc2V0X2ZpeG1hcF9vZmZzZXQocHVkLCBhZGRyKQlwbWRfc2V0X2ZpeG1hcChw
bWRfb2Zmc2V0X3BoeXMocHVkLCBhZGRyKSkKZGlmZiAtLWdpdCBhL2FyY2gvYzZ4L2luY2x1ZGUv
YXNtL3BndGFibGUuaCBiL2FyY2gvYzZ4L2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCA2MGE2
N2Q4MzM5ODkuLjhhOTFjZWRhMzlmYSAxMDA2NDQKLS0tIGEvYXJjaC9jNngvaW5jbHVkZS9hc20v
cGd0YWJsZS5oCisrKyBiL2FyY2gvYzZ4L2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtMjYsNyAr
MjYsNiBAQAogI2RlZmluZSBwZ2RfY2xlYXIocGdkcCkKICNkZWZpbmUga2Vybl9hZGRyX3ZhbGlk
KGFkZHIpICgxKQogCi0jZGVmaW5lIHBtZF9vZmZzZXQoYSwgYikJKCh2b2lkICopMCkKICNkZWZp
bmUgcG1kX25vbmUoeCkJCSghcG1kX3ZhbCh4KSkKICNkZWZpbmUgcG1kX3ByZXNlbnQoeCkJCShw
bWRfdmFsKHgpKQogI2RlZmluZSBwbWRfY2xlYXIoeHApCQlkbyB7IHNldF9wbWQoeHAsIF9fcG1k
KDApKTsgfSB3aGlsZSAoMCkKZGlmZiAtLWdpdCBhL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9wZ3Rh
YmxlLmggYi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IGJjZWY3ZTY3YWMy
Zi4uZGM2MTNmMjBlMmUxIDEwMDY0NAotLS0gYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJs
ZS5oCisrKyBiL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTIyMSw3ICsyMjEs
NiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90IHB0ZV9ta3lvdW5nKHB0ZV90IHB0ZSkKIH0KIAogI2Rl
ZmluZSBwdWRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4gUFVEX1NISUZUKSAmIChQVFJT
X1BFUl9QVUQtMSkpCi0jZGVmaW5lIHBtZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQ
TURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRC0xKSkKIAogLyogdG8gZmluZCBhbiBlbnRyeSBpbiBh
IGtlcm5lbCBwYWdlLXRhYmxlLWRpcmVjdG9yeSAqLwogI2RlZmluZSBwZ2Rfb2Zmc2V0X2soYWRk
cmVzcykJcGdkX29mZnNldCgmaW5pdF9tbSwgYWRkcmVzcykKZGlmZiAtLWdpdCBhL2FyY2gvaGV4
YWdvbi9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vcGd0
YWJsZS5oCmluZGV4IGYxNWJiYWE4OGJhOC4uZWI5NWU5ZjYwY2YwIDEwMDY0NAotLS0gYS9hcmNo
L2hleGFnb24vaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvaGV4YWdvbi9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmgKQEAgLTIwNiwxNSArMjA2LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIHB0
ZV9jbGVhcihzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyLAogCXB0ZV92
YWwoKnB0ZXApID0gX05VTExfUFRFOwogfQogCi0jaWZkZWYgTkVFRF9QTURfSU5ERVhfREVTUElU
RV9CRUlOR18yX0xFVkVMCi0vKioKLSAqIHBtZF9pbmRleCAtIHJldHVybnMgdGhlIGluZGV4IG9m
IHRoZSBlbnRyeSBpbiB0aGUgUE1EIHBhZ2UKLSAqIHdoaWNoIHdvdWxkIGNvbnRyb2wgdGhlIGdp
dmVuIHZpcnR1YWwgYWRkcmVzcwotICovCi0jZGVmaW5lIHBtZF9pbmRleChhZGRyZXNzKSAoKChh
ZGRyZXNzKSA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRC0xKSkKLQotI2VuZGlmCi0KIC8q
KgogICogcGdkX2luZGV4IC0gcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGVudHJ5IGluIHRoZSBQ
R0QgcGFnZQogICogd2hpY2ggd291bGQgY29udHJvbCB0aGUgZ2l2ZW4gdmlydHVhbCBhZGRyZXNz
CmRpZmYgLS1naXQgYS9hcmNoL2lhNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9pYTY0
L2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCBiOWNlN2Q3OGEzM2YuLmQ3NWQ5ODFlNmVlMSAx
MDA2NDQKLS0tIGEvYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL2lh
NjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC0zODksMTAgKzM4OSw2IEBAIHBnZF9vZmZzZXQg
KGNvbnN0IHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCiAJKChw
dWRfdCAqKSBwNGRfcGFnZV92YWRkcigqKGRpcikpICsgKCgoYWRkcikgPj4gUFVEX1NISUZUKSAm
IChQVFJTX1BFUl9QVUQgLSAxKSkpCiAjZW5kaWYKIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUg
dGhpcmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCi0jZGVmaW5lIHBtZF9vZmZzZXQoZGlyLGFkZHIp
IFwKLQkoKHBtZF90ICopIHB1ZF9wYWdlX3ZhZGRyKCooZGlyKSkgKyAoKChhZGRyKSA+PiBQTURf
U0hJRlQpICYgKFBUUlNfUEVSX1BNRCAtIDEpKSkKLQogLyogYXRvbWljIHZlcnNpb25zIG9mIHRo
ZSBzb21lIFBURSBtYW5pcHVsYXRpb25zOiAqLwogCiBzdGF0aWMgaW5saW5lIGludApkaWZmIC0t
Z2l0IGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21vdG9yb2xhX3BndGFibGUuaCBiL2FyY2gvbTY4
ay9pbmNsdWRlL2FzbS9tb3Rvcm9sYV9wZ3RhYmxlLmgKaW5kZXggMzQ1YWJmNGQ0ZTUwLi5lYjk3
ZWE3MDg4NmUgMTAwNjQ0Ci0tLSBhL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS9tb3Rvcm9sYV9wZ3Rh
YmxlLmgKKysrIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21vdG9yb2xhX3BndGFibGUuaApAQCAt
MjExLDEzICsyMTEsNiBAQCBzdGF0aWMgaW5saW5lIHBnZF90ICpwZ2Rfb2Zmc2V0X2sodW5zaWdu
ZWQgbG9uZyBhZGRyZXNzKQogCXJldHVybiBrZXJuZWxfcGdfZGlyICsgKGFkZHJlc3MgPj4gUEdE
SVJfU0hJRlQpOwogfQogCi0KLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHNlY29uZC1sZXZlbCBw
YWdlIHRhYmxlLi4gKi8KLXN0YXRpYyBpbmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3QgKmRp
ciwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQotewotCXJldHVybiAocG1kX3QgKilwdWRfcGFnZV92
YWRkcigqZGlyKSArICgoYWRkcmVzcyA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRC0xKSk7
Ci19Ci0KIC8qIEVuY29kZSBhbmQgZGUtY29kZSBhIHN3YXAgZW50cnkgKG11c3QgYmUgIXB0ZV9u
b25lKGUpICYmICFwdGVfcHJlc2VudChlKSkgKi8KICNkZWZpbmUgX19zd3BfdHlwZSh4KQkJKCgo
eCkudmFsID4+IDQpICYgMHhmZikKICNkZWZpbmUgX19zd3Bfb2Zmc2V0KHgpCQkoKHgpLnZhbCA+
PiAxMikKZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgg
Yi9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IGU1M2ViOTYyZmJl
ZC4uOTI3Y2NiYTE2MWVjIDEwMDY0NAotLS0gYS9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20v
cGd0YWJsZS5oCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAg
LTIxLDcgKzIxLDYgQEAgZXh0ZXJuIGludCBtZW1faW5pdF9kb25lOwogI2RlZmluZSBwZ2RfYmFk
KHBnZCkJCSgwKQogI2RlZmluZSBwZ2RfY2xlYXIocGdkcCkKICNkZWZpbmUga2Vybl9hZGRyX3Zh
bGlkKGFkZHIpCSgxKQotI2RlZmluZQlwbWRfb2Zmc2V0KGEsIGIpCSgodm9pZCAqKSAwKQogCiAj
ZGVmaW5lIFBBR0VfTk9ORQkJX19wZ3Byb3QoMCkgLyogdGhlc2UgbWVhbiBub3RoaW5nIHRvIG5v
biBNTVUgKi8KICNkZWZpbmUgUEFHRV9TSEFSRUQJCV9fcGdwcm90KDApIC8qIHRoZXNlIG1lYW4g
bm90aGluZyB0byBub24gTU1VICovCmRpZmYgLS1naXQgYS9hcmNoL21pcHMvaW5jbHVkZS9hc20v
cGd0YWJsZS0zMi5oIGIvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtMzIuaAppbmRleCBj
MDRjNTIzODI2MWEuLjA1YjUxYzM0NDkzOSAxMDA2NDQKLS0tIGEvYXJjaC9taXBzL2luY2x1ZGUv
YXNtL3BndGFibGUtMzIuaAorKysgYi9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS0zMi5o
CkBAIC0yMDAsNyArMjAwLDYgQEAgc3RhdGljIGlubGluZSBwdGVfdCBwZm5fcHRlKHVuc2lnbmVk
IGxvbmcgcGZuLCBwZ3Byb3RfdCBwcm90KQogCiAjZGVmaW5lIHBnZF9pbmRleChhZGRyZXNzKQko
KChhZGRyZXNzKSA+PiBQR0RJUl9TSElGVCkgJiAoUFRSU19QRVJfUEdELTEpKQogI2RlZmluZSBw
dWRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4gUFVEX1NISUZUKSAmIChQVFJTX1BFUl9Q
VUQtMSkpCi0jZGVmaW5lIHBtZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQTURfU0hJ
RlQpICYgKFBUUlNfUEVSX1BNRC0xKSkKIAogLyogdG8gZmluZCBhbiBlbnRyeSBpbiBhIHBhZ2Ut
dGFibGUtZGlyZWN0b3J5ICovCiAjZGVmaW5lIHBnZF9vZmZzZXQobW0sIGFkZHIpCSgobW0pLT5w
Z2QgKyBwZ2RfaW5kZXgoYWRkcikpCmRpZmYgLS1naXQgYS9hcmNoL21pcHMvaW5jbHVkZS9hc20v
cGd0YWJsZS02NC5oIGIvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtNjQuaAppbmRleCA0
MzBhYmIxOWNlODIuLjIxZmI1NTUxMGQzNSAxMDA2NDQKLS0tIGEvYXJjaC9taXBzL2luY2x1ZGUv
YXNtL3BndGFibGUtNjQuaAorKysgYi9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5o
CkBAIC0zMjQsNyArMzI0LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIHB1ZF9jbGVhcihwdWRfdCAq
cHVkcCkKICNkZWZpbmUgcGdkX29mZnNldF9rKGFkZHJlc3MpIHBnZF9vZmZzZXQoJmluaXRfbW0s
IGFkZHJlc3MpCiAKICNkZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpCSgoKGFkZHJlc3MpID4+IFBH
RElSX1NISUZUKSAmIChQVFJTX1BFUl9QR0QtMSkpCi0jZGVmaW5lIHBtZF9pbmRleChhZGRyZXNz
KQkoKChhZGRyZXNzKSA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRC0xKSkKIAogLyogdG8g
ZmluZCBhbiBlbnRyeSBpbiBhIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAjZGVmaW5lIHBnZF9v
ZmZzZXQobW0sIGFkZHIpCSgobW0pLT5wZ2QgKyBwZ2RfaW5kZXgoYWRkcikpCkBAIC0zMzcsMTEg
KzMzNiw2IEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwdWRfcGFnZV92YWRkcihwdWRf
dCBwdWQpCiAjZGVmaW5lIHB1ZF9waHlzKHB1ZCkJCXZpcnRfdG9fcGh5cygodm9pZCAqKXB1ZF92
YWwocHVkKSkKICNkZWZpbmUgcHVkX3BhZ2UocHVkKQkJKHBmbl90b19wYWdlKHB1ZF9waHlzKHB1
ZCkgPj4gUEFHRV9TSElGVCkpCiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHNlY29uZC1sZXZl
bCBwYWdlIHRhYmxlLi4gKi8KLXN0YXRpYyBpbmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3Qg
KiBwdWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKLXsKLQlyZXR1cm4gKHBtZF90ICopIHB1ZF9w
YWdlX3ZhZGRyKCpwdWQpICsgcG1kX2luZGV4KGFkZHJlc3MpOwotfQogI2VuZGlmCiAKIC8qCmRp
ZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL3Bhcmlz
Yy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggM2ViMzQ5NTNiNjBhLi43NjQ4ODgwOWExMTEg
MTAwNjQ0Ci0tLSBhL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNo
L3BhcmlzYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTQ0OCwxNCArNDQ4LDYgQEAgc3RhdGlj
IGlubGluZSB1bnNpZ25lZCBsb25nIHBtZF9wYWdlX3ZhZGRyKHBtZF90IHBtZCkKIAogLyogRmlu
ZCBhbiBlbnRyeSBpbiB0aGUgc2Vjb25kLWxldmVsIHBhZ2UgdGFibGUuLiAqLwogCi0jaWYgQ09O
RklHX1BHVEFCTEVfTEVWRUxTID09IDMKLSNkZWZpbmUgcG1kX2luZGV4KGFkZHIpICAgICAgICAg
KCgoYWRkcikgPj4gUE1EX1NISUZUKSAmIChQVFJTX1BFUl9QTUQgLSAxKSkKLSNkZWZpbmUgcG1k
X29mZnNldChkaXIsYWRkcmVzcykgXAotKChwbWRfdCAqKSBwdWRfcGFnZV92YWRkcigqKGRpcikp
ICsgcG1kX2luZGV4KGFkZHJlc3MpKQotI2Vsc2UKLSNkZWZpbmUgcG1kX29mZnNldChkaXIsYWRk
cikgKChwbWRfdCAqKSBkaXIpCi0jZW5kaWYKLQogZXh0ZXJuIHZvaWQgcGFnaW5nX2luaXQgKHZv
aWQpOwogCiAvKiBVc2VkIGZvciBkZWZlcnJpbmcgY2FsbHMgdG8gZmx1c2hfZGNhY2hlX3BhZ2Uo
KSAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9wYXJpc2Mva2VybmVsL3BjaS1kbWEuYyBiL2FyY2gvcGFy
aXNjL2tlcm5lbC9wY2ktZG1hLmMKaW5kZXggMGYxYjQ2MGVlNzE1Li43MGNkMjRiZGNmZWMgMTAw
NjQ0Ci0tLSBhL2FyY2gvcGFyaXNjL2tlcm5lbC9wY2ktZG1hLmMKKysrIGIvYXJjaC9wYXJpc2Mv
a2VybmVsL3BjaS1kbWEuYwpAQCAtMjAxLDcgKzIwMSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCB1
bm1hcF91bmNhY2hlZF9wbWQocGdkX3QgKiBkaXIsIHVuc2lnbmVkIGxvbmcgdmFkZHIsCiAJCXBn
ZF9jbGVhcihkaXIpOwogCQlyZXR1cm47CiAJfQotCXBtZCA9IHBtZF9vZmZzZXQoZGlyLCB2YWRk
cik7CisJcG1kID0gcG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQoZGlyLCB2YWRkciks
IHZhZGRyKSwgdmFkZHIpOwogCXZhZGRyICY9IH5QR0RJUl9NQVNLOwogCWVuZCA9IHZhZGRyICsg
c2l6ZTsKIAlpZiAoZW5kID4gUEdESVJfU0laRSkKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9p
bmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNt
L2Jvb2szcy82NC9wZ3RhYmxlLmgKaW5kZXggMGE5NjgwNzRlYWU1Li5mYmI1ZDEyYzYyMTQgMTAw
NjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oCisr
KyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oCkBAIC0xMDEw
LDcgKzEwMTAsNiBAQCBleHRlcm4gc3RydWN0IHBhZ2UgKnA0ZF9wYWdlKHA0ZF90IHA0ZCk7CiAK
ICNkZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IChQR0RJUl9TSElGVCkp
ICYgKFBUUlNfUEVSX1BHRCAtIDEpKQogI2RlZmluZSBwdWRfaW5kZXgoYWRkcmVzcykgKCgoYWRk
cmVzcykgPj4gKFBVRF9TSElGVCkpICYgKFBUUlNfUEVSX1BVRCAtIDEpKQotI2RlZmluZSBwbWRf
aW5kZXgoYWRkcmVzcykgKCgoYWRkcmVzcykgPj4gKFBNRF9TSElGVCkpICYgKFBUUlNfUEVSX1BN
RCAtIDEpKQogCiAvKgogICogRmluZCBhbiBlbnRyeSBpbiBhIHBhZ2UtdGFibGUtZGlyZWN0b3J5
LiAgV2UgY29tYmluZSB0aGUgYWRkcmVzcyByZWdpb24KQEAgLTEwMjEsOCArMTAyMCw2IEBAIGV4
dGVybiBzdHJ1Y3QgcGFnZSAqcDRkX3BhZ2UocDRkX3QgcDRkKTsKIAogI2RlZmluZSBwdWRfb2Zm
c2V0KHA0ZHAsIGFkZHIpCVwKIAkoKChwdWRfdCAqKSBwNGRfcGFnZV92YWRkcigqKHA0ZHApKSkg
KyBwdWRfaW5kZXgoYWRkcikpCi0jZGVmaW5lIHBtZF9vZmZzZXQocHVkcCxhZGRyKSBcCi0JKCgo
cG1kX3QgKikgcHVkX3BhZ2VfdmFkZHIoKihwdWRwKSkpICsgcG1kX2luZGV4KGFkZHIpKQogCiAv
KiB0byBmaW5kIGFuIGVudHJ5IGluIGEga2VybmVsIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAv
KiBUaGlzIG5vdyBvbmx5IGNvbnRhaW5zIHRoZSB2bWFsbG9jIHBhZ2VzICovCmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaCBiL2FyY2gvcG93
ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvNjQvcGd0YWJsZS5oCmluZGV4IGI5NjRjZGFjMmRhZS4u
MjEwZTA2NGVkZTU0IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNo
LzY0L3BndGFibGUuaAorKysgYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3Bn
dGFibGUuaApAQCAtMTkwLDkgKzE5MCw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBwNGRfc2V0KHA0
ZF90ICpwNGRwLCB1bnNpZ25lZCBsb25nIHZhbCkKIAogI2RlZmluZSBwZ2Rfb2Zmc2V0KG1tLCBh
ZGRyZXNzKQkgKChtbSktPnBnZCArIHBnZF9pbmRleChhZGRyZXNzKSkKIAotI2RlZmluZSBwbWRf
b2Zmc2V0KHB1ZHAsYWRkcikgXAotICAoKChwbWRfdCAqKSBwdWRfcGFnZV92YWRkcigqKHB1ZHAp
KSkgKyAoKChhZGRyKSA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRCAtIDEpKSkKLQogLyog
dG8gZmluZCBhbiBlbnRyeSBpbiBhIGtlcm5lbCBwYWdlLXRhYmxlLWRpcmVjdG9yeSAqLwogLyog
VGhpcyBub3cgb25seSBjb250YWlucyB0aGUgdm1hbGxvYyBwYWdlcyAqLwogI2RlZmluZSBwZ2Rf
b2Zmc2V0X2soYWRkcmVzcykgcGdkX29mZnNldCgmaW5pdF9tbSwgYWRkcmVzcykKZGlmZiAtLWdp
dCBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oIGIvYXJjaC9yaXNjdi9pbmNs
dWRlL2FzbS9wZ3RhYmxlLTY0LmgKaW5kZXggYjE1ZjcwYTFmZGZhLi5mM2IwZGE2NGM2YzggMTAw
NjQ0Ci0tLSBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oCisrKyBiL2FyY2gv
cmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oCkBAIC03MCwxMyArNzAsNiBAQCBzdGF0aWMg
aW5saW5lIHN0cnVjdCBwYWdlICpwdWRfcGFnZShwdWRfdCBwdWQpCiAJcmV0dXJuIHBmbl90b19w
YWdlKHB1ZF92YWwocHVkKSA+PiBfUEFHRV9QRk5fU0hJRlQpOwogfQogCi0jZGVmaW5lIHBtZF9p
bmRleChhZGRyKSAoKChhZGRyKSA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRCAtIDEpKQot
Ci1zdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfb2Zmc2V0KHB1ZF90ICpwdWQsIHVuc2lnbmVkIGxv
bmcgYWRkcikKLXsKLQlyZXR1cm4gKHBtZF90ICopcHVkX3BhZ2VfdmFkZHIoKnB1ZCkgKyBwbWRf
aW5kZXgoYWRkcik7Ci19Ci0KIHN0YXRpYyBpbmxpbmUgcG1kX3QgcGZuX3BtZCh1bnNpZ25lZCBs
b25nIHBmbiwgcGdwcm90X3QgcHJvdCkKIHsKIAlyZXR1cm4gX19wbWQoKHBmbiA8PCBfUEFHRV9Q
Rk5fU0hJRlQpIHwgcGdwcm90X3ZhbChwcm90KSk7CmRpZmYgLS1naXQgYS9hcmNoL3Jpc2N2L21t
L2luaXQuYyBiL2FyY2gvcmlzY3YvbW0vaW5pdC5jCmluZGV4IDQwMTZhNmU0MjdlOS4uMWM4Njk4
ZmYxYTk0IDEwMDY0NAotLS0gYS9hcmNoL3Jpc2N2L21tL2luaXQuYworKysgYi9hcmNoL3Jpc2N2
L21tL2luaXQuYwpAQCAtMjgzLDIxICsyODMsMjEgQEAgc3RhdGljIHZvaWQgX19pbml0IGNyZWF0
ZV9wbWRfbWFwcGluZyhwbWRfdCAqcG1kcCwKIHsKIAlwdGVfdCAqcHRlcDsKIAlwaHlzX2FkZHJf
dCBwdGVfcGh5czsKLQl1aW50cHRyX3QgcG1kX2luZGV4ID0gcG1kX2luZGV4KHZhKTsKKwl1aW50
cHRyX3QgcG1kX2lkeCA9IHBtZF9pbmRleCh2YSk7CiAKIAlpZiAoc3ogPT0gUE1EX1NJWkUpIHsK
LQkJaWYgKHBtZF9ub25lKHBtZHBbcG1kX2luZGV4XSkpCi0JCQlwbWRwW3BtZF9pbmRleF0gPSBw
Zm5fcG1kKFBGTl9ET1dOKHBhKSwgcHJvdCk7CisJCWlmIChwbWRfbm9uZShwbWRwW3BtZF9pZHhd
KSkKKwkJCXBtZHBbcG1kX2lkeF0gPSBwZm5fcG1kKFBGTl9ET1dOKHBhKSwgcHJvdCk7CiAJCXJl
dHVybjsKIAl9CiAKLQlpZiAocG1kX25vbmUocG1kcFtwbWRfaW5kZXhdKSkgeworCWlmIChwbWRf
bm9uZShwbWRwW3BtZF9pZHhdKSkgewogCQlwdGVfcGh5cyA9IGFsbG9jX3B0ZSh2YSk7Ci0JCXBt
ZHBbcG1kX2luZGV4XSA9IHBmbl9wbWQoUEZOX0RPV04ocHRlX3BoeXMpLCBQQUdFX1RBQkxFKTsK
KwkJcG1kcFtwbWRfaWR4XSA9IHBmbl9wbWQoUEZOX0RPV04ocHRlX3BoeXMpLCBQQUdFX1RBQkxF
KTsKIAkJcHRlcCA9IGdldF9wdGVfdmlydChwdGVfcGh5cyk7CiAJCW1lbXNldChwdGVwLCAwLCBQ
QUdFX1NJWkUpOwogCX0gZWxzZSB7Ci0JCXB0ZV9waHlzID0gUEZOX1BIWVMoX3BtZF9wZm4ocG1k
cFtwbWRfaW5kZXhdKSk7CisJCXB0ZV9waHlzID0gUEZOX1BIWVMoX3BtZF9wZm4ocG1kcFtwbWRf
aWR4XSkpOwogCQlwdGVwID0gZ2V0X3B0ZV92aXJ0KHB0ZV9waHlzKTsKIAl9CiAKZGlmZiAtLWdp
dCBhL2FyY2gvczM5MC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL3MzOTAvaW5jbHVkZS9h
c20vcGd0YWJsZS5oCmluZGV4IDliZTM2NjdlM2E0NS4uYzE2MmU1MGM3Njg5IDEwMDY0NAotLS0g
YS9hcmNoL3MzOTAvaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvczM5MC9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmgKQEAgLTEyODEsNiArMTI4MSw3IEBAIHN0YXRpYyBpbmxpbmUgcG1kX3Qg
KnBtZF9vZmZzZXQocHVkX3QgKnB1ZCwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQogCQlyZXR1cm4g
KHBtZF90ICopIHB1ZF9kZXJlZigqcHVkKSArIHBtZF9pbmRleChhZGRyZXNzKTsKIAlyZXR1cm4g
KHBtZF90ICopIHB1ZDsKIH0KKyNkZWZpbmUgcG1kX29mZnNldCBwbWRfb2Zmc2V0CiAKIHN0YXRp
YyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwbWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCiB7CmRpZmYg
LS1naXQgYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmggYi9hcmNoL3NoL2lu
Y2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmgKaW5kZXggMGY4MDA5N2U1YzljLi44MmQ3NDQ3MmRm
Y2QgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZS0zbGV2ZWwuaAorKysg
Yi9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmgKQEAgLTM5LDEzICszOSw2IEBA
IHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwdWRfcGFnZV92YWRkcihwdWRfdCBwdWQpCiAK
IC8qIG9ubHkgdXNlZCBieSB0aGUgc3R1YmJlZCBvdXQgaHVnZXRsYiBndXAgY29kZSwgc2hvdWxk
IG5ldmVyIGJlIGNhbGxlZCAqLwogI2RlZmluZSBwdWRfcGFnZShwdWQpCQlOVUxMCi0KLSNkZWZp
bmUgcG1kX2luZGV4KGFkZHJlc3MpCSgoKGFkZHJlc3MpID4+IFBNRF9TSElGVCkgJiAoUFRSU19Q
RVJfUE1ELTEpKQotc3RhdGljIGlubGluZSBwbWRfdCAqcG1kX29mZnNldChwdWRfdCAqcHVkLCB1
bnNpZ25lZCBsb25nIGFkZHJlc3MpCi17Ci0JcmV0dXJuIChwbWRfdCAqKXB1ZF9wYWdlX3ZhZGRy
KCpwdWQpICsgcG1kX2luZGV4KGFkZHJlc3MpOwotfQotCiAjZGVmaW5lIHB1ZF9ub25lKHgpCSgh
cHVkX3ZhbCh4KSkKICNkZWZpbmUgcHVkX3ByZXNlbnQoeCkJKHB1ZF92YWwoeCkpCiAjZGVmaW5l
IHB1ZF9jbGVhcih4cCkJZG8geyBzZXRfcHVkKHhwLCBfX3B1ZCgwKSk7IH0gd2hpbGUgKDApCmRp
ZmYgLS1naXQgYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaCBiL2FyY2gvc2gvaW5j
bHVkZS9hc20vcGd0YWJsZV8zMi5oCmluZGV4IDI2M2FiNTY5OWY5Ni4uMzAyMzk0M2NlNzMxIDEw
MDY0NAotLS0gYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaAorKysgYi9hcmNoL3No
L2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaApAQCAtNDE2LDcgKzQxNiw2IEBAIHN0YXRpYyBpbmxp
bmUgdW5zaWduZWQgbG9uZyBwbWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCiAjZGVmaW5lIHBnZF9v
ZmZzZXRfayhhZGRyZXNzKQlwZ2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyZXNzKQogCiAjZGVmaW5l
IHB1ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQVURfU0hJRlQpICYgKFBUUlNfUEVS
X1BVRC0xKSkKLSNkZWZpbmUgcG1kX2luZGV4KGFkZHJlc3MpCSgoKGFkZHJlc3MpID4+IFBNRF9T
SElGVCkgJiAoUFRSU19QRVJfUE1ELTEpKQogCiAjaWZkZWYgQ09ORklHX1gyVExCCiAjZGVmaW5l
IHB0ZV9FUlJPUihlKSBcCmRpZmYgLS1naXQgYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVf
NjQuaCBiL2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oCmluZGV4IDc2NzRkMzhiZWE1
Yy4uOGQ1OTQ4ZjkyY2FmIDEwMDY0NAotLS0gYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVf
NjQuaAorKysgYi9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfNjQuaApAQCAtNTIsNyArNTIs
NiBAQCBzdGF0aWMgX19pbmxpbmVfXyB2b2lkIHNldF9wdGUocHRlX3QgKnB0ZXB0ciwgcHRlX3Qg
cHRldmFsKQogI2RlZmluZSBwZ2Rfb2Zmc2V0X2soYWRkcmVzcykgcGdkX29mZnNldCgmaW5pdF9t
bSwgYWRkcmVzcykKIAogI2RlZmluZSBwdWRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4g
UFVEX1NISUZUKSAmIChQVFJTX1BFUl9QVUQtMSkpCi0vKiAjZGVmaW5lIHBtZF9pbmRleChhZGRy
ZXNzKQkoKChhZGRyZXNzKSA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRC0xKSkgKi8KIAog
LyoKICAqIFBNRCBsZXZlbCBhY2Nlc3Mgcm91dGluZXMuIFNhbWUgbm90ZXMgYXMgYWJvdmUuCmRp
ZmYgLS1naXQgYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaCBiL2FyY2gvc3Bh
cmMvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oCmluZGV4IDJmYzI5MjA3ZTI1NC4uYWU0NTgxMjMz
NmVkIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaAorKysg
Yi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaApAQCAtMzE3LDEzICszMTcsNiBA
QCBzdGF0aWMgaW5saW5lIHB0ZV90IHB0ZV9tb2RpZnkocHRlX3QgcHRlLCBwZ3Byb3RfdCBuZXdw
cm90KQogLyogdG8gZmluZCBhbiBlbnRyeSBpbiBhIGtlcm5lbCBwYWdlLXRhYmxlLWRpcmVjdG9y
eSAqLwogI2RlZmluZSBwZ2Rfb2Zmc2V0X2soYWRkcmVzcykgcGdkX29mZnNldCgmaW5pdF9tbSwg
YWRkcmVzcykKIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUgc2Vjb25kLWxldmVsIHBhZ2UgdGFi
bGUuLiAqLwotc3RhdGljIGlubGluZSBwbWRfdCAqcG1kX29mZnNldChwdWRfdCAqIGRpciwgdW5z
aWduZWQgbG9uZyBhZGRyZXNzKQotewotCXJldHVybiAocG1kX3QgKikgcHVkX3BhZ2VfdmFkZHIo
KmRpcikgKwotCQkoKGFkZHJlc3MgPj4gUE1EX1NISUZUKSAmIChQVFJTX1BFUl9QTUQgLSAxKSk7
Ci19Ci0KIHN0cnVjdCBzZXFfZmlsZTsKIHZvaWQgbW11X2luZm8oc3RydWN0IHNlcV9maWxlICpt
KTsKIApAQCAtNDEyLDcgKzQwNSw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IGlvX3JlbWFwX3Bmbl9y
YW5nZShzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKIAogCXJldHVybiByZW1hcF9wZm5fcmFu
Z2Uodm1hLCBmcm9tLCBwaHlzX2Jhc2UgPj4gUEFHRV9TSElGVCwgc2l6ZSwgcHJvdCk7CiB9Ci0j
ZGVmaW5lIGlvX3JlbWFwX3Bmbl9yYW5nZSBpb19yZW1hcF9wZm5fcmFuZ2UgCisjZGVmaW5lIGlv
X3JlbWFwX3Bmbl9yYW5nZSBpb19yZW1hcF9wZm5fcmFuZ2UKIAogI2RlZmluZSBfX0hBVkVfQVJD
SF9QVEVQX1NFVF9BQ0NFU1NfRkxBR1MKICNkZWZpbmUgcHRlcF9zZXRfYWNjZXNzX2ZsYWdzKF9f
dm1hLCBfX2FkZHJlc3MsIF9fcHRlcCwgX19lbnRyeSwgX19kaXJ0eSkgXApkaWZmIC0tZ2l0IGEv
YXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmggYi9hcmNoL3NwYXJjL2luY2x1ZGUv
YXNtL3BndGFibGVfNjQuaAppbmRleCA3ZGY3MmVmYTRhOGQuLjJkYTFjZWM2MGY0ZSAxMDA2NDQK
LS0tIGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKKysrIGIvYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKQEAgLTkwMSwxMSArOTAxLDYgQEAgc3RhdGljIGlu
bGluZSB1bnNpZ25lZCBsb25nIHB1ZF9wZm4ocHVkX3QgcHVkKQogI2RlZmluZSBwdWRfb2Zmc2V0
KHA0ZHAsIGFkZHJlc3MpCVwKIAkoKHB1ZF90ICopIHA0ZF9wYWdlX3ZhZGRyKCoocDRkcCkpICsg
cHVkX2luZGV4KGFkZHJlc3MpKQogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSBzZWNvbmQtbGV2
ZWwgcGFnZSB0YWJsZS4uICovCi0jZGVmaW5lIHBtZF9vZmZzZXQocHVkcCwgYWRkcmVzcykJXAot
CSgocG1kX3QgKikgcHVkX3BhZ2VfdmFkZHIoKihwdWRwKSkgKyBcCi0JICgoKGFkZHJlc3MpID4+
IFBNRF9TSElGVCkgJiAoUFRSU19QRVJfUE1ELTEpKSkKLQogLyogV2UgY2Fubm90IGluY2x1ZGUg
PGxpbnV4L21tX3R5cGVzLmg+IGF0IHRoaXMgcG9pbnQgeWV0OiAqLwogZXh0ZXJuIHN0cnVjdCBt
bV9zdHJ1Y3QgaW5pdF9tbTsKIApAQCAtMTA3MCw3ICsxMDY1LDcgQEAgc3RhdGljIGlubGluZSBp
bnQgaW9fcmVtYXBfcGZuX3JhbmdlKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAogCiAJcmV0
dXJuIHJlbWFwX3Bmbl9yYW5nZSh2bWEsIGZyb20sIHBoeXNfYmFzZSA+PiBQQUdFX1NISUZULCBz
aXplLCBwcm90KTsKIH0KLSNkZWZpbmUgaW9fcmVtYXBfcGZuX3JhbmdlIGlvX3JlbWFwX3Bmbl9y
YW5nZSAKKyNkZWZpbmUgaW9fcmVtYXBfcGZuX3JhbmdlIGlvX3JlbWFwX3Bmbl9yYW5nZQogCiBz
dGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgX191bnRhZ2dlZF9hZGRyKHVuc2lnbmVkIGxvbmcg
c3RhcnQpCiB7CmRpZmYgLS1naXQgYS9hcmNoL3VtL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVs
LmggYi9hcmNoL3VtL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmgKaW5kZXggOGEzYjY4OWUw
Zjg2Li4zNmY0NTI5NTdjZWYgMTAwNjQ0Ci0tLSBhL2FyY2gvdW0vaW5jbHVkZS9hc20vcGd0YWJs
ZS0zbGV2ZWwuaAorKysgYi9hcmNoL3VtL2luY2x1ZGUvYXNtL3BndGFibGUtM2xldmVsLmgKQEAg
LTg5LDEwICs4OSw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBwdWRfY2xlYXIgKHB1ZF90ICpwdWQp
CiAjZGVmaW5lIHB1ZF9wYWdlKHB1ZCkgcGh5c190b19wYWdlKHB1ZF92YWwocHVkKSAmIFBBR0Vf
TUFTSykKICNkZWZpbmUgcHVkX3BhZ2VfdmFkZHIocHVkKSAoKHVuc2lnbmVkIGxvbmcpIF9fdmEo
cHVkX3ZhbChwdWQpICYgUEFHRV9NQVNLKSkKIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUgc2Vj
b25kLWxldmVsIHBhZ2UgdGFibGUuLiAqLwotI2RlZmluZSBwbWRfb2Zmc2V0KHB1ZCwgYWRkcmVz
cykgKChwbWRfdCAqKSBwdWRfcGFnZV92YWRkcigqKHB1ZCkpICsgXAotCQkJcG1kX2luZGV4KGFk
ZHJlc3MpKQotCiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHRlX3BmbihwdGVfdCBwdGUp
CiB7CiAJcmV0dXJuIHBoeXNfdG9fcGZuKHB0ZV92YWwocHRlKSk7CmRpZmYgLS1naXQgYS9hcmNo
L3VtL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvdW0vaW5jbHVkZS9hc20vcGd0YWJsZS5o
CmluZGV4IGM1N2ZlMjI4ODMzYy4uZWEyZDNlNmY0NmRkIDEwMDY0NAotLS0gYS9hcmNoL3VtL2lu
Y2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL3VtL2luY2x1ZGUvYXNtL3BndGFibGUuaApA
QCAtMzE4LDEwICszMTgsNiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90IHB0ZV9tb2RpZnkocHRlX3Qg
cHRlLCBwZ3Byb3RfdCBuZXdwcm90KQogICogY29udHJvbCB0aGUgZ2l2ZW4gdmlydHVhbCBhZGRy
ZXNzCiAgKi8KICNkZWZpbmUgcG1kX3BhZ2VfdmFkZHIocG1kKSAoKHVuc2lnbmVkIGxvbmcpIF9f
dmEocG1kX3ZhbChwbWQpICYgUEFHRV9NQVNLKSkKLSNkZWZpbmUgcG1kX2luZGV4KGFkZHJlc3Mp
ICgoKGFkZHJlc3MpID4+IFBNRF9TSElGVCkgJiAoUFRSU19QRVJfUE1ELTEpKQotCi0jZGVmaW5l
IHBtZF9wYWdlX3ZhZGRyKHBtZCkgXAotCSgodW5zaWduZWQgbG9uZykgX192YShwbWRfdmFsKHBt
ZCkgJiBQQUdFX01BU0spKQogCiBzdHJ1Y3QgbW1fc3RydWN0OwogZXh0ZXJuIHB0ZV90ICp2aXJ0
X3RvX3B0ZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyKTsKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gveDg2L2luY2x1ZGUv
YXNtL3BndGFibGUuaAppbmRleCA2NGJlNTIxZjU2MmMuLjM1ZTNiZjg2ZGYyMCAxMDA2NDQKLS0t
IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUv
YXNtL3BndGFibGUuaApAQCAtODM1LDE3ICs4MzUsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGxvbmcgcG1kX3BhZ2VfdmFkZHIocG1kX3QgcG1kKQogICovCiAjZGVmaW5lIHBtZF9wYWdlKHBt
ZCkJcGZuX3RvX3BhZ2UocG1kX3BmbihwbWQpKQogCi0vKgotICogdGhlIHBtZCBwYWdlIGNhbiBi
ZSB0aG91Z2h0IG9mIGFuIGFycmF5IGxpa2UgdGhpczogcG1kX3RbUFRSU19QRVJfUE1EXQotICoK
LSAqIHRoaXMgbWFjcm8gcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGVudHJ5IGluIHRoZSBwbWQg
cGFnZSB3aGljaCB3b3VsZAotICogY29udHJvbCB0aGUgZ2l2ZW4gdmlydHVhbCBhZGRyZXNzCi0g
Ki8KLXN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwbWRfaW5kZXgodW5zaWduZWQgbG9uZyBh
ZGRyZXNzKQotewotCXJldHVybiAoYWRkcmVzcyA+PiBQTURfU0hJRlQpICYgKFBUUlNfUEVSX1BN
RCAtIDEpOwotfQotCiAvKgogICogQ29udmVyc2lvbiBmdW5jdGlvbnM6IGNvbnZlcnQgYSBwYWdl
IGFuZCBwcm90ZWN0aW9uIHRvIGEgcGFnZSBlbnRyeSwKICAqIGFuZCBhIHBhZ2UgZW50cnkgYW5k
IHBhZ2UgZGlyZWN0b3J5IHRvIHRoZSBwYWdlIHRoZXkgcmVmZXIgdG8uCkBAIC04ODcsMTIgKzg3
Niw2IEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwdWRfcGFnZV92YWRkcihwdWRfdCBw
dWQpCiAgKi8KICNkZWZpbmUgcHVkX3BhZ2UocHVkKQlwZm5fdG9fcGFnZShwdWRfcGZuKHB1ZCkp
CiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHNlY29uZC1sZXZlbCBwYWdlIHRhYmxlLi4gKi8K
LXN0YXRpYyBpbmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3QgKnB1ZCwgdW5zaWduZWQgbG9u
ZyBhZGRyZXNzKQotewotCXJldHVybiAocG1kX3QgKilwdWRfcGFnZV92YWRkcigqcHVkKSArIHBt
ZF9pbmRleChhZGRyZXNzKTsKLX0KLQogI2RlZmluZSBwdWRfbGVhZglwdWRfbGFyZ2UKIHN0YXRp
YyBpbmxpbmUgaW50IHB1ZF9sYXJnZShwdWRfdCBwdWQpCiB7CmRpZmYgLS1naXQgYS9pbmNsdWRl
L2FzbS1nZW5lcmljL3BndGFibGUtbm9wbWQuaCBiL2luY2x1ZGUvYXNtLWdlbmVyaWMvcGd0YWJs
ZS1ub3BtZC5oCmluZGV4IDBkOWIyOGNiYTE2ZC4uM2UxM2FjZDAxOWFlIDEwMDY0NAotLS0gYS9p
bmNsdWRlL2FzbS1nZW5lcmljL3BndGFibGUtbm9wbWQuaAorKysgYi9pbmNsdWRlL2FzbS1nZW5l
cmljL3BndGFibGUtbm9wbWQuaApAQCAtNDUsNiArNDUsNyBAQCBzdGF0aWMgaW5saW5lIHBtZF90
ICogcG1kX29mZnNldChwdWRfdCAqIHB1ZCwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQogewogCXJl
dHVybiAocG1kX3QgKilwdWQ7CiB9CisjZGVmaW5lIHBtZF9vZmZzZXQgcG1kX29mZnNldAogCiAj
ZGVmaW5lIHBtZF92YWwoeCkJCQkJKHB1ZF92YWwoKHgpLnB1ZCkpCiAjZGVmaW5lIF9fcG1kKHgp
CQkJCSgocG1kX3QpIHsgX19wdWQoeCkgfSApCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3Bn
dGFibGUuaCBiL2luY2x1ZGUvbGludXgvcGd0YWJsZS5oCmluZGV4IDE4YTgxYjFlM2QwZC4uZjEx
NGI1MWJlZjE4IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3BndGFibGUuaAorKysgYi9pbmNs
dWRlL2xpbnV4L3BndGFibGUuaApAQCAtMjksMTYgKzI5LDMwIEBACiAjZW5kaWYKIAogLyoKLSAq
IHRoZSBwdGUgcGFnZSBjYW4gYmUgdGhvdWdodCBvZiBhbiBhcnJheSBsaWtlIHRoaXM6IHB0ZV90
W1BUUlNfUEVSX1BURV0KKyAqIEEgcGFnZSB0YWJsZSBwYWdlIGNhbiBiZSB0aG91Z2h0IG9mIGFu
IGFycmF5IGxpa2UgdGhpczogcFhkX3RbUFRSU19QRVJfUHhEXQogICoKLSAqIHRoaXMgZnVuY3Rp
b24gcmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGVudHJ5IGluIHRoZSBwdGUgcGFnZSB3aGljaCB3
b3VsZAotICogY29udHJvbCB0aGUgZ2l2ZW4gdmlydHVhbCBhZGRyZXNzCisgKiBUaGUgcFh4X2lu
ZGV4KCkgZnVuY3Rpb25zIHJldHVybiB0aGUgaW5kZXggb2YgdGhlIGVudHJ5IGluIHRoZSBwYWdl
CisgKiB0YWJsZSBwYWdlIHdoaWNoIHdvdWxkIGNvbnRyb2wgdGhlIGdpdmVuIHZpcnR1YWwgYWRk
cmVzcworICoKKyAqIEFzIHRoZXNlIGZ1bmN0aW9ucyBtYXkgYmUgdXNlZCBieSB0aGUgc2FtZSBj
b2RlIGZvciBkaWZmZXJlbnQgbGV2ZWxzIG9mCisgKiB0aGUgcGFnZSB0YWJsZSBmb2xkaW5nLCB0
aGV5IGFyZSBhbHdheXMgYXZhaWxhYmxlLCByZWdhcmRsZXNzIG9mCisgKiBDT05GSUdfUEdUQUJM
RV9MRVZFTFMgdmFsdWUuIEZvciB0aGUgZm9sZGVkIGxldmVscyB0aGV5IHNpbXBseSByZXR1cm4g
MAorICogYmVjYXVzZSBpbiBzdWNoIGNhc2VzIFBUUlNfUEVSX1B4RCBlcXVhbHMgMS4KICAqLwor
CiBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHRlX2luZGV4KHVuc2lnbmVkIGxvbmcgYWRk
cmVzcykKIHsKIAlyZXR1cm4gKGFkZHJlc3MgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRF
IC0gMSk7CiB9CiAKKyNpZm5kZWYgcG1kX2luZGV4CitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxv
bmcgcG1kX2luZGV4KHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKK3sKKwlyZXR1cm4gKGFkZHJlc3Mg
Pj4gUE1EX1NISUZUKSAmIChQVFJTX1BFUl9QTUQgLSAxKTsKK30KKyNkZWZpbmUgcG1kX2luZGV4
IHBtZF9pbmRleAorI2VuZGlmCisKICNpZm5kZWYgcHRlX29mZnNldF9rZXJuZWwKIHN0YXRpYyBp
bmxpbmUgcHRlX3QgKnB0ZV9vZmZzZXRfa2VybmVsKHBtZF90ICpwbWQsIHVuc2lnbmVkIGxvbmcg
YWRkcmVzcykKIHsKQEAgLTU3LDYgKzcxLDE1IEBAIHN0YXRpYyBpbmxpbmUgcHRlX3QgKnB0ZV9v
ZmZzZXRfa2VybmVsKHBtZF90ICpwbWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKICNkZWZpbmUg
cHRlX3VubWFwKHB0ZSkgKCh2b2lkKShwdGUpKQkvKiBOT1AgKi8KICNlbmRpZgogCisvKiBGaW5k
IGFuIGVudHJ5IGluIHRoZSBzZWNvbmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCisjaWZuZGVmIHBt
ZF9vZmZzZXQKK3N0YXRpYyBpbmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3QgKnB1ZCwgdW5z
aWduZWQgbG9uZyBhZGRyZXNzKQoreworCXJldHVybiAocG1kX3QgKilwdWRfcGFnZV92YWRkcigq
cHVkKSArIHBtZF9pbmRleChhZGRyZXNzKTsKK30KKyNkZWZpbmUgcG1kX29mZnNldCBwbWRfb2Zm
c2V0CisjZW5kaWYKKwogLyoKICAqIEluIG1hbnkgY2FzZXMgaXQgaXMga25vd24gdGhhdCBhIHZp
cnR1YWwgYWRkcmVzcyBpcyBtYXBwZWQgYXQgUE1EIG9yIFBURQogICogbGV2ZWwsIHNvIGluc3Rl
YWQgb2YgdHJhdmVyc2luZyBhbGwgdGhlIHBhZ2UgdGFibGUgbGV2ZWxzLCB3ZSBjYW4gZ2V0IGEK
LS0gCjIuMjYuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0
dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
