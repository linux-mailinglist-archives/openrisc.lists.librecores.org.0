Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 4BD0A38069F
	for <lists+openrisc@lfdr.de>; Fri, 14 May 2021 12:02:12 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 1508D213A4;
	Fri, 14 May 2021 12:02:11 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id B302020689
 for <openrisc@lists.librecores.org>; Fri, 14 May 2021 12:02:08 +0200 (CEST)
Received: by mail.kernel.org (Postfix) with ESMTPSA id CB4D2613BC;
 Fri, 14 May 2021 10:01:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1620986526;
 bh=GrjPHc36lucdUSuooC9aqhL2Od7+jfK0fPUigqnZcVA=;
 h=From:To:Cc:Subject:Date:From;
 b=iCIXGblwqBis0HCCaKglHVxXgHdjY+ZnJUEpxhS25qd0YTOmPIMwFqlt0gAwqFaCn
 H6TYlYBWCxImWVPxQaXnme+hpROYqMTCLF2Ei6uKrfHadRhs+ayz5bA3lk5FtTeO/J
 kbiLtSut3lU229IM7sF582cRjJivSN3xcEhAoo9aZUac6zWidfJ8NHVAJjY3Rp7yEE
 dYKIekHBKs/JVyWBTb6nx0reJMz2nGFhAf8LBgLNfsP72b9qNOGH6t05d70F9GjPY+
 8sZc7aQR/6sMfmjSb+dYlYAWu/wuLtjPqPhcgnm4RJEAMEiB7smvyJnpuMYADmfYdd
 sGrgg1bm/9cMA==
From: Arnd Bergmann <arnd@kernel.org>
To: linux-arch@vger.kernel.org
Date: Fri, 14 May 2021 12:00:48 +0200
Message-Id: <20210514100106.3404011-1-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 00/13] Unify asm/unaligned.h around struct
 helper
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-sh@vger.kernel.org,
 "Richard Russon \(FlatCap\)" <ldm@flatcap.org>,
 Amitkumar Karwar <amitkarwar@gmail.com>, Russell King <linux@armlinux.org.uk>,
 Eric Dumazet <edumazet@google.com>, Paul Mackerras <paulus@samba.org>,
 "H. Peter Anvin" <hpa@zytor.com>, sparclinux@vger.kernel.org,
 Thomas Gleixner <tglx@linutronix.de>, Jonas Bonn <jonas@southpole.se>,
 Florian Fainelli <f.fainelli@gmail.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>,
 Michael Ellerman <mpe@ellerman.id.au>, x86@kernel.org,
 James Morris <jmorris@namei.org>, Ingo Molnar <mingo@redhat.com>,
 linux-arm-kernel@lists.infradead.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Jakub Kicinski <kuba@kernel.org>, "Serge E. Hallyn" <serge@hallyn.com>,
 Arnd Bergmann <arnd@arndb.de>, Ganapathi Bhat <ganapathi017@gmail.com>,
 linuxppc-dev@lists.ozlabs.org, linux-block@vger.kernel.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Borislav Petkov <bp@alien8.de>, Kalle Valo <kvalo@codeaurora.org>,
 Jens Axboe <axboe@kernel.dk>, John Johansen <john.johansen@canonical.com>,
 Xinming Hu <huxinming820@gmail.com>, Vineet Gupta <vgupta@synopsys.com>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Vladimir Oltean <vladimir.oltean@nxp.com>,
 linux-ntfs-dev@lists.sourceforge.net, linux-security-module@vger.kernel.org,
 linux-crypto@vger.kernel.org, netdev@vger.kernel.org,
 Linus Torvalds <torvalds@linux-foundation.org>,
 Sharvari Harisangam <sharvari.harisangam@nxp.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KClRoZSBnZXRfdW5hbGlnbmVkKCkv
cHV0X3VuYWxpZ25lZCgpIGhlbHBlcnMgYXJlIHRyYWRpdGlvbmFsbHkgYXJjaGl0ZWN0dXJlCnNw
ZWNpZmljLCB3aXRoIHRoZSB0d28gbWFpbiB2YXJpYW50cyBiZWluZyB0aGUgImFjY2Vzcy1vay5o
IiB2ZXJzaW9uCnRoYXQgYXNzdW1lcyB1bmFsaWduZWQgcG9pbnRlciBhY2Nlc3NlcyBhbHdheXMg
d29yayBvbiBhIHBhcnRpY3VsYXIKYXJjaGl0ZWN0dXJlLCBhbmQgdGhlICJsZS1zdHJ1Y3QuaCIg
dmVyc2lvbiB0aGF0IGNhc3RzIHRoZSBkYXRhIHRvIGEKYnl0ZSBhbGlnbmVkIHR5cGUgYmVmb3Jl
IGRlcmVmZXJlbmNpbmcsIGZvciBhcmNoaXRlY3R1cmVzIHRoYXQgY2Fubm90CmFsd2F5cyBkbyB1
bmFsaWduZWQgYWNjZXNzZXMgaW4gaGFyZHdhcmUuCgpCYXNlZCBvbiB0aGUgZGlzY3Vzc2lvbiBs
aW5rZWQgYmVsb3csIGl0IGFwcGVhcnMgdGhhdCB0aGUgYWNjZXNzLW9rCnZlcnNpb24gaXMgbm90
IHJlYWxpYWJsZSBvbiBhbnkgYXJjaGl0ZWN0dXJlLCBidXQgdGhlIHN0cnVjdCB2ZXJzaW9uCnBy
b2JhYmx5IGhhcyBubyBkb3duc2lkZXMuIFRoaXMgc2VyaWVzIGNoYW5nZXMgdGhlIGNvZGUgdG8g
dXNlIHRoZQpzYW1lIGltcGxlbWVudGF0aW9uIG9uIGFsbCBhcmNoaXRlY3R1cmVzLCBhZGRyZXNz
aW5nIHRoZSBmZXcgZXhjZXB0aW9ucwpzZXBhcmF0ZWx5LgoKSSd2ZSBpbmNsdWRlZCB0aGlzIHZl
cnNpb24gaW4gdGhlIGFzbS1nZW5lcmljIHRyZWUgZm9yIDUuMTQgYWxyZWFkeSwKYWRkcmVzc2lu
ZyB0aGUgZmV3IGlzc3VlcyB0aGF0IHdlcmUgcG9pbnRlZCBvdXQgaW4gdGhlIFJGQy4gSWYgdGhl
cmUKYXJlIGFueSByZW1haW5pbmcgcHJvYmxlbXMsIEkgaG9wZSB0aG9zZSBjYW4gYmUgYWRkcmVz
c2VkIGFzIGZvbGxvdy11cApwYXRjaGVzLgoKICAgICAgICBBcm5kCgpMaW5rOiBodHRwczovL2xv
cmUua2VybmVsLm9yZy9sa21sLzc1ZDA3NjkxLTFlNGYtNzQxZi05ODUyLTM4YzBiNGY1MjBiY0Bz
eW5vcHN5cy5jb20vCkxpbms6IGh0dHBzOi8vZ2NjLmdudS5vcmcvYnVnemlsbGEvc2hvd19idWcu
Y2dpP2lkPTEwMDM2MwpMaW5rOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9sa21sLzIwMjEwNTA3
MjIwODEzLjM2NTM4Mi0xNC1hcm5kQGtlcm5lbC5vcmcvCkxpbms6IGdpdDovL2dpdC5rZXJuZWwu
b3JnL3B1Yi9zY20vbGludXgva2VybmVsL2dpdC9hcm5kL2FzbS1nZW5lcmljLmdpdCB1bmFsaWdu
ZWQtcmV3b3JrLXYyCgoKQXJuZCBCZXJnbWFubiAoMTMpOgogIGFzbS1nZW5lcmljOiB1c2UgYXNt
LWdlbmVyaWMvdW5hbGlnbmVkLmggZm9yIG1vc3QgYXJjaGl0ZWN0dXJlcwogIG9wZW5yaXNjOiBh
bHdheXMgdXNlIHVuYWxpZ25lZC1zdHJ1Y3QgaGVhZGVyCiAgc2g6IHJlbW92ZSB1bmFsaWduZWQg
YWNjZXNzIGZvciBzaDRhCiAgbTY4azogc2VsZWN0IENPTkZJR19IQVZFX0VGRklDSUVOVF9VTkFM
SUdORURfQUNDRVNTCiAgcG93ZXJwYzogdXNlIGxpbnV4L3VuYWxpZ25lZC9sZV9zdHJ1Y3QuaCBv
biBMRSBwb3dlcjcKICBhc20tZ2VuZXJpYzogdW5hbGlnbmVkOiByZW1vdmUgYnl0ZXNoaWZ0IGhl
bHBlcnMKICBhc20tZ2VuZXJpYzogdW5hbGlnbmVkIGFsd2F5cyB1c2Ugc3RydWN0IGhlbHBlcnMK
ICBwYXJ0aXRpb25zOiBtc2RvczogZml4IG9uZS1ieXRlIGdldF91bmFsaWduZWQoKQogIGFwcGFy
bW9yOiB1c2UgZ2V0X3VuYWxpZ25lZCgpIG9ubHkgZm9yIG11bHRpLWJ5dGUgd29yZHMKICBtd2lm
aWV4OiByZS1maXggZm9yIHVuYWxpZ25lZCBhY2Nlc3NlcwogIG5ldHBvbGw6IGF2b2lkIHB1dF91
bmFsaWduZWQoKSBvbiBzaW5nbGUgY2hhcmFjdGVyCiAgYXNtLWdlbmVyaWM6IHVhY2Nlc3M6IDEt
Ynl0ZSBhY2Nlc3MgaXMgYWx3YXlzIGFsaWduZWQKICBhc20tZ2VuZXJpYzogc2ltcGxpZnkgYXNt
L3VuYWxpZ25lZC5oCgogYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAg
ICB8ICAxMiAtLQogYXJjaC9hcm0vaW5jbHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICAgICB8
ICAyNyAtLS0KIGFyY2gvaWE2NC9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICAgfCAg
MTIgLS0KIGFyY2gvbTY4ay9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDEg
KwogYXJjaC9tNjhrL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oICAgICAgICAgICB8ICAyNiAtLS0K
IGFyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgfCAgMjcgLS0tCiBh
cmNoL21pcHMvY3J5cHRvL2NyYzMyLW1pcHMuYyAgICAgICAgICAgICAgIHwgICAyICstCiBhcmNo
L29wZW5yaXNjL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oICAgICAgIHwgIDQ3IC0tLS0tCiBhcmNo
L3BhcmlzYy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgIHwgICA2ICstCiBhcmNoL3Bv
d2VycGMvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgIHwgIDIyIC0tLQogYXJjaC9zaC9p
bmNsdWRlL2FzbS91bmFsaWduZWQtc2g0YS5oICAgICAgICB8IDE5OSAtLS0tLS0tLS0tLS0tLS0t
LS0tLQogYXJjaC9zaC9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICAgICB8ICAxMyAt
LQogYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICB8ICAxMSAtLQog
YXJjaC94ODYvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICAgICB8ICAxNSAtLQogYXJj
aC94dGVuc2EvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICB8ICAyOSAtLS0KIGJsb2Nr
L3BhcnRpdGlvbnMvbGRtLmggICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGJsb2NrL3Bh
cnRpdGlvbnMvbXNkb3MuYyAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvbmV0
L3dpcmVsZXNzL21hcnZlbGwvbXdpZmlleC9wY2llLmMgfCAgMTAgKy0KIGluY2x1ZGUvYXNtLWdl
bmVyaWMvdWFjY2Vzcy5oICAgICAgICAgICAgICAgfCAgIDQgKy0KIGluY2x1ZGUvYXNtLWdlbmVy
aWMvdW5hbGlnbmVkLmggICAgICAgICAgICAgfCAxNDEgKysrKysrKysrKystLS0KIGluY2x1ZGUv
bGludXgvdW5hbGlnbmVkL2FjY2Vzc19vay5oICAgICAgICAgfCAgNjggLS0tLS0tLQogaW5jbHVk
ZS9saW51eC91bmFsaWduZWQvYmVfYnl0ZXNoaWZ0LmggICAgICB8ICA3MSAtLS0tLS0tCiBpbmNs
dWRlL2xpbnV4L3VuYWxpZ25lZC9iZV9tZW1tb3ZlLmggICAgICAgIHwgIDM3IC0tLS0KIGluY2x1
ZGUvbGludXgvdW5hbGlnbmVkL2JlX3N0cnVjdC5oICAgICAgICAgfCAgMzcgLS0tLQogaW5jbHVk
ZS9saW51eC91bmFsaWduZWQvZ2VuZXJpYy5oICAgICAgICAgICB8IDExNSAtLS0tLS0tLS0tLQog
aW5jbHVkZS9saW51eC91bmFsaWduZWQvbGVfYnl0ZXNoaWZ0LmggICAgICB8ICA3MSAtLS0tLS0t
CiBpbmNsdWRlL2xpbnV4L3VuYWxpZ25lZC9sZV9tZW1tb3ZlLmggICAgICAgIHwgIDM3IC0tLS0K
IGluY2x1ZGUvbGludXgvdW5hbGlnbmVkL2xlX3N0cnVjdC5oICAgICAgICAgfCAgMzcgLS0tLQog
aW5jbHVkZS9saW51eC91bmFsaWduZWQvbWVtbW92ZS5oICAgICAgICAgICB8ICA0NiAtLS0tLQog
bmV0L2NvcmUvbmV0cG9sbC5jICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAgNCArLQogc2Vj
dXJpdHkvYXBwYXJtb3IvcG9saWN5X3VucGFjay5jICAgICAgICAgICB8ICAgMiArLQogMzEgZmls
ZXMgY2hhbmdlZCwgMTMxIGluc2VydGlvbnMoKyksIDEwMDIgZGVsZXRpb25zKC0pCiBkZWxldGUg
bW9kZSAxMDA2NDQgYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1v
ZGUgMTAwNjQ0IGFyY2gvYXJtL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAx
MDA2NDQgYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2
NDQgYXJjaC9tNjhrL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2NDQg
YXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2
NDQgYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAw
NjQ0IGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAw
NjQ0IGFyY2gvc2gvaW5jbHVkZS9hc20vdW5hbGlnbmVkLXNoNGEuaAogZGVsZXRlIG1vZGUgMTAw
NjQ0IGFyY2gvc2gvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBh
cmNoL3NwYXJjL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgYXJj
aC94ODYvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBhcmNoL3h0
ZW5zYS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUv
bGludXgvdW5hbGlnbmVkL2FjY2Vzc19vay5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9s
aW51eC91bmFsaWduZWQvYmVfYnl0ZXNoaWZ0LmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRl
L2xpbnV4L3VuYWxpZ25lZC9iZV9tZW1tb3ZlLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRl
L2xpbnV4L3VuYWxpZ25lZC9iZV9zdHJ1Y3QuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUv
bGludXgvdW5hbGlnbmVkL2dlbmVyaWMuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGlu
dXgvdW5hbGlnbmVkL2xlX2J5dGVzaGlmdC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9s
aW51eC91bmFsaWduZWQvbGVfbWVtbW92ZS5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9s
aW51eC91bmFsaWduZWQvbGVfc3RydWN0LmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2xp
bnV4L3VuYWxpZ25lZC9tZW1tb3ZlLmgKCi0tIAoyLjI5LjIKCkNjOiBBbWl0a3VtYXIgS2Fyd2Fy
IDxhbWl0a2Fyd2FyQGdtYWlsLmNvbT4KQ2M6IEFybmQgQmVyZ21hbm4gPGFybmRAYXJuZGIuZGU+
CkNjOiBCZW5qYW1pbiBIZXJyZW5zY2htaWR0IDxiZW5oQGtlcm5lbC5jcmFzaGluZy5vcmc+CkNj
OiBCb3Jpc2xhdiBQZXRrb3YgPGJwQGFsaWVuOC5kZT4KQ2M6IEVyaWMgRHVtYXpldCA8ZWR1bWF6
ZXRAZ29vZ2xlLmNvbT4KQ2M6IEZsb3JpYW4gRmFpbmVsbGkgPGYuZmFpbmVsbGlAZ21haWwuY29t
PgpDYzogR2FuYXBhdGhpIEJoYXQgPGdhbmFwYXRoaTAxN0BnbWFpbC5jb20+CkNjOiBHZWVydCBV
eXR0ZXJob2V2ZW4gPGdlZXJ0QGxpbnV4LW02OGsub3JnPgpDYzogIkguIFBldGVyIEFudmluIiA8
aHBhQHp5dG9yLmNvbT4KQ2M6IEluZ28gTW9sbmFyIDxtaW5nb0ByZWRoYXQuY29tPgpDYzogSmFr
dWIgS2ljaW5za2kgPGt1YmFAa2VybmVsLm9yZz4KQ2M6IEphbWVzIE1vcnJpcyA8am1vcnJpc0Bu
YW1laS5vcmc+CkNjOiBKZW5zIEF4Ym9lIDxheGJvZUBrZXJuZWwuZGs+CkNjOiBKb2huIEpvaGFu
c2VuIDxqb2huLmpvaGFuc2VuQGNhbm9uaWNhbC5jb20+CkNjOiBKb25hcyBCb25uIDxqb25hc0Bz
b3V0aHBvbGUuc2U+CkNjOiBLYWxsZSBWYWxvIDxrdmFsb0Bjb2RlYXVyb3JhLm9yZz4KQ2M6IE1p
Y2hhZWwgRWxsZXJtYW4gPG1wZUBlbGxlcm1hbi5pZC5hdT4KQ2M6IFBhdWwgTWFja2VycmFzIDxw
YXVsdXNAc2FtYmEub3JnPgpDYzogUmljaCBGZWxrZXIgPGRhbGlhc0BsaWJjLm9yZz4KQ2M6ICJS
aWNoYXJkIFJ1c3NvbiAoRmxhdENhcCkiIDxsZG1AZmxhdGNhcC5vcmc+CkNjOiBSdXNzZWxsIEtp
bmcgPGxpbnV4QGFybWxpbnV4Lm9yZy51az4KQ2M6ICJTZXJnZSBFLiBIYWxseW4iIDxzZXJnZUBo
YWxseW4uY29tPgpDYzogU2hhcnZhcmkgSGFyaXNhbmdhbSA8c2hhcnZhcmkuaGFyaXNhbmdhbUBu
eHAuY29tPgpDYzogU3RhZmZvcmQgSG9ybmUgPHNob3JuZUBnbWFpbC5jb20+CkNjOiBTdGVmYW4g
S3Jpc3RpYW5zc29uIDxzdGVmYW4ua3Jpc3RpYW5zc29uQHNhdW5hbGFodGkuZmk+CkNjOiBUaG9t
YXMgR2xlaXhuZXIgPHRnbHhAbGludXRyb25peC5kZT4KQ2M6IFZsYWRpbWlyIE9sdGVhbiA8dmxh
ZGltaXIub2x0ZWFuQG54cC5jb20+CkNjOiBYaW5taW5nIEh1IDxodXhpbm1pbmc4MjBAZ21haWwu
Y29tPgpDYzogWW9zaGlub3JpIFNhdG8gPHlzYXRvQHVzZXJzLnNvdXJjZWZvcmdlLmpwPgpDYzog
eDg2QGtlcm5lbC5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4
LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgtbTY4a0BsaXN0cy5saW51
eC1tNjhrLm9yZwpDYzogbGludXgtY3J5cHRvQHZnZXIua2VybmVsLm9yZwpDYzogb3BlbnJpc2NA
bGlzdHMubGlicmVjb3Jlcy5vcmcKQ2M6IGxpbnV4cHBjLWRldkBsaXN0cy5vemxhYnMub3JnCkNj
OiBsaW51eC1zaEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IHNwYXJjbGludXhAdmdlci5rZXJuZWwub3Jn
CkNjOiBsaW51eC1udGZzLWRldkBsaXN0cy5zb3VyY2Vmb3JnZS5uZXQKQ2M6IGxpbnV4LWJsb2Nr
QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtd2lyZWxlc3NAdmdlci5rZXJuZWwub3JnCkNjOiBu
ZXRkZXZAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1hcmNoQHZnZXIua2VybmVsLm9yZwpDYzog
bGludXgtc2VjdXJpdHktbW9kdWxlQHZnZXIua2VybmVsLm9yZwoKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVu
UklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xp
c3RpbmZvL29wZW5yaXNjCg==
