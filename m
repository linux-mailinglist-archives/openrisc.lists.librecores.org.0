Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 252594C678F
	for <lists+openrisc@lfdr.de>; Mon, 28 Feb 2022 11:49:39 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 443B72483F;
	Mon, 28 Feb 2022 11:49:38 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id C033024834
 for <openrisc@lists.librecores.org>; Mon, 28 Feb 2022 11:49:36 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 35EC9106F;
 Mon, 28 Feb 2022 02:49:36 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.47.185])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 8CFEF3F73D;
 Mon, 28 Feb 2022 02:49:28 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org,
	akpm@linux-foundation.org
Date: Mon, 28 Feb 2022 16:17:29 +0530
Message-Id: <1646045273-9343-7-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
References: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
Subject: [OpenRISC] [PATCH V3 06/30] sparc/mm: Enable
 ARCH_HAS_VM_GET_PAGE_PROT
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 linux-mips@vger.kernel.org, Khalid Aziz <khalid.aziz@oracle.com>,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-hexagon@vger.kernel.org, linux-csky@vger.kernel.org,
 Christoph Hellwig <hch@infradead.org>, linux-snps-arc@lists.infradead.org,
 linux-xtensa@linux-xtensa.org, Anshuman Khandual <anshuman.khandual@arm.com>,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-arm-kernel@lists.infradead.org,
 linux-parisc@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-alpha@vger.kernel.org, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhpcyBkZWZpbmVzIGFuZCBleHBvcnRzIGEgcGxhdGZvcm0gc3BlY2lmaWMgY3VzdG9tIHZtX2dl
dF9wYWdlX3Byb3QoKSB2aWEKc3Vic2NyaWJpbmcgQVJDSF9IQVNfVk1fR0VUX1BBR0VfUFJPVC4g
U3Vic2VxdWVudGx5IGFsbCBfX1NYWFggYW5kIF9fUFhYWAptYWNyb3MgY2FuIGJlIGRyb3BwZWQg
d2hpY2ggYXJlIG5vIGxvbmdlciBuZWVkZWQuIFRoaXMgYWxzbyBsb2NhbGl6ZXMgdGhlCmhlbHBl
ciBhcmNoX3ZtX2dldF9wYWdlX3Byb3QoKSBhcyBzcGFyY192bV9nZXRfcGFnZV9wcm90KCkgYW5k
IG1vdmVzIG5lYXIKdm1fZ2V0X3BhZ2VfcHJvdCgpLgoKQ2M6ICJEYXZpZCBTLiBNaWxsZXIiIDxk
YXZlbUBkYXZlbWxvZnQubmV0PgpDYzogS2hhbGlkIEF6aXogPGtoYWxpZC5heml6QG9yYWNsZS5j
b20+CkNjOiBzcGFyY2xpbnV4QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgta2VybmVsQHZnZXIu
a2VybmVsLm9yZwpSZXZpZXdlZC1ieTogS2hhbGlkIEF6aXogPGtoYWxpZC5heml6QG9yYWNsZS5j
b20+CkFja2VkLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9mdC5uZXQ+ClNpZ25l
ZC1vZmYtYnk6IEFuc2h1bWFuIEtoYW5kdWFsIDxhbnNodW1hbi5raGFuZHVhbEBhcm0uY29tPgot
LS0KIGFyY2gvc3BhcmMvS2NvbmZpZyAgICAgICAgICAgICAgICAgIHwgIDIgKwogYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS9tbWFuLmggICAgICAgfCAgNiAtLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9h
c20vcGd0YWJsZV8zMi5oIHwgMTkgLS0tLS0tLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0
YWJsZV82NC5oIHwgMTkgLS0tLS0tLS0KIGFyY2gvc3BhcmMvbW0vaW5pdF8zMi5jICAgICAgICAg
ICAgIHwgMzUgKysrKysrKysrKysrKysrCiBhcmNoL3NwYXJjL21tL2luaXRfNjQuYyAgICAgICAg
ICAgICB8IDcwICsrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tCiA2IGZpbGVzIGNoYW5nZWQs
IDg4IGluc2VydGlvbnMoKyksIDYzIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvc3Bh
cmMvS2NvbmZpZyBiL2FyY2gvc3BhcmMvS2NvbmZpZwppbmRleCAxY2FiMWIyODRmMWEuLmZmMjkx
NTZmMjM4MCAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9LY29uZmlnCisrKyBiL2FyY2gvc3BhcmMv
S2NvbmZpZwpAQCAtNTksNiArNTksNyBAQCBjb25maWcgU1BBUkMzMgogCXNlbGVjdCBIQVZFX1VJ
RDE2CiAJc2VsZWN0IE9MRF9TSUdBQ1RJT04KIAlzZWxlY3QgWk9ORV9ETUEKKwlzZWxlY3QgQVJD
SF9IQVNfVk1fR0VUX1BBR0VfUFJPVAogCiBjb25maWcgU1BBUkM2NAogCWRlZl9ib29sIDY0QklU
CkBAIC04NCw2ICs4NSw3IEBAIGNvbmZpZyBTUEFSQzY0CiAJc2VsZWN0IFBFUkZfVVNFX1ZNQUxM
T0MKIAlzZWxlY3QgQVJDSF9IQVZFX05NSV9TQUZFX0NNUFhDSEcKIAlzZWxlY3QgSEFWRV9DX1JF
Q09SRE1DT1VOVAorCXNlbGVjdCBBUkNIX0hBU19WTV9HRVRfUEFHRV9QUk9UCiAJc2VsZWN0IEhB
VkVfQVJDSF9BVURJVFNZU0NBTEwKIAlzZWxlY3QgQVJDSF9TVVBQT1JUU19BVE9NSUNfUk1XCiAJ
c2VsZWN0IEFSQ0hfU1VQUE9SVFNfREVCVUdfUEFHRUFMTE9DCmRpZmYgLS1naXQgYS9hcmNoL3Nw
YXJjL2luY2x1ZGUvYXNtL21tYW4uaCBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vbW1hbi5oCmlu
ZGV4IDI3NDIxN2U3ZWQ3MC4uYWY5YzEwYzgzZGM1IDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2lu
Y2x1ZGUvYXNtL21tYW4uaAorKysgYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL21tYW4uaApAQCAt
NDYsMTIgKzQ2LDYgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHNwYXJjX2NhbGNfdm1f
cHJvdF9iaXRzKHVuc2lnbmVkIGxvbmcgcHJvdCkKIAl9CiB9CiAKLSNkZWZpbmUgYXJjaF92bV9n
ZXRfcGFnZV9wcm90KHZtX2ZsYWdzKSBzcGFyY192bV9nZXRfcGFnZV9wcm90KHZtX2ZsYWdzKQot
c3RhdGljIGlubGluZSBwZ3Byb3RfdCBzcGFyY192bV9nZXRfcGFnZV9wcm90KHVuc2lnbmVkIGxv
bmcgdm1fZmxhZ3MpCi17Ci0JcmV0dXJuICh2bV9mbGFncyAmIFZNX1NQQVJDX0FESSkgPyBfX3Bn
cHJvdChfUEFHRV9NQ0RfNFYpIDogX19wZ3Byb3QoMCk7Ci19Ci0KICNkZWZpbmUgYXJjaF92YWxp
ZGF0ZV9wcm90KHByb3QsIGFkZHIpIHNwYXJjX3ZhbGlkYXRlX3Byb3QocHJvdCwgYWRkcikKIHN0
YXRpYyBpbmxpbmUgaW50IHNwYXJjX3ZhbGlkYXRlX3Byb3QodW5zaWduZWQgbG9uZyBwcm90LCB1
bnNpZ25lZCBsb25nIGFkZHIpCiB7CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNt
L3BndGFibGVfMzIuaCBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oCmluZGV4
IGZmY2NmZTNiMjJlZC4uMDYwYTQzNWY5NmQ2IDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2luY2x1
ZGUvYXNtL3BndGFibGVfMzIuaAorKysgYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVf
MzIuaApAQCAtNjQsMjUgKzY0LDYgQEAgdm9pZCBwYWdpbmdfaW5pdCh2b2lkKTsKIAogZXh0ZXJu
IHVuc2lnbmVkIGxvbmcgcHRyX2luX2N1cnJlbnRfcGdkOwogCi0vKiAgICAgICAgIHh3ciAqLwot
I2RlZmluZSBfX1AwMDAgIFBBR0VfTk9ORQotI2RlZmluZSBfX1AwMDEgIFBBR0VfUkVBRE9OTFkK
LSNkZWZpbmUgX19QMDEwICBQQUdFX0NPUFkKLSNkZWZpbmUgX19QMDExICBQQUdFX0NPUFkKLSNk
ZWZpbmUgX19QMTAwICBQQUdFX1JFQURPTkxZCi0jZGVmaW5lIF9fUDEwMSAgUEFHRV9SRUFET05M
WQotI2RlZmluZSBfX1AxMTAgIFBBR0VfQ09QWQotI2RlZmluZSBfX1AxMTEgIFBBR0VfQ09QWQot
Ci0jZGVmaW5lIF9fUzAwMAlQQUdFX05PTkUKLSNkZWZpbmUgX19TMDAxCVBBR0VfUkVBRE9OTFkK
LSNkZWZpbmUgX19TMDEwCVBBR0VfU0hBUkVECi0jZGVmaW5lIF9fUzAxMQlQQUdFX1NIQVJFRAot
I2RlZmluZSBfX1MxMDAJUEFHRV9SRUFET05MWQotI2RlZmluZSBfX1MxMDEJUEFHRV9SRUFET05M
WQotI2RlZmluZSBfX1MxMTAJUEFHRV9TSEFSRUQKLSNkZWZpbmUgX19TMTExCVBBR0VfU0hBUkVE
Ci0KIC8qIEZpcnN0IHBoeXNpY2FsIHBhZ2UgY2FuIGJlIGFueXdoZXJlLCB0aGUgZm9sbG93aW5n
IGlzIG5lZWRlZCBzbyB0aGF0CiAgKiB2YS0tPnBhIGFuZCB2aWNlIHZlcnNhIGNvbnZlcnNpb25z
IHdvcmsgcHJvcGVybHkgd2l0aG91dCBwZXJmb3JtYW5jZQogICogaGl0IGZvciBhbGwgX19wYSgp
L19fdmEoKSBvcGVyYXRpb25zLgpkaWZmIC0tZ2l0IGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9w
Z3RhYmxlXzY0LmggYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVfNjQuaAppbmRleCA0
Njc5ZTQ1YzgzNDguLmE3Nzk0MThjZWJhOSAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9pbmNsdWRl
L2FzbS9wZ3RhYmxlXzY0LmgKKysrIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0
LmgKQEAgLTE4NywyNSArMTg3LDYgQEAgYm9vbCBrZXJuX2FkZHJfdmFsaWQodW5zaWduZWQgbG9u
ZyBhZGRyKTsKICNkZWZpbmUgX1BBR0VfU1pIVUdFXzRVCV9QQUdFX1NaNE1CXzRVCiAjZGVmaW5l
IF9QQUdFX1NaSFVHRV80VglfUEFHRV9TWjRNQl80VgogCi0vKiBUaGVzZSBhcmUgYWN0dWFsbHkg
ZmlsbGVkIGluIGF0IGJvb3QgdGltZSBieSBzdW40e3Usdn1fcGdwcm90X2luaXQoKSAqLwotI2Rl
ZmluZSBfX1AwMDAJX19wZ3Byb3QoMCkKLSNkZWZpbmUgX19QMDAxCV9fcGdwcm90KDApCi0jZGVm
aW5lIF9fUDAxMAlfX3BncHJvdCgwKQotI2RlZmluZSBfX1AwMTEJX19wZ3Byb3QoMCkKLSNkZWZp
bmUgX19QMTAwCV9fcGdwcm90KDApCi0jZGVmaW5lIF9fUDEwMQlfX3BncHJvdCgwKQotI2RlZmlu
ZSBfX1AxMTAJX19wZ3Byb3QoMCkKLSNkZWZpbmUgX19QMTExCV9fcGdwcm90KDApCi0KLSNkZWZp
bmUgX19TMDAwCV9fcGdwcm90KDApCi0jZGVmaW5lIF9fUzAwMQlfX3BncHJvdCgwKQotI2RlZmlu
ZSBfX1MwMTAJX19wZ3Byb3QoMCkKLSNkZWZpbmUgX19TMDExCV9fcGdwcm90KDApCi0jZGVmaW5l
IF9fUzEwMAlfX3BncHJvdCgwKQotI2RlZmluZSBfX1MxMDEJX19wZ3Byb3QoMCkKLSNkZWZpbmUg
X19TMTEwCV9fcGdwcm90KDApCi0jZGVmaW5lIF9fUzExMQlfX3BncHJvdCgwKQotCiAjaWZuZGVm
IF9fQVNTRU1CTFlfXwogCiBwdGVfdCBta19wdGVfaW8odW5zaWduZWQgbG9uZywgcGdwcm90X3Qs
IGludCwgdW5zaWduZWQgbG9uZyk7CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL21tL2luaXRfMzIu
YyBiL2FyY2gvc3BhcmMvbW0vaW5pdF8zMi5jCmluZGV4IDFlOWY1NzdmMDg0ZC4uMzQ4Y2JmZTA4
YjYwIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL21tL2luaXRfMzIuYworKysgYi9hcmNoL3NwYXJj
L21tL2luaXRfMzIuYwpAQCAtMzAyLDMgKzMwMiwzOCBAQCB2b2lkIHNwYXJjX2ZsdXNoX3BhZ2Vf
dG9fcmFtKHN0cnVjdCBwYWdlICpwYWdlKQogCQlfX2ZsdXNoX3BhZ2VfdG9fcmFtKHZhZGRyKTsK
IH0KIEVYUE9SVF9TWU1CT0woc3BhcmNfZmx1c2hfcGFnZV90b19yYW0pOworCitwZ3Byb3RfdCB2
bV9nZXRfcGFnZV9wcm90KHVuc2lnbmVkIGxvbmcgdm1fZmxhZ3MpCit7CisJc3dpdGNoICh2bV9m
bGFncyAmIChWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgVk1fU0hBUkVEKSkgeworCWNh
c2UgVk1fTk9ORToKKwkJcmV0dXJuIFBBR0VfTk9ORTsKKwljYXNlIFZNX1JFQUQ6CisJCXJldHVy
biBQQUdFX1JFQURPTkxZOworCWNhc2UgVk1fV1JJVEU6CisJY2FzZSBWTV9XUklURSB8IFZNX1JF
QUQ6CisJCXJldHVybiBQQUdFX0NPUFk7CisJY2FzZSBWTV9FWEVDOgorCWNhc2UgVk1fRVhFQyB8
IFZNX1JFQUQ6CisJCXJldHVybiBQQUdFX1JFQURPTkxZOworCWNhc2UgVk1fRVhFQyB8IFZNX1dS
SVRFOgorCWNhc2UgVk1fRVhFQyB8IFZNX1dSSVRFIHwgVk1fUkVBRDoKKwkJcmV0dXJuIFBBR0Vf
Q09QWTsKKwljYXNlIFZNX1NIQVJFRDoKKwkJcmV0dXJuIFBBR0VfTk9ORTsKKwljYXNlIFZNX1NI
QVJFRCB8IFZNX1JFQUQ6CisJCXJldHVybiBQQUdFX1JFQURPTkxZOworCWNhc2UgVk1fU0hBUkVE
IHwgVk1fV1JJVEU6CisJY2FzZSBWTV9TSEFSRUQgfCBWTV9XUklURSB8IFZNX1JFQUQ6CisJCXJl
dHVybiBQQUdFX1NIQVJFRDsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX0VYRUM6CisJY2FzZSBWTV9T
SEFSRUQgfCBWTV9FWEVDIHwgVk1fUkVBRDoKKwkJcmV0dXJuIFBBR0VfUkVBRE9OTFk7CisJY2Fz
ZSBWTV9TSEFSRUQgfCBWTV9FWEVDIHwgVk1fV1JJVEU6CisJY2FzZSBWTV9TSEFSRUQgfCBWTV9F
WEVDIHwgVk1fV1JJVEUgfCBWTV9SRUFEOgorCQlyZXR1cm4gUEFHRV9TSEFSRUQ7CisJZGVmYXVs
dDoKKwkJQlVJTERfQlVHKCk7CisJfQorfQorRVhQT1JUX1NZTUJPTCh2bV9nZXRfcGFnZV9wcm90
KTsKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvbW0vaW5pdF82NC5jIGIvYXJjaC9zcGFyYy9tbS9p
bml0XzY0LmMKaW5kZXggMWIyMzYzOWUyZmNkLi5hMzkwMTE2ZDM3MWIgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvc3BhcmMvbW0vaW5pdF82NC5jCisrKyBiL2FyY2gvc3BhcmMvbW0vaW5pdF82NC5jCkBAIC01
MCw2ICs1MCw3IEBACiAjaW5jbHVkZSA8YXNtL2NwdWRhdGEuaD4KICNpbmNsdWRlIDxhc20vc2V0
dXAuaD4KICNpbmNsdWRlIDxhc20vaXJxLmg+CisjaW5jbHVkZSA8YXNtL21tYW4uaD4KIAogI2lu
Y2x1ZGUgImluaXRfNjQuaCIKIApAQCAtMjY0MSwyOSArMjY0MiwxMyBAQCBzdGF0aWMgdm9pZCBw
cm90X2luaXRfY29tbW9uKHVuc2lnbmVkIGxvbmcgcGFnZV9ub25lLAogewogCVBBR0VfQ09QWSA9
IF9fcGdwcm90KHBhZ2VfY29weSk7CiAJUEFHRV9TSEFSRUQgPSBfX3BncHJvdChwYWdlX3NoYXJl
ZCk7Ci0KLQlwcm90ZWN0aW9uX21hcFsweDBdID0gX19wZ3Byb3QocGFnZV9ub25lKTsKLQlwcm90
ZWN0aW9uX21hcFsweDFdID0gX19wZ3Byb3QocGFnZV9yZWFkb25seSAmIH5wYWdlX2V4ZWNfYml0
KTsKLQlwcm90ZWN0aW9uX21hcFsweDJdID0gX19wZ3Byb3QocGFnZV9jb3B5ICYgfnBhZ2VfZXhl
Y19iaXQpOwotCXByb3RlY3Rpb25fbWFwWzB4M10gPSBfX3BncHJvdChwYWdlX2NvcHkgJiB+cGFn
ZV9leGVjX2JpdCk7Ci0JcHJvdGVjdGlvbl9tYXBbMHg0XSA9IF9fcGdwcm90KHBhZ2VfcmVhZG9u
bHkpOwotCXByb3RlY3Rpb25fbWFwWzB4NV0gPSBfX3BncHJvdChwYWdlX3JlYWRvbmx5KTsKLQlw
cm90ZWN0aW9uX21hcFsweDZdID0gX19wZ3Byb3QocGFnZV9jb3B5KTsKLQlwcm90ZWN0aW9uX21h
cFsweDddID0gX19wZ3Byb3QocGFnZV9jb3B5KTsKLQlwcm90ZWN0aW9uX21hcFsweDhdID0gX19w
Z3Byb3QocGFnZV9ub25lKTsKLQlwcm90ZWN0aW9uX21hcFsweDldID0gX19wZ3Byb3QocGFnZV9y
ZWFkb25seSAmIH5wYWdlX2V4ZWNfYml0KTsKLQlwcm90ZWN0aW9uX21hcFsweGFdID0gX19wZ3By
b3QocGFnZV9zaGFyZWQgJiB+cGFnZV9leGVjX2JpdCk7Ci0JcHJvdGVjdGlvbl9tYXBbMHhiXSA9
IF9fcGdwcm90KHBhZ2Vfc2hhcmVkICYgfnBhZ2VfZXhlY19iaXQpOwotCXByb3RlY3Rpb25fbWFw
WzB4Y10gPSBfX3BncHJvdChwYWdlX3JlYWRvbmx5KTsKLQlwcm90ZWN0aW9uX21hcFsweGRdID0g
X19wZ3Byb3QocGFnZV9yZWFkb25seSk7Ci0JcHJvdGVjdGlvbl9tYXBbMHhlXSA9IF9fcGdwcm90
KHBhZ2Vfc2hhcmVkKTsKLQlwcm90ZWN0aW9uX21hcFsweGZdID0gX19wZ3Byb3QocGFnZV9zaGFy
ZWQpOwogfQogCitzdGF0aWMgdW5zaWduZWQgbG9uZyBwYWdlX25vbmUsIHBhZ2Vfc2hhcmVkLCBw
YWdlX2NvcHksIHBhZ2VfcmVhZG9ubHk7CitzdGF0aWMgdW5zaWduZWQgbG9uZyBwYWdlX2V4ZWNf
Yml0OworCiBzdGF0aWMgdm9pZCBfX2luaXQgc3VuNHVfcGdwcm90X2luaXQodm9pZCkKIHsKLQl1
bnNpZ25lZCBsb25nIHBhZ2Vfbm9uZSwgcGFnZV9zaGFyZWQsIHBhZ2VfY29weSwgcGFnZV9yZWFk
b25seTsKLQl1bnNpZ25lZCBsb25nIHBhZ2VfZXhlY19iaXQ7CiAJaW50IGk7CiAKIAlQQUdFX0tF
Uk5FTCA9IF9fcGdwcm90IChfUEFHRV9QUkVTRU5UXzRVIHwgX1BBR0VfVkFMSUQgfApAQCAtMzE4
MywzICszMTY4LDUwIEBAIHZvaWQgY29weV9oaWdocGFnZShzdHJ1Y3QgcGFnZSAqdG8sIHN0cnVj
dCBwYWdlICpmcm9tKQogCX0KIH0KIEVYUE9SVF9TWU1CT0woY29weV9oaWdocGFnZSk7CisKK3N0
YXRpYyBpbmxpbmUgcGdwcm90X3QgX192bV9nZXRfcGFnZV9wcm90KHVuc2lnbmVkIGxvbmcgdm1f
ZmxhZ3MpCit7CisJc3dpdGNoICh2bV9mbGFncyAmIChWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9F
WEVDIHwgVk1fU0hBUkVEKSkgeworCWNhc2UgVk1fTk9ORToKKwkJcmV0dXJuIF9fcGdwcm90KHBh
Z2Vfbm9uZSk7CisJY2FzZSBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGFnZV9yZWFkb25s
eSAmIH5wYWdlX2V4ZWNfYml0KTsKKwljYXNlIFZNX1dSSVRFOgorCWNhc2UgVk1fV1JJVEUgfCBW
TV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGFnZV9jb3B5ICYgfnBhZ2VfZXhlY19iaXQpOwor
CWNhc2UgVk1fRVhFQzoKKwljYXNlIFZNX0VYRUMgfCBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3By
b3QocGFnZV9yZWFkb25seSk7CisJY2FzZSBWTV9FWEVDIHwgVk1fV1JJVEU6CisJY2FzZSBWTV9F
WEVDIHwgVk1fV1JJVEUgfCBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGFnZV9jb3B5KTsK
KwljYXNlIFZNX1NIQVJFRDoKKwkJcmV0dXJuIF9fcGdwcm90KHBhZ2Vfbm9uZSk7CisJY2FzZSBW
TV9TSEFSRUQgfCBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGFnZV9yZWFkb25seSAmIH5w
YWdlX2V4ZWNfYml0KTsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX1dSSVRFOgorCWNhc2UgVk1fU0hB
UkVEIHwgVk1fV1JJVEUgfCBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGFnZV9zaGFyZWQg
JiB+cGFnZV9leGVjX2JpdCk7CisJY2FzZSBWTV9TSEFSRUQgfCBWTV9FWEVDOgorCWNhc2UgVk1f
U0hBUkVEIHwgVk1fRVhFQyB8IFZNX1JFQUQ6CisJCXJldHVybiBfX3BncHJvdChwYWdlX3JlYWRv
bmx5KTsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX0VYRUMgfCBWTV9XUklURToKKwljYXNlIFZNX1NI
QVJFRCB8IFZNX0VYRUMgfCBWTV9XUklURSB8IFZNX1JFQUQ6CisJCXJldHVybiBfX3BncHJvdChw
YWdlX3NoYXJlZCk7CisJZGVmYXVsdDoKKwkJQlVJTERfQlVHKCk7CisJfQorfQorCitzdGF0aWMg
cGdwcm90X3Qgc3BhcmNfdm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2ZsYWdzKQor
eworCXJldHVybiAodm1fZmxhZ3MgJiBWTV9TUEFSQ19BREkpID8gX19wZ3Byb3QoX1BBR0VfTUNE
XzRWKSA6IF9fcGdwcm90KDApOworfQorCitwZ3Byb3RfdCB2bV9nZXRfcGFnZV9wcm90KHVuc2ln
bmVkIGxvbmcgdm1fZmxhZ3MpCit7CisJcmV0dXJuIF9fcGdwcm90KHBncHJvdF92YWwoX192bV9n
ZXRfcGFnZV9wcm90KHZtX2ZsYWdzKSkgfAorCSAgICAgICBwZ3Byb3RfdmFsKHNwYXJjX3ZtX2dl
dF9wYWdlX3Byb3Qodm1fZmxhZ3MpKSk7CisKK30KK0VYUE9SVF9TWU1CT0wodm1fZ2V0X3BhZ2Vf
cHJvdCk7Ci0tIAoyLjI1LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVz
Lm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
