Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 9FF4D1E5032
	for <lists+openrisc@lfdr.de>; Wed, 27 May 2020 23:19:24 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 5615C20AD6;
	Wed, 27 May 2020 23:19:24 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 7D87720ABE
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 19:06:03 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 86EE720760;
 Thu, 14 May 2020 17:05:47 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1589475962;
 bh=3YUx1f1boUzrkgkdG9pQxn1YTvug/qgL4yRuO7gam1U=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=QjIAJrBSlZcXvLNXzOgqJexB65uM095tiGC696OJuxmexmAEnnWndgLR4W5mP+fNL
 6r16qJpEpgJjrc8mEV0Q0TlpOMVnDBBRdn5AqBez85PV4pjqSIpn7FzRa0OmlDvLTy
 DvYrIehtwyHuBYwoyljftK7asDOXfJIYuYpe4KwI=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Thu, 14 May 2020 20:03:24 +0300
Message-Id: <20200514170327.31389-10-rppt@kernel.org>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200514170327.31389-1-rppt@kernel.org>
References: <20200514170327.31389-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 27 May 2020 23:18:58 +0200
Subject: [OpenRISC] [PATCH v2 09/12] mm: consolidate pte_index() and
 pte_offset_*() definitions
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Max Filippov <jcmvbkbc@gmail.com>,
 Guo Ren <guoren@kernel.org>, Matthew Wilcox <willy@infradead.org>,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Vincent Chen <deanbo422@gmail.com>,
 Will Deacon <will@kernel.org>, Greg Ungerer <gerg@linux-m68k.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, Brian Cain <bcain@codeaurora.org>,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>, Mike Rapoport <rppt@linux.ibm.com>,
 Ingo Molnar <mingo@redhat.com>, linux-parisc@vger.kernel.org,
 Mark Salter <msalter@redhat.com>, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Arnd Bergmann <arnd@arndb.de>, linux-alpha@vger.kernel.org,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 Tony Luck <tony.luck@intel.com>, Borislav Petkov <bp@alien8.de>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 linux-csky@vger.kernel.org, Guan Xuetao <gxt@pku.edu.cn>,
 linux-arm-kernel@lists.infradead.org, Chris Zankel <chris@zankel.net>,
 Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Thomas Gleixner <tglx@linutronix.de>, Richard Weinberger <richard@nod.at>,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKQWxsIGFyY2hpdGVjdHVy
ZXMgZGVmaW5lIHB0ZV9pbmRleCgpIGFzCgoJKGFkZHJlc3MgPj4gUEFHRV9TSElGVCkgJiAoUFRS
U19QRVJfUFRFIC0gMSkKCmFuZCBhbGwgYXJjaGl0ZWN0dXJlcyBkZWZpbmUgcHRlX29mZnNldF9r
ZXJuZWwoKSBhcyBhbiBlbnRyeQppbiB0aGUgYXJyYXkgb2YgUFRFcyBpbmRleGVkIGJ5IHRoZSBw
dGVfaW5kZXgoKS4KCkZvciB0aGUgbW9zdCBhcmNoaXRlY3R1cmVzIHRoZSBwdGVfb2Zmc2V0X2tl
cm5lbCgpIGltcGxlbWVudGF0aW9uIHJlbGllcyBvbgp0aGUgYXZhaWxhYmlsaXR5IG9mIHBtZF9w
YWdlX3ZhZGRyKCkgdGhhdCBjb252ZXJ0cyBhIFBNRCBlbnRyeSB2YWx1ZSB0byB0aGUKdmlydHVh
bCBhZGRyZXNzIG9mIHRoZSBwYWdlIGNvbnRhaW5pbmcgUFRFcyBhcnJheS4KCkxldCdzIG1vdmUg
eDg2IGRlZmluaXRpb25zIG9mIHRoZSBQVEUgYWNjZXNzb3JzIHRvIHRoZSBnZW5lcmljIHBsYWNl
IGluCjxsaW51eC9wZ3RhYmxlLmg+IGFuZCB0aGVuIHNpbXBseSBkcm9wIHRoZSByZXNwZWN0aXZl
IGRlZmluaXRpb25zIGZyb20gdGhlCm90aGVyIGFyY2hpdGVjdHVyZXMuCgpUaGUgYXJjaGl0ZWN0
dXJlcyB0aGF0IGRpZG4ndCBwcm92aWRlIHBtZF9wYWdlX3ZhZGRyKCkgYXJlIHVwZGF0ZWQgdG8g
aGF2ZQp0aGF0IGRlZmluZWQuCgpUaGUgZ2VuZXJpYyBpbXBsZW1lbnRhdGlvbiBvZiBwdGVfb2Zm
c2V0X2tlcm5lbCgpIGNhbiBiZSBvdmVycmlkZGVuIGJ5IGFuCmFyY2hpdGVjdHVyZSBhbmQgYWxw
aGEgbWFrZXMgdXNlIG9mIHRoaXMgYmVjYXVzZSBpdCBoYXMgc3BlY2lhbCBvcmRlcmluZwpyZXF1
aXJlbWVudHMgZm9yIGl0cyB2ZXJzaW9uIG9mIHB0ZV9vZmZzZXRfa2VybmVsKCkuCgpTaWduZWQt
b2ZmLWJ5OiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+Ci0tLQogYXJjaC9hbHBo
YS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgICAgfCAgNCArLS0KIGFyY2gvYXJjL2lu
Y2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICAgIHwgMTUgLS0tLS0tLS0tLQogYXJjaC9h
cm0vaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAgICAgICAgfCAxNSAtLS0tLS0tLS0tCiBh
cmNoL2FybTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICB8IDEwICsrKy0tLS0K
IGFyY2gvY3NreS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgICAgIHwgMTYgLS0tLS0t
LS0tLS0KIGFyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAgICAgIHwgMjUg
KysrLS0tLS0tLS0tLS0tLS0KIGFyY2gvaWE2NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgICAg
ICAgICAgIHwgIDkgLS0tLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vbWNmX3BndGFibGUuaCAg
ICAgICAgICB8IDEyICstLS0tLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vbW90b3JvbGFfcGdh
bGxvYy5oICAgICB8ICAyICstCiBhcmNoL202OGsvaW5jbHVkZS9hc20vbW90b3JvbGFfcGd0YWJs
ZS5oICAgICB8IDExICstLS0tLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vc3VuM19wZ3RhYmxl
LmggICAgICAgICB8IDE1ICsrKystLS0tLS0KIGFyY2gvbTY4ay9tbS9pbml0LmMgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9wZ3Rh
YmxlLmggICAgICAgIHwgMTMgKysrLS0tLS0tCiBhcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJs
ZS0zMi5oICAgICAgICAgICB8IDEyIC0tLS0tLS0tCiBhcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0
YWJsZS02NC5oICAgICAgICAgICB8IDExIC0tLS0tLS0tCiBhcmNoL21pcHMva3ZtL21tdS5jICAg
ICAgICAgICAgICAgICAgICAgICAgICB8IDIwICsrKysrKystLS0tLS0tCiBhcmNoL21pcHMva3Zt
L3RyYXBfZW11bC5jICAgICAgICAgICAgICAgICAgICB8ICAyICstCiBhcmNoL25kczMyL2luY2x1
ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICB8IDEyICsrKy0tLS0tCiBhcmNoL25pb3MyL2lu
Y2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICB8IDE0ICsrKy0tLS0tLS0KIGFyY2gvb3Bl
bnJpc2MvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAgIHwgMjMgKysrKy0tLS0tLS0tLS0t
LQogYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAgICAgfCAxNSArKyst
LS0tLS0tCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzMyL3BndGFibGUuaCB8IDEz
ICsrLS0tLS0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmgg
fCAgOCAtLS0tLS0KIGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5o
IHwgMTMgKystLS0tLS0tCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFi
bGUuaCB8ICA3IC0tLS0tCiBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAg
ICAgICB8ICA3ICsrKysrCiBhcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAg
ICAgICB8IDEwIC0tLS0tLS0KIGFyY2gvcmlzY3YvbW0vaW5pdC5jICAgICAgICAgICAgICAgICAg
ICAgICAgIHwgIDYgKystLQogYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAg
ICAgICAgfCAxMCArKy0tLS0tCiBhcmNoL3MzOTAvbW0vcGFnZWF0dHIuYyAgICAgICAgICAgICAg
ICAgICAgICB8ICAyICstCiBhcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaCAgICAgICAg
ICAgICB8IDE1ICsrKystLS0tLS0KIGFyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oICAg
ICAgICAgICAgIHwgMTIgLS0tLS0tLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGdhbGxvY182
NC5oICAgICAgICAgIHwgIDIgKy0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5o
ICAgICAgICAgIHwgMTUgKysrKy0tLS0tLQogYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxl
XzY0LmggICAgICAgICAgfCAxMiArKy0tLS0tLQogYXJjaC9zcGFyYy9tbS9zcm1tdS5jICAgICAg
ICAgICAgICAgICAgICAgICAgfCAxMCAtLS0tLS0tCiBhcmNoL3VtL2luY2x1ZGUvYXNtL3BndGFi
bGUuaCAgICAgICAgICAgICAgICB8IDEzIC0tLS0tLS0tLQogYXJjaC91bmljb3JlMzIvaW5jbHVk
ZS9hc20vcGd0YWJsZS5oICAgICAgICAgfCAgOSAtLS0tLS0KIGFyY2gveDg2L2luY2x1ZGUvYXNt
L3BndGFibGUuaCAgICAgICAgICAgICAgIHwgMTkgLS0tLS0tLS0tLS0tLQogYXJjaC94ODYvaW5j
bHVkZS9hc20vcGd0YWJsZV8zMi5oICAgICAgICAgICAgfCAxMSAtLS0tLS0tLQogYXJjaC94ODYv
aW5jbHVkZS9hc20vcGd0YWJsZV82NC5oICAgICAgICAgICAgfCAgNCAtLS0KIGFyY2gveHRlbnNh
L2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgIHwgMTAgKy0tLS0tLQogaW5jbHVkZS9s
aW51eC9wZ3RhYmxlLmggICAgICAgICAgICAgICAgICAgICAgfCAyOSArKysrKysrKysrKysrKysr
KysrKwogNDMgZmlsZXMgY2hhbmdlZCwgMTEzIGluc2VydGlvbnMoKyksIDM4MiBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gv
YWxwaGEvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IDFjMjYzOTIyYmViMy4uZGFjMjBkMDNi
NzI3IDEwMDY0NAotLS0gYS9hcmNoL2FscGhhL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9h
cmNoL2FscGhhL2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtMzE0LDkgKzMxNCw3IEBAIGV4dGVy
biBpbmxpbmUgcHRlX3QgKiBwdGVfb2Zmc2V0X2tlcm5lbChwbWRfdCAqIGRpciwgdW5zaWduZWQg
bG9uZyBhZGRyZXNzKQogCXNtcF9yZWFkX2JhcnJpZXJfZGVwZW5kcygpOyAvKiBzZWUgYWJvdmUg
Ki8KIAlyZXR1cm4gcmV0OwogfQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpcixhZGRyKQlw
dGVfb2Zmc2V0X2tlcm5lbCgoZGlyKSwoYWRkcikpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpCQkJ
ZG8geyB9IHdoaWxlICgwKQorI2RlZmluZSBwdGVfb2Zmc2V0X2tlcm5lbCBwdGVfb2Zmc2V0X2tl
cm5lbAogCiBleHRlcm4gcGdkX3Qgc3dhcHBlcl9wZ19kaXJbMTAyNF07CiAKZGlmZiAtLWdpdCBh
L2FyY2gvYXJjL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3Bn
dGFibGUuaAppbmRleCAyOTEzN2JjZWRkOTMuLjExNDY5MDVmNTk0YiAxMDA2NDQKLS0tIGEvYXJj
aC9hcmMvaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3Bn
dGFibGUuaApAQCAtMjQ4LDkgKzI0OCw2IEBACiBleHRlcm4gY2hhciBlbXB0eV96ZXJvX3BhZ2Vb
UEFHRV9TSVpFXTsKICNkZWZpbmUgWkVST19QQUdFKHZhZGRyKQkodmlydF90b19wYWdlKGVtcHR5
X3plcm9fcGFnZSkpCiAKLSNkZWZpbmUgcHRlX3VubWFwKHB0ZSkJCWRvIHsgfSB3aGlsZSAoMCkK
LSNkZWZpbmUgcHRlX3VubWFwX25lc3RlZChwdGUpCQlkbyB7IH0gd2hpbGUgKDApCi0KICNkZWZp
bmUgc2V0X3B0ZShwdGVwdHIsIHB0ZXZhbCkJKCgqKHB0ZXB0cikpID0gKHB0ZXZhbCkpCiAjZGVm
aW5lIHNldF9wbWQocG1kcHRyLCBwbWR2YWwpCSgqKHBtZHB0cikgPSBwbWR2YWwpCiAKQEAgLTI4
MiwxOCArMjc5LDYgQEAgc3RhdGljIGlubGluZSB2b2lkIHBtZF9zZXQocG1kX3QgKnBtZHAsIHB0
ZV90ICpwdGVwKQogCiAvKiBEb24ndCB1c2UgdmlydF90b19wZm4gZm9yIG1hY3JvcyBiZWxvdzog
Y291bGQgY2F1c2UgdHJ1bmNhdGlvbnMgZm9yIFBBRTQwKi8KICNkZWZpbmUgcHRlX3BmbihwdGUp
CQkocHRlX3ZhbChwdGUpID4+IFBBR0VfU0hJRlQpCi0jZGVmaW5lIF9fcHRlX2luZGV4KGFkZHIp
CSgoKGFkZHIpID4+IFBBR0VfU0hJRlQpICYgKFBUUlNfUEVSX1BURSAtIDEpKQotCi0vKgotICog
cHRlX29mZnNldCBnZXRzIGEgQHB0ciB0byBQTUQgZW50cnkgKFBHRCBpbiBvdXIgMi10aWVyIHBh
Z2luZyBzeXN0ZW0pCi0gKiBhbmQgcmV0dXJucyBwdHIgdG8gUFRFIGVudHJ5IGNvcnJlc3BvbmRp
bmcgdG8gQGFkZHIKLSAqLwotI2RlZmluZSBwdGVfb2Zmc2V0KGRpciwgYWRkcikgKChwdGVfdCAq
KShwbWRfcGFnZV92YWRkcigqZGlyKSkgK1wKLQkJCQkJIF9fcHRlX2luZGV4KGFkZHIpKQotCi0v
KiBObyBtYXBwaW5nIG9mIFBhZ2UgVGFibGVzIGluIGhpZ2ggbWVtIGV0Yywgc28gZm9sbG93aW5n
IHNhbWUgYXMgYWJvdmUgKi8KLSNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGlyLCBhZGRyKQkJ
cHRlX29mZnNldChkaXIsIGFkZHIpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpciwgYWRkcikJ
CXB0ZV9vZmZzZXQoZGlyLCBhZGRyKQogCiAvKiBab28gb2YgcHRlX3h4eCBmdW5jdGlvbiAqLwog
I2RlZmluZSBwdGVfcmVhZChwdGUpCQkocHRlX3ZhbChwdGUpICYgX1BBR0VfUkVBRCkKZGlmZiAt
LWdpdCBhL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvYXJtL2luY2x1ZGUv
YXNtL3BndGFibGUuaAppbmRleCAzOGM3Y2Q4YjAxNGIuLjQxNTQzYmM0NzY2MCAxMDA2NDQKLS0t
IGEvYXJjaC9hcm0vaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUv
YXNtL3BndGFibGUuaApAQCAtMTgzLDIxICsxODMsNiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90ICpw
bWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCiAKICNkZWZpbmUgcG1kX3BhZ2UocG1kKQkJcGZuX3Rv
X3BhZ2UoX19waHlzX3RvX3BmbihwbWRfdmFsKHBtZCkgJiBQSFlTX01BU0spKQogCi0jaWZuZGVm
IENPTkZJR19ISUdIUFRFCi0jZGVmaW5lIF9fcHRlX21hcChwbWQpCQlwbWRfcGFnZV92YWRkcigq
KHBtZCkpCi0jZGVmaW5lIF9fcHRlX3VubWFwKHB0ZSkJZG8geyB9IHdoaWxlICgwKQotI2Vsc2UK
LSNkZWZpbmUgX19wdGVfbWFwKHBtZCkJCShwdGVfdCAqKWttYXBfYXRvbWljKHBtZF9wYWdlKCoo
cG1kKSkpCi0jZGVmaW5lIF9fcHRlX3VubWFwKHB0ZSkJa3VubWFwX2F0b21pYyhwdGUpCi0jZW5k
aWYKLQotI2RlZmluZSBwdGVfaW5kZXgoYWRkcikJCSgoKGFkZHIpID4+IFBBR0VfU0hJRlQpICYg
KFBUUlNfUEVSX1BURSAtIDEpKQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKHBtZCxhZGRy
KQkocG1kX3BhZ2VfdmFkZHIoKihwbWQpKSArIHB0ZV9pbmRleChhZGRyKSkKLQotI2RlZmluZSBw
dGVfb2Zmc2V0X21hcChwbWQsYWRkcikJKF9fcHRlX21hcChwbWQpICsgcHRlX2luZGV4KGFkZHIp
KQotI2RlZmluZSBwdGVfdW5tYXAocHRlKQkJCV9fcHRlX3VubWFwKHB0ZSkKLQogI2RlZmluZSBw
dGVfcGZuKHB0ZSkJCSgocHRlX3ZhbChwdGUpICYgUEhZU19NQVNLKSA+PiBQQUdFX1NISUZUKQog
I2RlZmluZSBwZm5fcHRlKHBmbixwcm90KQlfX3B0ZShfX3Bmbl90b19waHlzKHBmbikgfCBwZ3By
b3RfdmFsKHByb3QpKQogCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3BndGFi
bGUuaCBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IDQzN2M5MmFiMjA4
MS4uNWUzZWY0Y2I4NTVhIDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3BndGFi
bGUuaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtNTA2LDE1ICs1
MDYsMTMgQEAgc3RhdGljIGlubGluZSBwaHlzX2FkZHJfdCBwbWRfcGFnZV9wYWRkcihwbWRfdCBw
bWQpCiAJcmV0dXJuIF9fcG1kX3RvX3BoeXMocG1kKTsKIH0KIAotc3RhdGljIGlubGluZSB2b2lk
IHB0ZV91bm1hcChwdGVfdCAqcHRlKSB7IH0KK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBw
bWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCit7CisJcmV0dXJuICh1bnNpZ25lZCBsb25nKV9fdmEo
cG1kX3BhZ2VfcGFkZHIocG1kKSk7Cit9CiAKIC8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHRoaXJk
LWxldmVsIHBhZ2UgdGFibGUuICovCi0jZGVmaW5lIHB0ZV9pbmRleChhZGRyKQkJKCgoYWRkcikg
Pj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0KICNkZWZpbmUgcHRlX29mZnNl
dF9waHlzKGRpcixhZGRyKQkocG1kX3BhZ2VfcGFkZHIoUkVBRF9PTkNFKCooZGlyKSkpICsgcHRl
X2luZGV4KGFkZHIpICogc2l6ZW9mKHB0ZV90KSkKLSNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwo
ZGlyLGFkZHIpCSgocHRlX3QgKilfX3ZhKHB0ZV9vZmZzZXRfcGh5cygoZGlyKSwgKGFkZHIpKSkp
Ci0KLSNkZWZpbmUgcHRlX29mZnNldF9tYXAoZGlyLGFkZHIpCXB0ZV9vZmZzZXRfa2VybmVsKChk
aXIpLCAoYWRkcikpCiAKICNkZWZpbmUgcHRlX3NldF9maXhtYXAoYWRkcikJCSgocHRlX3QgKilz
ZXRfZml4bWFwX29mZnNldChGSVhfUFRFLCBhZGRyKSkKICNkZWZpbmUgcHRlX3NldF9maXhtYXBf
b2Zmc2V0KHBtZCwgYWRkcikJcHRlX3NldF9maXhtYXAocHRlX29mZnNldF9waHlzKHBtZCwgYWRk
cikpCmRpZmYgLS1naXQgYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9j
c2t5L2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCAyZWZmNGFlYTUxYjMuLmJjZWY3ZTY3YWMy
ZiAxMDA2NDQKLS0tIGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNo
L2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC0zMiwxMyArMzIsNiBAQAogI2RlZmluZSBw
Z2RfRVJST1IoZSkgXAogCXByX2VycigiJXM6JWQ6IGJhZCBwZ2QgJTA4bHguXG4iLCBfX0ZJTEVf
XywgX19MSU5FX18sIHBnZF92YWwoZSkpCiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHRoaXJk
LWxldmVsIHBhZ2UgdGFibGUuLiAqLwotI2RlZmluZSBfX3B0ZV9vZmZzZXRfdChhZGRyZXNzKSBc
Ci0JKCgoYWRkcmVzcykgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0jZGVm
aW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpciwgYWRkcmVzcykgXAotCShwbWRfcGFnZV92YWRkcigq
KGRpcikpICsgX19wdGVfb2Zmc2V0X3QoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFw
KGRpciwgYWRkcmVzcykgXAotCSgocHRlX3QgKilwYWdlX2FkZHJlc3MocG1kX3BhZ2UoKihkaXIp
KSkgKyBfX3B0ZV9vZmZzZXRfdChhZGRyZXNzKSkKICNkZWZpbmUgcG1kX3BhZ2UocG1kKQkocGZu
X3RvX3BhZ2UocG1kX3BoeXMocG1kKSA+PiBQQUdFX1NISUZUKSkKICNkZWZpbmUgcHRlX2NsZWFy
KG1tLCBhZGRyLCBwdGVwKQlzZXRfcHRlKChwdGVwKSwgXAogCSgoKHVuc2lnbmVkIGludCkgYWRk
ciAmIFBBR0VfT0ZGU0VUKSA/IF9fcHRlKF9QQUdFX0dMT0JBTCkgOiBfX3B0ZSgwKSkpCkBAIC01
NCw4ICs0Nyw2IEBACiAjZGVmaW5lIF9QQUdFX0NIR19NQVNLCShQQUdFX01BU0sgfCBfUEFHRV9B
Q0NFU1NFRCB8IF9QQUdFX01PRElGSUVEIHwgXAogCQkJIF9DQUNIRV9NQVNLKQogCi0jZGVmaW5l
IHB0ZV91bm1hcChwdGUpCSgodm9pZCkocHRlKSkKLQogI2RlZmluZSBfX3N3cF90eXBlKHgpCQkJ
KCgoeCkudmFsID4+IDQpICYgMHhmZikKICNkZWZpbmUgX19zd3Bfb2Zmc2V0KHgpCQkJKCh4KS52
YWwgPj4gMTIpCiAjZGVmaW5lIF9fc3dwX2VudHJ5KHR5cGUsIG9mZnNldCkJKChzd3BfZW50cnlf
dCkgeygodHlwZSkgPDwgNCkgfCBcCkBAIC0yODYsMTMgKzI3Nyw2IEBAIHN0YXRpYyBpbmxpbmUg
cGdkX3QgKnBnZF9vZmZzZXQoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRk
cmVzcykKIAlyZXR1cm4gbW0tPnBnZCArIHBnZF9pbmRleChhZGRyZXNzKTsKIH0KIAotLyogRmlu
ZCBhbiBlbnRyeSBpbiB0aGUgdGhpcmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCi1zdGF0aWMgaW5s
aW5lIHB0ZV90ICpwdGVfb2Zmc2V0KHBtZF90ICpkaXIsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykK
LXsKLQlyZXR1cm4gKHB0ZV90ICopIChwbWRfcGFnZV92YWRkcigqZGlyKSkgKwotCQkoKGFkZHJl
c3MgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpOwotfQotCiBleHRlcm4gcGdk
X3Qgc3dhcHBlcl9wZ19kaXJbUFRSU19QRVJfUEdEXTsKIGV4dGVybiB2b2lkIHBhZ2luZ19pbml0
KHZvaWQpOwogCmRpZmYgLS1naXQgYS9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vcGd0YWJsZS5o
IGIvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCA4ZGY2ZTI3MDJiNTMu
LmYxNWJiYWE4OGJhOCAxMDA2NDQKLS0tIGEvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNtL3BndGFi
bGUuaAorKysgYi9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC00MDMsMzEg
KzQwMywxNCBAQCBzdGF0aWMgaW5saW5lIGludCBwdGVfZXhlYyhwdGVfdCBwdGUpCiAgKi8KICNk
ZWZpbmUgc2V0X3B0ZV9hdChtbSwgYWRkciwgcHRlcCwgcHRlKSBzZXRfcHRlKHB0ZXAsIHB0ZSkK
IAotLyoKLSAqIE1heSBuZWVkIHRvIGludm9rZSB0aGUgdmlydHVhbCBtYWNoaW5lIGFzIHdlbGwu
Li4KLSAqLwotI2RlZmluZSBwdGVfdW5tYXAocHRlKQkJZG8geyB9IHdoaWxlICgwKQotI2RlZmlu
ZSBwdGVfdW5tYXBfbmVzdGVkKHB0ZSkJZG8geyB9IHdoaWxlICgwKQotCi0vKgotICogcHRlX29m
ZnNldF9tYXAgLSByZXR1cm5zIHRoZSBsaW5lYXIgYWRkcmVzcyBvZiB0aGUgcGFnZSB0YWJsZSBl
bnRyeQotICogY29ycmVzcG9uZGluZyB0byBhbiBhZGRyZXNzCi0gKi8KLSNkZWZpbmUgcHRlX29m
ZnNldF9tYXAoZGlyLCBhZGRyZXNzKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IFwKLQkoKHB0ZV90ICopcGFnZV9hZGRyZXNzKHBtZF9wYWdlKCooZGlyKSkpICsgX19wdGVfb2Zm
c2V0KGFkZHJlc3MpKQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwX25lc3RlZChwbWQsIGFkZHIp
IHB0ZV9vZmZzZXRfbWFwKHBtZCwgYWRkcikKLQotLyogcHRlX29mZnNldF9rZXJuZWwgLSBrZXJu
ZWwgdmVyc2lvbiBvZiBwdGVfb2Zmc2V0ICovCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRp
ciwgYWRkcmVzcykgXAotCSgocHRlX3QgKikgKHVuc2lnbmVkIGxvbmcpIF9fdmEocG1kX3ZhbCgq
ZGlyKSAmIFBBR0VfTUFTSykgXAotCQkJCSsgIF9fcHRlX29mZnNldChhZGRyZXNzKSkKK3N0YXRp
YyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwbWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCit7CisJcmV0
dXJuICh1bnNpZ25lZCBsb25nKV9fdmEocG1kX3ZhbChwbWQpICYgUEFHRV9NQVNLKTsKK30KIAog
LyogWkVST19QQUdFIC0gcmV0dXJucyB0aGUgZ2xvYmFsbHkgc2hhcmVkIHplcm8gcGFnZSAqLwog
I2RlZmluZSBaRVJPX1BBR0UodmFkZHIpICh2aXJ0X3RvX3BhZ2UoJmVtcHR5X3plcm9fcGFnZSkp
CiAKLSNkZWZpbmUgX19wdGVfb2Zmc2V0KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IFBBR0VfU0hJ
RlQpICYgKFBUUlNfUEVSX1BURSAtIDEpKQotCiAvKgogICogU3dhcC9maWxlIFBURSBkZWZpbml0
aW9ucy4gIElmIF9QQUdFX1BSRVNFTlQgaXMgemVybywgdGhlIHJlc3Qgb2YgdGhlIFBURSBpcwog
ICogaW50ZXJwcmV0ZWQgYXMgc3dhcCBpbmZvcm1hdGlvbi4gIFRoZSByZW1haW5pbmcgZnJlZSBi
aXRzIGFyZSBpbnRlcnByZXRlZCBhcwpkaWZmIC0tZ2l0IGEvYXJjaC9pYTY0L2luY2x1ZGUvYXNt
L3BndGFibGUuaCBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggMzM5OTgy
NGFkOGE1Li5iOWNlN2Q3OGEzM2YgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9w
Z3RhYmxlLmgKKysrIGIvYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtMzkzLDE1
ICszOTMsNiBAQCBwZ2Rfb2Zmc2V0IChjb25zdCBzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWdu
ZWQgbG9uZyBhZGRyZXNzKQogI2RlZmluZSBwbWRfb2Zmc2V0KGRpcixhZGRyKSBcCiAJKChwbWRf
dCAqKSBwdWRfcGFnZV92YWRkcigqKGRpcikpICsgKCgoYWRkcikgPj4gUE1EX1NISUZUKSAmIChQ
VFJTX1BFUl9QTUQgLSAxKSkpCiAKLS8qCi0gKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1s
ZXZlbCBwYWdlIHRhYmxlLiAgVGhpcyBsb29rcyBtb3JlIGNvbXBsaWNhdGVkIHRoYW4gaXQKLSAq
IHNob3VsZCBiZSBiZWNhdXNlIHNvbWUgcGxhdGZvcm1zIHBsYWNlIHBhZ2UgdGFibGVzIGluIGhp
Z2ggbWVtb3J5LgotICovCi0jZGVmaW5lIHB0ZV9pbmRleChhZGRyKQkgCSgoKGFkZHIpID4+IFBB
R0VfU0hJRlQpICYgKFBUUlNfUEVSX1BURSAtIDEpKQotI2RlZmluZSBwdGVfb2Zmc2V0X2tlcm5l
bChkaXIsYWRkcikJKChwdGVfdCAqKSBwbWRfcGFnZV92YWRkcigqKGRpcikpICsgcHRlX2luZGV4
KGFkZHIpKQotI2RlZmluZSBwdGVfb2Zmc2V0X21hcChkaXIsYWRkcikJcHRlX29mZnNldF9rZXJu
ZWwoZGlyLCBhZGRyKQotI2RlZmluZSBwdGVfdW5tYXAocHRlKQkJCWRvIHsgfSB3aGlsZSAoMCkK
LQogLyogYXRvbWljIHZlcnNpb25zIG9mIHRoZSBzb21lIFBURSBtYW5pcHVsYXRpb25zOiAqLwog
CiBzdGF0aWMgaW5saW5lIGludApkaWZmIC0tZ2l0IGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21j
Zl9wZ3RhYmxlLmggYi9hcmNoL202OGsvaW5jbHVkZS9hc20vbWNmX3BndGFibGUuaAppbmRleCA3
MzdlODI2Mjk0ZjMuLjU5ZjdkNWZjYTM3OCAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL2luY2x1ZGUv
YXNtL21jZl9wZ3RhYmxlLmgKKysrIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21jZl9wZ3RhYmxl
LmgKQEAgLTE3MCw3ICsxNzAsNyBAQCBzdGF0aWMgaW5saW5lIHZvaWQgcGdkX3NldChwZ2RfdCAq
cGdkcCwgcG1kX3QgKnBtZHApCiB9CiAKICNkZWZpbmUgX19wdGVfcGFnZShwdGUpCSgodW5zaWdu
ZWQgbG9uZykgKHB0ZV92YWwocHRlKSAmIFBBR0VfTUFTSykpCi0jZGVmaW5lIF9fcG1kX3BhZ2Uo
cG1kKQkoKHVuc2lnbmVkIGxvbmcpIChwbWRfdmFsKHBtZCkpKQorI2RlZmluZSBwbWRfcGFnZV92
YWRkcihwbWQpCSgodW5zaWduZWQgbG9uZykgKHBtZF92YWwocG1kKSkpCiAKIHN0YXRpYyBpbmxp
bmUgaW50IHB0ZV9ub25lKHB0ZV90IHB0ZSkKIHsKQEAgLTMyMSwxMyArMzIxLDYgQEAgZXh0ZXJu
IHBnZF90IGtlcm5lbF9wZ19kaXJbUFRSU19QRVJfUEdEXTsKICAqLwogI2RlZmluZSBwZ2Rfb2Zm
c2V0X2soYWRkcmVzcykJcGdkX29mZnNldCgmaW5pdF9tbSwgYWRkcmVzcykKIAotLyoKLSAqIEZp
bmQgYW4gZW50cnkgaW4gdGhlIHRoaXJkLWxldmVsIHBhZ2V0YWJsZS4KLSAqLwotI2RlZmluZSBf
X3B0ZV9vZmZzZXQoYWRkcmVzcykJKChhZGRyZXNzID4+IFBBR0VfU0hJRlQpICYgKFBUUlNfUEVS
X1BURSAtIDEpKQotI2RlZmluZSBwdGVfb2Zmc2V0X2tlcm5lbChkaXIsIGFkZHJlc3MpIFwKLQko
KHB0ZV90ICopIF9fcG1kX3BhZ2UoKihkaXIpKSArIF9fcHRlX29mZnNldChhZGRyZXNzKSkKLQog
LyoKICAqIEVuY29kZSBhbmQgZGUtY29kZSBhIHN3YXAgZW50cnkgKG11c3QgYmUgIXB0ZV9ub25l
KGUpICYmICFwdGVfcHJlc2VudChlKSkKICAqLwpAQCAtMzQwLDkgKzMzMyw2IEBAIGV4dGVybiBw
Z2RfdCBrZXJuZWxfcGdfZGlyW1BUUlNfUEVSX1BHRF07CiAKICNkZWZpbmUgcG1kX3BhZ2UocG1k
KQkJKHBmbl90b19wYWdlKHBtZF92YWwocG1kKSA+PiBQQUdFX1NISUZUKSkKIAotI2RlZmluZSBw
dGVfb2Zmc2V0X21hcChwbWRwLCBhZGRyKSAoKHB0ZV90ICopX19wbWRfcGFnZSgqcG1kcCkgKyBc
Ci0JCQkJICAgICAgIF9fcHRlX29mZnNldChhZGRyKSkKLSNkZWZpbmUgcHRlX3VubWFwKHB0ZSkJ
CSgodm9pZCkgMCkKICNkZWZpbmUgcGZuX3B0ZShwZm4sIHByb3QpCV9fcHRlKCgocGZuKSA8PCBQ
QUdFX1NISUZUKSB8IHBncHJvdF92YWwocHJvdCkpCiAjZGVmaW5lIHB0ZV9wZm4ocHRlKQkJKHB0
ZV92YWwocHRlKSA+PiBQQUdFX1NISUZUKQogCmRpZmYgLS1naXQgYS9hcmNoL202OGsvaW5jbHVk
ZS9hc20vbW90b3JvbGFfcGdhbGxvYy5oIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21vdG9yb2xh
X3BnYWxsb2MuaAppbmRleCBmM2NiNDUzYTA3YjcuLmI0ZmMzYjRmNmJiMyAxMDA2NDQKLS0tIGEv
YXJjaC9tNjhrL2luY2x1ZGUvYXNtL21vdG9yb2xhX3BnYWxsb2MuaAorKysgYi9hcmNoL202OGsv
aW5jbHVkZS9hc20vbW90b3JvbGFfcGdhbGxvYy5oCkBAIC04OCw3ICs4OCw3IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBwbWRfcG9wdWxhdGUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBtZF90ICpwbWQs
IHBndGFibGVfdCBwYWdlCiB7CiAJcG1kX3NldChwbWQsIHBhZ2UpOwogfQotI2RlZmluZSBwbWRf
cGd0YWJsZShwbWQpICgocGd0YWJsZV90KV9fcG1kX3BhZ2UocG1kKSkKKyNkZWZpbmUgcG1kX3Bn
dGFibGUocG1kKSAoKHBndGFibGVfdClwbWRfcGFnZV92YWRkcihwbWQpKQogCiBzdGF0aWMgaW5s
aW5lIHZvaWQgcHVkX3BvcHVsYXRlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwdWRfdCAqcHVkLCBw
bWRfdCAqcG1kKQogewpkaWZmIC0tZ2l0IGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21vdG9yb2xh
X3BndGFibGUuaCBiL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS9tb3Rvcm9sYV9wZ3RhYmxlLmgKaW5k
ZXggZTE1OTRhY2Y3YzdlLi4zNDVhYmY0ZDRlNTAgMTAwNjQ0Ci0tLSBhL2FyY2gvbTY4ay9pbmNs
dWRlL2FzbS9tb3Rvcm9sYV9wZ3RhYmxlLmgKKysrIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL21v
dG9yb2xhX3BndGFibGUuaApAQCAtMTI4LDcgKzEyOCw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBw
dWRfc2V0KHB1ZF90ICpwdWRwLCBwbWRfdCAqcG1kcCkKIH0KIAogI2RlZmluZSBfX3B0ZV9wYWdl
KHB0ZSkgKCh1bnNpZ25lZCBsb25nKV9fdmEocHRlX3ZhbChwdGUpICYgUEFHRV9NQVNLKSkKLSNk
ZWZpbmUgX19wbWRfcGFnZShwbWQpICgodW5zaWduZWQgbG9uZylfX3ZhKHBtZF92YWwocG1kKSAm
IF9UQUJMRV9NQVNLKSkKKyNkZWZpbmUgcG1kX3BhZ2VfdmFkZHIocG1kKSAoKHVuc2lnbmVkIGxv
bmcpX192YShwbWRfdmFsKHBtZCkgJiBfVEFCTEVfTUFTSykpCiAjZGVmaW5lIHB1ZF9wYWdlX3Zh
ZGRyKHB1ZCkgKCh1bnNpZ25lZCBsb25nKV9fdmEocHVkX3ZhbChwdWQpICYgX1RBQkxFX01BU0sp
KQogCiAKQEAgLTIxOCwxNSArMjE4LDYgQEAgc3RhdGljIGlubGluZSBwbWRfdCAqcG1kX29mZnNl
dChwdWRfdCAqZGlyLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCiAJcmV0dXJuIChwbWRfdCAqKXB1
ZF9wYWdlX3ZhZGRyKCpkaXIpICsgKChhZGRyZXNzID4+IFBNRF9TSElGVCkgJiAoUFRSU19QRVJf
UE1ELTEpKTsKIH0KIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUgdGhpcmQtbGV2ZWwgcGFnZSB0
YWJsZS4uICovCi1zdGF0aWMgaW5saW5lIHB0ZV90ICpwdGVfb2Zmc2V0X2tlcm5lbChwbWRfdCAq
cG1kcCwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQotewotCXJldHVybiAocHRlX3QgKilfX3BtZF9w
YWdlKCpwbWRwKSArICgoYWRkcmVzcyA+PiBQQUdFX1NISUZUKSAmIChQVFJTX1BFUl9QVEUgLSAx
KSk7Ci19Ci0KLSNkZWZpbmUgcHRlX29mZnNldF9tYXAocG1kcCxhZGRyZXNzKSAoKHB0ZV90ICop
X19wbWRfcGFnZSgqcG1kcCkgKyAoKChhZGRyZXNzKSA+PiBQQUdFX1NISUZUKSAmIChQVFJTX1BF
Ul9QVEUgLSAxKSkpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpCQkoKHZvaWQpMCkKLQogLyogRW5j
b2RlIGFuZCBkZS1jb2RlIGEgc3dhcCBlbnRyeSAobXVzdCBiZSAhcHRlX25vbmUoZSkgJiYgIXB0
ZV9wcmVzZW50KGUpKSAqLwogI2RlZmluZSBfX3N3cF90eXBlKHgpCQkoKCh4KS52YWwgPj4gNCkg
JiAweGZmKQogI2RlZmluZSBfX3N3cF9vZmZzZXQoeCkJCSgoeCkudmFsID4+IDEyKQpkaWZmIC0t
Z2l0IGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL3N1bjNfcGd0YWJsZS5oIGIvYXJjaC9tNjhrL2lu
Y2x1ZGUvYXNtL3N1bjNfcGd0YWJsZS5oCmluZGV4IDBjYWExOGEwODQzNy4uMTQxNGZjMzYzNzQz
IDEwMDY0NAotLS0gYS9hcmNoL202OGsvaW5jbHVkZS9hc20vc3VuM19wZ3RhYmxlLmgKKysrIGIv
YXJjaC9tNjhrL2luY2x1ZGUvYXNtL3N1bjNfcGd0YWJsZS5oCkBAIC0xMTIsOCArMTEyLDExIEBA
IHN0YXRpYyBpbmxpbmUgcHRlX3QgcHRlX21vZGlmeShwdGVfdCBwdGUsIHBncHJvdF90IG5ld3By
b3QpCiAKICNkZWZpbmUgX19wdGVfcGFnZShwdGUpIFwKICgodW5zaWduZWQgbG9uZykgX192YSAo
KHB0ZV92YWwgKHB0ZSkgJiBTVU4zX1BBR0VfUEdOVU1fTUFTSykgPDwgUEFHRV9TSElGVCkpCi0j
ZGVmaW5lIF9fcG1kX3BhZ2UocG1kKSBcCi0oKHVuc2lnbmVkIGxvbmcpIF9fdmEgKHBtZF92YWwg
KHBtZCkgJiBQQUdFX01BU0spKQorCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcG1kX3Bh
Z2VfdmFkZHIocG1kX3QgcG1kKQoreworCXJldHVybiAodW5zaWduZWQgbG9uZylfX3ZhKHBtZF92
YWwocG1kKSAmIFBBR0VfTUFTSyk7Cit9CiAKIHN0YXRpYyBpbmxpbmUgaW50IHB0ZV9ub25lIChw
dGVfdCBwdGUpIHsgcmV0dXJuICFwdGVfdmFsIChwdGUpOyB9CiBzdGF0aWMgaW5saW5lIGludCBw
dGVfcHJlc2VudCAocHRlX3QgcHRlKSB7IHJldHVybiBwdGVfdmFsIChwdGUpICYgU1VOM19QQUdF
X1ZBTElEOyB9CkBAIC0xMjcsNyArMTMwLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIHB0ZV9jbGVh
ciAoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkciwgcHRlX3QgKnAKICh7
IHB0ZV90IF9fcHRlOyBwdGVfdmFsKF9fcHRlKSA9IHBmbiB8IHBncHJvdF92YWwocGdwcm90KTsg
X19wdGU7IH0pCiAKICNkZWZpbmUgcHRlX3BhZ2UocHRlKQkJdmlydF90b19wYWdlKF9fcHRlX3Bh
Z2UocHRlKSkKLSNkZWZpbmUgcG1kX3BhZ2UocG1kKQkJdmlydF90b19wYWdlKF9fcG1kX3BhZ2Uo
cG1kKSkKKyNkZWZpbmUgcG1kX3BhZ2UocG1kKQkJdmlydF90b19wYWdlKHBtZF9wYWdlX3ZhZGRy
KHBtZCkpCiAKIAogc3RhdGljIGlubGluZSBpbnQgcG1kX25vbmUyIChwbWRfdCAqcG1kKSB7IHJl
dHVybiAhcG1kX3ZhbCAoKnBtZCk7IH0KQEAgLTE4MCwxMiArMTgzLDYgQEAgZXh0ZXJuIHBnZF90
IGtlcm5lbF9wZ19kaXJbUFRSU19QRVJfUEdEXTsKIC8qIEZpbmQgYW4gZW50cnkgaW4gYSBrZXJu
ZWwgcGFnZXRhYmxlIGRpcmVjdG9yeS4gKi8KICNkZWZpbmUgcGdkX29mZnNldF9rKGFkZHJlc3Mp
IHBnZF9vZmZzZXQoJmluaXRfbW0sIGFkZHJlc3MpCiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhl
IHRoaXJkLWxldmVsIHBhZ2V0YWJsZS4gKi8KLSNkZWZpbmUgcHRlX2luZGV4KGFkZHJlc3MpICgo
YWRkcmVzcyA+PiBQQUdFX1NISUZUKSAmIChQVFJTX1BFUl9QVEUtMSkpCi0jZGVmaW5lIHB0ZV9v
ZmZzZXRfa2VybmVsKHBtZCwgYWRkcmVzcykgKChwdGVfdCAqKSBfX3BtZF9wYWdlKCpwbWQpICsg
cHRlX2luZGV4KGFkZHJlc3MpKQotI2RlZmluZSBwdGVfb2Zmc2V0X21hcChwbWQsIGFkZHJlc3Mp
ICgocHRlX3QgKilwYWdlX2FkZHJlc3MocG1kX3BhZ2UoKnBtZCkpICsgcHRlX2luZGV4KGFkZHJl
c3MpKQotI2RlZmluZSBwdGVfdW5tYXAocHRlKSBkbyB7IH0gd2hpbGUgKDApCi0KIC8qIE1hY3Jv
cyB0byAoZGUpY29uc3RydWN0IHRoZSBmYWtlIFBURXMgcmVwcmVzZW50aW5nIHN3YXAgcGFnZXMu
ICovCiAjZGVmaW5lIF9fc3dwX3R5cGUoeCkJCSgoeCkudmFsICYgMHg3RikKICNkZWZpbmUgX19z
d3Bfb2Zmc2V0KHgpCQkoKCh4KS52YWwpID4+IDcpCmRpZmYgLS1naXQgYS9hcmNoL202OGsvbW0v
aW5pdC5jIGIvYXJjaC9tNjhrL21tL2luaXQuYwppbmRleCA2ZDMxNDc2NjJmZjIuLjUzMDQwODU3
YTllZCAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL21tL2luaXQuYworKysgYi9hcmNoL202OGsvbW0v
aW5pdC5jCkBAIC0xNDEsNyArMTQxLDcgQEAgc3RhdGljIGlubGluZSB2b2lkIGluaXRfcG9pbnRl
cl90YWJsZXModm9pZCkKIAkJCWlmICghcG1kX3ByZXNlbnQoKnBtZCkpCiAJCQkJY29udGludWU7
CiAKLQkJCXB0ZV9kaXIgPSAocHRlX3QgKilfX3BtZF9wYWdlKCpwbWQpOworCQkJcHRlX2RpciA9
IChwdGVfdCAqKXBtZF9wYWdlX3ZhZGRyKCpwbWQpOwogCQkJaW5pdF9wb2ludGVyX3RhYmxlKHB0
ZV9kaXIsIFRBQkxFX1BURSk7CiAJCX0KIAl9CmRpZmYgLS1naXQgYS9hcmNoL21pY3JvYmxhemUv
aW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3BndGFi
bGUuaAppbmRleCBlZTIxMTVhYmY0MDUuLmU1M2ViOTYyZmJlZCAxMDA2NDQKLS0tIGEvYXJjaC9t
aWNyb2JsYXplL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL21pY3JvYmxhemUvaW5j
bHVkZS9hc20vcGd0YWJsZS5oCkBAIC00MzgsNyArNDM4LDEwIEBAIHN0YXRpYyBpbmxpbmUgdm9p
ZCBwdGVwX21rZGlydHkoc3RydWN0IG1tX3N0cnVjdCAqbW0sCiAvKiBDb252ZXJ0IHBtZCBlbnRy
eSB0byBwYWdlICovCiAvKiBvdXIgcG1kIGVudHJ5IGlzIGFuIGVmZmVjdGl2ZSBhZGRyZXNzIG9m
IHB0ZSB0YWJsZSovCiAvKiByZXR1cm5zIGVmZmVjdGl2ZSBhZGRyZXNzIG9mIHRoZSBwbWQgZW50
cnkqLwotI2RlZmluZSBwbWRfcGFnZV9rZXJuZWwocG1kKQkoKHVuc2lnbmVkIGxvbmcpIChwbWRf
dmFsKHBtZCkgJiBQQUdFX01BU0spKQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHBtZF9w
YWdlX3ZhZGRyKHBtZF90IHBtZCkKK3sKKwlyZXR1cm4gKCh1bnNpZ25lZCBsb25nKSAocG1kX3Zh
bChwbWQpICYgUEFHRV9NQVNLKSk7Cit9CiAKIC8qIHJldHVybnMgc3RydWN0ICpwYWdlIG9mIHRo
ZSBwbWQgZW50cnkqLwogI2RlZmluZSBwbWRfcGFnZShwbWQpCShwZm5fdG9fcGFnZShfX3BhKHBt
ZF92YWwocG1kKSkgPj4gUEFHRV9TSElGVCkpCkBAIC00NTEsMTQgKzQ1NCw2IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBwdGVwX21rZGlydHkoc3RydWN0IG1tX3N0cnVjdCAqbW0sCiAjZGVmaW5lIHBn
ZF9vZmZzZXQobW0sIGFkZHJlc3MpCSAoKG1tKS0+cGdkICsgcGdkX2luZGV4KGFkZHJlc3MpKQog
CiAvKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRhYmxlLi4gKi8KLSNk
ZWZpbmUgcHRlX2luZGV4KGFkZHJlc3MpCQlcCi0JKCgoYWRkcmVzcykgPj4gUEFHRV9TSElGVCkg
JiAoUFRSU19QRVJfUFRFIC0gMSkpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpciwgYWRk
cikJXAotCSgocHRlX3QgKikgcG1kX3BhZ2Vfa2VybmVsKCooZGlyKSkgKyBwdGVfaW5kZXgoYWRk
cikpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpciwgYWRkcikJCVwKLQkoKHB0ZV90ICopIGtt
YXBfYXRvbWljKHBtZF9wYWdlKCooZGlyKSkpICsgcHRlX2luZGV4KGFkZHIpKQotCi0jZGVmaW5l
IHB0ZV91bm1hcChwdGUpCQlrdW5tYXBfYXRvbWljKHB0ZSkKIAogZXh0ZXJuIHBnZF90IHN3YXBw
ZXJfcGdfZGlyW1BUUlNfUEVSX1BHRF07CiAKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9pbmNsdWRl
L2FzbS9wZ3RhYmxlLTMyLmggYi9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS0zMi5oCmlu
ZGV4IDE5NDVjODk3MDE0MS4uYzA0YzUyMzgyNjFhIDEwMDY0NAotLS0gYS9hcmNoL21pcHMvaW5j
bHVkZS9hc20vcGd0YWJsZS0zMi5oCisrKyBiL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS9wZ3RhYmxl
LTMyLmgKQEAgLTIwNSwxOCArMjA1LDYgQEAgc3RhdGljIGlubGluZSBwdGVfdCBwZm5fcHRlKHVu
c2lnbmVkIGxvbmcgcGZuLCBwZ3Byb3RfdCBwcm90KQogLyogdG8gZmluZCBhbiBlbnRyeSBpbiBh
IHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAjZGVmaW5lIHBnZF9vZmZzZXQobW0sIGFkZHIpCSgo
bW0pLT5wZ2QgKyBwZ2RfaW5kZXgoYWRkcikpCiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHRo
aXJkLWxldmVsIHBhZ2UgdGFibGUuLiAqLwotI2RlZmluZSBfX3B0ZV9vZmZzZXQoYWRkcmVzcykJ
CQkJCQlcCi0JKCgoYWRkcmVzcykgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkp
Ci0jZGVmaW5lIHB0ZV9vZmZzZXQoZGlyLCBhZGRyZXNzKQkJCQkJXAotCSgocHRlX3QgKikgcG1k
X3BhZ2VfdmFkZHIoKihkaXIpKSArIF9fcHRlX29mZnNldChhZGRyZXNzKSkKLSNkZWZpbmUgcHRl
X29mZnNldF9rZXJuZWwoZGlyLCBhZGRyZXNzKQkJCQkJXAotCSgocHRlX3QgKikgcG1kX3BhZ2Vf
dmFkZHIoKihkaXIpKSArIF9fcHRlX29mZnNldChhZGRyZXNzKSkKLQotI2RlZmluZSBwdGVfb2Zm
c2V0X21hcChkaXIsIGFkZHJlc3MpCQkJCQlcCi0JKChwdGVfdCAqKXBhZ2VfYWRkcmVzcyhwbWRf
cGFnZSgqKGRpcikpKSArIF9fcHRlX29mZnNldChhZGRyZXNzKSkKLSNkZWZpbmUgcHRlX3VubWFw
KHB0ZSkgKCh2b2lkKShwdGUpKQotCiAjaWYgZGVmaW5lZChDT05GSUdfQ1BVX1IzS19UTEIpCiAK
IC8qIFN3YXAgZW50cmllcyBtdXN0IGhhdmUgVkFMSUQgYml0IGNsZWFyZWQuICovCmRpZmYgLS1n
aXQgYS9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oIGIvYXJjaC9taXBzL2luY2x1
ZGUvYXNtL3BndGFibGUtNjQuaAppbmRleCBlZTVkYzBjMTQ1YjkuLjQzMGFiYjE5Y2U4MiAxMDA2
NDQKLS0tIGEvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtNjQuaAorKysgYi9hcmNoL21p
cHMvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oCkBAIC0zNDQsMTcgKzM0NCw2IEBAIHN0YXRpYyBp
bmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3QgKiBwdWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVz
cykKIH0KICNlbmRpZgogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdl
IHRhYmxlLi4gKi8KLSNkZWZpbmUgX19wdGVfb2Zmc2V0KGFkZHJlc3MpCQkJCQkJXAotCSgoKGFk
ZHJlc3MpID4+IFBBR0VfU0hJRlQpICYgKFBUUlNfUEVSX1BURSAtIDEpKQotI2RlZmluZSBwdGVf
b2Zmc2V0KGRpciwgYWRkcmVzcykJCQkJCVwKLQkoKHB0ZV90ICopIHBtZF9wYWdlX3ZhZGRyKCoo
ZGlyKSkgKyBfX3B0ZV9vZmZzZXQoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVs
KGRpciwgYWRkcmVzcykJCQkJCVwKLQkoKHB0ZV90ICopIHBtZF9wYWdlX3ZhZGRyKCooZGlyKSkg
KyBfX3B0ZV9vZmZzZXQoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpciwgYWRk
cmVzcykJCQkJCVwKLQkoKHB0ZV90ICopcGFnZV9hZGRyZXNzKHBtZF9wYWdlKCooZGlyKSkpICsg
X19wdGVfb2Zmc2V0KGFkZHJlc3MpKQotI2RlZmluZSBwdGVfdW5tYXAocHRlKSAoKHZvaWQpKHB0
ZSkpCi0KIC8qCiAgKiBJbml0aWFsaXplIGEgbmV3IHBnZCAvIHBtZCB0YWJsZSB3aXRoIGludmFs
aWQgcG9pbnRlcnMuCiAgKi8KZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9rdm0vbW11LmMgYi9hcmNo
L21pcHMva3ZtL21tdS5jCmluZGV4IDdkYWQ3YTI5M2VhZS4uNDliZDE2MGY0ZDg1IDEwMDY0NAot
LS0gYS9hcmNoL21pcHMva3ZtL21tdS5jCisrKyBiL2FyY2gvbWlwcy9rdm0vbW11LmMKQEAgLTE2
OCw3ICsxNjgsNyBAQCBzdGF0aWMgcHRlX3QgKmt2bV9taXBzX3dhbGtfcGdkKHBnZF90ICpwZ2Qs
IHN0cnVjdCBrdm1fbW11X21lbW9yeV9jYWNoZSAqY2FjaGUsCiAJCWNsZWFyX3BhZ2UobmV3X3B0
ZSk7CiAJCXBtZF9wb3B1bGF0ZV9rZXJuZWwoTlVMTCwgcG1kLCBuZXdfcHRlKTsKIAl9Ci0JcmV0
dXJuIHB0ZV9vZmZzZXQocG1kLCBhZGRyKTsKKwlyZXR1cm4gcHRlX29mZnNldF9rZXJuZWwocG1k
LCBhZGRyKTsKIH0KIAogLyogQ2FsbGVyIG11c3QgaG9sZCBrdm0tPm1tX2xvY2sgKi8KQEAgLTE4
Nyw4ICsxODcsOCBAQCBzdGF0aWMgcHRlX3QgKmt2bV9taXBzX3B0ZV9mb3JfZ3BhKHN0cnVjdCBr
dm0gKmt2bSwKIHN0YXRpYyBib29sIGt2bV9taXBzX2ZsdXNoX2dwYV9wdGUocHRlX3QgKnB0ZSwg
dW5zaWduZWQgbG9uZyBzdGFydF9ncGEsCiAJCQkJICAgdW5zaWduZWQgbG9uZyBlbmRfZ3BhKQog
ewotCWludCBpX21pbiA9IF9fcHRlX29mZnNldChzdGFydF9ncGEpOwotCWludCBpX21heCA9IF9f
cHRlX29mZnNldChlbmRfZ3BhKTsKKwlpbnQgaV9taW4gPSBwdGVfaW5kZXgoc3RhcnRfZ3BhKTsK
KwlpbnQgaV9tYXggPSBwdGVfaW5kZXgoZW5kX2dwYSk7CiAJYm9vbCBzYWZlX3RvX3JlbW92ZSA9
IChpX21pbiA9PSAwICYmIGlfbWF4ID09IFBUUlNfUEVSX1BURSAtIDEpOwogCWludCBpOwogCkBA
IC0yMTUsNyArMjE1LDcgQEAgc3RhdGljIGJvb2wga3ZtX21pcHNfZmx1c2hfZ3BhX3BtZChwbWRf
dCAqcG1kLCB1bnNpZ25lZCBsb25nIHN0YXJ0X2dwYSwKIAkJaWYgKCFwbWRfcHJlc2VudChwbWRb
aV0pKQogCQkJY29udGludWU7CiAKLQkJcHRlID0gcHRlX29mZnNldChwbWQgKyBpLCAwKTsKKwkJ
cHRlID0gcHRlX29mZnNldF9rZXJuZWwocG1kICsgaSwgMCk7CiAJCWlmIChpID09IGlfbWF4KQog
CQkJZW5kID0gZW5kX2dwYTsKIApAQCAtMzEyLDggKzMxMiw4IEBAIHN0YXRpYyBpbnQga3ZtX21p
cHNfIyNuYW1lIyNfcHRlKHB0ZV90ICpwdGUsIHVuc2lnbmVkIGxvbmcgc3RhcnQsCVwKIAkJCQkg
dW5zaWduZWQgbG9uZyBlbmQpCQkJXAogewkJCQkJCQkJCVwKIAlpbnQgcmV0ID0gMDsJCQkJCQkJ
XAotCWludCBpX21pbiA9IF9fcHRlX29mZnNldChzdGFydCk7CQkJCVwKLQlpbnQgaV9tYXggPSBf
X3B0ZV9vZmZzZXQoZW5kKTsJCQkJCVwKKwlpbnQgaV9taW4gPSBwdGVfaW5kZXgoc3RhcnQpOwkJ
CQlcCisJaW50IGlfbWF4ID0gcHRlX2luZGV4KGVuZCk7CQkJCQlcCiAJaW50IGk7CQkJCQkJCQlc
CiAJcHRlX3Qgb2xkLCBuZXc7CQkJCQkJCVwKIAkJCQkJCQkJCVwKQEAgLTM0Niw3ICszNDYsNyBA
QCBzdGF0aWMgaW50IGt2bV9taXBzXyMjbmFtZSMjX3BtZChwbWRfdCAqcG1kLCB1bnNpZ25lZCBs
b25nIHN0YXJ0LAlcCiAJCWlmICghcG1kX3ByZXNlbnQocG1kW2ldKSkJCQkJXAogCQkJY29udGlu
dWU7CQkJCQlcCiAJCQkJCQkJCQlcCi0JCXB0ZSA9IHB0ZV9vZmZzZXQocG1kICsgaSwgMCk7CQkJ
CVwKKwkJcHRlID0gcHRlX29mZnNldF9rZXJuZWwocG1kICsgaSwgMCk7CQkJCVwKIAkJaWYgKGkg
PT0gaV9tYXgpCQkJCQkJXAogCQkJY3VyX2VuZCA9IGVuZDsJCQkJCVwKIAkJCQkJCQkJCVwKQEAg
LTg0Miw4ICs4NDIsOCBAQCB2b2lkIGt2bV90cmFwX2VtdWxfaW52YWxpZGF0ZV9ndmEoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIGFkZHIsCiBzdGF0aWMgYm9vbCBrdm1fbWlw
c19mbHVzaF9ndmFfcHRlKHB0ZV90ICpwdGUsIHVuc2lnbmVkIGxvbmcgc3RhcnRfZ3ZhLAogCQkJ
CSAgIHVuc2lnbmVkIGxvbmcgZW5kX2d2YSkKIHsKLQlpbnQgaV9taW4gPSBfX3B0ZV9vZmZzZXQo
c3RhcnRfZ3ZhKTsKLQlpbnQgaV9tYXggPSBfX3B0ZV9vZmZzZXQoZW5kX2d2YSk7CisJaW50IGlf
bWluID0gcHRlX2luZGV4KHN0YXJ0X2d2YSk7CisJaW50IGlfbWF4ID0gcHRlX2luZGV4KGVuZF9n
dmEpOwogCWJvb2wgc2FmZV90b19yZW1vdmUgPSAoaV9taW4gPT0gMCAmJiBpX21heCA9PSBQVFJT
X1BFUl9QVEUgLSAxKTsKIAlpbnQgaTsKIApAQCAtODc3LDcgKzg3Nyw3IEBAIHN0YXRpYyBib29s
IGt2bV9taXBzX2ZsdXNoX2d2YV9wbWQocG1kX3QgKnBtZCwgdW5zaWduZWQgbG9uZyBzdGFydF9n
dmEsCiAJCWlmICghcG1kX3ByZXNlbnQocG1kW2ldKSkKIAkJCWNvbnRpbnVlOwogCi0JCXB0ZSA9
IHB0ZV9vZmZzZXQocG1kICsgaSwgMCk7CisJCXB0ZSA9IHB0ZV9vZmZzZXRfa2VybmVsKHBtZCAr
IGksIDApOwogCQlpZiAoaSA9PSBpX21heCkKIAkJCWVuZCA9IGVuZF9ndmE7CiAKZGlmZiAtLWdp
dCBhL2FyY2gvbWlwcy9rdm0vdHJhcF9lbXVsLmMgYi9hcmNoL21pcHMva3ZtL3RyYXBfZW11bC5j
CmluZGV4IDVhMTFlODNkZmZlNi4uNjA3NjNlZmE3MjNlIDEwMDY0NAotLS0gYS9hcmNoL21pcHMv
a3ZtL3RyYXBfZW11bC5jCisrKyBiL2FyY2gvbWlwcy9rdm0vdHJhcF9lbXVsLmMKQEAgLTU5NCw3
ICs1OTQsNyBAQCBzdGF0aWMgdm9pZCBrdm1fbWlwc19lbXVsX2ZyZWVfZ3ZhX3B0KHBnZF90ICpw
Z2QpCiAJCQkJcG1kX3ZhID0gcHVkX3ZhIHwgKGsgPDwgUE1EX1NISUZUKTsKIAkJCQlpZiAocG1k
X3ZhID49IGVuZCkKIAkJCQkJYnJlYWs7Ci0JCQkJcHRlID0gcHRlX29mZnNldChwbWQgKyBrLCAw
KTsKKwkJCQlwdGUgPSBwdGVfb2Zmc2V0X2tlcm5lbChwbWQgKyBrLCAwKTsKIAkJCQlwdGVfZnJl
ZV9rZXJuZWwoTlVMTCwgcHRlKTsKIAkJCX0KIAkJCXBtZF9mcmVlKE5VTEwsIHBtZCk7CmRpZmYg
LS1naXQgYS9hcmNoL25kczMyL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvbmRzMzIvaW5j
bHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IDk1Yzc1MjgyY2I0Ny4uZmM5NzQ4MGNiZGQ1IDEwMDY0
NAotLS0gYS9hcmNoL25kczMyL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL25kczMy
L2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtMTg2LDE0ICsxODYsMTAgQEAgZXh0ZXJuIHZvaWQg
cGFnaW5nX2luaXQodm9pZCk7CiAjZGVmaW5lIHB0ZV9jbGVhcihtbSxhZGRyLHB0ZXApCXNldF9w
dGVfYXQoKG1tKSwoYWRkciksKHB0ZXApLCBfX3B0ZSgwKSkKICNkZWZpbmUgcHRlX3BhZ2UocHRl
KQkJKHBmbl90b19wYWdlKHB0ZV9wZm4ocHRlKSkpCiAKLSNkZWZpbmUgcHRlX2luZGV4KGFkZHJl
c3MpICAgICAgICAgICAgICAgICAgICgoKGFkZHJlc3MpID4+IFBBR0VfU0hJRlQpICYgKFBUUlNf
UEVSX1BURSAtIDEpKQotI2RlZmluZSBwdGVfb2Zmc2V0X2tlcm5lbChkaXIsIGFkZHJlc3MpCSAg
ICAgKChwdGVfdCAqKXBtZF9wYWdlX2tlcm5lbCgqKGRpcikpICsgcHRlX2luZGV4KGFkZHJlc3Mp
KQotI2RlZmluZSBwdGVfb2Zmc2V0X21hcChkaXIsIGFkZHJlc3MpCSAgICAgKChwdGVfdCAqKXBh
Z2VfYWRkcmVzcyhwbWRfcGFnZSgqKGRpcikpKSArIHB0ZV9pbmRleChhZGRyZXNzKSkKLSNkZWZp
bmUgcHRlX29mZnNldF9tYXBfbmVzdGVkKGRpciwgYWRkcmVzcykgIHB0ZV9vZmZzZXRfbWFwKGRp
ciwgYWRkcmVzcykKLSNkZWZpbmUgcG1kX3BhZ2Vfa2VybmVsKHBtZCkJICAJICAgICAoKHVuc2ln
bmVkIGxvbmcpIF9fdmEocG1kX3ZhbChwbWQpICYgUEFHRV9NQVNLKSkKLQotI2RlZmluZSBwdGVf
dW5tYXAocHRlKQkJZG8geyB9IHdoaWxlICgwKQotI2RlZmluZSBwdGVfdW5tYXBfbmVzdGVkKHB0
ZSkJZG8geyB9IHdoaWxlICgwKQorc3RhdGljIHVuc2lnbmVkIGxvbmcgcG1kX3BhZ2VfdmFkZHIo
cG1kX3QgcG1kKQoreworCXJldHVybiAoKHVuc2lnbmVkIGxvbmcpIF9fdmEocG1kX3ZhbChwbWQp
ICYgUEFHRV9NQVNLKSk7Cit9CiAKICNkZWZpbmUgc2V0X3B0ZV9hdChtbSxhZGRyLHB0ZXAscHRl
dmFsKSBzZXRfcHRlKHB0ZXAscHRldmFsKQogLyoKZGlmZiAtLWdpdCBhL2FyY2gvbmlvczIvaW5j
bHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKaW5k
ZXggZjBkNDkyMWQwNWFkLi5lOTNlMTdjYWY5NjUgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIvaW5j
bHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvbmlvczIvaW5jbHVkZS9hc20vcGd0YWJsZS5o
CkBAIC0yMzYsMjcgKzIzNiwyMSBAQCBzdGF0aWMgaW5saW5lIHZvaWQgcHRlX2NsZWFyKHN0cnVj
dCBtbV9zdHJ1Y3QgKm1tLAogICovCiAjZGVmaW5lIG1rX3B0ZShwYWdlLCBwcm90KQkocGZuX3B0
ZShwYWdlX3RvX3BmbihwYWdlKSwgcHJvdCkpCiAKLSNkZWZpbmUgcHRlX3VubWFwKHB0ZSkJZG8g
eyB9IHdoaWxlICgwKQotCiAvKgogICogQ29udmVyc2lvbiBmdW5jdGlvbnM6IGNvbnZlcnQgYSBw
YWdlIGFuZCBwcm90ZWN0aW9uIHRvIGEgcGFnZSBlbnRyeSwKICAqIGFuZCBhIHBhZ2UgZW50cnkg
YW5kIHBhZ2UgZGlyZWN0b3J5IHRvIHRoZSBwYWdlIHRoZXkgcmVmZXIgdG8uCiAgKi8KICNkZWZp
bmUgcG1kX3BoeXMocG1kKQkJdmlydF90b19waHlzKCh2b2lkICopcG1kX3ZhbChwbWQpKQogI2Rl
ZmluZSBwbWRfcGFnZShwbWQpCQkocGZuX3RvX3BhZ2UocG1kX3BoeXMocG1kKSA+PiBQQUdFX1NI
SUZUKSkKLSNkZWZpbmUgcG1kX3BhZ2VfdmFkZHIocG1kKQlwbWRfdmFsKHBtZCkKIAotI2RlZmlu
ZSBwdGVfb2Zmc2V0X21hcChkaXIsIGFkZHIpCQkJXAotCSgocHRlX3QgKikgcGFnZV9hZGRyZXNz
KHBtZF9wYWdlKCpkaXIpKSArCVwKLQkgKCgoYWRkcikgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19Q
RVJfUFRFIC0gMSkpKQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHBtZF9wYWdlX3ZhZGRy
KHBtZF90IHBtZCkKK3sKKwlyZXR1cm4gcG1kX3ZhbChwbWQpOworfQogCiAvKiB0byBmaW5kIGFu
IGVudHJ5IGluIGEga2VybmVsIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAjZGVmaW5lIHBnZF9v
ZmZzZXRfayhhZGRyKQlwZ2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyKQogCi0vKiBHZXQgdGhlIGFk
ZHJlc3MgdG8gdGhlIFBURSBmb3IgYSB2YWRkciBpbiBzcGVjaWZpYyBkaXJlY3RvcnkgKi8KLSNk
ZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGlyLCBhZGRyKQkJCVwKLQkoKHB0ZV90ICopIHBtZF9w
YWdlX3ZhZGRyKCooZGlyKSkgKwkJXAotCSAoKChhZGRyKSA+PiBQQUdFX1NISUZUKSAmIChQVFJT
X1BFUl9QVEUgLSAxKSkpCiAKICNkZWZpbmUgcHRlX0VSUk9SKGUpIFwKIAlwcl9lcnIoIiVzOiVk
OiBiYWQgcHRlICUwOGx4LlxuIiwgXApkaWZmIC0tZ2l0IGEvYXJjaC9vcGVucmlzYy9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmggYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRl
eCBmNDI3M2QzODcyNDMuLjdkZTA2MTMwNGI2ZCAxMDA2NDQKLS0tIGEvYXJjaC9vcGVucmlzYy9p
bmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9wZ3Rh
YmxlLmgKQEAgLTM2Myw3ICszNjMsMTEgQEAgc3RhdGljIGlubGluZSB2b2lkIHBtZF9zZXQocG1k
X3QgKnBtZHAsIHB0ZV90ICpwdGVwKQogfQogCiAjZGVmaW5lIHBtZF9wYWdlKHBtZCkJCShwZm5f
dG9fcGFnZShwbWRfdmFsKHBtZCkgPj4gUEFHRV9TSElGVCkpCi0jZGVmaW5lIHBtZF9wYWdlX2tl
cm5lbChwbWQpICAgICgodW5zaWduZWQgbG9uZykgX192YShwbWRfdmFsKHBtZCkgJiBQQUdFX01B
U0spKQorCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcG1kX3BhZ2VfdmFkZHIocG1kX3Qg
cG1kKQoreworCXJldHVybiAoKHVuc2lnbmVkIGxvbmcpIF9fdmEocG1kX3ZhbChwbWQpICYgUEFH
RV9NQVNLKSk7Cit9CiAKIC8qIHRvIGZpbmQgYW4gZW50cnkgaW4gYSBwYWdlLXRhYmxlLWRpcmVj
dG9yeS4gKi8KICNkZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpICAgICAgKChhZGRyZXNzID4+IFBH
RElSX1NISUZUKSAmIChQVFJTX1BFUl9QR0QtMSkpCkBAIC0zNzgsMjMgKzM4Miw2IEBAIHN0YXRp
YyBpbmxpbmUgdm9pZCBwbWRfc2V0KHBtZF90ICpwbWRwLCBwdGVfdCAqcHRlcCkKICNkZWZpbmUg
X19wbWRfb2Zmc2V0KGFkZHJlc3MpIFwKIAkoKChhZGRyZXNzKSA+PiBQTURfU0hJRlQpICYgKFBU
UlNfUEVSX1BNRC0xKSkKIAotLyoKLSAqIHRoZSBwdGUgcGFnZSBjYW4gYmUgdGhvdWdodCBvZiBh
biBhcnJheSBsaWtlIHRoaXM6IHB0ZV90W1BUUlNfUEVSX1BURV0KLSAqCi0gKiB0aGlzIG1hY3Jv
IHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBlbnRyeSBpbiB0aGUgcHRlIHBhZ2Ugd2hpY2ggd291
bGQKLSAqIGNvbnRyb2wgdGhlIGdpdmVuIHZpcnR1YWwgYWRkcmVzcwotICovCi0jZGVmaW5lIF9f
cHRlX29mZnNldChhZGRyZXNzKSAgICAgICAgICAgICAgICAgICBcCi0JKCgoYWRkcmVzcykgPj4g
UEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2Vy
bmVsKGRpciwgYWRkcmVzcykgICAgICAgICBcCi0JKChwdGVfdCAqKSBwbWRfcGFnZV9rZXJuZWwo
KihkaXIpKSArICBfX3B0ZV9vZmZzZXQoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFw
KGRpciwgYWRkcmVzcykJICAgICAgICBcCi0JKChwdGVfdCAqKXBhZ2VfYWRkcmVzcyhwbWRfcGFn
ZSgqKGRpcikpKSArIF9fcHRlX29mZnNldChhZGRyZXNzKSkKLSNkZWZpbmUgcHRlX29mZnNldF9t
YXBfbmVzdGVkKGRpciwgYWRkcmVzcykgICAgIFwKLQlwdGVfb2Zmc2V0X21hcChkaXIsIGFkZHJl
c3MpCi0KLSNkZWZpbmUgcHRlX3VubWFwKHB0ZSkgICAgICAgICAgZG8geyB9IHdoaWxlICgwKQot
I2RlZmluZSBwdGVfdW5tYXBfbmVzdGVkKHB0ZSkgICBkbyB7IH0gd2hpbGUgKDApCiAjZGVmaW5l
IHB0ZV9wZm4oeCkJCSgodW5zaWduZWQgbG9uZykoKCh4KS5wdGUpKSA+PiBQQUdFX1NISUZUKQog
I2RlZmluZSBwZm5fcHRlKHBmbiwgcHJvdCkgIF9fcHRlKCgoKHBmbikgPDwgUEFHRV9TSElGVCkp
IHwgcGdwcm90X3ZhbChwcm90KSkKIApkaWZmIC0tZ2l0IGEvYXJjaC9wYXJpc2MvaW5jbHVkZS9h
c20vcGd0YWJsZS5oIGIvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IGMx
ZWI1YTg5YjVlNS4uM2ViMzQ5NTNiNjBhIDEwMDY0NAotLS0gYS9hcmNoL3BhcmlzYy9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBA
IC00MjksNyArNDI5LDEwIEBAIHN0YXRpYyBpbmxpbmUgcHRlX3QgcHRlX21vZGlmeShwdGVfdCBw
dGUsIHBncHJvdF90IG5ld3Byb3QpCiAKICNkZWZpbmUgcHRlX3BhZ2UocHRlKQkJKHBmbl90b19w
YWdlKHB0ZV9wZm4ocHRlKSkpCiAKLSNkZWZpbmUgcG1kX3BhZ2VfdmFkZHIocG1kKQkoKHVuc2ln
bmVkIGxvbmcpIF9fdmEocG1kX2FkZHJlc3MocG1kKSkpCitzdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGxvbmcgcG1kX3BhZ2VfdmFkZHIocG1kX3QgcG1kKQoreworCXJldHVybiAoKHVuc2lnbmVkIGxv
bmcpIF9fdmEocG1kX2FkZHJlc3MocG1kKSkpOworfQogCiAjZGVmaW5lIF9fcG1kX3BhZ2UocG1k
KSAoKHVuc2lnbmVkIGxvbmcpIF9fdmEocG1kX2FkZHJlc3MocG1kKSkpCiAjZGVmaW5lIHBtZF9w
YWdlKHBtZCkJdmlydF90b19wYWdlKCh2b2lkICopX19wbWRfcGFnZShwbWQpKQpAQCAtNDUzLDE2
ICs0NTYsNiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90IHB0ZV9tb2RpZnkocHRlX3QgcHRlLCBwZ3By
b3RfdCBuZXdwcm90KQogI2RlZmluZSBwbWRfb2Zmc2V0KGRpcixhZGRyKSAoKHBtZF90ICopIGRp
cikKICNlbmRpZgogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRh
YmxlLi4gKi8gCi0jZGVmaW5lIHB0ZV9pbmRleChhZGRyZXNzKSAoKChhZGRyZXNzKSA+PiBQQUdF
X1NISUZUKSAmIChQVFJTX1BFUl9QVEUtMSkpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKHBt
ZCwgYWRkcmVzcykgXAotCSgocHRlX3QgKikgcG1kX3BhZ2VfdmFkZHIoKihwbWQpKSArIHB0ZV9p
bmRleChhZGRyZXNzKSkKLSNkZWZpbmUgcHRlX29mZnNldF9tYXAocG1kLCBhZGRyZXNzKSBwdGVf
b2Zmc2V0X2tlcm5lbChwbWQsIGFkZHJlc3MpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpIGRvIHsg
fSB3aGlsZSAoMCkKLQotI2RlZmluZSBwdGVfdW5tYXAocHRlKQkJCWRvIHsgfSB3aGlsZSAoMCkK
LSNkZWZpbmUgcHRlX3VubWFwX25lc3RlZChwdGUpCQlkbyB7IH0gd2hpbGUgKDApCi0KIGV4dGVy
biB2b2lkIHBhZ2luZ19pbml0ICh2b2lkKTsKIAogLyogVXNlZCBmb3IgZGVmZXJyaW5nIGNhbGxz
IHRvIGZsdXNoX2RjYWNoZV9wYWdlKCkgKi8KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNs
dWRlL2FzbS9ib29rM3MvMzIvcGd0YWJsZS5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jv
b2szcy8zMi9wZ3RhYmxlLmgKaW5kZXggNjA1MmI3MjIxNmE2Li5mYzU0MjI3MzYzYjUgMTAwNjQ0
Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvMzIvcGd0YWJsZS5oCisrKyBi
L2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvMzIvcGd0YWJsZS5oCkBAIC0xMTIsNiAr
MTEyLDkgQEAgc3RhdGljIGlubGluZSBib29sIHB0ZV91c2VyKHB0ZV90IHB0ZSkKICNkZWZpbmUg
UE1EX1RBQkxFX1NJWkUJMAogI2RlZmluZSBQVURfVEFCTEVfU0laRQkwCiAjZGVmaW5lIFBHRF9U
QUJMRV9TSVpFCShzaXplb2YocGdkX3QpIDw8IFBHRF9JTkRFWF9TSVpFKQorCisvKiBCaXRzIHRv
IG1hc2sgb3V0IGZyb20gYSBQTUQgdG8gZ2V0IHRvIHRoZSBQVEUgcGFnZSAqLworI2RlZmluZSBQ
TURfTUFTS0VEX0JJVFMJCShQVEVfVEFCTEVfU0laRSAtIDEpCiAjZW5kaWYJLyogX19BU1NFTUJM
WV9fICovCiAKICNkZWZpbmUgUFRSU19QRVJfUFRFCSgxIDw8IFBURV9JTkRFWF9TSVpFKQpAQCAt
MzQ4LDggKzM1MSw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3B0ZXBfc2V0X2FjY2Vzc19mbGFn
cyhzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKICNkZWZpbmUgX19IQVZFX0FSQ0hfUFRFX1NB
TUUKICNkZWZpbmUgcHRlX3NhbWUoQSxCKQkoKChwdGVfdmFsKEEpIF4gcHRlX3ZhbChCKSkgJiB+
X1BBR0VfSEFTSFBURSkgPT0gMCkKIAotI2RlZmluZSBwbWRfcGFnZV92YWRkcihwbWQpCVwKLQko
KHVuc2lnbmVkIGxvbmcpX192YShwbWRfdmFsKHBtZCkgJiB+KFBURV9UQUJMRV9TSVpFIC0gMSkp
KQogI2RlZmluZSBwbWRfcGFnZShwbWQpCQlcCiAJcGZuX3RvX3BhZ2UocG1kX3ZhbChwbWQpID4+
IFBBR0VfU0hJRlQpCiAKQEAgLTM2MCwxNCArMzYxLDYgQEAgc3RhdGljIGlubGluZSB2b2lkIF9f
cHRlcF9zZXRfYWNjZXNzX2ZsYWdzKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAogI2RlZmlu
ZSBwZ2RfaW5kZXgoYWRkcmVzcykJICgoYWRkcmVzcykgPj4gUEdESVJfU0hJRlQpCiAjZGVmaW5l
IHBnZF9vZmZzZXQobW0sIGFkZHJlc3MpCSAoKG1tKS0+cGdkICsgcGdkX2luZGV4KGFkZHJlc3Mp
KQogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRhYmxlLi4gKi8K
LSNkZWZpbmUgcHRlX2luZGV4KGFkZHJlc3MpCQlcCi0JKCgoYWRkcmVzcykgPj4gUEFHRV9TSElG
VCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpciwg
YWRkcikJXAotCSgocHRlX3QgKikgcG1kX3BhZ2VfdmFkZHIoKihkaXIpKSArIHB0ZV9pbmRleChh
ZGRyKSkKLSNkZWZpbmUgcHRlX29mZnNldF9tYXAoZGlyLCBhZGRyKQlwdGVfb2Zmc2V0X2tlcm5l
bCgoZGlyKSwgKGFkZHIpKQotc3RhdGljIGlubGluZSB2b2lkIHB0ZV91bm1hcChwdGVfdCAqcHRl
KSB7IH0KLQogLyoKICAqIEVuY29kZSBhbmQgZGVjb2RlIGEgc3dhcCBlbnRyeS4KICAqIE5vdGUg
dGhhdCB0aGUgYml0cyB3ZSB1c2UgaW4gYSBQVEUgZm9yIHJlcHJlc2VudGluZyBhIHN3YXAgZW50
cnkKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJs
ZS5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmgKaW5kZXgg
ZDE3YmMzZmY4MjBmLi4wYTk2ODA3NGVhZTUgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNs
dWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2Fz
bS9ib29rM3MvNjQvcGd0YWJsZS5oCkBAIC0xMDA1LDE0ICsxMDA1LDEyIEBAIGV4dGVybiBzdHJ1
Y3QgcGFnZSAqcDRkX3BhZ2UocDRkX3QgcDRkKTsKIC8qIFBvaW50ZXJzIGluIHRoZSBwYWdlIHRh
YmxlIHRyZWUgYXJlIHBoeXNpY2FsIGFkZHJlc3NlcyAqLwogI2RlZmluZSBfX3BndGFibGVfcHRy
X3ZhbChwdHIpCV9fcGEocHRyKQogCi0jZGVmaW5lIHBtZF9wYWdlX3ZhZGRyKHBtZCkJX192YShw
bWRfdmFsKHBtZCkgJiB+UE1EX01BU0tFRF9CSVRTKQogI2RlZmluZSBwdWRfcGFnZV92YWRkcihw
dWQpCV9fdmEocHVkX3ZhbChwdWQpICYgflBVRF9NQVNLRURfQklUUykKICNkZWZpbmUgcDRkX3Bh
Z2VfdmFkZHIocDRkKQlfX3ZhKHA0ZF92YWwocDRkKSAmIH5QNERfTUFTS0VEX0JJVFMpCiAKICNk
ZWZpbmUgcGdkX2luZGV4KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IChQR0RJUl9TSElGVCkpICYg
KFBUUlNfUEVSX1BHRCAtIDEpKQogI2RlZmluZSBwdWRfaW5kZXgoYWRkcmVzcykgKCgoYWRkcmVz
cykgPj4gKFBVRF9TSElGVCkpICYgKFBUUlNfUEVSX1BVRCAtIDEpKQogI2RlZmluZSBwbWRfaW5k
ZXgoYWRkcmVzcykgKCgoYWRkcmVzcykgPj4gKFBNRF9TSElGVCkpICYgKFBUUlNfUEVSX1BNRCAt
IDEpKQotI2RlZmluZSBwdGVfaW5kZXgoYWRkcmVzcykgKCgoYWRkcmVzcykgPj4gKFBBR0VfU0hJ
RlQpKSAmIChQVFJTX1BFUl9QVEUgLSAxKSkKIAogLyoKICAqIEZpbmQgYW4gZW50cnkgaW4gYSBw
YWdlLXRhYmxlLWRpcmVjdG9yeS4gIFdlIGNvbWJpbmUgdGhlIGFkZHJlc3MgcmVnaW9uCkBAIC0x
MDI1LDEyICsxMDIzLDYgQEAgZXh0ZXJuIHN0cnVjdCBwYWdlICpwNGRfcGFnZShwNGRfdCBwNGQp
OwogCSgoKHB1ZF90ICopIHA0ZF9wYWdlX3ZhZGRyKCoocDRkcCkpKSArIHB1ZF9pbmRleChhZGRy
KSkKICNkZWZpbmUgcG1kX29mZnNldChwdWRwLGFkZHIpIFwKIAkoKChwbWRfdCAqKSBwdWRfcGFn
ZV92YWRkcigqKHB1ZHApKSkgKyBwbWRfaW5kZXgoYWRkcikpCi0jZGVmaW5lIHB0ZV9vZmZzZXRf
a2VybmVsKGRpcixhZGRyKSBcCi0JKCgocHRlX3QgKikgcG1kX3BhZ2VfdmFkZHIoKihkaXIpKSkg
KyBwdGVfaW5kZXgoYWRkcikpCi0KLSNkZWZpbmUgcHRlX29mZnNldF9tYXAoZGlyLGFkZHIpCXB0
ZV9vZmZzZXRfa2VybmVsKChkaXIpLCAoYWRkcikpCi0KLXN0YXRpYyBpbmxpbmUgdm9pZCBwdGVf
dW5tYXAocHRlX3QgKnB0ZSkgeyB9CiAKIC8qIHRvIGZpbmQgYW4gZW50cnkgaW4gYSBrZXJuZWwg
cGFnZS10YWJsZS1kaXJlY3RvcnkgKi8KIC8qIFRoaXMgbm93IG9ubHkgY29udGFpbnMgdGhlIHZt
YWxsb2MgcGFnZXMgKi8KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hh
c2gvMzIvcGd0YWJsZS5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC8zMi9wZ3Rh
YmxlLmgKaW5kZXggM2QwYmM5OWRkNTIwLi5jYzJlZDA4ZDY0MjQgMTAwNjQ0Ci0tLSBhL2FyY2gv
cG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJw
Yy9pbmNsdWRlL2FzbS9ub2hhc2gvMzIvcGd0YWJsZS5oCkBAIC0yOSw2ICsyOSw4IEBAIGV4dGVy
biBpbnQgaWNhY2hlXzQ0eF9uZWVkX2ZsdXNoOwogI2RlZmluZSBQTURfVEFCTEVfU0laRQkwCiAj
ZGVmaW5lIFBVRF9UQUJMRV9TSVpFCTAKICNkZWZpbmUgUEdEX1RBQkxFX1NJWkUJKHNpemVvZihw
Z2RfdCkgPDwgUEdEX0lOREVYX1NJWkUpCisKKyNkZWZpbmUgUE1EX01BU0tFRF9CSVRTIChQVEVf
VEFCTEVfU0laRSAtIDEpCiAjZW5kaWYJLyogX19BU1NFTUJMWV9fICovCiAKICNkZWZpbmUgUFRS
U19QRVJfUFRFCSgxIDw8IFBURV9JTkRFWF9TSVpFKQpAQCAtMzQ3LDggKzM0OSw2IEBAIHN0YXRp
YyBpbmxpbmUgaW50IHB0ZV95b3VuZyhwdGVfdCBwdGUpCiAgKiBvZiB0aGUgcHRlIHBhZ2UuICAt
LSBwYXVsdXMKICAqLwogI2lmbmRlZiBDT05GSUdfQk9PS0UKLSNkZWZpbmUgcG1kX3BhZ2VfdmFk
ZHIocG1kKQlcCi0JKCh1bnNpZ25lZCBsb25nKV9fdmEocG1kX3ZhbChwbWQpICYgfihQVEVfVEFC
TEVfU0laRSAtIDEpKSkKICNkZWZpbmUgcG1kX3BhZ2UocG1kKQkJXAogCXBmbl90b19wYWdlKHBt
ZF92YWwocG1kKSA+PiBQQUdFX1NISUZUKQogI2Vsc2UKQEAgLTM2NSwxNSArMzY1LDYgQEAgc3Rh
dGljIGlubGluZSBpbnQgcHRlX3lvdW5nKHB0ZV90IHB0ZSkKICNkZWZpbmUgcGdkX2luZGV4KGFk
ZHJlc3MpCSAoKGFkZHJlc3MpID4+IFBHRElSX1NISUZUKQogI2RlZmluZSBwZ2Rfb2Zmc2V0KG1t
LCBhZGRyZXNzKQkgKChtbSktPnBnZCArIHBnZF9pbmRleChhZGRyZXNzKSkKIAotLyogRmluZCBh
biBlbnRyeSBpbiB0aGUgdGhpcmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCi0jZGVmaW5lIHB0ZV9p
bmRleChhZGRyZXNzKQkJXAotCSgoKGFkZHJlc3MpID4+IFBBR0VfU0hJRlQpICYgKFBUUlNfUEVS
X1BURSAtIDEpKQotI2RlZmluZSBwdGVfb2Zmc2V0X2tlcm5lbChkaXIsIGFkZHIpCVwKLQkocG1k
X2JhZCgqKGRpcikpID8gTlVMTCA6IChwdGVfdCAqKXBtZF9wYWdlX3ZhZGRyKCooZGlyKSkgKyBc
Ci0JCQkJICBwdGVfaW5kZXgoYWRkcikpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpciwgYWRk
cikJcHRlX29mZnNldF9rZXJuZWwoKGRpciksIChhZGRyKSkKLXN0YXRpYyBpbmxpbmUgdm9pZCBw
dGVfdW5tYXAocHRlX3QgKnB0ZSkgeyB9Ci0KIC8qCiAgKiBFbmNvZGUgYW5kIGRlY29kZSBhIHN3
YXAgZW50cnkuCiAgKiBOb3RlIHRoYXQgdGhlIGJpdHMgd2UgdXNlIGluIGEgUFRFIGZvciByZXBy
ZXNlbnRpbmcgYSBzd2FwIGVudHJ5CmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9h
c20vbm9oYXNoLzY0L3BndGFibGUuaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ub2hhc2gv
NjQvcGd0YWJsZS5oCmluZGV4IGIzNjBmMjYyYjljNi4uYjk2NGNkYWMyZGFlIDEwMDY0NAotLS0g
YS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaAorKysgYi9hcmNo
L3Bvd2VycGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUuaApAQCAtMTkzLDEzICsxOTMs
NiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgcDRkX3NldChwNGRfdCAqcDRkcCwgdW5zaWduZWQgbG9u
ZyB2YWwpCiAjZGVmaW5lIHBtZF9vZmZzZXQocHVkcCxhZGRyKSBcCiAgICgoKHBtZF90ICopIHB1
ZF9wYWdlX3ZhZGRyKCoocHVkcCkpKSArICgoKGFkZHIpID4+IFBNRF9TSElGVCkgJiAoUFRSU19Q
RVJfUE1EIC0gMSkpKQogCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpcixhZGRyKSBcCi0g
ICgoKHB0ZV90ICopIHBtZF9wYWdlX3ZhZGRyKCooZGlyKSkpICsgKCgoYWRkcikgPj4gUEFHRV9T
SElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpKQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRp
cixhZGRyKQlwdGVfb2Zmc2V0X2tlcm5lbCgoZGlyKSwgKGFkZHIpKQotCi1zdGF0aWMgaW5saW5l
IHZvaWQgcHRlX3VubWFwKHB0ZV90ICpwdGUpIHsgfQotCiAvKiB0byBmaW5kIGFuIGVudHJ5IGlu
IGEga2VybmVsIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAvKiBUaGlzIG5vdyBvbmx5IGNvbnRh
aW5zIHRoZSB2bWFsbG9jIHBhZ2VzICovCiAjZGVmaW5lIHBnZF9vZmZzZXRfayhhZGRyZXNzKSBw
Z2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyZXNzKQpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2lu
Y2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgK
aW5kZXggZDkxN2M0MWI1YzYyLi4xZDU4YWMxNDNjYjQgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJw
Yy9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3Bn
dGFibGUuaApAQCAtNTcsNiArNTcsMTMgQEAgc3RhdGljIGlubGluZSBwZ3Byb3RfdCBwdGVfcGdw
cm90KHB0ZV90IHB0ZSkKIAlyZXR1cm4gX19wZ3Byb3QocHRlX2ZsYWdzKTsKIH0KIAorI2lmbmRl
ZiBwbWRfcGFnZV92YWRkcgorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHBtZF9wYWdlX3Zh
ZGRyKHBtZF90IHBtZCkKK3sKKwlyZXR1cm4gKCh1bnNpZ25lZCBsb25nKV9fdmEocG1kX3ZhbChw
bWQpICYgflBNRF9NQVNLRURfQklUUykpOworfQorI2RlZmluZSBwbWRfcGFnZV92YWRkciBwbWRf
cGFnZV92YWRkcgorI2VuZGlmCiAvKgogICogWkVST19QQUdFIGlzIGEgZ2xvYmFsIHNoYXJlZCBw
YWdlIHRoYXQgaXMgYWx3YXlzIHplcm86IHVzZWQKICAqIGZvciB6ZXJvLW1hcHBlZCBtZW1vcnkg
YXJlYXMgZXRjLi4KZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS5o
IGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggOTUwYzY5NTM5ZDFhLi44
ZGFhMzYyNDE5ZDggMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS5o
CisrKyBiL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC0yMDksMTYgKzIwOSw2
IEBAIHN0YXRpYyBpbmxpbmUgcHRlX3QgcGZuX3B0ZSh1bnNpZ25lZCBsb25nIHBmbiwgcGdwcm90
X3QgcHJvdCkKIAogI2RlZmluZSBta19wdGUocGFnZSwgcHJvdCkgICAgICAgcGZuX3B0ZShwYWdl
X3RvX3BmbihwYWdlKSwgcHJvdCkKIAotI2RlZmluZSBwdGVfaW5kZXgoYWRkcikgKCgoYWRkcikg
Pj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0KLXN0YXRpYyBpbmxpbmUgcHRl
X3QgKnB0ZV9vZmZzZXRfa2VybmVsKHBtZF90ICpwbWQsIHVuc2lnbmVkIGxvbmcgYWRkcikKLXsK
LQlyZXR1cm4gKHB0ZV90ICopcG1kX3BhZ2VfdmFkZHIoKnBtZCkgKyBwdGVfaW5kZXgoYWRkcik7
Ci19Ci0KLSNkZWZpbmUgcHRlX29mZnNldF9tYXAoZGlyLCBhZGRyKQlwdGVfb2Zmc2V0X2tlcm5l
bCgoZGlyKSwgKGFkZHIpKQotI2RlZmluZSBwdGVfdW5tYXAocHRlKQkJCSgodm9pZCkocHRlKSkK
LQogc3RhdGljIGlubGluZSBpbnQgcHRlX3ByZXNlbnQocHRlX3QgcHRlKQogewogCXJldHVybiAo
cHRlX3ZhbChwdGUpICYgKF9QQUdFX1BSRVNFTlQgfCBfUEFHRV9QUk9UX05PTkUpKTsKZGlmZiAt
LWdpdCBhL2FyY2gvcmlzY3YvbW0vaW5pdC5jIGIvYXJjaC9yaXNjdi9tbS9pbml0LmMKaW5kZXgg
NTA0YjQxZDUyOGNmLi40MDE2YTZlNDI3ZTkgMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3YvbW0vaW5p
dC5jCisrKyBiL2FyY2gvcmlzY3YvbW0vaW5pdC5jCkBAIC0yMzUsMTIgKzIzNSwxMiBAQCBzdGF0
aWMgdm9pZCBfX2luaXQgY3JlYXRlX3B0ZV9tYXBwaW5nKHB0ZV90ICpwdGVwLAogCQkJCSAgICAg
IHVpbnRwdHJfdCB2YSwgcGh5c19hZGRyX3QgcGEsCiAJCQkJICAgICAgcGh5c19hZGRyX3Qgc3os
IHBncHJvdF90IHByb3QpCiB7Ci0JdWludHB0cl90IHB0ZV9pbmRleCA9IHB0ZV9pbmRleCh2YSk7
CisJdWludHB0cl90IHB0ZV9pZHggPSBwdGVfaW5kZXgodmEpOwogCiAJQlVHX09OKHN6ICE9IFBB
R0VfU0laRSk7CiAKLQlpZiAocHRlX25vbmUocHRlcFtwdGVfaW5kZXhdKSkKLQkJcHRlcFtwdGVf
aW5kZXhdID0gcGZuX3B0ZShQRk5fRE9XTihwYSksIHByb3QpOworCWlmIChwdGVfbm9uZShwdGVw
W3B0ZV9pZHhdKSkKKwkJcHRlcFtwdGVfaWR4XSA9IHBmbl9wdGUoUEZOX0RPV04ocGEpLCBwcm90
KTsKIH0KIAogI2lmbmRlZiBfX1BBR0VUQUJMRV9QTURfRk9MREVECmRpZmYgLS1naXQgYS9hcmNo
L3MzOTAvaW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3BndGFi
bGUuaAppbmRleCAyMjc1NzIwMzgyOGQuLjliZTM2NjdlM2E0NSAxMDA2NDQKLS0tIGEvYXJjaC9z
MzkwL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL3MzOTAvaW5jbHVkZS9hc20vcGd0
YWJsZS5oCkBAIC0xMjI5LDcgKzEyMjksNiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90IG1rX3B0ZShz
dHJ1Y3QgcGFnZSAqcGFnZSwgcGdwcm90X3QgcGdwcm90KQogI2RlZmluZSBwNGRfaW5kZXgoYWRk
cmVzcykgKCgoYWRkcmVzcykgPj4gUDREX1NISUZUKSAmIChQVFJTX1BFUl9QNEQtMSkpCiAjZGVm
aW5lIHB1ZF9pbmRleChhZGRyZXNzKSAoKChhZGRyZXNzKSA+PiBQVURfU0hJRlQpICYgKFBUUlNf
UEVSX1BVRC0xKSkKICNkZWZpbmUgcG1kX2luZGV4KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IFBN
RF9TSElGVCkgJiAoUFRSU19QRVJfUE1ELTEpKQotI2RlZmluZSBwdGVfaW5kZXgoYWRkcmVzcykg
KCgoYWRkcmVzcykgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFLTEpKQogCiAjZGVmaW5l
IHBtZF9kZXJlZihwbWQpIChwbWRfdmFsKHBtZCkgJiBfU0VHTUVOVF9FTlRSWV9PUklHSU4pCiAj
ZGVmaW5lIHB1ZF9kZXJlZihwdWQpIChwdWRfdmFsKHB1ZCkgJiBfUkVHSU9OX0VOVFJZX09SSUdJ
TikKQEAgLTEyODMsMTYgKzEyODIsMTEgQEAgc3RhdGljIGlubGluZSBwbWRfdCAqcG1kX29mZnNl
dChwdWRfdCAqcHVkLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCiAJcmV0dXJuIChwbWRfdCAqKSBw
dWQ7CiB9CiAKLXN0YXRpYyBpbmxpbmUgcHRlX3QgKnB0ZV9vZmZzZXQocG1kX3QgKnBtZCwgdW5z
aWduZWQgbG9uZyBhZGRyZXNzKQorc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHBtZF9wYWdl
X3ZhZGRyKHBtZF90IHBtZCkKIHsKLQlyZXR1cm4gKHB0ZV90ICopIHBtZF9kZXJlZigqcG1kKSAr
IHB0ZV9pbmRleChhZGRyZXNzKTsKKwlyZXR1cm4gKHVuc2lnbmVkIGxvbmcpIHBtZF9kZXJlZihw
bWQpOwogfQogCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKHBtZCwgYWRkcmVzcykgcHRlX29m
ZnNldChwbWQsIGFkZHJlc3MpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKHBtZCwgYWRkcmVzcykg
cHRlX29mZnNldF9rZXJuZWwocG1kLCBhZGRyZXNzKQotCi1zdGF0aWMgaW5saW5lIHZvaWQgcHRl
X3VubWFwKHB0ZV90ICpwdGUpIHsgfQotCiBzdGF0aWMgaW5saW5lIGJvb2wgZ3VwX2Zhc3RfcGVy
bWl0dGVkKHVuc2lnbmVkIGxvbmcgc3RhcnQsIHVuc2lnbmVkIGxvbmcgZW5kKQogewogCXJldHVy
biBlbmQgPD0gY3VycmVudC0+bW0tPmNvbnRleHQuYXNjZV9saW1pdDsKZGlmZiAtLWdpdCBhL2Fy
Y2gvczM5MC9tbS9wYWdlYXR0ci5jIGIvYXJjaC9zMzkwL21tL3BhZ2VhdHRyLmMKaW5kZXggMzk3
OTQ0Yjk5MDZiLi5jNWM1MmVjMmI0NmYgMTAwNjQ0Ci0tLSBhL2FyY2gvczM5MC9tbS9wYWdlYXR0
ci5jCisrKyBiL2FyY2gvczM5MC9tbS9wYWdlYXR0ci5jCkBAIC04NSw3ICs4NSw3IEBAIHN0YXRp
YyBpbnQgd2Fsa19wdGVfbGV2ZWwocG1kX3QgKnBtZHAsIHVuc2lnbmVkIGxvbmcgYWRkciwgdW5z
aWduZWQgbG9uZyBlbmQsCiB7CiAJcHRlX3QgKnB0ZXAsIG5ldzsKIAotCXB0ZXAgPSBwdGVfb2Zm
c2V0KHBtZHAsIGFkZHIpOworCXB0ZXAgPSBwdGVfb2Zmc2V0X2tlcm5lbChwbWRwLCBhZGRyKTsK
IAlkbyB7CiAJCW5ldyA9ICpwdGVwOwogCQlpZiAocHRlX25vbmUobmV3KSkKZGlmZiAtLWdpdCBh
L2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oIGIvYXJjaC9zaC9pbmNsdWRlL2FzbS9w
Z3RhYmxlXzMyLmgKaW5kZXggNGFjY2U1ZjJjYmY5Li4yNjNhYjU2OTlmOTYgMTAwNjQ0Ci0tLSBh
L2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oCisrKyBiL2FyY2gvc2gvaW5jbHVkZS9h
c20vcGd0YWJsZV8zMi5oCkBAIC00MDEsNyArNDAxLDExIEBAIHN0YXRpYyBpbmxpbmUgcHRlX3Qg
cHRlX21vZGlmeShwdGVfdCBwdGUsIHBncHJvdF90IG5ld3Byb3QpCiAJcmV0dXJuIHB0ZTsKIH0K
IAotI2RlZmluZSBwbWRfcGFnZV92YWRkcihwbWQpCSgodW5zaWduZWQgbG9uZylwbWRfdmFsKHBt
ZCkpCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcG1kX3BhZ2VfdmFkZHIocG1kX3QgcG1k
KQoreworCXJldHVybiAodW5zaWduZWQgbG9uZylwbWRfdmFsKHBtZCk7Cit9CisKICNkZWZpbmUg
cG1kX3BhZ2UocG1kKQkJKHZpcnRfdG9fcGFnZShwbWRfdmFsKHBtZCkpKQogCiAvKiB0byBmaW5k
IGFuIGVudHJ5IGluIGEgcGFnZS10YWJsZS1kaXJlY3RvcnkuICovCkBAIC00MTQsMTUgKzQxOCw2
IEBAIHN0YXRpYyBpbmxpbmUgcHRlX3QgcHRlX21vZGlmeShwdGVfdCBwdGUsIHBncHJvdF90IG5l
d3Byb3QpCiAjZGVmaW5lIHB1ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQVURfU0hJ
RlQpICYgKFBUUlNfUEVSX1BVRC0xKSkKICNkZWZpbmUgcG1kX2luZGV4KGFkZHJlc3MpCSgoKGFk
ZHJlc3MpID4+IFBNRF9TSElGVCkgJiAoUFRSU19QRVJfUE1ELTEpKQogCi0vKiBGaW5kIGFuIGVu
dHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRhYmxlLi4gKi8KLSNkZWZpbmUgcHRlX2luZGV4
KGFkZHJlc3MpCSgoYWRkcmVzcyA+PiBQQUdFX1NISUZUKSAmIChQVFJTX1BFUl9QVEUgLSAxKSkK
LSNkZWZpbmUgX19wdGVfb2Zmc2V0KGFkZHJlc3MpCXB0ZV9pbmRleChhZGRyZXNzKQotCi0jZGVm
aW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpciwgYWRkcmVzcykgXAotCSgocHRlX3QgKikgcG1kX3Bh
Z2VfdmFkZHIoKihkaXIpKSArIHB0ZV9pbmRleChhZGRyZXNzKSkKLSNkZWZpbmUgcHRlX29mZnNl
dF9tYXAoZGlyLCBhZGRyZXNzKQkJcHRlX29mZnNldF9rZXJuZWwoZGlyLCBhZGRyZXNzKQotI2Rl
ZmluZSBwdGVfdW5tYXAocHRlKQkJZG8geyB9IHdoaWxlICgwKQotCiAjaWZkZWYgQ09ORklHX1gy
VExCCiAjZGVmaW5lIHB0ZV9FUlJPUihlKSBcCiAJcHJpbnRrKCIlczolZDogYmFkIHB0ZSAlcCgl
MDhseCUwOGx4KS5cbiIsIF9fRklMRV9fLCBfX0xJTkVfXywgXApkaWZmIC0tZ2l0IGEvYXJjaC9z
aC9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmggYi9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVf
NjQuaAppbmRleCAyN2NjMjgyZWM2YzAuLjc2NzRkMzhiZWE1YyAxMDA2NDQKLS0tIGEvYXJjaC9z
aC9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKKysrIGIvYXJjaC9zaC9pbmNsdWRlL2FzbS9wZ3Rh
YmxlXzY0LmgKQEAgLTcwLDE4ICs3MCw2IEBAIHN0YXRpYyBfX2lubGluZV9fIHZvaWQgc2V0X3B0
ZShwdGVfdCAqcHRlcHRyLCBwdGVfdCBwdGV2YWwpCiAjZGVmaW5lIHBtZF9wYWdlKHBtZCkgXAog
CSh2aXJ0X3RvX3BhZ2UocG1kX3ZhbChwbWQpKSkKIAotLyogUE1EIHRvIFBURSBkZXJlZmVyZW5j
aW5nICovCi0jZGVmaW5lIHB0ZV9pbmRleChhZGRyZXNzKSBcCi0JCSgoYWRkcmVzcyA+PiBQQUdF
X1NISUZUKSAmIChQVFJTX1BFUl9QVEUgLSAxKSkKLQotI2RlZmluZSBfX3B0ZV9vZmZzZXQoYWRk
cmVzcykJcHRlX2luZGV4KGFkZHJlc3MpCi0KLSNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGly
LCBhZGRyKSBcCi0JCSgocHRlX3QgKikgKChwbWRfdmFsKCooZGlyKSkpICYgUEFHRV9NQVNLKSAr
IHB0ZV9pbmRleCgoYWRkcikpKQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpcixhZGRyKQlw
dGVfb2Zmc2V0X2tlcm5lbChkaXIsIGFkZHIpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpCQlkbyB7
IH0gd2hpbGUgKDApCi0KICNpZm5kZWYgX19BU1NFTUJMWV9fCiAvKgogICogUFRFTCBjb2hlcmVu
dCBmbGFncy4KZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGdhbGxvY182NC5o
IGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ2FsbG9jXzY0LmgKaW5kZXggMjY0ZTc2Y2VjY2Y2
Li5hOGRhZmM1NTA5ODUgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGdhbGxv
Y182NC5oCisrKyBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGdhbGxvY182NC5oCkBAIC02Nyw3
ICs2Nyw3IEBAIHZvaWQgcHRlX2ZyZWUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBndGFibGVfdCBw
dGVwYWdlKTsKIAogI2RlZmluZSBwbWRfcG9wdWxhdGVfa2VybmVsKE1NLCBQTUQsIFBURSkJcG1k
X3NldChNTSwgUE1ELCBQVEUpCiAjZGVmaW5lIHBtZF9wb3B1bGF0ZShNTSwgUE1ELCBQVEUpCQlw
bWRfc2V0KE1NLCBQTUQsIFBURSkKLSNkZWZpbmUgcG1kX3BndGFibGUoUE1EKQkJCSgocHRlX3Qg
KilfX3BtZF9wYWdlKFBNRCkpCisjZGVmaW5lIHBtZF9wZ3RhYmxlKFBNRCkJCQkoKHB0ZV90ICop
cG1kX3BhZ2VfdmFkZHIoUE1EKSkKIAogdm9pZCBwZ3RhYmxlX2ZyZWUodm9pZCAqdGFibGUsIGJv
b2wgaXNfcGFnZSk7CiAKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJs
ZV8zMi5oIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzMyLmgKaW5kZXggZGM4ZjBm
NjZiYmYxLi4yZmMyOTIwN2UyNTQgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20v
cGd0YWJsZV8zMi5oCisrKyBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oCkBA
IC0xMzIsNiArMTMyLDEyIEBAIHN0YXRpYyBpbmxpbmUgc3RydWN0IHBhZ2UgKnBtZF9wYWdlKHBt
ZF90IHBtZCkKIAlyZXR1cm4gcGZuX3RvX3BhZ2UoKHBtZF92YWwocG1kKSAmIFNSTU1VX1BURF9Q
TUFTSykgPj4gKFBBR0VfU0hJRlQtNCkpOwogfQogCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxv
bmcgcG1kX3BhZ2VfdmFkZHIocG1kX3QgcG1kKQoreworCXVuc2lnbmVkIGxvbmcgdiA9IHBtZF92
YWwocG1kKSAmIFNSTU1VX1BURF9QTUFTSzsKKwlyZXR1cm4gKHVuc2lnbmVkIGxvbmcpX19ub2Nh
Y2hlX3ZhKHYgPDwgNCk7Cit9CisKIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwdWRfcGFn
ZV92YWRkcihwdWRfdCBwdWQpCiB7CiAJaWYgKHNybW11X2RldmljZV9tZW1vcnkocHVkX3ZhbChw
dWQpKSkgewpAQCAtMzE4LDE1ICszMjQsNiBAQCBzdGF0aWMgaW5saW5lIHBtZF90ICpwbWRfb2Zm
c2V0KHB1ZF90ICogZGlyLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCiAJCSgoYWRkcmVzcyA+PiBQ
TURfU0hJRlQpICYgKFBUUlNfUEVSX1BNRCAtIDEpKTsKIH0KIAotLyogRmluZCBhbiBlbnRyeSBp
biB0aGUgdGhpcmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCi1wdGVfdCAqcHRlX29mZnNldF9rZXJu
ZWwocG1kX3QgKiBkaXIsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcyk7Ci0KLS8qCi0gKiBUaGlzIHNo
b3J0Y3V0IHdvcmtzIG9uIHN1bjRtIChhbmQgc3VuNGQpIGJlY2F1c2UgdGhlIG5vY2FjaGUgYXJl
YSBpcyBzdGF0aWMuCi0gKi8KLSNkZWZpbmUgcHRlX29mZnNldF9tYXAoZCwgYSkJCXB0ZV9vZmZz
ZXRfa2VybmVsKGQsYSkKLSNkZWZpbmUgcHRlX3VubWFwKHB0ZSkJCWRve313aGlsZSgwKQotCiBz
dHJ1Y3Qgc2VxX2ZpbGU7CiB2b2lkIG1tdV9pbmZvKHN0cnVjdCBzZXFfZmlsZSAqbSk7CiAKZGlm
ZiAtLWdpdCBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oIGIvYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKaW5kZXggNjc1NDM2M2IyNjFkLi43ZGY3MmVmYTRh
OGQgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oCisrKyBi
L2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oCkBAIC04MzUsNyArODM1LDcgQEAg
c3RhdGljIGlubGluZSB2b2lkIHBtZF9zZXQoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBtZF90ICpw
bWRwLCBwdGVfdCAqcHRlcCkKIAogI2RlZmluZSBwdWRfc2V0KHB1ZHAsIHBtZHApCVwKIAkocHVk
X3ZhbCgqKHB1ZHApKSA9IChfX3BhKCh1bnNpZ25lZCBsb25nKSAocG1kcCkpKSkKLXN0YXRpYyBp
bmxpbmUgdW5zaWduZWQgbG9uZyBfX3BtZF9wYWdlKHBtZF90IHBtZCkKK3N0YXRpYyBpbmxpbmUg
dW5zaWduZWQgbG9uZyBwbWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCiB7CiAJcHRlX3QgcHRlID0g
X19wdGUocG1kX3ZhbChwbWQpKTsKIAl1bnNpZ25lZCBsb25nIHBmbjsKQEAgLTg1NSw3ICs4NTUs
NyBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHVkX3BhZ2VfdmFkZHIocHVkX3QgcHVk
KQogCXJldHVybiAoKHVuc2lnbmVkIGxvbmcpIF9fdmEocGZuIDw8IFBBR0VfU0hJRlQpKTsKIH0K
IAotI2RlZmluZSBwbWRfcGFnZShwbWQpIAkJCXZpcnRfdG9fcGFnZSgodm9pZCAqKV9fcG1kX3Bh
Z2UocG1kKSkKKyNkZWZpbmUgcG1kX3BhZ2UocG1kKSAJCQl2aXJ0X3RvX3BhZ2UoKHZvaWQgKilw
bWRfcGFnZV92YWRkcihwbWQpKQogI2RlZmluZSBwdWRfcGFnZShwdWQpIAkJCXZpcnRfdG9fcGFn
ZSgodm9pZCAqKXB1ZF9wYWdlX3ZhZGRyKHB1ZCkpCiAjZGVmaW5lIHBtZF9jbGVhcihwbWRwKQkJ
CShwbWRfdmFsKCoocG1kcCkpID0gMFVMKQogI2RlZmluZSBwdWRfcHJlc2VudChwdWQpCQkocHVk
X3ZhbChwdWQpICE9IDBVKQpAQCAtOTA2LDE0ICs5MDYsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2ln
bmVkIGxvbmcgcHVkX3BmbihwdWRfdCBwdWQpCiAJKChwbWRfdCAqKSBwdWRfcGFnZV92YWRkcigq
KHB1ZHApKSArIFwKIAkgKCgoYWRkcmVzcykgPj4gUE1EX1NISUZUKSAmIChQVFJTX1BFUl9QTUQt
MSkpKQogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRhYmxlLi4g
Ki8KLSNkZWZpbmUgcHRlX2luZGV4KGFkZHJlc3MpCQkJXAotCSAoKGFkZHJlc3MgPj4gUEFHRV9T
SElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRp
ciwgYWRkcmVzcykJXAotCSgocHRlX3QgKikgX19wbWRfcGFnZSgqKGRpcikpICsgcHRlX2luZGV4
KGFkZHJlc3MpKQotI2RlZmluZSBwdGVfb2Zmc2V0X21hcChkaXIsIGFkZHJlc3MpCXB0ZV9vZmZz
ZXRfa2VybmVsKChkaXIpLCAoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpCQkJZG8g
eyB9IHdoaWxlICgwKQotCiAvKiBXZSBjYW5ub3QgaW5jbHVkZSA8bGludXgvbW1fdHlwZXMuaD4g
YXQgdGhpcyBwb2ludCB5ZXQ6ICovCiBleHRlcm4gc3RydWN0IG1tX3N0cnVjdCBpbml0X21tOwog
CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL21tL3NybW11LmMgYi9hcmNoL3NwYXJjL21tL3NybW11
LmMKaW5kZXggOTA2ODAyZjBlYmU5Li41YjQ0OTM2ZWVmZWEgMTAwNjQ0Ci0tLSBhL2FyY2gvc3Bh
cmMvbW0vc3JtbXUuYworKysgYi9hcmNoL3NwYXJjL21tL3NybW11LmMKQEAgLTE1NywxNiArMTU3
LDYgQEAgdm9pZCBwbWRfcG9wdWxhdGUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHBtZF90ICpwbWRw
LCBzdHJ1Y3QgcGFnZSAqcHRlcCkKIAl9CiB9CiAKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHRo
aXJkLWxldmVsIHBhZ2UgdGFibGUuLiAqLwotcHRlX3QgKnB0ZV9vZmZzZXRfa2VybmVsKHBtZF90
ICpkaXIsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKLXsKLQl2b2lkICpwdGU7Ci0KLQlwdGUgPSBf
X25vY2FjaGVfdmEoKGRpci0+cG1kdlswXSAmIFNSTU1VX1BURF9QTUFTSykgPDwgNCk7Ci0JcmV0
dXJuIChwdGVfdCAqKSBwdGUgKwotCSAgICAoKGFkZHJlc3MgPj4gUEFHRV9TSElGVCkgJiAoUFRS
U19QRVJfUFRFIC0gMSkpOwotfQotCiAvKgogICogc2l6ZTogYnl0ZXMgdG8gYWxsb2NhdGUgaW4g
dGhlIG5vY2FjaGUgYXJlYS4KICAqIGFsaWduOiBieXRlcywgbnVtYmVyIHRvIGFsaWduIGF0Lgpk
aWZmIC0tZ2l0IGEvYXJjaC91bS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL3VtL2luY2x1
ZGUvYXNtL3BndGFibGUuaAppbmRleCA5NjE4YTBiODA4OGMuLmM1N2ZlMjI4ODMzYyAxMDA2NDQK
LS0tIGEvYXJjaC91bS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC91bS9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmgKQEAgLTMyMywxOSArMzIzLDYgQEAgc3RhdGljIGlubGluZSBwdGVfdCBw
dGVfbW9kaWZ5KHB0ZV90IHB0ZSwgcGdwcm90X3QgbmV3cHJvdCkKICNkZWZpbmUgcG1kX3BhZ2Vf
dmFkZHIocG1kKSBcCiAJKCh1bnNpZ25lZCBsb25nKSBfX3ZhKHBtZF92YWwocG1kKSAmIFBBR0Vf
TUFTSykpCiAKLS8qCi0gKiB0aGUgcHRlIHBhZ2UgY2FuIGJlIHRob3VnaHQgb2YgYW4gYXJyYXkg
bGlrZSB0aGlzOiBwdGVfdFtQVFJTX1BFUl9QVEVdCi0gKgotICogdGhpcyBtYWNybyByZXR1cm5z
IHRoZSBpbmRleCBvZiB0aGUgZW50cnkgaW4gdGhlIHB0ZSBwYWdlIHdoaWNoIHdvdWxkCi0gKiBj
b250cm9sIHRoZSBnaXZlbiB2aXJ0dWFsIGFkZHJlc3MKLSAqLwotI2RlZmluZSBwdGVfaW5kZXgo
YWRkcmVzcykgKCgoYWRkcmVzcykgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkp
Ci0jZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsKGRpciwgYWRkcmVzcykgXAotCSgocHRlX3QgKikg
cG1kX3BhZ2VfdmFkZHIoKihkaXIpKSArICBwdGVfaW5kZXgoYWRkcmVzcykpCi0jZGVmaW5lIHB0
ZV9vZmZzZXRfbWFwKGRpciwgYWRkcmVzcykgXAotCSgocHRlX3QgKilwYWdlX2FkZHJlc3MocG1k
X3BhZ2UoKihkaXIpKSkgKyBwdGVfaW5kZXgoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV91bm1hcChw
dGUpIGRvIHsgfSB3aGlsZSAoMCkKLQogc3RydWN0IG1tX3N0cnVjdDsKIGV4dGVybiBwdGVfdCAq
dmlydF90b19wdGUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVuc2lnbmVkIGxvbmcgYWRkcik7CiAK
ZGlmZiAtLWdpdCBhL2FyY2gvdW5pY29yZTMyL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gv
dW5pY29yZTMyL2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCA5NTU5ZTkzNmQ5ODAuLmEyYjI2
NGNjOGM2OCAxMDA2NDQKLS0tIGEvYXJjaC91bmljb3JlMzIvaW5jbHVkZS9hc20vcGd0YWJsZS5o
CisrKyBiL2FyY2gvdW5pY29yZTMyL2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAtMTUzLDEyICsx
NTMsNiBAQCBleHRlcm4gc3RydWN0IHBhZ2UgKmVtcHR5X3plcm9fcGFnZTsKICNkZWZpbmUgcHRl
X25vbmUocHRlKQkJCSghcHRlX3ZhbChwdGUpKQogI2RlZmluZSBwdGVfY2xlYXIobW0sIGFkZHIs
IHB0ZXApCXNldF9wdGUocHRlcCwgX19wdGUoMCkpCiAjZGVmaW5lIHB0ZV9wYWdlKHB0ZSkJCQko
cGZuX3RvX3BhZ2UocHRlX3BmbihwdGUpKSkKLSNkZWZpbmUgcHRlX29mZnNldF9rZXJuZWwoZGly
LCBhZGRyKQkocG1kX3BhZ2VfdmFkZHIoKihkaXIpKSBcCi0JCQkJCQkrIF9fcHRlX2luZGV4KGFk
ZHIpKQotCi0jZGVmaW5lIHB0ZV9vZmZzZXRfbWFwKGRpciwgYWRkcikJKHBtZF9wYWdlX3ZhZGRy
KCooZGlyKSkgXAotCQkJCQkJKyBfX3B0ZV9pbmRleChhZGRyKSkKLSNkZWZpbmUgcHRlX3VubWFw
KHB0ZSkJCQlkbyB7IH0gd2hpbGUgKDApCiAKICNkZWZpbmUgc2V0X3B0ZShwdGVwLCBwdGUpCWNw
dV9zZXRfcHRlKHB0ZXAsIHB0ZSkKIApAQCAtMjI5LDkgKzIyMyw2IEBAIFBURV9CSVRfRlVOQyht
a3lvdW5nLCAgIHw9IFBURV9ZT1VORyk7CiAvKiB0byBmaW5kIGFuIGVudHJ5IGluIGEga2VybmVs
IHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAjZGVmaW5lIHBnZF9vZmZzZXRfayhhZGRyKQlwZ2Rf
b2Zmc2V0KCZpbml0X21tLCBhZGRyKQogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1s
ZXZlbCBwYWdlIHRhYmxlLi4gKi8KLSNkZWZpbmUgX19wdGVfaW5kZXgoYWRkcikJKCgoYWRkcikg
Pj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRFIC0gMSkpCi0KIHN0YXRpYyBpbmxpbmUgcHRl
X3QgcHRlX21vZGlmeShwdGVfdCBwdGUsIHBncHJvdF90IG5ld3Byb3QpCiB7CiAJY29uc3QgdW5z
aWduZWQgbG9uZyBtYXNrID0gUFRFX0VYRUMgfCBQVEVfV1JJVEUgfCBQVEVfUkVBRDsKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gveDg2L2luY2x1ZGUv
YXNtL3BndGFibGUuaAppbmRleCA2MzY2MTM2YjBlNDYuLjY0YmU1MjFmNTYyYyAxMDA2NDQKLS0t
IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUv
YXNtL3BndGFibGUuaApAQCAtODU1LDI1ICs4NTUsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGxvbmcgcG1kX2luZGV4KHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKICAqLwogI2RlZmluZSBta19w
dGUocGFnZSwgcGdwcm90KSAgIHBmbl9wdGUocGFnZV90b19wZm4ocGFnZSksIChwZ3Byb3QpKQog
Ci0vKgotICogdGhlIHB0ZSBwYWdlIGNhbiBiZSB0aG91Z2h0IG9mIGFuIGFycmF5IGxpa2UgdGhp
czogcHRlX3RbUFRSU19QRVJfUFRFXQotICoKLSAqIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUg
aW5kZXggb2YgdGhlIGVudHJ5IGluIHRoZSBwdGUgcGFnZSB3aGljaCB3b3VsZAotICogY29udHJv
bCB0aGUgZ2l2ZW4gdmlydHVhbCBhZGRyZXNzCi0gKgotICogQWxzbyBkZWZpbmUgbWFjcm8gc28g
d2UgY2FuIHRlc3QgaWYgcHRlX2luZGV4IGlzIGRlZmluZWQgZm9yIGFyY2guCi0gKi8KLSNkZWZp
bmUgcHRlX2luZGV4IHB0ZV9pbmRleAotc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHB0ZV9p
bmRleCh1bnNpZ25lZCBsb25nIGFkZHJlc3MpCi17Ci0JcmV0dXJuIChhZGRyZXNzID4+IFBBR0Vf
U0hJRlQpICYgKFBUUlNfUEVSX1BURSAtIDEpOwotfQotCi1zdGF0aWMgaW5saW5lIHB0ZV90ICpw
dGVfb2Zmc2V0X2tlcm5lbChwbWRfdCAqcG1kLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCi17Ci0J
cmV0dXJuIChwdGVfdCAqKXBtZF9wYWdlX3ZhZGRyKCpwbWQpICsgcHRlX2luZGV4KGFkZHJlc3Mp
OwotfQotCiBzdGF0aWMgaW5saW5lIGludCBwbWRfYmFkKHBtZF90IHBtZCkKIHsKIAlyZXR1cm4g
KHBtZF9mbGFncyhwbWQpICYgfl9QQUdFX1VTRVIpICE9IF9LRVJOUEdfVEFCTEU7CmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlXzMyLmggYi9hcmNoL3g4Ni9pbmNsdWRl
L2FzbS9wZ3RhYmxlXzMyLmgKaW5kZXggYmQyZWQ0N2NiMDY3Li5hNWFlMGU0OTZiOWEgMTAwNjQ0
Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaAorKysgYi9hcmNoL3g4Ni9p
bmNsdWRlL2FzbS9wZ3RhYmxlXzMyLmgKQEAgLTQ1LDE3ICs0NSw2IEBAIHZvaWQgc3luY19pbml0
aWFsX3BhZ2VfdGFibGUodm9pZCk7CiAjIGluY2x1ZGUgPGFzbS9wZ3RhYmxlLTJsZXZlbC5oPgog
I2VuZGlmCiAKLSNpZiBkZWZpbmVkKENPTkZJR19ISUdIUFRFKQotI2RlZmluZSBwdGVfb2Zmc2V0
X21hcChkaXIsIGFkZHJlc3MpCQkJCQlcCi0JKChwdGVfdCAqKWttYXBfYXRvbWljKHBtZF9wYWdl
KCooZGlyKSkpICsJCVwKLQkgcHRlX2luZGV4KChhZGRyZXNzKSkpCi0jZGVmaW5lIHB0ZV91bm1h
cChwdGUpIGt1bm1hcF9hdG9taWMoKHB0ZSkpCi0jZWxzZQotI2RlZmluZSBwdGVfb2Zmc2V0X21h
cChkaXIsIGFkZHJlc3MpCQkJCQlcCi0JKChwdGVfdCAqKXBhZ2VfYWRkcmVzcyhwbWRfcGFnZSgq
KGRpcikpKSArIHB0ZV9pbmRleCgoYWRkcmVzcykpKQotI2RlZmluZSBwdGVfdW5tYXAocHRlKSBk
byB7IH0gd2hpbGUgKDApCi0jZW5kaWYKLQogLyogQ2xlYXIgYSBrZXJuZWwgUFRFIGFuZCBmbHVz
aCBpdCBmcm9tIHRoZSBUTEIgKi8KICNkZWZpbmUga3B0ZV9jbGVhcl9mbHVzaChwdGVwLCB2YWRk
cikJCVwKIGRvIHsJCQkJCQlcCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3Rh
YmxlXzY0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKaW5kZXggOGQwM2Zm
ZDQzNzk0Li4xYjY4ZDI0ZGM2YTAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3Bn
dGFibGVfNjQuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKQEAgLTE4
NiwxMCArMTg2LDYgQEAgZXh0ZXJuIHZvaWQgc3luY19nbG9iYWxfcGdkcyh1bnNpZ25lZCBsb25n
IHN0YXJ0LCB1bnNpZ25lZCBsb25nIGVuZCk7CiAKIC8qIFBURSAtIExldmVsIDEgYWNjZXNzLiAq
LwogCi0vKiB4ODYtNjQgYWx3YXlzIGhhcyBhbGwgcGFnZSB0YWJsZXMgbWFwcGVkLiAqLwotI2Rl
ZmluZSBwdGVfb2Zmc2V0X21hcChkaXIsIGFkZHJlc3MpIHB0ZV9vZmZzZXRfa2VybmVsKChkaXIp
LCAoYWRkcmVzcykpCi0jZGVmaW5lIHB0ZV91bm1hcChwdGUpICgodm9pZCkocHRlKSkvKiBOT1Ag
Ki8KLQogLyoKICAqIEVuY29kZSBhbmQgZGUtY29kZSBhIHN3YXAgZW50cnkKICAqCmRpZmYgLS1n
aXQgYS9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNoL3h0ZW5zYS9pbmNs
dWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggYzU3YmNhM2ZlMDUxLi5kMDhiN2JlNjY0OWUgMTAwNjQ0
Ci0tLSBhL2FyY2gveHRlbnNhL2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL3h0ZW5z
YS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTI2Nyw3ICsyNjcsNyBAQCBzdGF0aWMgaW5saW5l
IGludCBwdGVfd3JpdGUocHRlX3QgcHRlKSB7IHJldHVybiBwdGVfdmFsKHB0ZSkgJiBfUEFHRV9X
UklUQUJMRTsgfQogc3RhdGljIGlubGluZSBpbnQgcHRlX2RpcnR5KHB0ZV90IHB0ZSkgeyByZXR1
cm4gcHRlX3ZhbChwdGUpICYgX1BBR0VfRElSVFk7IH0KIHN0YXRpYyBpbmxpbmUgaW50IHB0ZV95
b3VuZyhwdGVfdCBwdGUpIHsgcmV0dXJuIHB0ZV92YWwocHRlKSAmIF9QQUdFX0FDQ0VTU0VEOyB9
CiAKLXN0YXRpYyBpbmxpbmUgcHRlX3QgcHRlX3dycHJvdGVjdChwdGVfdCBwdGUpCQorc3RhdGlj
IGlubGluZSBwdGVfdCBwdGVfd3Jwcm90ZWN0KHB0ZV90IHB0ZSkKIAl7IHB0ZV92YWwocHRlKSAm
PSB+KF9QQUdFX1dSSVRBQkxFIHwgX1BBR0VfSFdfV1JJVEUpOyByZXR1cm4gcHRlOyB9CiBzdGF0
aWMgaW5saW5lIHB0ZV90IHB0ZV9ta2NsZWFuKHB0ZV90IHB0ZSkKIAl7IHB0ZV92YWwocHRlKSAm
PSB+KF9QQUdFX0RJUlRZIHwgX1BBR0VfSFdfV1JJVEUpOyByZXR1cm4gcHRlOyB9CkBAIC0zNjcs
MTQgKzM2Nyw2IEBAIHB0ZXBfc2V0X3dycHJvdGVjdChzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5z
aWduZWQgbG9uZyBhZGRyLCBwdGVfdCAqcHRlcCkKIAogI2RlZmluZSBwZ2RfaW5kZXgoYWRkcmVz
cykJKChhZGRyZXNzKSA+PiBQR0RJUl9TSElGVCkKIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUg
dGhpcmQtbGV2ZWwgcGFnZSB0YWJsZS4uICovCi0jZGVmaW5lIHB0ZV9pbmRleChhZGRyZXNzKQko
KChhZGRyZXNzKSA+PiBQQUdFX1NISUZUKSAmIChQVFJTX1BFUl9QVEUgLSAxKSkKLSNkZWZpbmUg
cHRlX29mZnNldF9rZXJuZWwoZGlyLGFkZHIpIAkJCQkJXAotCSgocHRlX3QqKSBwbWRfcGFnZV92
YWRkcigqKGRpcikpICsgcHRlX2luZGV4KGFkZHIpKQotI2RlZmluZSBwdGVfb2Zmc2V0X21hcChk
aXIsYWRkcikJcHRlX29mZnNldF9rZXJuZWwoKGRpciksKGFkZHIpKQotI2RlZmluZSBwdGVfdW5t
YXAocHRlKQkJZG8geyB9IHdoaWxlICgwKQotCi0KIC8qCiAgKiBFbmNvZGUgYW5kIGRlY29kZSBh
IHN3YXAgYW5kIGZpbGUgZW50cnkuCiAgKi8KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvcGd0
YWJsZS5oIGIvaW5jbHVkZS9saW51eC9wZ3RhYmxlLmgKaW5kZXggOGQwOTJjZWFkNmVhLi4xOGE4
MWIxZTNkMGQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcGd0YWJsZS5oCisrKyBiL2luY2x1
ZGUvbGludXgvcGd0YWJsZS5oCkBAIC0yOCw2ICsyOCwzNSBAQAogI2RlZmluZSBVU0VSX1BHVEFC
TEVTX0NFSUxJTkcJMFVMCiAjZW5kaWYKIAorLyoKKyAqIHRoZSBwdGUgcGFnZSBjYW4gYmUgdGhv
dWdodCBvZiBhbiBhcnJheSBsaWtlIHRoaXM6IHB0ZV90W1BUUlNfUEVSX1BURV0KKyAqCisgKiB0
aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBlbnRyeSBpbiB0aGUgcHRlIHBh
Z2Ugd2hpY2ggd291bGQKKyAqIGNvbnRyb2wgdGhlIGdpdmVuIHZpcnR1YWwgYWRkcmVzcworICov
CitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHRlX2luZGV4KHVuc2lnbmVkIGxvbmcgYWRk
cmVzcykKK3sKKwlyZXR1cm4gKGFkZHJlc3MgPj4gUEFHRV9TSElGVCkgJiAoUFRSU19QRVJfUFRF
IC0gMSk7Cit9CisKKyNpZm5kZWYgcHRlX29mZnNldF9rZXJuZWwKK3N0YXRpYyBpbmxpbmUgcHRl
X3QgKnB0ZV9vZmZzZXRfa2VybmVsKHBtZF90ICpwbWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykK
K3sKKwlyZXR1cm4gKHB0ZV90ICopcG1kX3BhZ2VfdmFkZHIoKnBtZCkgKyBwdGVfaW5kZXgoYWRk
cmVzcyk7Cit9CisjZGVmaW5lIHB0ZV9vZmZzZXRfa2VybmVsIHB0ZV9vZmZzZXRfa2VybmVsCisj
ZW5kaWYKKworI2lmIGRlZmluZWQoQ09ORklHX0hJR0hQVEUpCisjZGVmaW5lIHB0ZV9vZmZzZXRf
bWFwKGRpciwgYWRkcmVzcykJCQkJXAorCSgocHRlX3QgKilrbWFwX2F0b21pYyhwbWRfcGFnZSgq
KGRpcikpKSArCQlcCisJIHB0ZV9pbmRleCgoYWRkcmVzcykpKQorI2RlZmluZSBwdGVfdW5tYXAo
cHRlKSBrdW5tYXBfYXRvbWljKChwdGUpKQorI2Vsc2UKKyNkZWZpbmUgcHRlX29mZnNldF9tYXAo
ZGlyLCBhZGRyZXNzKQlwdGVfb2Zmc2V0X2tlcm5lbCgoZGlyKSwgKGFkZHJlc3MpKQorI2RlZmlu
ZSBwdGVfdW5tYXAocHRlKSAoKHZvaWQpKHB0ZSkpCS8qIE5PUCAqLworI2VuZGlmCisKIC8qCiAg
KiBJbiBtYW55IGNhc2VzIGl0IGlzIGtub3duIHRoYXQgYSB2aXJ0dWFsIGFkZHJlc3MgaXMgbWFw
cGVkIGF0IFBNRCBvciBQVEUKICAqIGxldmVsLCBzbyBpbnN0ZWFkIG9mIHRyYXZlcnNpbmcgYWxs
IHRoZSBwYWdlIHRhYmxlIGxldmVscywgd2UgY2FuIGdldCBhCi0tIAoyLjI2LjIKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcg
bGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29y
ZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
