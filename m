Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id BF7684D2DFF
	for <lists+openrisc@lfdr.de>; Wed,  9 Mar 2022 12:31:18 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 701842486B;
	Wed,  9 Mar 2022 12:31:18 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id 00A5024863
 for <openrisc@lists.librecores.org>; Wed,  9 Mar 2022 12:31:15 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 233BF1655;
 Wed,  9 Mar 2022 03:31:15 -0800 (PST)
Received: from [10.163.33.203] (unknown [10.163.33.203])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPSA id EFA443FA4D;
 Wed,  9 Mar 2022 03:31:03 -0800 (PST)
Message-ID: <f1b4dbb5-7cd4-7513-4b18-169b97745a0a@arm.com>
Date: Wed, 9 Mar 2022 17:01:02 +0530
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Content-Language: en-US
To: Catalin Marinas <catalin.marinas@arm.com>
References: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
 <1646045273-9343-6-git-send-email-anshuman.khandual@arm.com>
 <YiDessYDSt060Euc@arm.com>
From: Anshuman Khandual <anshuman.khandual@arm.com>
In-Reply-To: <YiDessYDSt060Euc@arm.com>
Subject: Re: [OpenRISC] [PATCH V3 05/30] arm64/mm: Enable
 ARCH_HAS_VM_GET_PAGE_PROT
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 linux-mips@vger.kernel.org, linux-mm@kvack.org, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org, Will Deacon <will@kernel.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-hexagon@vger.kernel.org, linux-csky@vger.kernel.org,
 Christoph Hellwig <hch@infradead.org>, linux-snps-arc@lists.infradead.org,
 linux-xtensa@linux-xtensa.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 linux-arm-kernel@lists.infradead.org, linux-parisc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-alpha@vger.kernel.org,
 akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

CgpPbiAzLzMvMjIgMjA6NTgsIENhdGFsaW4gTWFyaW5hcyB3cm90ZToKPiBIaSBBbnNodW1hbiwK
PiAKPiBPbiBNb24sIEZlYiAyOCwgMjAyMiBhdCAwNDoxNzoyOFBNICswNTMwLCBBbnNodW1hbiBL
aGFuZHVhbCB3cm90ZToKPj4gK3N0YXRpYyBpbmxpbmUgcGdwcm90X3QgX192bV9nZXRfcGFnZV9w
cm90KHVuc2lnbmVkIGxvbmcgdm1fZmxhZ3MpCj4+ICt7Cj4+ICsJc3dpdGNoICh2bV9mbGFncyAm
IChWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgVk1fU0hBUkVEKSkgewo+PiArCWNhc2Ug
Vk1fTk9ORToKPj4gKwkJcmV0dXJuIFBBR0VfTk9ORTsKPj4gKwljYXNlIFZNX1JFQUQ6Cj4+ICsJ
Y2FzZSBWTV9XUklURToKPj4gKwljYXNlIFZNX1dSSVRFIHwgVk1fUkVBRDoKPj4gKwkJcmV0dXJu
IFBBR0VfUkVBRE9OTFk7Cj4+ICsJY2FzZSBWTV9FWEVDOgo+PiArCQlyZXR1cm4gUEFHRV9FWEVD
T05MWTsKPj4gKwljYXNlIFZNX0VYRUMgfCBWTV9SRUFEOgo+PiArCWNhc2UgVk1fRVhFQyB8IFZN
X1dSSVRFOgo+PiArCWNhc2UgVk1fRVhFQyB8IFZNX1dSSVRFIHwgVk1fUkVBRDoKPj4gKwkJcmV0
dXJuIFBBR0VfUkVBRE9OTFlfRVhFQzsKPj4gKwljYXNlIFZNX1NIQVJFRDoKPj4gKwkJcmV0dXJu
IFBBR0VfTk9ORTsKPj4gKwljYXNlIFZNX1NIQVJFRCB8IFZNX1JFQUQ6Cj4+ICsJCXJldHVybiBQ
QUdFX1JFQURPTkxZOwo+PiArCWNhc2UgVk1fU0hBUkVEIHwgVk1fV1JJVEU6Cj4+ICsJY2FzZSBW
TV9TSEFSRUQgfCBWTV9XUklURSB8IFZNX1JFQUQ6Cj4+ICsJCXJldHVybiBQQUdFX1NIQVJFRDsK
Pj4gKwljYXNlIFZNX1NIQVJFRCB8IFZNX0VYRUM6Cj4+ICsJCXJldHVybiBQQUdFX0VYRUNPTkxZ
Owo+PiArCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQyB8IFZNX1JFQUQ6Cj4+ICsJCXJldHVybiBQ
QUdFX1JFQURPTkxZX0VYRUM7Cj4+ICsJY2FzZSBWTV9TSEFSRUQgfCBWTV9FWEVDIHwgVk1fV1JJ
VEU6Cj4+ICsJY2FzZSBWTV9TSEFSRUQgfCBWTV9FWEVDIHwgVk1fV1JJVEUgfCBWTV9SRUFEOgo+
PiArCQlyZXR1cm4gUEFHRV9TSEFSRURfRVhFQzsKPj4gKwlkZWZhdWx0Ogo+PiArCQlCVUlMRF9C
VUcoKTsKPj4gKwl9Cj4+ICt9Cj4gCj4gSSdkIHNheSBhY2sgZm9yIHRyeWluZyB0byBnZXQgb2Yg
dGhlIGV4dHJhIGFyY2hfdm1fZ2V0X3BhZ2VfcHJvdCgpIGFuZAo+IGFyY2hfZmlsdGVyX3BncHJv
dCgpIGJ1dCwgVEJILCBJJ20gbm90IHNvIGtlZW4gb24gdGhlIG91dGNvbWUuIEkgaGF2ZW4ndAo+
IGJ1aWx0IHRoZSBjb2RlIHRvIHNlZSB3aGF0J3MgZ2VuZXJhdGVkIGJ1dCBJIHN1c3BlY3QgaXQn
cyBubyBzaWduaWZpY2FudAo+IGltcHJvdmVtZW50LiBBcyBmb3IgdGhlIGNvZGUgcmVhZGFiaWxp
dHksIHRoZSBhcm02NCBwYXJ0cyBkb24ndCBsb29rCj4gbXVjaCBiZXR0ZXIgZWl0aGVyLiBUaGUg
b25seSBhZHZhbnRhZ2Ugd2l0aCB0aGlzIHBhdGNoIGlzIHRoYXQgYWxsCj4gZnVuY3Rpb25zIGhh
dmUgYmVlbiBtb3ZlZCB1bmRlciBhcmNoL2FybTY0LgoKR290IGl0LgoKPiAKPiBJJ2Qga2VlcCBt
b3N0IGFyY2hpdGVjdHVyZXMgdGhhdCBkb24ndCBoYXZlIG93biBhcmNoX3ZtX2dldF9wYWdlX3By
b3QoKQo+IG9yIGFyY2hfZmlsdGVyX3BncHJvdCgpIHVuY2hhbmdlZCBhbmQgd2l0aCBhIGdlbmVy
aWMgcHJvdGVjdGlvbl9tYXBbXQo+IGFycmF5LiBGb3IgYXJjaGl0ZWN0dXJlcyB0aGF0IG5lZWQg
ZmFuY2llciBzdHVmZiwgYWRkIGEKPiBDT05GSUdfQVJDSF9IQVNfVk1fR0VUX1BBR0VfUFJPVCAo
YXMgeW91IGRvKSBhbmQgYWxsb3cgdGhlbSB0byBkZWZpbmUKPiB2bV9nZXRfcGFnZV9wcm90KCkg
d2hpbGUgZ2V0dGluZyByaWQgb2YgYXJjaF92bV9nZXRfcGFnZV9wcm90KCkgYW5kCj4gYXJjaF9m
aWx0ZXJfcGdwcm90KCkuIEkgdGhpbmsgeW91IGNvdWxkIGFsc28gZHVwbGljYXRlIHByb3RlY3Rp
b25fbWFwW10KPiBmb3IgYXJjaGl0ZWN0dXJlcyB3aXRoIG93biB2bV9nZXRfcGFnZV9wcm90KCkg
KG1ha2UgaXQgc3RhdGljKSBhbmQKPiAjaWZkZWYgaXQgb3V0IGluIG1tL21tYXAuYy4KPiAKPiBJ
ZiBsYXRlciB5b3UgaGF2ZSBtb3JlIGNvbXBsZXggbmVlZHMgb3IgYSBzd2l0Y2ggc3RhdGVtZW50
IGdlbmVyYXRlcwo+IGJldHRlciBjb2RlLCBnbyBmb3IgaXQsIGJ1dCBmb3IgdGhpcyBzZXJpZXMg
SSdkIGtlZXAgdGhpbmdzIHNpbXBsZSwgb25seQo+IGZvY3VzIG9uIGdldHRpbmcgcmlkIG9mIGFy
Y2hfdm1fZ2V0X3BhZ2VfcHJvdCgpIGFuZAo+IGFyY2hfZmlsdGVyX3BncHJvdCgpLgoKR290IGl0
LgoKPiAKPiBJZiBJIGdyZXAnZWQgY29ycmVjdGx5LCB0aGVyZSBhcmUgb25seSA0IGFyY2hpdGVj
dHVyZXMgdGhhdCBoYXZlIG93bgo+IGFyY2hfdm1fZ2V0X3BhZ2VfcHJvdCgpIChhcm02NCwgcG93
ZXJwYywgc3BhcmMsIHg4NikgYW5kIDIgdGhhdCBoYXZlIG93bgo+IGFyY2hfZmlsdGVyX3BncHJv
dCgpIChhcm02NCwgeDg2KS4gVHJ5IHRvIG9ubHkgY2hhbmdlIHRoZXNlIGZvciB0aGUgdGltZQo+
IGJlaW5nLCB0b2dldGhlciB3aXRoIHRoZSBvdGhlciBnZW5lcmljIG1tIGNsZWFudXBzIHlvdSBo
YXZlIGluIHRoaXMKPiBzZXJpZXMuIEkgdGhpbmsgdGhlcmUgYXJlIGEgY291cGxlIG1vcmUgdGhh
dCB0b3VjaCBwcm90ZWN0aW9uX21hcFtdCj4gKGFybSwgbTY4aykuIFlvdSBjYW4gbGVhdmUgdGhl
IGdlbmVyaWMgcHJvdGVjdGlvbl9tYXBbXSBnbG9iYWwgaWYgdGhlCj4gYXJjaCBkb2VzIG5vdCBz
ZWxlY3QgQVJDSF9IQVNfVk1fR0VUX1BBR0VfUFJPVC4KCk9rYXksIEkgd2lsbCBwcm9iYWJseSBz
cGxpdCB0aGUgc2VyaWVzIGludG8gdHdvIHBhcnRzLgoKLSAgRHJvcCBhcmNoX3ZtX2dldF9wYWdl
X3Byb3QoKSBhbmQgYXJjaF9maWx0ZXJfcGdwcm90KCkgb24gcmVsZXZhbnQKICAgcGxhdGZvcm1z
IGkuZSBhcm02NCwgcG93ZXJwYywgc3BhcmMgYW5kIHg4NiB2aWEgdGhpcyBuZXcgY29uZmlnCiAg
IEFSQ0hfSEFTX1ZNX0dFVF9QQUdFX1BST1QsIGtlZXBpbmcgdGhlIGdlbmVyaWMgcHJvdGVjdGlv
bl9tYXBbXQogICBzaW5jZSBwbGF0Zm9ybSBfX1NYWFgvX19QWFggbWFjcm9zIHdvdWxkIGJlIHN0
aWxsIGFyb3VuZC4KCi0gIERyb3AgX19TWFhYL19fUFhYWCBhY3Jvc3MgYWxsIHBsYXRmb3JtcyB2
aWEganVzdCBpbml0aWFsaXppbmcKICAgcHJvdGVjdGlvbl9tYXBbXSBlYXJseSBkdXJpbmcgYm9v
dCBpbiB0aGUgcGxhdGZvcm0gT1IgbW92aW5nCiAgIGJvdGggdm1fZ2V0X3BhZ2VfcHJvdCgpIHZp
YSBBUkNIX0hBU19WTV9HRVRfUEFHRV9QUk9UIGFuZCB0aGUKICAgZ2VuZXJpYyBwcm90ZWN0aW9u
X21hcFtdIGluc2lkZSB0aGUgcGxhdGZvcm0uCgogICBUaGVyZSB3ZXJlIHNvbWUgb2JqZWN0aW9u
cyB3aXRoIHJlc3BlY3QgdG8gc3dpdGNoIGNhc2UgY29kZSBpbgogICBjb21wYXJpc29uIHRvIHRo
ZSBhcnJheSBiYXNlZCB0YWJsZSBsb29rIHVwLgoKPiAKPj4gK3N0YXRpYyBwZ3Byb3RfdCBhcm02
NF9hcmNoX2ZpbHRlcl9wZ3Byb3QocGdwcm90X3QgcHJvdCkKPj4gK3sKPj4gKwlpZiAoY3B1c19o
YXZlX2NvbnN0X2NhcChBUk02NF9IQVNfRVBBTikpCj4+ICsJCXJldHVybiBwcm90Owo+PiArCj4+
ICsJaWYgKHBncHJvdF92YWwocHJvdCkgIT0gcGdwcm90X3ZhbChQQUdFX0VYRUNPTkxZKSkKPj4g
KwkJcmV0dXJuIHByb3Q7Cj4+ICsKPj4gKwlyZXR1cm4gUEFHRV9SRUFET05MWV9FWEVDOwo+PiAr
fQo+PiArCj4+ICtzdGF0aWMgcGdwcm90X3QgYXJtNjRfYXJjaF92bV9nZXRfcGFnZV9wcm90KHVu
c2lnbmVkIGxvbmcgdm1fZmxhZ3MpCj4+ICt7Cj4+ICsJcHRldmFsX3QgcHJvdCA9IDA7Cj4+ICsK
Pj4gKwlpZiAodm1fZmxhZ3MgJiBWTV9BUk02NF9CVEkpCj4+ICsJCXByb3QgfD0gUFRFX0dQOwo+
PiArCj4+ICsJLyoKPj4gKwkgKiBUaGVyZSBhcmUgdHdvIGNvbmRpdGlvbnMgcmVxdWlyZWQgZm9y
IHJldHVybmluZyBhIE5vcm1hbCBUYWdnZWQKPj4gKwkgKiBtZW1vcnkgdHlwZTogKDEpIHRoZSB1
c2VyIHJlcXVlc3RlZCBpdCB2aWEgUFJPVF9NVEUgcGFzc2VkIHRvCj4+ICsJICogbW1hcCgpIG9y
IG1wcm90ZWN0KCkgYW5kICgyKSB0aGUgY29ycmVzcG9uZGluZyB2bWEgc3VwcG9ydHMgTVRFLiBX
ZQo+PiArCSAqIHJlZ2lzdGVyICgxKSBhcyBWTV9NVEUgaW4gdGhlIHZtYS0+dm1fZmxhZ3MgYW5k
ICgyKSBhcwo+PiArCSAqIFZNX01URV9BTExPV0VELiBOb3RlIHRoYXQgdGhlIGxhdHRlciBjYW4g
b25seSBiZSBzZXQgZHVyaW5nIHRoZQo+PiArCSAqIG1tYXAoKSBjYWxsIHNpbmNlIG1wcm90ZWN0
KCkgZG9lcyBub3QgYWNjZXB0IE1BUF8qIGZsYWdzLgo+PiArCSAqIENoZWNraW5nIGZvciBWTV9N
VEUgb25seSBpcyBzdWZmaWNpZW50IHNpbmNlIGFyY2hfdmFsaWRhdGVfZmxhZ3MoKQo+PiArCSAq
IGRvZXMgbm90IHBlcm1pdCAoVk1fTVRFICYgIVZNX01URV9BTExPV0VEKS4KPj4gKwkgKi8KPj4g
KwlpZiAodm1fZmxhZ3MgJiBWTV9NVEUpCj4+ICsJCXByb3QgfD0gUFRFX0FUVFJJTkRYKE1UX05P
Uk1BTF9UQUdHRUQpOwo+PiArCj4+ICsJcmV0dXJuIF9fcGdwcm90KHByb3QpOwo+PiArfQo+PiAr
Cj4+ICtwZ3Byb3RfdCB2bV9nZXRfcGFnZV9wcm90KHVuc2lnbmVkIGxvbmcgdm1fZmxhZ3MpCj4+
ICt7Cj4+ICsJcGdwcm90X3QgcmV0ID0gX19wZ3Byb3QocGdwcm90X3ZhbChfX3ZtX2dldF9wYWdl
X3Byb3Qodm1fZmxhZ3MpKSB8Cj4+ICsJCQlwZ3Byb3RfdmFsKGFybTY0X2FyY2hfdm1fZ2V0X3Bh
Z2VfcHJvdCh2bV9mbGFncykpKTsKPj4gKwo+PiArCXJldHVybiBhcm02NF9hcmNoX2ZpbHRlcl9w
Z3Byb3QocmV0KTsKPj4gK30KPiAKPiBJZiB3ZSBrZXB0IHRoZSBhcnJheSwgd2UgY2FuIGhhdmUg
ZXZlcnl0aGluZyBpbiBhIHNpbmdsZSBmdW5jdGlvbgo+ICh1bnRlc3RlZCBhbmQgd2l0aCBteSBv
d24gY29tbWVudHMgZm9yIGZ1dHVyZSBjaGFuZ2VzKToKCkdvdCBpdC4KCj4gCj4gcGdwcm90X3Qg
dm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2ZsYWdzKQo+IHsKPiAJcGdwcm90X3Qg
cHJvdCA9IF9fcGdwcm90KHBncHJvdF92YWwocHJvdGVjdGlvbl9tYXBbdm1fZmxhZ3MgJgo+IAkJ
CQkoVk1fUkVBRHxWTV9XUklURXxWTV9FWEVDfFZNX1NIQVJFRCldKSk7Cj4gCj4gCS8qCj4gCSAq
IFdlIGNvdWxkIGdldCByaWQgb2YgdGhpcyB0ZXN0IGlmIHdlIHVwZGF0ZWQgcHJvdGVjdGlvbl9t
YXBbXQo+IAkgKiB0byB0dXJuIGV4ZWMtb25seSBpbnRvIHJlYWQtZXhlYyBkdXJpbmcgYm9vdC4K
PiAJICovCj4gCWlmICghY3B1c19oYXZlX2NvbnN0X2NhcChBUk02NF9IQVNfRVBBTikgJiYKPiAJ
ICAgIHBncHJvdF92YWwocHJvdCkgPT0gcGdwcm90X3ZhbChQQUdFX0VYRUNPTkxZKSkKPiAJCXBy
b3QgPSBQQUdFX1JFQURPTkxZX0VYRUM7Cj4gCj4gCWlmICh2bV9mbGFncyAmIFZNX0FSTTY0X0JU
SSkKPiAJCXByb3QgIT0gUFRFX0dQOwo+IAo+IAkvKgo+IAkgKiBXZSBjYW4gZ2V0IHJpZCBvZiB0
aGUgcmVxdWlyZW1lbnQgZm9yIFBST1RfTk9STUFMIHRvIGJlIDAKPiAJICogc2luY2UgaGVyZSB3
ZSBjYW4gbWFzayBvdXQgUFRFX0FUVFJJTkRYX01BU0suCj4gCSAqLwo+IAlpZiAodm1fZmxhZ3Mg
JiBWTV9NVEUpIHsKPiAJCXByb3QgJj0gflBURV9BVFRSSU5EWF9NQVNLOwo+IAkJcHJvdCB8PSBQ
VEVfQVRUUklORFgoTVRfTk9STUFMX1RBR0dFRCk7Cj4gCX0KPiAKPiAJcmV0dXJuIHByb3Q7Cj4g
fQo+IApfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVu
UklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9s
aXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
