Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 3EDB8204C17
	for <lists+openrisc@lfdr.de>; Tue, 23 Jun 2020 10:19:10 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 0099020C4F;
	Tue, 23 Jun 2020 10:19:07 +0200 (CEST)
Received: from youngberry.canonical.com (youngberry.canonical.com
 [91.189.89.112])
 by mail.librecores.org (Postfix) with ESMTPS id 52D1F20B8B
 for <openrisc@lists.librecores.org>; Tue, 23 Jun 2020 01:47:36 +0200 (CEST)
Received: from ip5f5af08c.dynamic.kabel-deutschland.de ([95.90.240.140]
 helo=wittgenstein.fritz.box) by youngberry.canonical.com with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <christian.brauner@ubuntu.com>)
 id 1jnW8l-0005DO-Tt; Mon, 22 Jun 2020 23:46:16 +0000
From: Christian Brauner <christian.brauner@ubuntu.com>
To: linux-kernel@vger.kernel.org
Date: Tue, 23 Jun 2020 01:43:26 +0200
Message-Id: <20200622234326.906346-18-christian.brauner@ubuntu.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20200622234326.906346-1-christian.brauner@ubuntu.com>
References: <20200622234326.906346-1-christian.brauner@ubuntu.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Tue, 23 Jun 2020 10:19:04 +0200
Subject: [OpenRISC] [PATCH 17/17] arch: rename copy_thread_tls() back to
 copy_thread()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-riscv@lists.infradead.org, Rich Felker <dalias@libc.org>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>, linux-sh@vger.kernel.org,
 "Peter Zijlstra \(Intel\)" <peterz@infradead.org>,
 Catalin Marinas <catalin.marinas@arm.com>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Guo Ren <guoren@kernel.org>,
 "Matthew Wilcox \(Oracle\)" <willy@infradead.org>,
 "H. Peter Anvin" <hpa@zytor.com>, sparclinux@vger.kernel.org,
 linux-hexagon@vger.kernel.org,
 Christian Brauner <christian.brauner@ubuntu.com>,
 Vincent Chen <deanbo422@gmail.com>, Will Deacon <will@kernel.org>,
 Thomas Gleixner <tglx@linutronix.de>,
 Anton Ivanov <anton.ivanov@cambridgegreys.com>,
 Jonas Bonn <jonas@southpole.se>, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Brian Cain <bcain@codeaurora.org>, linux-xtensa@linux-xtensa.org,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>,
 Christian Borntraeger <borntraeger@de.ibm.com>, Ingo Molnar <mingo@redhat.com>,
 linux-parisc@vger.kernel.org, Mark Salter <msalter@redhat.com>,
 linux-csky@vger.kernel.org, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, uclinux-h8-devel@lists.sourceforge.jp,
 Fenghua Yu <fenghua.yu@intel.com>, Albert Ou <aou@eecs.berkeley.edu>,
 Kees Cook <keescook@chromium.org>, Jeff Dike <jdike@addtoit.com>,
 linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linuxppc-dev@lists.ozlabs.org, Aurelien Jacquiot <jacquiot.aurelien@gmail.com>,
 linux-m68k@lists.linux-m68k.org,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Ivan Kokshaysky <ink@jurassic.park.msu.ru>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, Guan Xuetao <gxt@pku.edu.cn>,
 linux-arm-kernel@lists.infradead.org, Chris Zankel <chris@zankel.net>,
 Michal Simek <monstr@monstr.eu>, Tony Luck <tony.luck@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 Vineet Gupta <vgupta@synopsys.com>, linux-mips@vger.kernel.org,
 openrisc@lists.librecores.org, Palmer Dabbelt <palmer@dabbelt.com>,
 Richard Weinberger <richard@nod.at>, Paul Mackerras <paulus@samba.org>,
 Linus Torvalds <torvalds@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>, Al Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Tm93IHRoYXQgSEFWRV9DT1BZX1RIUkVBRF9UTFMgaGFzIGJlZW4gcmVtb3ZlZCwgcmVuYW1lIGNv
cHlfdGhyZWFkX3RscygpCmJhY2sgc2ltcGx5IGNvcHlfdGhyZWFkKCkuIEl0J3MgYSBzaW1wbGVy
IG5hbWUsIGFuZCBkb2Vzbid0IGltcGx5IHRoYXQgb25seQp0bHMgaXMgY29waWVkIGhlcmUuIFRo
aXMgZmluaXNoZXMgYW4gb3V0c3RhbmRpbmcgY2h1bmsgb2YgaW50ZXJuYWwgcHJvY2VzcwpjcmVh
dGlvbiB3b3JrIHNpbmNlIHdlJ3ZlIGFkZGVkIGNsb25lMygpLgoKQ2M6IFJpY2hhcmQgSGVuZGVy
c29uIDxydGhAdHdpZGRsZS5uZXQ+CkNjOiBJdmFuIEtva3NoYXlza3kgPGlua0BqdXJhc3NpYy5w
YXJrLm1zdS5ydT4KQ2M6IE1hdHQgVHVybmVyIDxtYXR0c3Q4OEBnbWFpbC5jb20+CkNjOiBWaW5l
ZXQgR3VwdGEgPHZndXB0YUBzeW5vcHN5cy5jb20+CkNjOiBSdXNzZWxsIEtpbmcgPGxpbnV4QGFy
bWxpbnV4Lm9yZy51az4KQ2M6IENhdGFsaW4gTWFyaW5hcyA8Y2F0YWxpbi5tYXJpbmFzQGFybS5j
b20+CkNjOiBXaWxsIERlYWNvbiA8d2lsbEBrZXJuZWwub3JnPgpDYzogTWFyayBTYWx0ZXIgPG1z
YWx0ZXJAcmVkaGF0LmNvbT4KQ2M6IEF1cmVsaWVuIEphY3F1aW90IDxqYWNxdWlvdC5hdXJlbGll
bkBnbWFpbC5jb20+CkNjOiBHdW8gUmVuIDxndW9yZW5Aa2VybmVsLm9yZz4KQ2M6IFlvc2hpbm9y
aSBTYXRvIDx5c2F0b0B1c2Vycy5zb3VyY2Vmb3JnZS5qcD4KQ2M6IEJyaWFuIENhaW4gPGJjYWlu
QGNvZGVhdXJvcmEub3JnPgpDYzogVG9ueSBMdWNrIDx0b255Lmx1Y2tAaW50ZWwuY29tPgpDYzog
RmVuZ2h1YSBZdSA8ZmVuZ2h1YS55dUBpbnRlbC5jb20+CkNjOiBHZWVydCBVeXR0ZXJob2V2ZW4g
PGdlZXJ0QGxpbnV4LW02OGsub3JnPgpDYzogTWljaGFsIFNpbWVrIDxtb25zdHJAbW9uc3RyLmV1
PgpDYzogVGhvbWFzIEJvZ2VuZG9lcmZlciA8dHNib2dlbmRAYWxwaGEuZnJhbmtlbi5kZT4KQ2M6
IE5pY2sgSHUgPG5pY2todUBhbmRlc3RlY2guY29tPgpDYzogR3JlZW50aW1lIEh1IDxncmVlbi5o
dUBnbWFpbC5jb20+CkNjOiBWaW5jZW50IENoZW4gPGRlYW5ibzQyMkBnbWFpbC5jb20+CkNjOiBM
ZXkgRm9vbiBUYW4gPGxleS5mb29uLnRhbkBpbnRlbC5jb20+CkNjOiBKb25hcyBCb25uIDxqb25h
c0Bzb3V0aHBvbGUuc2U+CkNjOiBTdGVmYW4gS3Jpc3RpYW5zc29uIDxzdGVmYW4ua3Jpc3RpYW5z
c29uQHNhdW5hbGFodGkuZmk+CkNjOiBTdGFmZm9yZCBIb3JuZSA8c2hvcm5lQGdtYWlsLmNvbT4K
Q2M6ICJKYW1lcyBFLkouIEJvdHRvbWxleSIgPEphbWVzLkJvdHRvbWxleUBIYW5zZW5QYXJ0bmVy
c2hpcC5jb20+CkNjOiBIZWxnZSBEZWxsZXIgPGRlbGxlckBnbXguZGU+CkNjOiBNaWNoYWVsIEVs
bGVybWFuIDxtcGVAZWxsZXJtYW4uaWQuYXU+CkNjOiBCZW5qYW1pbiBIZXJyZW5zY2htaWR0IDxi
ZW5oQGtlcm5lbC5jcmFzaGluZy5vcmc+CkNjOiBQYXVsIE1hY2tlcnJhcyA8cGF1bHVzQHNhbWJh
Lm9yZz4KQ2M6IFBhdWwgV2FsbXNsZXkgPHBhdWwud2FsbXNsZXlAc2lmaXZlLmNvbT4KQ2M6IFBh
bG1lciBEYWJiZWx0IDxwYWxtZXJAZGFiYmVsdC5jb20+CkNjOiBBbGJlcnQgT3UgPGFvdUBlZWNz
LmJlcmtlbGV5LmVkdT4KQ2M6IENocmlzdGlhbiBCb3JudHJhZWdlciA8Ym9ybnRyYWVnZXJAZGUu
aWJtLmNvbT4KQ2M6IFJpY2ggRmVsa2VyIDxkYWxpYXNAbGliYy5vcmc+CkNjOiAiRGF2aWQgUy4g
TWlsbGVyIiA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KQ2M6IEplZmYgRGlrZSA8amRpa2VAYWRkdG9p
dC5jb20+CkNjOiBSaWNoYXJkIFdlaW5iZXJnZXIgPHJpY2hhcmRAbm9kLmF0PgpDYzogQW50b24g
SXZhbm92IDxhbnRvbi5pdmFub3ZAY2FtYnJpZGdlZ3JleXMuY29tPgpDYzogR3VhbiBYdWV0YW8g
PGd4dEBwa3UuZWR1LmNuPgpDYzogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxpbnV0cm9uaXguZGU+
CkNjOiBJbmdvIE1vbG5hciA8bWluZ29AcmVkaGF0LmNvbT4KQ2M6IHg4NkBrZXJuZWwub3JnCkNj
OiAiSC4gUGV0ZXIgQW52aW4iIDxocGFAenl0b3IuY29tPgpDYzogQ2hyaXMgWmFua2VsIDxjaHJp
c0B6YW5rZWwubmV0PgpDYzogTWF4IEZpbGlwcG92IDxqY212YmtiY0BnbWFpbC5jb20+CkNjOiBL
ZWVzIENvb2sgPGtlZXNjb29rQGNocm9taXVtLm9yZz4KQ2M6ICJQZXRlciBaaWpsc3RyYSAoSW50
ZWwpIiA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiAiTWF0dGhldyBXaWxjb3ggKE9yYWNsZSki
IDx3aWxseUBpbmZyYWRlYWQub3JnPgpDYzogQWwgVmlybyA8dmlyb0B6ZW5pdi5saW51eC5vcmcu
dWs+CkNjOiBsaW51eC1hbHBoYUB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2Vy
Lmtlcm5lbC5vcmcKQ2M6IGxpbnV4LXNucHMtYXJjQGxpc3RzLmluZnJhZGVhZC5vcmcKQ2M6IGxp
bnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgtYzZ4LWRldkBsaW51
eC1jNngub3JnCkNjOiBsaW51eC1jc2t5QHZnZXIua2VybmVsLm9yZwpDYzogdWNsaW51eC1oOC1k
ZXZlbEBsaXN0cy5zb3VyY2Vmb3JnZS5qcApDYzogbGludXgtaGV4YWdvbkB2Z2VyLmtlcm5lbC5v
cmcKQ2M6IGxpbnV4LWlhNjRAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1tNjhrQGxpc3RzLmxp
bnV4LW02OGsub3JnCkNjOiBsaW51eC1taXBzQHZnZXIua2VybmVsLm9yZwpDYzogb3BlbnJpc2NA
bGlzdHMubGlicmVjb3Jlcy5vcmcKQ2M6IGxpbnV4LXBhcmlzY0B2Z2VyLmtlcm5lbC5vcmcKQ2M6
IGxpbnV4cHBjLWRldkBsaXN0cy5vemxhYnMub3JnCkNjOiBsaW51eC1yaXNjdkBsaXN0cy5pbmZy
YWRlYWQub3JnCkNjOiBsaW51eC1zMzkwQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtc2hAdmdl
ci5rZXJuZWwub3JnCkNjOiBzcGFyY2xpbnV4QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtdW1A
bGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgteHRlbnNhQGxpbnV4LXh0ZW5zYS5vcmcKU2ln
bmVkLW9mZi1ieTogQ2hyaXN0aWFuIEJyYXVuZXIgPGNocmlzdGlhbi5icmF1bmVyQHVidW50dS5j
b20+Ci0tLQogYXJjaC9hbHBoYS9rZXJuZWwvcHJvY2Vzcy5jICAgICAgfCAyICstCiBhcmNoL2Fy
Yy9rZXJuZWwvcHJvY2Vzcy5jICAgICAgICB8IDIgKy0KIGFyY2gvYXJtL2tlcm5lbC9wcm9jZXNz
LmMgICAgICAgIHwgMiArLQogYXJjaC9hcm02NC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgfCAyICst
CiBhcmNoL2M2eC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgICB8IDIgKy0KIGFyY2gvY3NreS9rZXJu
ZWwvcHJvY2Vzcy5jICAgICAgIHwgMiArLQogYXJjaC9oODMwMC9rZXJuZWwvcHJvY2Vzcy5jICAg
ICAgfCAyICstCiBhcmNoL2hleGFnb24va2VybmVsL3Byb2Nlc3MuYyAgICB8IDIgKy0KIGFyY2gv
aWE2NC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgIHwgNCArKy0tCiBhcmNoL202OGsva2VybmVsL3By
b2Nlc3MuYyAgICAgICB8IDIgKy0KIGFyY2gvbWljcm9ibGF6ZS9rZXJuZWwvcHJvY2Vzcy5jIHwg
MiArLQogYXJjaC9taXBzL2tlcm5lbC9wcm9jZXNzLmMgICAgICAgfCAyICstCiBhcmNoL25kczMy
L2tlcm5lbC9wcm9jZXNzLmMgICAgICB8IDIgKy0KIGFyY2gvbmlvczIva2VybmVsL3Byb2Nlc3Mu
YyAgICAgIHwgMiArLQogYXJjaC9vcGVucmlzYy9rZXJuZWwvcHJvY2Vzcy5jICAgfCA0ICsrLS0K
IGFyY2gvcGFyaXNjL2tlcm5lbC9wcm9jZXNzLmMgICAgIHwgMiArLQogYXJjaC9wb3dlcnBjL2tl
cm5lbC9wcm9jZXNzLmMgICAgfCAyICstCiBhcmNoL3Jpc2N2L2tlcm5lbC9wcm9jZXNzLmMgICAg
ICB8IDIgKy0KIGFyY2gvczM5MC9rZXJuZWwvcHJvY2Vzcy5jICAgICAgIHwgMiArLQogYXJjaC9z
aC9rZXJuZWwvcHJvY2Vzc18zMi5jICAgICAgfCAyICstCiBhcmNoL3NwYXJjL2tlcm5lbC9wcm9j
ZXNzLmMgICAgICB8IDYgKysrLS0tCiBhcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzMyLmMgICB8
IDIgKy0KIGFyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3NfNjQuYyAgIHwgMiArLQogYXJjaC91bS9r
ZXJuZWwvcHJvY2Vzcy5jICAgICAgICAgfCAyICstCiBhcmNoL3VuaWNvcmUzMi9rZXJuZWwvcHJv
Y2Vzcy5jICB8IDIgKy0KIGFyY2gveDg2L2tlcm5lbC9wcm9jZXNzLmMgICAgICAgIHwgMiArLQog
YXJjaC94ODYva2VybmVsL3Vud2luZF9mcmFtZS5jICAgfCAyICstCiBhcmNoL3h0ZW5zYS9rZXJu
ZWwvcHJvY2Vzcy5jICAgICB8IDIgKy0KIGluY2x1ZGUvbGludXgvc2NoZWQvdGFzay5oICAgICAg
IHwgMiArLQoga2VybmVsL2ZvcmsuYyAgICAgICAgICAgICAgICAgICAgfCAyICstCiAzMCBmaWxl
cyBjaGFuZ2VkLCAzNCBpbnNlcnRpb25zKCspLCAzNCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9hcmNoL2FscGhhL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL2FscGhhL2tlcm5lbC9wcm9jZXNz
LmMKaW5kZXggZGZkYjZiNmJhNjFjLi5iY2U5NmRkYWYyZmMgMTAwNjQ0Ci0tLSBhL2FyY2gvYWxw
aGEva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL2FscGhhL2tlcm5lbC9wcm9jZXNzLmMKQEAg
LTIzMyw3ICsyMzMsNyBAQCByZWxlYXNlX3RocmVhZChzdHJ1Y3QgdGFza19zdHJ1Y3QgKmRlYWRf
dGFzaykKIC8qCiAgKiBDb3B5IGFyY2hpdGVjdHVyZS1zcGVjaWZpYyB0aHJlYWQgc3RhdGUKICAq
LwotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25l
ZCBsb25nIHVzcCwKK2ludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1
bnNpZ25lZCBsb25nIHVzcCwKIAkJICAgIHVuc2lnbmVkIGxvbmcga3RocmVhZF9hcmcsIHN0cnVj
dCB0YXNrX3N0cnVjdCAqcCwKIAkJICAgIHVuc2lnbmVkIGxvbmcgdGxzKQogewpkaWZmIC0tZ2l0
IGEvYXJjaC9hcmMva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvYXJjL2tlcm5lbC9wcm9jZXNzLmMK
aW5kZXggOGM4ZTUxNzJmZWNkLi41YjY5OTVjODIzYTYgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJjL2tl
cm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC9hcmMva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTczLDcg
KzE3Myw3IEBAIGFzbWxpbmthZ2Ugdm9pZCByZXRfZnJvbV9mb3JrKHZvaWQpOwogICogfCAgICB1
c2VyX3IyNSAgICB8CiAgKiAtLS0tLS0tLS0tLS0tLS0tLS0gIDw9PT09PSBFTkQgb2YgUEFHRQog
ICovCi1pbnQgY29weV90aHJlYWRfdGxzKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2ln
bmVkIGxvbmcgdXNwLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3Ms
IHVuc2lnbmVkIGxvbmcgdXNwLAogCXVuc2lnbmVkIGxvbmcga3RocmVhZF9hcmcsIHN0cnVjdCB0
YXNrX3N0cnVjdCAqcCwgdW5zaWduZWQgbG9uZyB0bHMpCiB7CiAJc3RydWN0IHB0X3JlZ3MgKmNf
cmVnczsgICAgICAgIC8qIGNoaWxkJ3MgcHRfcmVncyAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9hcm0v
a2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvYXJtL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggNThlYWEx
ZjYwZTE2Li4wMzg2NjkwNzFmOWEgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL2tlcm5lbC9wcm9jZXNz
LmMKKysrIGIvYXJjaC9hcm0va2VybmVsL3Byb2Nlc3MuYwpAQCAtMjI2LDcgKzIyNiw3IEBAIHZv
aWQgcmVsZWFzZV90aHJlYWQoc3RydWN0IHRhc2tfc3RydWN0ICpkZWFkX3Rhc2spCiBhc21saW5r
YWdlIHZvaWQgcmV0X2Zyb21fZm9yayh2b2lkKSBfX2FzbV9fKCJyZXRfZnJvbV9mb3JrIik7CiAK
IGludAotY29weV90aHJlYWRfdGxzKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVk
IGxvbmcgc3RhY2tfc3RhcnQsCitjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdz
LCB1bnNpZ25lZCBsb25nIHN0YWNrX3N0YXJ0LAogCSAgICB1bnNpZ25lZCBsb25nIHN0a19zeiwg
c3RydWN0IHRhc2tfc3RydWN0ICpwLCB1bnNpZ25lZCBsb25nIHRscykKIHsKIAlzdHJ1Y3QgdGhy
ZWFkX2luZm8gKnRocmVhZCA9IHRhc2tfdGhyZWFkX2luZm8ocCk7CmRpZmYgLS1naXQgYS9hcmNo
L2FybTY0L2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL2FybTY0L2tlcm5lbC9wcm9jZXNzLmMKaW5k
ZXggNjA4OTYzOGM3ZDQzLi44NGVjNjMwYjhhYjUgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQva2Vy
bmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL2FybTY0L2tlcm5lbC9wcm9jZXNzLmMKQEAgLTM3NSw3
ICszNzUsNyBAQCBpbnQgYXJjaF9kdXBfdGFza19zdHJ1Y3Qoc3RydWN0IHRhc2tfc3RydWN0ICpk
c3QsIHN0cnVjdCB0YXNrX3N0cnVjdCAqc3JjKQogCiBhc21saW5rYWdlIHZvaWQgcmV0X2Zyb21f
Zm9yayh2b2lkKSBhc20oInJldF9mcm9tX2ZvcmsiKTsKIAotaW50IGNvcHlfdGhyZWFkX3Rscyh1
bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHN0YWNrX3N0YXJ0LAoraW50
IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3Rh
Y2tfc3RhcnQsCiAJCXVuc2lnbmVkIGxvbmcgc3RrX3N6LCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnAs
IHVuc2lnbmVkIGxvbmcgdGxzKQogewogCXN0cnVjdCBwdF9yZWdzICpjaGlsZHJlZ3MgPSB0YXNr
X3B0X3JlZ3MocCk7CmRpZmYgLS1naXQgYS9hcmNoL2M2eC9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJj
aC9jNngva2VybmVsL3Byb2Nlc3MuYwppbmRleCBhZmEzZWE5YTkzYWEuLmFlZTQ5ZmIwYTVlYiAx
MDA2NDQKLS0tIGEvYXJjaC9jNngva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL2M2eC9rZXJu
ZWwvcHJvY2Vzcy5jCkBAIC0xMDQsNyArMTA0LDcgQEAgdm9pZCBzdGFydF90aHJlYWQoc3RydWN0
IHB0X3JlZ3MgKnJlZ3MsIHVuc2lnbmVkIGludCBwYywgdW5zaWduZWQgbG9uZyB1c3ApCiAvKgog
ICogQ29weSBhIG5ldyB0aHJlYWQgY29udGV4dCBpbiBpdHMgc3RhY2suCiAgKi8KLWludCBjb3B5
X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3As
CitpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9u
ZyB1c3AsCiAJCSAgICB1bnNpZ25lZCBsb25nIHVzdGtfc2l6ZSwgc3RydWN0IHRhc2tfc3RydWN0
ICpwLAogCQkgICAgdW5zaWduZWQgbG9uZyB0bHMpCiB7CmRpZmYgLS1naXQgYS9hcmNoL2Nza3kv
a2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvY3NreS9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IDhiM2Zh
ZDA2MmFiMi4uMjhjZmVhYWY5MDJhIDEwMDY0NAotLS0gYS9hcmNoL2Nza3kva2VybmVsL3Byb2Nl
c3MuYworKysgYi9hcmNoL2Nza3kva2VybmVsL3Byb2Nlc3MuYwpAQCAtNDAsNyArNDAsNyBAQCB1
bnNpZ25lZCBsb25nIHRocmVhZF9zYXZlZF9wYyhzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRzaykKIAly
ZXR1cm4gc3ctPnIxNTsKIH0KIAotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNs
b25lX2ZsYWdzLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsCiAJ
CXVuc2lnbmVkIGxvbmcgdXNwLAogCQl1bnNpZ25lZCBsb25nIGt0aHJlYWRfYXJnLAogCQlzdHJ1
Y3QgdGFza19zdHJ1Y3QgKnAsCmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL2tlcm5lbC9wcm9jZXNz
LmMgYi9hcmNoL2g4MzAwL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggYWUyM2RlNGRjZjQyLi42NjVj
M2Q5OGM0M2UgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgzMDAva2VybmVsL3Byb2Nlc3MuYworKysgYi9h
cmNoL2g4MzAwL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTEwNSw3ICsxMDUsNyBAQCB2b2lkIGZsdXNo
X3RocmVhZCh2b2lkKQogewogfQogCi1pbnQgY29weV90aHJlYWRfdGxzKHVuc2lnbmVkIGxvbmcg
Y2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgdXNwLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVk
IGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgdXNwLAogCQkgICAgdW5zaWduZWQgbG9u
ZyB0b3BzdGssIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwKIAkJICAgIHVuc2lnbmVkIGxvbmcgdGxz
KQogewpkaWZmIC0tZ2l0IGEvYXJjaC9oZXhhZ29uL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL2hl
eGFnb24va2VybmVsL3Byb2Nlc3MuYwppbmRleCBkNzU2Zjk1NTZkZDcuLmU1YzNjZTAxOWRjZiAx
MDA2NDQKLS0tIGEvYXJjaC9oZXhhZ29uL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC9oZXhh
Z29uL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTUwLDcgKzUwLDcgQEAgdm9pZCBhcmNoX2NwdV9pZGxl
KHZvaWQpCiAvKgogICogQ29weSBhcmNoaXRlY3R1cmUtc3BlY2lmaWMgdGhyZWFkIHN0YXRlCiAg
Ki8KLWludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWdu
ZWQgbG9uZyB1c3AsCitpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywg
dW5zaWduZWQgbG9uZyB1c3AsCiAJCSAgICB1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tf
c3RydWN0ICpwLCB1bnNpZ25lZCBsb25nIHRscykKIHsKIAlzdHJ1Y3QgdGhyZWFkX2luZm8gKnRp
ID0gdGFza190aHJlYWRfaW5mbyhwKTsKZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9rZXJuZWwvcHJv
Y2Vzcy5jIGIvYXJjaC9pYTY0L2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggNDE2ZGNhNjE5ZGE1Li42
ZTFiMDc2ZDFkY2YgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jCisrKyBi
L2FyY2gvaWE2NC9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0zMTEsNyArMzExLDcgQEAgaWE2NF9sb2Fk
X2V4dHJhIChzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2spCiAgKgk8Y2xvbmUgc3lzY2FsbD4JICAg
ICAgICA8c29tZSBrZXJuZWwgY2FsbCBmcmFtZXM+CiAgKglzeXNfY2xvbmUJCSAgIDoKICAqCV9k
b19mb3JrCQlfZG9fZm9yawotICoJY29weV90aHJlYWRfdGxzCQljb3B5X3RocmVhZF90bHMKKyAq
CWNvcHlfdGhyZWFkCQljb3B5X3RocmVhZAogICoKICAqIFRoaXMgbWVhbnMgdGhhdCB0aGUgc3Rh
Y2sgbGF5b3V0IGlzIGFzIGZvbGxvd3M6CiAgKgpAQCAtMzMzLDcgKzMzMyw3IEBAIGlhNjRfbG9h
ZF9leHRyYSAoc3RydWN0IHRhc2tfc3RydWN0ICp0YXNrKQogICogc28gdGhlcmUgaXMgbm90aGlu
ZyB0byB3b3JyeSBhYm91dC4KICAqLwogaW50Ci1jb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9u
ZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c2VyX3N0YWNrX2Jhc2UsCitjb3B5X3RocmVh
ZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVzZXJfc3RhY2tfYmFz
ZSwKIAkJICAgIHVuc2lnbmVkIGxvbmcgdXNlcl9zdGFja19zaXplLCBzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnAsCiAJCSAgICB1bnNpZ25lZCBsb25nIHRscykKIHsKZGlmZiAtLWdpdCBhL2FyY2gvbTY4
ay9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9tNjhrL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggMDYw
ODQzOWJhNDUyLi4zODdjMjk5ODM4ZTcgMTAwNjQ0Ci0tLSBhL2FyY2gvbTY4ay9rZXJuZWwvcHJv
Y2Vzcy5jCisrKyBiL2FyY2gvbTY4ay9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMzgsNyArMTM4LDcg
QEAgYXNtbGlua2FnZSBpbnQgbTY4a19jbG9uZTMoc3RydWN0IHB0X3JlZ3MgKnJlZ3MpCiAJcmV0
dXJuIHN5c19jbG9uZTMoKHN0cnVjdCBjbG9uZV9hcmdzIF9fdXNlciAqKXJlZ3MtPmQxLCByZWdz
LT5kMik7CiB9CiAKLWludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFn
cywgdW5zaWduZWQgbG9uZyB1c3AsCitpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9u
ZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3AsCiAJCSAgICB1bnNpZ25lZCBsb25nIGFyZywgc3Ry
dWN0IHRhc2tfc3RydWN0ICpwLAogCQkgICAgdW5zaWduZWQgbG9uZyB0bHMpCiB7CmRpZmYgLS1n
aXQgYS9hcmNoL21pY3JvYmxhemUva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvbWljcm9ibGF6ZS9r
ZXJuZWwvcHJvY2Vzcy5jCmluZGV4IGMyY2E5YzMyNjUxMC4uNzIwNjYwMGZhNmNkIDEwMDY0NAot
LS0gYS9hcmNoL21pY3JvYmxhemUva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL21pY3JvYmxh
emUva2VybmVsL3Byb2Nlc3MuYwpAQCAtNTQsNyArNTQsNyBAQCB2b2lkIGZsdXNoX3RocmVhZCh2
b2lkKQogewogfQogCi1pbnQgY29weV90aHJlYWRfdGxzKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxh
Z3MsIHVuc2lnbmVkIGxvbmcgdXNwLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xv
bmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgdXNwLAogCQkgICAgdW5zaWduZWQgbG9uZyBhcmcsIHN0
cnVjdCB0YXNrX3N0cnVjdCAqcCwgdW5zaWduZWQgbG9uZyB0bHMpCiB7CiAJc3RydWN0IHB0X3Jl
Z3MgKmNoaWxkcmVncyA9IHRhc2tfcHRfcmVncyhwKTsKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9r
ZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9taXBzL2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggZmY1MzIw
Yjc5MTAwLi5mMDkwYjU2YmEzZjIgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9rZXJuZWwvcHJvY2Vz
cy5jCisrKyBiL2FyY2gvbWlwcy9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMTksNyArMTE5LDcgQEAg
aW50IGFyY2hfZHVwX3Rhc2tfc3RydWN0KHN0cnVjdCB0YXNrX3N0cnVjdCAqZHN0LCBzdHJ1Y3Qg
dGFza19zdHJ1Y3QgKnNyYykKIC8qCiAgKiBDb3B5IGFyY2hpdGVjdHVyZS1zcGVjaWZpYyB0aHJl
YWQgc3RhdGUKICAqLwotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2Zs
YWdzLCB1bnNpZ25lZCBsb25nIHVzcCwKK2ludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNs
b25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHVzcCwKIAl1bnNpZ25lZCBsb25nIGt0aHJlYWRfYXJn
LCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnAsIHVuc2lnbmVkIGxvbmcgdGxzKQogewogCXN0cnVjdCB0
aHJlYWRfaW5mbyAqdGkgPSB0YXNrX3RocmVhZF9pbmZvKHApOwpkaWZmIC0tZ2l0IGEvYXJjaC9u
ZHMzMi9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4
IDdkYmIxYmY2NDE2NS4uMTAyMGUyYzZkY2Q4IDEwMDY0NAotLS0gYS9hcmNoL25kczMyL2tlcm5l
bC9wcm9jZXNzLmMKKysrIGIvYXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xNDksNyAr
MTQ5LDcgQEAgdm9pZCBmbHVzaF90aHJlYWQodm9pZCkKIERFRklORV9QRVJfQ1BVKHN0cnVjdCB0
YXNrX3N0cnVjdCAqLCBfX2VudHJ5X3Rhc2spOwogCiBhc21saW5rYWdlIHZvaWQgcmV0X2Zyb21f
Zm9yayh2b2lkKSBfX2FzbV9fKCJyZXRfZnJvbV9mb3JrIik7Ci1pbnQgY29weV90aHJlYWRfdGxz
KHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3RhY2tfc3RhcnQsCitp
bnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyBz
dGFja19zdGFydCwKIAkJICAgIHVuc2lnbmVkIGxvbmcgc3RrX3N6LCBzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnAsCiAJCSAgICB1bnNpZ25lZCBsb25nIHRscykKIHsKZGlmZiAtLWdpdCBhL2FyY2gvbmlv
czIva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvbmlvczIva2VybmVsL3Byb2Nlc3MuYwppbmRleCAz
ZGRlNGQ2ZDhmYmUuLmE2ZDViMTU4MTY3YiAxMDA2NDQKLS0tIGEvYXJjaC9uaW9zMi9rZXJuZWwv
cHJvY2Vzcy5jCisrKyBiL2FyY2gvbmlvczIva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTAwLDcgKzEw
MCw3IEBAIHZvaWQgZmx1c2hfdGhyZWFkKHZvaWQpCiB7CiB9CiAKLWludCBjb3B5X3RocmVhZF90
bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3AsCitpbnQgY29w
eV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3AsCiAJ
CSAgICB1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0ICpwLCB1bnNpZ25lZCBs
b25nIHRscykKIHsKIAlzdHJ1Y3QgcHRfcmVncyAqY2hpbGRyZWdzID0gdGFza19wdF9yZWdzKHAp
OwpkaWZmIC0tZ2l0IGEvYXJjaC9vcGVucmlzYy9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9vcGVu
cmlzYy9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IGQ3MDEwZTcyNDUwYy4uMTkwNDVhM2VmYjhhIDEw
MDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC9vcGVu
cmlzYy9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMTYsNyArMTE2LDcgQEAgdm9pZCByZWxlYXNlX3Ro
cmVhZChzdHJ1Y3QgdGFza19zdHJ1Y3QgKmRlYWRfdGFzaykKIGV4dGVybiBhc21saW5rYWdlIHZv
aWQgcmV0X2Zyb21fZm9yayh2b2lkKTsKIAogLyoKLSAqIGNvcHlfdGhyZWFkX3RscworICogY29w
eV90aHJlYWQKICAqIEBjbG9uZV9mbGFnczogZmxhZ3MKICAqIEB1c3A6IHVzZXIgc3RhY2sgcG9p
bnRlciBvciBmbiBmb3Iga2VybmVsIHRocmVhZAogICogQGFyZzogYXJnIHRvIGZuIGZvciBrZXJu
ZWwgdGhyZWFkOyBhbHdheXMgTlVMTCBmb3IgdXNlcnNwYWNlIHRocmVhZApAQCAtMTQ3LDcgKzE0
Nyw3IEBAIGV4dGVybiBhc21saW5rYWdlIHZvaWQgcmV0X2Zyb21fZm9yayh2b2lkKTsKICAqLwog
CiBpbnQKLWNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25l
ZCBsb25nIHVzcCwKK2NvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2ln
bmVkIGxvbmcgdXNwLAogCQl1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0ICpw
LCB1bnNpZ25lZCBsb25nIHRscykKIHsKIAlzdHJ1Y3QgcHRfcmVncyAqdXNlcnJlZ3M7CmRpZmYg
LS1naXQgYS9hcmNoL3BhcmlzYy9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9wYXJpc2Mva2VybmVs
L3Byb2Nlc3MuYwppbmRleCBiN2FiYjEyZWRkM2EuLmRlNjI5OWZmMTUzMCAxMDA2NDQKLS0tIGEv
YXJjaC9wYXJpc2Mva2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL3BhcmlzYy9rZXJuZWwvcHJv
Y2Vzcy5jCkBAIC0yMDgsNyArMjA4LDcgQEAgYXJjaF9pbml0Y2FsbChwYXJpc2NfaWRsZV9pbml0
KTsKICAqIENvcHkgYXJjaGl0ZWN0dXJlLXNwZWNpZmljIHRocmVhZCBzdGF0ZQogICovCiBpbnQK
LWNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25n
IHVzcCwKK2NvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxv
bmcgdXNwLAogCSAgICB1bnNpZ25lZCBsb25nIGt0aHJlYWRfYXJnLCBzdHJ1Y3QgdGFza19zdHJ1
Y3QgKnAsIHVuc2lnbmVkIGxvbmcgdGxzKQogewogCXN0cnVjdCBwdF9yZWdzICpjcmVncyA9ICYo
cC0+dGhyZWFkLnJlZ3MpOwpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2tlcm5lbC9wcm9jZXNz
LmMgYi9hcmNoL3Bvd2VycGMva2VybmVsL3Byb2Nlc3MuYwppbmRleCA0NjUwYjliYjIxN2YuLjc5
NGI3NTRkZWVjMiAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2tlcm5lbC9wcm9jZXNzLmMKKysr
IGIvYXJjaC9wb3dlcnBjL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTE1OTMsNyArMTU5Myw3IEBAIHN0
YXRpYyB2b2lkIHNldHVwX2tzcF92c2lkKHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwgdW5zaWduZWQg
bG9uZyBzcCkKIC8qCiAgKiBDb3B5IGFyY2hpdGVjdHVyZS1zcGVjaWZpYyB0aHJlYWQgc3RhdGUK
ICAqLwotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNp
Z25lZCBsb25nIHVzcCwKK2ludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdz
LCB1bnNpZ25lZCBsb25nIHVzcCwKIAkJdW5zaWduZWQgbG9uZyBrdGhyZWFkX2FyZywgc3RydWN0
IHRhc2tfc3RydWN0ICpwLAogCQl1bnNpZ25lZCBsb25nIHRscykKIHsKZGlmZiAtLWdpdCBhL2Fy
Y2gvcmlzY3Yva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvcmlzY3Yva2VybmVsL3Byb2Nlc3MuYwpp
bmRleCA4MjRkMTE3Y2YyMDIuLmQ4YTc5YjNkMTZlYSAxMDA2NDQKLS0tIGEvYXJjaC9yaXNjdi9r
ZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvcmlzY3Yva2VybmVsL3Byb2Nlc3MuYwpAQCAtMTAx
LDcgKzEwMSw3IEBAIGludCBhcmNoX2R1cF90YXNrX3N0cnVjdChzdHJ1Y3QgdGFza19zdHJ1Y3Qg
KmRzdCwgc3RydWN0IHRhc2tfc3RydWN0ICpzcmMpCiAJcmV0dXJuIDA7CiB9CiAKLWludCBjb3B5
X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3As
CitpbnQgY29weV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9u
ZyB1c3AsCiAJdW5zaWduZWQgbG9uZyBhcmcsIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwgdW5zaWdu
ZWQgbG9uZyB0bHMpCiB7CiAJc3RydWN0IHB0X3JlZ3MgKmNoaWxkcmVncyA9IHRhc2tfcHRfcmVn
cyhwKTsKZGlmZiAtLWdpdCBhL2FyY2gvczM5MC9rZXJuZWwvcHJvY2Vzcy5jIGIvYXJjaC9zMzkw
L2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggZWI2ZTIzYWQxNWEyLi42MDU4MmU4MzEwNGIgMTAwNjQ0
Ci0tLSBhL2FyY2gvczM5MC9rZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvczM5MC9rZXJuZWwv
cHJvY2Vzcy5jCkBAIC04MCw3ICs4MCw3IEBAIGludCBhcmNoX2R1cF90YXNrX3N0cnVjdChzdHJ1
Y3QgdGFza19zdHJ1Y3QgKmRzdCwgc3RydWN0IHRhc2tfc3RydWN0ICpzcmMpCiAJcmV0dXJuIDA7
CiB9CiAKLWludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5z
aWduZWQgbG9uZyBuZXdfc3RhY2twLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xv
bmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgbmV3X3N0YWNrcCwKIAkJICAgIHVuc2lnbmVkIGxvbmcg
YXJnLCBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnAsIHVuc2lnbmVkIGxvbmcgdGxzKQogewogCXN0cnVj
dCBmYWtlX2ZyYW1lCmRpZmYgLS1naXQgYS9hcmNoL3NoL2tlcm5lbC9wcm9jZXNzXzMyLmMgYi9h
cmNoL3NoL2tlcm5lbC9wcm9jZXNzXzMyLmMKaW5kZXggNTM3YTgyZDgwNjE2Li5lYThkNzU0OGJh
OTUgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gva2VybmVsL3Byb2Nlc3NfMzIuYworKysgYi9hcmNoL3No
L2tlcm5lbC9wcm9jZXNzXzMyLmMKQEAgLTExNSw3ICsxMTUsNyBAQCBFWFBPUlRfU1lNQk9MKGR1
bXBfZnB1KTsKIGFzbWxpbmthZ2Ugdm9pZCByZXRfZnJvbV9mb3JrKHZvaWQpOwogYXNtbGlua2Fn
ZSB2b2lkIHJldF9mcm9tX2tlcm5lbF90aHJlYWQodm9pZCk7CiAKLWludCBjb3B5X3RocmVhZF90
bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3AsCitpbnQgY29w
eV90aHJlYWQodW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3AsCiAJ
CSAgICB1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0ICpwLCB1bnNpZ25lZCBs
b25nIHRscykKIHsKIAlzdHJ1Y3QgdGhyZWFkX2luZm8gKnRpID0gdGFza190aHJlYWRfaW5mbyhw
KTsKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvc3BhcmMv
a2VybmVsL3Byb2Nlc3MuYwppbmRleCA4YmJlNjJkNzdiNzcuLjUyMzRiNWNjYzBiOSAxMDA2NDQK
LS0tIGEvYXJjaC9zcGFyYy9rZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gvc3BhcmMva2VybmVs
L3Byb2Nlc3MuYwpAQCAtMjgsNyArMjgsNyBAQCBhc21saW5rYWdlIGxvbmcgc3BhcmNfZm9yayhz
dHJ1Y3QgcHRfcmVncyAqcmVncykKIAlyZXQgPSBfZG9fZm9yaygmYXJncyk7CiAKIAkvKiBJZiB3
ZSBnZXQgYW4gZXJyb3IgYW5kIHBvdGVudGlhbGx5IHJlc3RhcnQgdGhlIHN5c3RlbQotCSAqIGNh
bGwsIHdlJ3JlIHNjcmV3ZWQgYmVjYXVzZSBjb3B5X3RocmVhZF90bHMoKSBjbG9iYmVyZWQKKwkg
KiBjYWxsLCB3ZSdyZSBzY3Jld2VkIGJlY2F1c2UgY29weV90aHJlYWQoKSBjbG9iYmVyZWQKIAkg
KiB0aGUgcGFyZW50J3MgJW8xLiAgU28gZGV0ZWN0IHRoYXQgY2FzZSBhbmQgcmVzdG9yZSBpdAog
CSAqIGhlcmUuCiAJICovCkBAIC01Myw3ICs1Myw3IEBAIGFzbWxpbmthZ2UgbG9uZyBzcGFyY192
Zm9yayhzdHJ1Y3QgcHRfcmVncyAqcmVncykKIAlyZXQgPSBfZG9fZm9yaygmYXJncyk7CiAKIAkv
KiBJZiB3ZSBnZXQgYW4gZXJyb3IgYW5kIHBvdGVudGlhbGx5IHJlc3RhcnQgdGhlIHN5c3RlbQot
CSAqIGNhbGwsIHdlJ3JlIHNjcmV3ZWQgYmVjYXVzZSBjb3B5X3RocmVhZF90bHMoKSBjbG9iYmVy
ZWQKKwkgKiBjYWxsLCB3ZSdyZSBzY3Jld2VkIGJlY2F1c2UgY29weV90aHJlYWQoKSBjbG9iYmVy
ZWQKIAkgKiB0aGUgcGFyZW50J3MgJW8xLiAgU28gZGV0ZWN0IHRoYXQgY2FzZSBhbmQgcmVzdG9y
ZSBpdAogCSAqIGhlcmUuCiAJICovCkBAIC05OSw3ICs5OSw3IEBAIGFzbWxpbmthZ2UgbG9uZyBz
cGFyY19jbG9uZShzdHJ1Y3QgcHRfcmVncyAqcmVncykKIAlyZXQgPSBfZG9fZm9yaygmYXJncyk7
CiAKIAkvKiBJZiB3ZSBnZXQgYW4gZXJyb3IgYW5kIHBvdGVudGlhbGx5IHJlc3RhcnQgdGhlIHN5
c3RlbQotCSAqIGNhbGwsIHdlJ3JlIHNjcmV3ZWQgYmVjYXVzZSBjb3B5X3RocmVhZF90bHMoKSBj
bG9iYmVyZWQKKwkgKiBjYWxsLCB3ZSdyZSBzY3Jld2VkIGJlY2F1c2UgY29weV90aHJlYWQoKSBj
bG9iYmVyZWQKIAkgKiB0aGUgcGFyZW50J3MgJW8xLiAgU28gZGV0ZWN0IHRoYXQgY2FzZSBhbmQg
cmVzdG9yZSBpdAogCSAqIGhlcmUuCiAJICovCmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2tlcm5l
bC9wcm9jZXNzXzMyLmMgYi9hcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzMyLmMKaW5kZXggM2Ux
ZjdiNjM5ZTlhLi5hOWMyZjZjMmFiNTEgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMva2VybmVsL3By
b2Nlc3NfMzIuYworKysgYi9hcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzMyLmMKQEAgLTI3Myw3
ICsyNzMsNyBAQCBjbG9uZV9zdGFja2ZyYW1lKHN0cnVjdCBzcGFyY19zdGFja2YgX191c2VyICpk
c3QsCiBleHRlcm4gdm9pZCByZXRfZnJvbV9mb3JrKHZvaWQpOwogZXh0ZXJuIHZvaWQgcmV0X2Zy
b21fa2VybmVsX3RocmVhZCh2b2lkKTsKIAotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBs
b25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHNwLAoraW50IGNvcHlfdGhyZWFkKHVuc2ln
bmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsCiAJCSAgICB1bnNpZ25lZCBs
b25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0ICpwLAogCQkgICAgdW5zaWduZWQgbG9uZyB0bHMp
CiB7CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2tlcm5lbC9wcm9jZXNzXzY0LmMgYi9hcmNoL3Nw
YXJjL2tlcm5lbC9wcm9jZXNzXzY0LmMKaW5kZXggMjc4YmYyODdjNGJlLi42ZTRhY2EyOTVlMjUg
MTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3NfNjQuYworKysgYi9hcmNoL3Nw
YXJjL2tlcm5lbC9wcm9jZXNzXzY0LmMKQEAgLTU3Nyw3ICs1NzcsNyBAQCB2b2lkIGZhdWx0X2lu
X3VzZXJfd2luZG93cyhzdHJ1Y3QgcHRfcmVncyAqcmVncykKICAqIFBhcmVudCAtLT4gICVvMCA9
PSBjaGlsZHMgIHBpZCwgJW8xID09IDAKICAqIENoaWxkICAtLT4gICVvMCA9PSBwYXJlbnRzIHBp
ZCwgJW8xID09IDEKICAqLwotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25l
X2ZsYWdzLCB1bnNpZ25lZCBsb25nIHNwLAoraW50IGNvcHlfdGhyZWFkKHVuc2lnbmVkIGxvbmcg
Y2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsCiAJCSAgICB1bnNpZ25lZCBsb25nIGFyZywg
c3RydWN0IHRhc2tfc3RydWN0ICpwLAogCQkgICAgdW5zaWduZWQgbG9uZyB0bHMpCiB7CmRpZmYg
LS1naXQgYS9hcmNoL3VtL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL3VtL2tlcm5lbC9wcm9jZXNz
LmMKaW5kZXggZTNhMmNmOTJhMzczLi4yNmI1ZTI0M2QzZmMgMTAwNjQ0Ci0tLSBhL2FyY2gvdW0v
a2VybmVsL3Byb2Nlc3MuYworKysgYi9hcmNoL3VtL2tlcm5lbC9wcm9jZXNzLmMKQEAgLTE1Miw3
ICsxNTIsNyBAQCB2b2lkIGZvcmtfaGFuZGxlcih2b2lkKQogCXVzZXJzcGFjZSgmY3VycmVudC0+
dGhyZWFkLnJlZ3MucmVncywgY3VycmVudF90aHJlYWRfaW5mbygpLT5hdXhfZnBfcmVncyk7CiB9
CiAKLWludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWdu
ZWQgbG9uZyBzcCwKK2ludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1
bnNpZ25lZCBsb25nIHNwLAogCQl1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0
ICogcCwgdW5zaWduZWQgbG9uZyB0bHMpCiB7CiAJdm9pZCAoKmhhbmRsZXIpKHZvaWQpOwpkaWZm
IC0tZ2l0IGEvYXJjaC91bmljb3JlMzIva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gvdW5pY29yZTMy
L2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggNDlhMzA1NTY1YTUzLi42NjBhNjQ2Y2ZkZjcgMTAwNjQ0
Ci0tLSBhL2FyY2gvdW5pY29yZTMyL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC91bmljb3Jl
MzIva2VybmVsL3Byb2Nlc3MuYwpAQCAtMjE5LDcgKzIxOSw3IEBAIHZvaWQgcmVsZWFzZV90aHJl
YWQoc3RydWN0IHRhc2tfc3RydWN0ICpkZWFkX3Rhc2spCiBhc21saW5rYWdlIHZvaWQgcmV0X2Zy
b21fZm9yayh2b2lkKSBfX2FzbV9fKCJyZXRfZnJvbV9mb3JrIik7CiBhc21saW5rYWdlIHZvaWQg
cmV0X2Zyb21fa2VybmVsX3RocmVhZCh2b2lkKSBfX2FzbV9fKCJyZXRfZnJvbV9rZXJuZWxfdGhy
ZWFkIik7CiAKLWludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZyBjbG9uZV9mbGFncywg
dW5zaWduZWQgbG9uZyBzdGFja19zdGFydCwKK2ludCBjb3B5X3RocmVhZCh1bnNpZ25lZCBsb25n
IGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHN0YWNrX3N0YXJ0LAogCQkgICAgdW5zaWduZWQg
bG9uZyBzdGtfc3osIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwKIAkJICAgIHVuc2lnbmVkIGxvbmcg
dGxzKQogewpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva2VybmVsL3Byb2Nlc3MuYyBiL2FyY2gveDg2
L2tlcm5lbC9wcm9jZXNzLmMKaW5kZXggZjM2MmNlMGQ1YWMwLi40N2QzNjljZTgzMWQgMTAwNjQ0
Ci0tLSBhL2FyY2gveDg2L2tlcm5lbC9wcm9jZXNzLmMKKysrIGIvYXJjaC94ODYva2VybmVsL3By
b2Nlc3MuYwpAQCAtMTIxLDcgKzEyMSw3IEBAIHN0YXRpYyBpbnQgc2V0X25ld190bHMoc3RydWN0
IHRhc2tfc3RydWN0ICpwLCB1bnNpZ25lZCBsb25nIHRscykKIAkJcmV0dXJuIGRvX3NldF90aHJl
YWRfYXJlYV82NChwLCBBUkNIX1NFVF9GUywgdGxzKTsKIH0KIAotaW50IGNvcHlfdGhyZWFkX3Rs
cyh1bnNpZ25lZCBsb25nIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nIHNwLAoraW50IGNvcHlf
dGhyZWFkKHVuc2lnbmVkIGxvbmcgY2xvbmVfZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsCiAJCSAg
ICB1bnNpZ25lZCBsb25nIGFyZywgc3RydWN0IHRhc2tfc3RydWN0ICpwLCB1bnNpZ25lZCBsb25n
IHRscykKIHsKIAlzdHJ1Y3QgaW5hY3RpdmVfdGFza19mcmFtZSAqZnJhbWU7CmRpZmYgLS1naXQg
YS9hcmNoL3g4Ni9rZXJuZWwvdW53aW5kX2ZyYW1lLmMgYi9hcmNoL3g4Ni9rZXJuZWwvdW53aW5k
X2ZyYW1lLmMKaW5kZXggNzIyYTg1ZjNiMmRkLi4zMDcwZmQ2NTYxYmUgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L2tlcm5lbC91bndpbmRfZnJhbWUuYworKysgYi9hcmNoL3g4Ni9rZXJuZWwvdW53aW5k
X2ZyYW1lLmMKQEAgLTI2OSw3ICsyNjksNyBAQCBib29sIHVud2luZF9uZXh0X2ZyYW1lKHN0cnVj
dCB1bndpbmRfc3RhdGUgKnN0YXRlKQogCQkvKgogCQkgKiBrdGhyZWFkcyAob3RoZXIgdGhhbiB0
aGUgYm9vdCBDUFUncyBpZGxlIHRocmVhZCkgaGF2ZSBzb21lCiAJCSAqIHBhcnRpYWwgcmVncyBh
dCB0aGUgZW5kIG9mIHRoZWlyIHN0YWNrIHdoaWNoIHdlcmUgcGxhY2VkCi0JCSAqIHRoZXJlIGJ5
IGNvcHlfdGhyZWFkX3RscygpLiAgQnV0IHRoZSByZWdzIGRvbid0IGhhdmUgYW55CisJCSAqIHRo
ZXJlIGJ5IGNvcHlfdGhyZWFkKCkuICBCdXQgdGhlIHJlZ3MgZG9uJ3QgaGF2ZSBhbnkKIAkJICog
dXNlZnVsIGluZm9ybWF0aW9uLCBzbyB3ZSBjYW4gc2tpcCB0aGVtLgogCQkgKgogCQkgKiBUaGlz
IHVzZXJfbW9kZSgpIGNoZWNrIGlzIHNsaWdodGx5IGJyb2FkZXIgdGhhbiBhIFBGX0tUSFJFQUQK
ZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNhL2tlcm5lbC9wcm9jZXNzLmMgYi9hcmNoL3h0ZW5zYS9r
ZXJuZWwvcHJvY2Vzcy5jCmluZGV4IGI3ZmU2ZjQ0M2I0Mi4uMzk3YTdkZTU2Mzc3IDEwMDY0NAot
LS0gYS9hcmNoL3h0ZW5zYS9rZXJuZWwvcHJvY2Vzcy5jCisrKyBiL2FyY2gveHRlbnNhL2tlcm5l
bC9wcm9jZXNzLmMKQEAgLTIwMSw3ICsyMDEsNyBAQCBpbnQgYXJjaF9kdXBfdGFza19zdHJ1Y3Qo
c3RydWN0IHRhc2tfc3RydWN0ICpkc3QsIHN0cnVjdCB0YXNrX3N0cnVjdCAqc3JjKQogICogaW52
b2x2ZWQuICBNdWNoIHNpbXBsZXIgdG8ganVzdCBub3QgY29weSB0aG9zZSBsaXZlIGZyYW1lcyBh
Y3Jvc3MuCiAgKi8KIAotaW50IGNvcHlfdGhyZWFkX3Rscyh1bnNpZ25lZCBsb25nIGNsb25lX2Zs
YWdzLCB1bnNpZ25lZCBsb25nIHVzcF90aHJlYWRfZm4sCitpbnQgY29weV90aHJlYWQodW5zaWdu
ZWQgbG9uZyBjbG9uZV9mbGFncywgdW5zaWduZWQgbG9uZyB1c3BfdGhyZWFkX2ZuLAogCQl1bnNp
Z25lZCBsb25nIHRocmVhZF9mbl9hcmcsIHN0cnVjdCB0YXNrX3N0cnVjdCAqcCwKIAkJdW5zaWdu
ZWQgbG9uZyB0bHMpCiB7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3NjaGVkL3Rhc2suaCBi
L2luY2x1ZGUvbGludXgvc2NoZWQvdGFzay5oCmluZGV4IDc3Y2JlMTRjMzAzNC4uMjA5YTExYzE0
MWNhIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3NjaGVkL3Rhc2suaAorKysgYi9pbmNsdWRl
L2xpbnV4L3NjaGVkL3Rhc2suaApAQCAtNjUsNyArNjUsNyBAQCBleHRlcm4gdm9pZCBmb3JrX2lu
aXQodm9pZCk7CiAKIGV4dGVybiB2b2lkIHJlbGVhc2VfdGFzayhzdHJ1Y3QgdGFza19zdHJ1Y3Qg
KiBwKTsKIAotZXh0ZXJuIGludCBjb3B5X3RocmVhZF90bHModW5zaWduZWQgbG9uZywgdW5zaWdu
ZWQgbG9uZywgdW5zaWduZWQgbG9uZywKK2V4dGVybiBpbnQgY29weV90aHJlYWQodW5zaWduZWQg
bG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywKIAkJCXN0cnVjdCB0YXNrX3N0cnVj
dCAqLCB1bnNpZ25lZCBsb25nKTsKIAogZXh0ZXJuIHZvaWQgZmx1c2hfdGhyZWFkKHZvaWQpOwpk
aWZmIC0tZ2l0IGEva2VybmVsL2ZvcmsuYyBiL2tlcm5lbC9mb3JrLmMKaW5kZXggOGU1MmUxNmEx
YjVlLi5lYWVhZjIyNGZkNDMgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9mb3JrLmMKKysrIGIva2VybmVs
L2ZvcmsuYwpAQCAtMjEwNCw3ICsyMTA0LDcgQEAgc3RhdGljIF9fbGF0ZW50X2VudHJvcHkgc3Ry
dWN0IHRhc2tfc3RydWN0ICpjb3B5X3Byb2Nlc3MoCiAJcmV0dmFsID0gY29weV9pbyhjbG9uZV9m
bGFncywgcCk7CiAJaWYgKHJldHZhbCkKIAkJZ290byBiYWRfZm9ya19jbGVhbnVwX25hbWVzcGFj
ZXM7Ci0JcmV0dmFsID0gY29weV90aHJlYWRfdGxzKGNsb25lX2ZsYWdzLCBhcmdzLT5zdGFjaywg
YXJncy0+c3RhY2tfc2l6ZSwgcCwKKwlyZXR2YWwgPSBjb3B5X3RocmVhZChjbG9uZV9mbGFncywg
YXJncy0+c3RhY2ssIGFyZ3MtPnN0YWNrX3NpemUsIHAsCiAJCQkJIGFyZ3MtPnRscyk7CiAJaWYg
KHJldHZhbCkKIAkJZ290byBiYWRfZm9ya19jbGVhbnVwX2lvOwotLSAKMi4yNy4wCgpfX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5n
IGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNv
cmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
