Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id F07DF1D3F7E
	for <lists+openrisc@lfdr.de>; Thu, 14 May 2020 23:00:59 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id D2D0120AD7;
	Thu, 14 May 2020 23:00:59 +0200 (CEST)
Received: from mail-pl1-f193.google.com (mail-pl1-f193.google.com
 [209.85.214.193])
 by mail.librecores.org (Postfix) with ESMTPS id 5CDC320A79
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 23:00:58 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id b12so10081plz.13
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 14:00:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=c9QVRvFFAuPpwh7aP4XFc4DjIdN0w41IuayHmeBCASU=;
 b=m4Zk1EPfoSZ+WCNa9u7gBqxkBMmJKGg230LbIEL8eDf/wcYBP5/efATl8gqPJ6paGA
 3tLkZFsUE4IJ59Q0EUfKjfKDup3PGjEnhkGzHOEJidgdAx+DMkM0nj8FRAZXq/8SDLkx
 kXzD9qNlK6Zp991nAgHC1nEFcZdNbECd8h0qkw70hfz8xQRVK+hW16IpvgCIh2IiQlBh
 q4/pYCpcbJSp0jDr3J1gM8NUVMDMqkdROJ5M3NtOud+kzBUW+wxEWv0ghmnBA6brKRuf
 nBsMEpk6EslyrleSOSZVWbnYDgXFBiCldaAgXtjuAe19vHfeM28AbB0Rt9qByTBKWNjI
 II9Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=c9QVRvFFAuPpwh7aP4XFc4DjIdN0w41IuayHmeBCASU=;
 b=aNoT5XpM8k1ZEfDHoGl4FtjucFFsE5fizJogDvXmNHXcu+t+MTcHZ4faC5IGTy7mEi
 tOX4dkmrZ4Kq/4+bOjWHDFueKpFG7BlBDni3z7y/KKKN34/u8gypxjmDjLJ4tA940oqQ
 SuGZbGmI7QpZ4kShQYh+zt86MqOS7sm2JCCKqSNRo/LpfqnU9hCG89iNfSmxChfTv55f
 jrb6WIRbBJcNNSW1FCG7RQq5+6/SrdTvpArc0567YWgenW+gwT4u7aSxAHKz43i0ZHvj
 GQR3hvxnpWgaLXdlk42f2FvNSfqMspgv7wO00Z4EAhkA+6YeePRtdpdjeTiSiHIR7Lno
 Wm1g==
X-Gm-Message-State: AOAM533jopiiQlHoYyyBbMhubcqgnzRzymiQV1gT929dQCzwqgCDn3Kp
 nHeuds8Rj1L0GBJJWH/WuDU=
X-Google-Smtp-Source: ABdhPJy8o2KFgG7QrU7dwR0J3Zga4PUm49QpppAS4g4RVrkjXZC32vYeSEjMwHIstU3p2D79WrEXRw==
X-Received: by 2002:a17:902:b58e:: with SMTP id
 a14mr376817pls.247.1589490056909; 
 Thu, 14 May 2020 14:00:56 -0700 (PDT)
Received: from localhost (g216.222-224-245.ppp.wakwak.ne.jp. [222.224.245.216])
 by smtp.gmail.com with ESMTPSA id h14sm18522933pjc.46.2020.05.14.14.00.55
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 14 May 2020 14:00:55 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GNU Binutils <binutils@sourceware.org>
Date: Fri, 15 May 2020 06:00:18 +0900
Message-Id: <20200514210018.2749462-9-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200514210018.2749462-1-shorne@gmail.com>
References: <20200514210018.2749462-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 8/8] or1k: Add dynamic flag to tpoff
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhpcyBpcyBuZWVkZWQgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiBpbml0aWFsIGV4ZWN1dGFibGUg
R0QsIExELCBJRSBhbmQKTEUgVExTIGFjY2VzcyB3aGljaCByZXF1aXJlIFRDQiBvZmZzZXQgYW5k
IHNlY3Rpb24gYWxpZ25tZW50LCBidXQKYWNjZXNzIHRvIGR5bmFtaWMgc3ltYm9scyBpbiBzZWNv
bmRhcnkgVExTIG1vZHVsZXMgZG8gbm90IG5lZWQgdGhpcwpvZmZzZXQuCgpUaGlzIHdhcyBmb3Vu
ZCB3aGVuIHJ1bm5pbmcgdGhlIGdsaWJjIHRlc3RzdWl0ZS4KCmJmZC9DaGFuZ2VMb2c6Cgp5eXl5
LW1tLWRkICBTdGFmZm9yZCBIb3JuZSAgPHNob3JuZUBnbWFpbC5jb20+CgoJKiBlbGYzMi1vcjFr
LmMgKHRwb2ZmKTogQWRkIGR5bmFtaWMgYm9vbGVhbiBhcmd1bWVudC4KCShvcjFrX2VsZl9yZWxv
Y2F0ZV9zZWN0aW9uKTogUGFzcyBkeW5hbWljIGZsYWcgdG8gdHBvZmYuCi0tLQogYmZkL2VsZjMy
LW9yMWsuYyB8IDM5ICsrKysrKysrKysrKysrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLQogMSBm
aWxlIGNoYW5nZWQsIDIyIGluc2VydGlvbnMoKyksIDE3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2JmZC9lbGYzMi1vcjFrLmMgYi9iZmQvZWxmMzItb3Ixay5jCmluZGV4IDdhYzM0NzM3YWEu
LmE3ZmUwYTljN2MgMTAwNjQ0Ci0tLSBhL2JmZC9lbGYzMi1vcjFrLmMKKysrIGIvYmZkL2VsZjMy
LW9yMWsuYwpAQCAtMTA1MCwxMCArMTA1MCw5IEBAIG9yMWtfaW5mb190b19ob3d0b19yZWxhIChi
ZmQgKiBhYmZkLAogICByZXR1cm4gVFJVRTsKIH0KIAotCiAvKiBSZXR1cm4gdGhlIHJlbG9jYXRp
b24gdmFsdWUgZm9yIEB0cG9mZiByZWxvY2F0aW9ucy4uICAqLwogc3RhdGljIGJmZF92bWEKLXRw
b2ZmIChzdHJ1Y3QgYmZkX2xpbmtfaW5mbyAqaW5mbywgYmZkX3ZtYSBhZGRyZXNzKQordHBvZmYg
KHN0cnVjdCBiZmRfbGlua19pbmZvICppbmZvLCBiZmRfdm1hIGFkZHJlc3MsIGJmZF9ib29sZWFu
IGR5bmFtaWMpCiB7CiAgIHN0cnVjdCBlbGZfbGlua19oYXNoX3RhYmxlICpodGFiID0gZWxmX2hh
c2hfdGFibGUgKGluZm8pOwogICBiZmRfdm1hIGJhc2U7CkBAIC0xMDYyLDE1ICsxMDYxLDIwIEBA
IHRwb2ZmIChzdHJ1Y3QgYmZkX2xpbmtfaW5mbyAqaW5mbywgYmZkX3ZtYSBhZGRyZXNzKQogICBp
ZiAoaHRhYi0+dGxzX3NlYyA9PSBOVUxMKQogICAgIHJldHVybiAwOwogCi0gIC8qIE9uIG9yMWss
IHRoZSB0cCBwb2ludHMgdG8ganVzdCBhZnRlciB0aGUgdGNiLCBpZiB3ZSBoYXZlIGFuIGFsaWdu
bWVudAotICAgICBncmVhdGVyIHRoYW4gdGhlIHRjYiBzaXplIHdlIG5lZWQgdG8gb2Zmc2V0IGJ5
IHRoZSBhbGlnbm1lbnQgZGlmZmVyZW5jZS4gICovCi0gIGJhc2UgPSBhbGlnbl9wb3dlciAoKGJm
ZF92bWEpIFRDQl9TSVpFLCBodGFiLT50bHNfc2VjLT5hbGlnbm1lbnRfcG93ZXIpCi0JIC0gVENC
X1NJWkU7Ci0KLSAgLyogVGhlIHRocmVhZCBwb2ludGVyIG9uIG9yMWsgc3RvcmVzIHRoZSBhZGRy
ZXNzIGFmdGVyIHRoZSBUQ0Igd2hlcmUKLSAgICAgdGhlIGRhdGEgaXMsIGp1c3QgY29tcHV0ZSB0
aGUgZGlmZmVyZW5jZS4gTm8gbmVlZCB0byBjb21wZW5zYXRlCi0gICAgIGZvciB0aGUgc2l6ZSBv
ZiBUQ0IuICAqLwotICByZXR1cm4gYWRkcmVzcyAtIGh0YWItPnRsc19zZWMtPnZtYSArIGJhc2U7
CisgIGlmIChkeW5hbWljKQorICAgIHJldHVybiBhZGRyZXNzIC0gaHRhYi0+dGxzX3NlYy0+dm1h
OworICBlbHNlCisgICAgeworICAgICAgLyogT24gb3IxaywgdGhlIHRwIHBvaW50cyB0byBqdXN0
IGFmdGVyIHRoZSB0Y2IsIGlmIHdlIGhhdmUgYW4gYWxpZ25tZW50CisJIGdyZWF0ZXIgdGhhbiB0
aGUgdGNiIHNpemUgd2UgbmVlZCB0byBvZmZzZXQgYnkgdGhlIGFsaWdubWVudCBkaWZmZXJlbmNl
LiAgKi8KKyAgICAgIGJhc2UgPSBhbGlnbl9wb3dlciAoKGJmZF92bWEpIFRDQl9TSVpFLCBodGFi
LT50bHNfc2VjLT5hbGlnbm1lbnRfcG93ZXIpCisJICAgICAtIFRDQl9TSVpFOworCisgICAgICAv
KiBUaGUgdGhyZWFkIHBvaW50ZXIgb24gb3IxayBzdG9yZXMgdGhlIGFkZHJlc3MgYWZ0ZXIgdGhl
IFRDQiB3aGVyZQorCSB0aGUgZGF0YSBpcywganVzdCBjb21wdXRlIHRoZSBkaWZmZXJlbmNlLiBO
byBuZWVkIHRvIGNvbXBlbnNhdGUKKwkgZm9yIHRoZSBzaXplIG9mIFRDQi4gICovCisgICAgICBy
ZXR1cm4gYWRkcmVzcyAtIGh0YWItPnRsc19zZWMtPnZtYSArIGJhc2U7CisgICAgfQogfQogCiAv
KiBJZiB3ZSBoYXZlIGJvdGggSUUgYW5kIEdEIGFjY2Vzc2VzIHRvIGEgc3ltYm9sIHRoZSBJRSBy
ZWxvY2F0aW9ucyBzaG91bGQgYmUKQEAgLTE2MjQsNyArMTYyOCw3IEBAIG9yMWtfZWxmX3JlbG9j
YXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAkgICAgRWxmX0ludGVybmFsX1JlbGEgcmVs
YTsKIAkgICAgYXNlY3Rpb24gKnNyZWxnb3Q7CiAJICAgIGJmZF9ieXRlICpsb2M7Ci0JICAgIGlu
dCBkeW5hbWljOworCSAgICBiZmRfYm9vbGVhbiBkeW5hbWljOwogCSAgICBpbnQgaW5keCA9IDA7
CiAJICAgIHVuc2lnbmVkIGNoYXIgdGxzX3R5cGU7CiAKQEAgLTE3MDcsNyArMTcxMSw4IEBAIG9y
MWtfZWxmX3JlbG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAkJICAgICAgewogCQkJ
cmVsYS5yX2luZm8gPSBFTEYzMl9SX0lORk8gKDAsCiAJCQkgICAgKGkgPT0gMCA/IFJfT1IxS19U
TFNfRFRQTU9EIDogUl9PUjFLX1RMU19EVFBPRkYpKTsKLQkJCXJlbGEucl9hZGRlbmQgPSB0cG9m
ZiAoaW5mbywgcmVsb2NhdGlvbik7CisJCQlyZWxhLnJfYWRkZW5kID0KKwkJCSAgICAoaSA9PSAw
ID8gMCA6IHRwb2ZmIChpbmZvLCByZWxvY2F0aW9uLCBkeW5hbWljKSk7CiAJCSAgICAgIH0KIAog
CQkgICAgbG9jID0gc3JlbGdvdC0+Y29udGVudHM7CkBAIC0xNzIyLDcgKzE3MjcsNyBAQCBvcjFr
X2VsZl9yZWxvY2F0ZV9zZWN0aW9uIChiZmQgKm91dHB1dF9iZmQsCiAJICAgIGVsc2UgaWYgKCh0
bHNfdHlwZSAmIFRMU19HRCkgIT0gMCkKIAkgICAgICB7CiAJCWJmZF9wdXRfMzIgKG91dHB1dF9i
ZmQsIDEsIHNnb3QtPmNvbnRlbnRzICsgZ290b2ZmKTsKLQkJYmZkX3B1dF8zMiAob3V0cHV0X2Jm
ZCwgdHBvZmYgKGluZm8sIHJlbG9jYXRpb24pLAorCQliZmRfcHV0XzMyIChvdXRwdXRfYmZkLCB0
cG9mZiAoaW5mbywgcmVsb2NhdGlvbiwgZHluYW1pYyksCiAJCSAgICBzZ290LT5jb250ZW50cyAr
IGdvdG9mZiArIDQpOwogCSAgICAgIH0KIApAQCAtMTc0Myw3ICsxNzQ4LDcgQEAgb3Ixa19lbGZf
cmVsb2NhdGVfc2VjdGlvbiAoYmZkICpvdXRwdXRfYmZkLAogCQllbHNlCiAJCSAgewogCQkgICAg
cmVsYS5yX2luZm8gPSBFTEYzMl9SX0lORk8gKDAsIFJfT1IxS19UTFNfVFBPRkYpOwotCQkgICAg
cmVsYS5yX2FkZGVuZCA9IHRwb2ZmIChpbmZvLCByZWxvY2F0aW9uKTsKKwkJICAgIHJlbGEucl9h
ZGRlbmQgPSB0cG9mZiAoaW5mbywgcmVsb2NhdGlvbiwgZHluYW1pYyk7CiAJCSAgfQogCiAJCWxv
YyA9IHNyZWxnb3QtPmNvbnRlbnRzOwpAQCAtMTc1NCw3ICsxNzU5LDcgQEAgb3Ixa19lbGZfcmVs
b2NhdGVfc2VjdGlvbiAoYmZkICpvdXRwdXRfYmZkLAogCSAgICAgIH0KIAkgICAgLyogU3RhdGlj
IElFLiAgKi8KIAkgICAgZWxzZSBpZiAoKHRsc190eXBlICYgVExTX0lFKSAhPSAwKQotCSAgICAg
IGJmZF9wdXRfMzIgKG91dHB1dF9iZmQsIHRwb2ZmIChpbmZvLCByZWxvY2F0aW9uKSwKKwkgICAg
ICBiZmRfcHV0XzMyIChvdXRwdXRfYmZkLCB0cG9mZiAoaW5mbywgcmVsb2NhdGlvbiwgZHluYW1p
YyksCiAJCQkgIHNnb3QtPmNvbnRlbnRzICsgZ290b2ZmKTsKIAogCSAgICAvKiBUaGUgUEcyMSBh
bmQgTE8xMyByZWxvY3MgYXJlIHBjLXJlbGF0aXZlLCB3aGlsZSB0aGUKQEAgLTE3NzMsNyArMTc3
OCw3IEBAIG9yMWtfZWxmX3JlbG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAljYXNl
IFJfT1IxS19UTFNfTEVfQUhJMTY6CiAJY2FzZSBSX09SMUtfVExTX0xFX1NMTzE2OgogCSAgLyog
UmVsb2NhdGlvbiBpcyBvZmZzZXQgZnJvbSBUUC4gICovCi0JICByZWxvY2F0aW9uID0gdHBvZmYg
KGluZm8sIHJlbG9jYXRpb24pOworCSAgcmVsb2NhdGlvbiA9IHRwb2ZmIChpbmZvLCByZWxvY2F0
aW9uLCAwKTsKIAkgIGJyZWFrOwogCiAJY2FzZSBSX09SMUtfVExTX0RUUE1PRDoKLS0gCjIuMjYu
MgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJ
U0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlz
dHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
