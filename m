Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 11C3F3638B9
	for <lists+openrisc@lfdr.de>; Mon, 19 Apr 2021 02:05:45 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id BE0E221345;
	Mon, 19 Apr 2021 02:05:44 +0200 (CEST)
Received: from mail-pg1-f177.google.com (mail-pg1-f177.google.com
 [209.85.215.177])
 by mail.librecores.org (Postfix) with ESMTPS id E94A3210C8
 for <openrisc@lists.librecores.org>; Mon, 19 Apr 2021 02:05:42 +0200 (CEST)
Received: by mail-pg1-f177.google.com with SMTP id f29so23007502pgm.8
 for <openrisc@lists.librecores.org>; Sun, 18 Apr 2021 17:05:42 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=BfxrYgd1iRUixELbUhFm8VJMzvBfcaMoqO1xYLfs2cg=;
 b=T3Ot/pc52Fjr/m8qXOGQCtCNh4PE1RQB8HWwAkAAKeGRa1TK0xcIQ63Ip9rk4Ok0Y9
 ixB/nsTKIW4DMx3aqwbZNFWynzxItFNpfNDt3zTGVFXFa6c1ultnxkVzs82JaJCpnKmx
 iisjFOA4J+Dqswtfw/kZPtGbYIhwOeenofCcr6EC7M+moBqKkKf3t4kEAEnF5caodEST
 vU8viSuSWJDFlN5MNFw+OYizdZh36QPQtGIWpRX9XY5oq91O3c1CIsNndlgLmRrfpfyP
 NDK+SoQ7iZK13cMMwI+80eG/CfShspwLZEi3wxPgjecbBCAC+00X2GhFa97Qi1aEmB0F
 intg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=BfxrYgd1iRUixELbUhFm8VJMzvBfcaMoqO1xYLfs2cg=;
 b=hRiOKZbccX/u1brI2QMg7Db/58E8sv1tUWtHaBodn29lP4cDeu/FTt6nlQLcimcjZx
 kzgCGe0ahsxnxH7aYQwaY3TWhiGkcvowE6usR2ATe8fWig/sfAx/zPStXNaef2Ol2q9s
 1Ls3iPKU4WJHGUB6bUakzBHDkHK7yMb7l+808PK1jvfMzppFGbvc3UolzzB7TSG6cCSU
 Ve+EqI3jJYm/MaOfzscS9p/mGycjcjNj+P8FuGj0GfLil/IeysXfLhJZawC9GBZ178lz
 jsFOQJlPZ1neYUcWHFLLA7Ftal7vi4xCYjt/YPOfFsr3qMj/+kpFItObUPB82VA5QX2p
 aZmg==
X-Gm-Message-State: AOAM533unawXitUc2Z2gknM5G4Z2ZL6OXgk3flHdOyeBXOPe+ULAKDRS
 PsXLPfrQVH2q8zolaOwBZVw=
X-Google-Smtp-Source: ABdhPJxab7TdPYoW16imVtswXrr0TKJ8RlsuLW+pU3qxuhmGScpXXRC7ubF05U5xkSUbRGaEbKBABw==
X-Received: by 2002:a05:6a00:2301:b029:247:7208:1d6f with SMTP id
 h1-20020a056a002301b029024772081d6fmr17283762pfh.43.1618790741431; 
 Sun, 18 Apr 2021 17:05:41 -0700 (PDT)
Received: from localhost (g191.124-44-145.ppp.wakwak.ne.jp. [124.44.145.191])
 by smtp.gmail.com with ESMTPSA id
 t3sm10700158pfg.176.2021.04.18.17.05.40
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Sun, 18 Apr 2021 17:05:40 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GNU Binutils <binutils@sourceware.org>
Date: Mon, 19 Apr 2021 09:05:22 +0900
Message-Id: <20210419000524.3625897-3-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20210419000524.3625897-1-shorne@gmail.com>
References: <20210419000524.3625897-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 2/4] or1k: Implement relocation R_OR1K_GOT_AHI16
 for gotha()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: giulio.benetti@benettiengineering.com,
 Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhlIGdvdGhhKCkgcmVsb2NhdGlvbiBtbmVtb25pYyB3aWxsIGJlIG91dHB1dHRlZCBieSBPcGVu
UklTQyBHQ0Mgd2hlbgp1c2luZyB0aGUgLW1jbW9kZWw9bGFyZ2Ugb3B0aW9uLiAgVGhpcyByZWxv
Y2F0aW9uIGlzIHVzZWQgYWxvbmcgd2l0aApnb3QoKSB0byBnZW5lcmF0ZSAzMi1iaXQgR09UIG9m
ZnNldHMuICBUaGlzIGluY3JlYXNlcyB0aGUgcHJldmlvdXMgR09UCm9mZnNldCBsaW1pdCBmcm9t
IHRoZSBwcmV2aW91cyAxNi1iaXQgKDY0SykgbGltaXQuCgpUaGlzIGlzIG5lZWRlZCBvbiBsYXJn
ZSBiaW5hcmllcyB3aGVyZSB0aGUgR09UIGdyb3dzIGxhcmdlciB0aGFuIDY0ay4KCmJmZC9DaGFu
Z2VMb2c6CgoJUFIgMjE0NjQKCSogYmZkLWluMi5oOiBBZGQgQkZEX1JFTE9DX09SMUtfR09UX0FI
STE2IHJlbG9jYXRpb24uCgkqIGVsZjMyLW9yMWsuYyAob3Ixa19lbGZfaG93dG9fdGFibGUsIG9y
MWtfcmVsb2NfbWFwKTogTGlrZXdpc2UuCgkob3Ixa19maW5hbF9saW5rX3JlbG9jYXRlLCBvcjFr
X2VsZl9yZWxvY2F0ZV9zZWN0aW9uLAoJb3Ixa19lbGZfY2hlY2tfcmVsb2NzKTogTGlrZXdpc2Uu
CgkqIGxpYmJmZC5oIChiZmRfcmVsb2NfY29kZV9yZWFsX25hbWVzKTogTGlrZXdpc2UuCgkqIHJl
bG9jLmM6IExpa2V3aXNlLgoKY3B1L0NoYW5nZUxvZzoKCglQUiAyMTQ2NAoJKiBvcjFrLm9wYyAo
b3Ixa19pbW0xNl9yZWxvY3MsIHBhcnNlX3JlbG9jKTogRGVmaW5lIHBhcnNlIGxvZ2ljCglmb3Ig
Z290aGEoKSByZWxvY2F0aW9uLgoKaW5jbHVkZS9DaGFuZ2VMb2c6CgoJUFIgMjE0NjQKCSogZWxm
L29yMWsuaCAoZWxmX29yMWtfcmVsb2NfdHlwZSk6IERlZmluZSBSX09SMUtfR09UX0FISTE2IG51
bWJlci4KCm9wY29kZXMvQ2hhbmdlTG9nOgoKCVBSIDIxNDY0CgkqIG9yMWstYXNtLmM6IFJlZ2Vu
ZXJhdGUuCgpnYXMvQ2hhbmdlTG9nOgoKCVBSIDIxNDY0CgkqIHRlc3RzdWl0ZS9nYXMvb3Ixay9y
ZWxvYy0xLnM6IEFkZCB0ZXN0IGZvciBuZXcgcmVsb2NhdGlvbi4KCSogdGVzdHN1aXRlL2dhcy9v
cjFrL3JlbG9jLTEuZDogQWRkIHRlc3QgcmVzdWx0IGZvciBuZXcKCXJlbG9jYXRpb24uCgpDYzog
R2l1bGlvIEJlbmV0dGkgPGdpdWxpby5iZW5ldHRpQGJlbmV0dGllbmdpbmVlcmluZy5jb20+Cgpm
aXh1cCByZWxvYywgYWRkIHRlc3RzCi0tLQogYmZkL2JmZC1pbjIuaCAgICAgICAgICAgICAgICAg
ICAgfCAgMSArCiBiZmQvZWxmMzItb3Ixay5jICAgICAgICAgICAgICAgICB8IDIxICsrKysrKysr
KysrKysrKysrKysrLQogYmZkL2xpYmJmZC5oICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiBi
ZmQvcmVsb2MuYyAgICAgICAgICAgICAgICAgICAgICB8ICAyICsrCiBjcHUvb3Ixay5vcGMgICAg
ICAgICAgICAgICAgICAgICB8ICA3ICsrKysrKy0KIGdhcy90ZXN0c3VpdGUvZ2FzL29yMWsvcmVs
b2MtMS5kIHwgIDQgKysrLQogZ2FzL3Rlc3RzdWl0ZS9nYXMvb3Ixay9yZWxvYy0xLnMgfCAgNCAr
KysrCiBpbmNsdWRlL2VsZi9vcjFrLmggICAgICAgICAgICAgICB8ICAxICsKIG9wY29kZXMvb3Ix
ay1hc20uYyAgICAgICAgICAgICAgIHwgIDcgKysrKysrLQogOSBmaWxlcyBjaGFuZ2VkLCA0NCBp
bnNlcnRpb25zKCspLCA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2JmZC9iZmQtaW4yLmgg
Yi9iZmQvYmZkLWluMi5oCmluZGV4IGNkZmI5MzNlMzBkLi5jYTFiM2E1MzdkZSAxMDA2NDQKLS0t
IGEvYmZkL2JmZC1pbjIuaAorKysgYi9iZmQvYmZkLWluMi5oCkBAIC01MDMxLDYgKzUwMzEsNyBA
QCB0aGVuIGl0IG1heSBiZSB0cnVuY2F0ZWQgdG8gOCBiaXRzLiAgKi8KICAgQkZEX1JFTE9DX09S
MUtfVExTX1RQT0ZGLAogICBCRkRfUkVMT0NfT1IxS19UTFNfRFRQT0ZGLAogICBCRkRfUkVMT0Nf
T1IxS19UTFNfRFRQTU9ELAorICBCRkRfUkVMT0NfT1IxS19HT1RfQUhJMTYsCiAKIC8qIEg4IGVs
ZiBSZWxvY2F0aW9ucy4gICovCiAgIEJGRF9SRUxPQ19IOF9ESVIxNkE4LApkaWZmIC0tZ2l0IGEv
YmZkL2VsZjMyLW9yMWsuYyBiL2JmZC9lbGYzMi1vcjFrLmMKaW5kZXggY2M2YzUxMjIwZTUuLjA3
MDM5N2Q1OTQ0IDEwMDY0NAotLS0gYS9iZmQvZWxmMzItb3Ixay5jCisrKyBiL2JmZC9lbGYzMi1v
cjFrLmMKQEAgLTgwOCw2ICs4MDgsMjAgQEAgc3RhdGljIHJlbG9jX2hvd3RvX3R5cGUgb3Ixa19l
bGZfaG93dG9fdGFibGVbXSA9CiAJIDAsCQkJLyogU291cmNlIE1hc2suICAqLwogCSAweDAzZmZm
ZmZmLAkJLyogRGVzdCBNYXNrLiAgKi8KIAkgdHJ1ZSksCQkJLyogUEMgcmVsYXRpdmUgb2Zmc2V0
PyAgKi8KKworICBIT1dUTyAoUl9PUjFLX0dPVF9BSEkxNiwJLyogdHlwZSAqLworCSAxNiwJCQkv
KiByaWdodHNoaWZ0ICovCisJIDIsCQkJLyogc2l6ZSAoMCA9IGJ5dGUsIDEgPSBzaG9ydCwgMiA9
IGxvbmcpICovCisJIDE2LAkJCS8qIGJpdHNpemUgKi8KKwkgZmFsc2UsCQkJLyogcGNfcmVsYXRp
dmUgKi8KKwkgMCwJCQkvKiBiaXRwb3MgKi8KKwkgY29tcGxhaW5fb3ZlcmZsb3dfc2lnbmVkLCAv
KiBjb21wbGFpbl9vbl9vdmVyZmxvdyAqLworCSBiZmRfZWxmX2dlbmVyaWNfcmVsb2MsIC8qIHNw
ZWNpYWxfZnVuY3Rpb24gKi8KKwkgIlJfT1IxS19HT1RfQUhJMTYiLAkvKiBuYW1lICovCisJIGZh
bHNlLAkJCS8qIHBhcnRpYWxfaW5wbGFjZSAqLworCSAwLAkJCS8qIHNyY19tYXNrICovCisJIDB4
ZmZmZiwJCS8qIGRzdF9tYXNrICovCisJIGZhbHNlKSwJCS8qIHBjcmVsX29mZnNldCAqLwogfTsK
IAogLyogTWFwIEJGRCByZWxvYyB0eXBlcyB0byBPcjFrIEVMRiByZWxvYyB0eXBlcy4gICovCkBA
IC04NzEsNiArODg1LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBvcjFrX3JlbG9jX21hcCBvcjFr
X3JlbG9jX21hcFtdID0KICAgeyBCRkRfUkVMT0NfT1IxS19UTFNfSUVfTE8xMywJUl9PUjFLX1RM
U19JRV9MTzEzIH0sCiAgIHsgQkZEX1JFTE9DX09SMUtfU0xPMTMsCVJfT1IxS19TTE8xMyB9LAog
ICB7IEJGRF9SRUxPQ19PUjFLX1BMVEEyNiwJUl9PUjFLX1BMVEEyNiB9LAorICB7IEJGRF9SRUxP
Q19PUjFLX0dPVF9BSEkxNiwJUl9PUjFLX0dPVF9BSEkxNiB9LAogfTsKIAogLyogdGxzX3R5cGUg
aXMgYSBtYXNrIHVzZWQgdG8gdHJhY2sgaG93IGVhY2ggc3ltYm9sIGlzIGFjY2Vzc2VkLApAQCAt
MTExMSw2ICsxMTI2LDcgQEAgb3Ixa19maW5hbF9saW5rX3JlbG9jYXRlIChyZWxvY19ob3d0b190
eXBlICpob3d0bywgYmZkICppbnB1dF9iZmQsCiAgIHN3aXRjaCAoaG93dG8tPnR5cGUpCiAgICAg
ewogICAgIGNhc2UgUl9PUjFLX0FISTE2OgorICAgIGNhc2UgUl9PUjFLX0dPVF9BSEkxNjoKICAg
ICBjYXNlIFJfT1IxS19HT1RPRkZfQUhJMTY6CiAgICAgY2FzZSBSX09SMUtfVExTX0lFX0FISTE2
OgogICAgIGNhc2UgUl9PUjFLX1RMU19MRV9BSEkxNjoKQEAgLTEzNzYsNiArMTM5Miw3IEBAIG9y
MWtfZWxmX3JlbG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAljYXNlIFJfT1IxS19H
T1QxNjoKIAljYXNlIFJfT1IxS19HT1RfUEcyMToKIAljYXNlIFJfT1IxS19HT1RfTE8xMzoKKwlj
YXNlIFJfT1IxS19HT1RfQUhJMTY6CiAJICB7CiAJICAgIGJmZF92bWEgb2ZmOwogCkBAIC0xNDY0
LDcgKzE0ODEsOCBAQCBvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0aW9uIChiZmQgKm91dHB1dF9iZmQs
CiAJICAgIC8qIFRoZSBHT1RfUEcyMSBhbmQgR09UX0xPMTMgcmVsb2NzIGFyZSBwYy1yZWxhdGl2
ZSwKIAkgICAgICAgd2hpbGUgdGhlIEdPVDE2IHJlbG9jIGlzIEdPVCByZWxhdGl2ZS4gICovCiAJ
ICAgIHJlbG9jYXRpb24gPSBnb3RfYmFzZSArIG9mZjsKLQkgICAgaWYgKHJfdHlwZSA9PSBSX09S
MUtfR09UMTYpCisJICAgIGlmIChyX3R5cGUgPT0gUl9PUjFLX0dPVDE2CisJCXx8IHJfdHlwZSA9
PSBSX09SMUtfR09UX0FISTE2KQogCSAgICAgIHJlbG9jYXRpb24gLT0gZ290X3N5bV92YWx1ZTsK
IAogCSAgLyogQWRkZW5kIHNob3VsZCBiZSB6ZXJvLiAgKi8KQEAgLTE5OTMsNiArMjAxMSw3IEBA
IG9yMWtfZWxmX2NoZWNrX3JlbG9jcyAoYmZkICphYmZkLAogCWNhc2UgUl9PUjFLX0dPVDE2Ogog
CWNhc2UgUl9PUjFLX0dPVF9QRzIxOgogCWNhc2UgUl9PUjFLX0dPVF9MTzEzOgorCWNhc2UgUl9P
UjFLX0dPVF9BSEkxNjoKIAljYXNlIFJfT1IxS19UTFNfR0RfSEkxNjoKIAljYXNlIFJfT1IxS19U
TFNfR0RfTE8xNjoKIAljYXNlIFJfT1IxS19UTFNfR0RfUEcyMToKZGlmZiAtLWdpdCBhL2JmZC9s
aWJiZmQuaCBiL2JmZC9saWJiZmQuaAppbmRleCBmMWQyNWQwYWIxZi4uNzkzNDM3ZWYyNjAgMTAw
NjQ0Ci0tLSBhL2JmZC9saWJiZmQuaAorKysgYi9iZmQvbGliYmZkLmgKQEAgLTI3NzEsNiArMjc3
MSw3IEBAIHN0YXRpYyBjb25zdCBjaGFyICpjb25zdCBiZmRfcmVsb2NfY29kZV9yZWFsX25hbWVz
W10gPSB7ICJAQHVuaW5pdGlhbGl6ZWRAQCIsCiAgICJCRkRfUkVMT0NfT1IxS19UTFNfVFBPRkYi
LAogICAiQkZEX1JFTE9DX09SMUtfVExTX0RUUE9GRiIsCiAgICJCRkRfUkVMT0NfT1IxS19UTFNf
RFRQTU9EIiwKKyAgIkJGRF9SRUxPQ19PUjFLX0dPVF9BSEkxNiIsCiAgICJCRkRfUkVMT0NfSDhf
RElSMTZBOCIsCiAgICJCRkRfUkVMT0NfSDhfRElSMTZSOCIsCiAgICJCRkRfUkVMT0NfSDhfRElS
MjRBOCIsCmRpZmYgLS1naXQgYS9iZmQvcmVsb2MuYyBiL2JmZC9yZWxvYy5jCmluZGV4IDJlYjA3
NThhODJjLi44OTZjMTcyM2Y4ZCAxMDA2NDQKLS0tIGEvYmZkL3JlbG9jLmMKKysrIGIvYmZkL3Jl
bG9jLmMKQEAgLTYyMDQsNiArNjIwNCw4IEBAIEVOVU1YCiAgIEJGRF9SRUxPQ19PUjFLX0dPVFBD
X0hJMTYKIEVOVU1YCiAgIEJGRF9SRUxPQ19PUjFLX0dPVFBDX0xPMTYKK0VOVU1YCisgIEJGRF9S
RUxPQ19PUjFLX0dPVF9BSEkxNgogRU5VTVgKICAgQkZEX1JFTE9DX09SMUtfR09UMTYKIEVOVU1Y
CmRpZmYgLS1naXQgYS9jcHUvb3Ixay5vcGMgYi9jcHUvb3Ixay5vcGMKaW5kZXggZjBhZGNiYjAw
YTUuLjVkMjBhMWYzM2E3IDEwMDY0NAotLS0gYS9jcHUvb3Ixay5vcGMKKysrIGIvY3B1L29yMWsu
b3BjCkBAIC0xOTMsNyArMTkzLDcgQEAgc3RhdGljIGNvbnN0IGJmZF9yZWxvY19jb2RlX3JlYWxf
dHlwZSBvcjFrX2ltbTE2X3JlbG9jc1tdWzZdID0gewogICAgIEJGRF9SRUxPQ19PUjFLX0dPVF9M
TzEzLAogICAgIEJGRF9SRUxPQ19VTlVTRUQsCiAgICAgQkZEX1JFTE9DX1VOVVNFRCwKLSAgICBC
RkRfUkVMT0NfVU5VU0VEIH0sCisgICAgQkZEX1JFTE9DX09SMUtfR09UX0FISTE2IH0sCiAgIHsg
QkZEX1JFTE9DX09SMUtfR09UUENfTE8xNiwKICAgICBCRkRfUkVMT0NfVU5VU0VELAogICAgIEJG
RF9SRUxPQ19VTlVTRUQsCkBAIC0yOTYsNiArMjk2LDExIEBAIHBhcnNlX3JlbG9jIChjb25zdCBj
aGFyICoqc3RycCkKIAlzdHIgKz0gNTsKIAljbHMgPSBSQ0xBU1NfVFBPRkY7CiAgICAgICB9Cisg
ICAgZWxzZSBpZiAoc3RybmNhc2VjbXAgKHN0ciwgImdvdCIsIDMpID09IDApCisgICAgICB7CisJ
c3RyICs9IDM7CisJY2xzID0gUkNMQVNTX0dPVDsKKyAgICAgIH0KIAogICAgIGlmIChzdHJuY2Fz
ZWNtcCAoc3RyLCAiaGkoIiwgMykgPT0gMCkKICAgICAgIHsKZGlmZiAtLWdpdCBhL2dhcy90ZXN0
c3VpdGUvZ2FzL29yMWsvcmVsb2MtMS5kIGIvZ2FzL3Rlc3RzdWl0ZS9nYXMvb3Ixay9yZWxvYy0x
LmQKaW5kZXggZDFiY2Y1NjA4YmIuLjNhMDAxYzRlZDk5IDEwMDY0NAotLS0gYS9nYXMvdGVzdHN1
aXRlL2dhcy9vcjFrL3JlbG9jLTEuZAorKysgYi9nYXMvdGVzdHN1aXRlL2dhcy9vcjFrL3JlbG9j
LTEuZApAQCAtNjgsNSArNjgsNyBAQCBPRkZTRVQgICBUWVBFICAgICAgICAgICAgICBWQUxVRQog
MDAwMDAwZWMgUl9PUjFLX0xPMTMgICAgICAgeAogMDAwMDAwZjAgUl9PUjFLX0dPVF9MTzEzICAg
eAogMDAwMDAwZjQgUl9PUjFLX1NMTzEzICAgICAgeAotCiswMDAwMDBmOCBSX09SMUtfR09UX0FI
STE2ICB4CiswMDAwMDBmYyBSX09SMUtfR09UX0FISTE2ICB4CiswMDAwMDEwMCBSX09SMUtfR09U
X0FISTE2ICB4CiAKZGlmZiAtLWdpdCBhL2dhcy90ZXN0c3VpdGUvZ2FzL29yMWsvcmVsb2MtMS5z
IGIvZ2FzL3Rlc3RzdWl0ZS9nYXMvb3Ixay9yZWxvYy0xLnMKaW5kZXggZTc2YWJlZjY1MzIuLjU2
MjYwOWFhODY5IDEwMDY0NAotLS0gYS9nYXMvdGVzdHN1aXRlL2dhcy9vcjFrL3JlbG9jLTEucwor
KysgYi9nYXMvdGVzdHN1aXRlL2dhcy9vcjFrL3JlbG9jLTEucwpAQCAtNzQsMyArNzQsNyBAQAog
CWwubGJ6CXI1LHBvKHgpKHIzKQogCWwubGJ6CXI1LGdvdHBvKHgpKHIzKQogCWwuc2IJcG8oeCko
cjMpLHI2CisKKwlsLm1vdmhpCXI0LGdvdGhhKHgpCisJbC5vcmkJcjMscjQsZ290aGEoeCkKKwls
LmFkZGkJcjMscjQsZ290aGEoeCkKZGlmZiAtLWdpdCBhL2luY2x1ZGUvZWxmL29yMWsuaCBiL2lu
Y2x1ZGUvZWxmL29yMWsuaAppbmRleCA3ZjI4MTQ4MTA2MS4uNjlhYjkwNTg0YTIgMTAwNjQ0Ci0t
LSBhL2luY2x1ZGUvZWxmL29yMWsuaAorKysgYi9pbmNsdWRlL2VsZi9vcjFrLmgKQEAgLTc3LDYg
Kzc3LDcgQEAgU1RBUlRfUkVMT0NfTlVNQkVSUyAoZWxmX29yMWtfcmVsb2NfdHlwZSkKICAgUkVM
T0NfTlVNQkVSIChSX09SMUtfVExTX0lFX0xPMTMsICAgNTEpCiAgIFJFTE9DX05VTUJFUiAoUl9P
UjFLX1NMTzEzLCAgICAgICAgIDUyKQogICBSRUxPQ19OVU1CRVIgKFJfT1IxS19QTFRBMjYsICAg
ICAgICA1MykKKyAgUkVMT0NfTlVNQkVSIChSX09SMUtfR09UX0FISTE2LCAgICAgNTQpCiBFTkRf
UkVMT0NfTlVNQkVSUyAoUl9PUjFLX21heCkKIAogI2RlZmluZSBFRl9PUjFLX05PREVMQVkgKDFV
TCA8PCAwKQpkaWZmIC0tZ2l0IGEvb3Bjb2Rlcy9vcjFrLWFzbS5jIGIvb3Bjb2Rlcy9vcjFrLWFz
bS5jCmluZGV4IDA0NWFiNjIzMGI2Li5mZGNjZjY3ZjllMSAxMDA2NDQKLS0tIGEvb3Bjb2Rlcy9v
cjFrLWFzbS5jCisrKyBiL29wY29kZXMvb3Ixay1hc20uYwpAQCAtMTc3LDcgKzE3Nyw3IEBAIHN0
YXRpYyBjb25zdCBiZmRfcmVsb2NfY29kZV9yZWFsX3R5cGUgb3Ixa19pbW0xNl9yZWxvY3NbXVs2
XSA9IHsKICAgICBCRkRfUkVMT0NfT1IxS19HT1RfTE8xMywKICAgICBCRkRfUkVMT0NfVU5VU0VE
LAogICAgIEJGRF9SRUxPQ19VTlVTRUQsCi0gICAgQkZEX1JFTE9DX1VOVVNFRCB9LAorICAgIEJG
RF9SRUxPQ19PUjFLX0dPVF9BSEkxNiB9LAogICB7IEJGRF9SRUxPQ19PUjFLX0dPVFBDX0xPMTYs
CiAgICAgQkZEX1JFTE9DX1VOVVNFRCwKICAgICBCRkRfUkVMT0NfVU5VU0VELApAQCAtMjgwLDYg
KzI4MCwxMSBAQCBwYXJzZV9yZWxvYyAoY29uc3QgY2hhciAqKnN0cnApCiAJc3RyICs9IDU7CiAJ
Y2xzID0gUkNMQVNTX1RQT0ZGOwogICAgICAgfQorICAgIGVsc2UgaWYgKHN0cm5jYXNlY21wIChz
dHIsICJnb3QiLCAzKSA9PSAwKQorICAgICAgeworCXN0ciArPSAzOworCWNscyA9IFJDTEFTU19H
T1Q7CisgICAgICB9CiAKICAgICBpZiAoc3RybmNhc2VjbXAgKHN0ciwgImhpKCIsIDMpID09IDAp
CiAgICAgICB7Ci0tIAoyLjI2LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNv
cmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
