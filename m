Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id B5F79267C92
	for <lists+openrisc@lfdr.de>; Sat, 12 Sep 2020 23:22:13 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 4963320B14;
	Sat, 12 Sep 2020 23:22:12 +0200 (CEST)
Received: from mail-pf1-f195.google.com (mail-pf1-f195.google.com
 [209.85.210.195])
 by mail.librecores.org (Postfix) with ESMTPS id 5FBEC20D7E
 for <openrisc@lists.librecores.org>; Fri, 11 Sep 2020 01:40:05 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id o68so5916196pfg.2
 for <openrisc@lists.librecores.org>; Thu, 10 Sep 2020 16:40:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=AnsaKcjQA7XDzKaULTAgMjaBRBirV4L21FU5x5dUGKw=;
 b=gaW8IdSbf3GaFy6eEV++qACh3TrHYCYg+2WmSmuhspQ2uDt6L6BnFmJsGeojolYJUc
 HK6EM7/S5de6tgVHPcQoVRcMGKrLg+MylINLv8Z5jp8ovuRu6e8cwvp3O3sKcNGOWRa9
 ASrbCheOhgfeTfCxaKAEWUNKcpLTIhHOIufgHu+uiixW4IfCDKAS1aK4ZzyrN81gsFxG
 L5yAUgnAysa5RNrpiWMrEkKYGcUebfLx96svrrb+J+9PPnTGlxN+LPijaUcebxzDrEiu
 rfxqYsmo28NL94OGODXNW/dinC3XzbMkaQZf/EQbN0DknebmIObpNFlkucbpKMdkyJfT
 9V4Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=AnsaKcjQA7XDzKaULTAgMjaBRBirV4L21FU5x5dUGKw=;
 b=kwwjx4WpzHEaXZ6CxvnGV0VNdqyA2sb6sD+GYK6chmwDUWuoHR/EBjKHRGVx+EvQ4V
 9S7MLfq7D4DagloqPyx+ZbHQDS0wltpJQVmAImZknJiTPI2PwpK5xl0a5Q186BeWLxd/
 pwHhcl/Y+DbXshDdLsAIUDRY1smRjc9DQY0Od0jgFVTCewfM1c/grgR4Mtv1LncaZBDs
 33VJzJbTlVVc6fcKNvw1Rl7jqLq/vpBpTxNy/haR3ET2aGra3Ch++7Snz+xd5bNOrr/K
 pk7P6UjOoC/xBO7QjGwY03o6RunLTMlIimLlfh0zwCt22IPVqGoaLjquD+1jqyi6JjD0
 R+gQ==
X-Gm-Message-State: AOAM533AerVxTtbOwZnPRWKvufxsQAr6IJcPHj6QuB/aFbj9Rc9JC0B+
 szvoFJ8Jqy/8QZL601hqWCs=
X-Google-Smtp-Source: ABdhPJyXk862vTJ+5c4YYfnbPIuEKCO7z2v14OPFQkhzPJfuY6u6irLGz+HHLFJl831tjhY9XtvqDw==
X-Received: by 2002:a17:902:5996:b029:d0:89f1:9e2c with SMTP id
 p22-20020a1709025996b02900d089f19e2cmr66134pli.8.1599781203947; 
 Thu, 10 Sep 2020 16:40:03 -0700 (PDT)
Received: from localhost (g168.115-65-169.ppp.wakwak.ne.jp. [115.65.169.168])
 by smtp.gmail.com with ESMTPSA id
 a15sm185866pfi.119.2020.09.10.16.40.02
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 10 Sep 2020 16:40:03 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: LKML <linux-kernel@vger.kernel.org>
Date: Fri, 11 Sep 2020 08:39:40 +0900
Message-Id: <20200910233940.2132107-4-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200910233940.2132107-1-shorne@gmail.com>
References: <20200910233940.2132107-1-shorne@gmail.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Sat, 12 Sep 2020 23:22:07 +0200
Subject: [OpenRISC] [PATCH v3 3/3] openrisc: Fix issue with get_user for
 64-bit values
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Jonas Bonn <jonas@southpole.se>, Albert Ou <aou@eecs.berkeley.edu>,
 linux-riscv@lists.infradead.org, openrisc@lists.librecores.org,
 Palmer Dabbelt <palmer@dabbelt.com>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>,
 Andrew Morton <akpm@linux-foundation.org>,
 Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

QSBidWlsZCBmYWlsdXJlIHdhcyByYWlzZWQgYnkga2J1aWxkIHdpdGggdGhlIGZvbGxvd2luZyBl
cnJvci4KCiAgICBkcml2ZXJzL2FuZHJvaWQvYmluZGVyLmM6IEFzc2VtYmxlciBtZXNzYWdlczoK
ICAgIGRyaXZlcnMvYW5kcm9pZC9iaW5kZXIuYzozODYxOiBFcnJvcjogdW5yZWNvZ25pemVkIGtl
eXdvcmQvcmVnaXN0ZXIgbmFtZSBgbC5sd3ogP2FwLDQocjI0KScKICAgIGRyaXZlcnMvYW5kcm9p
ZC9iaW5kZXIuYzozODY2OiBFcnJvcjogdW5yZWNvZ25pemVkIGtleXdvcmQvcmVnaXN0ZXIgbmFt
ZSBgbC5hZGRpID9hcCxyMCwwJwoKVGhlIGlzc3VlIGlzIHdpdGggNjQtYml0IGdldF91c2VyKCkg
Y2FsbHMgb24gb3BlbnJpc2MuICBJIHRyYWNlZCB0aGlzIHRvCmEgcHJvYmxlbSB3aGVyZSBpbiB0
aGUgaW50ZXJuYWxseSBpbiB0aGUgZ2V0X3VzZXIgbWFjcm9zIHRoZXJlIGlzIGEgY2FzdAp0byBs
b25nIF9fZ3VfdmFsIHRoaXMgY2F1c2VzIEdDQyB0byB0aGluayB0aGUgZ2V0X3VzZXIgY2FsbCBp
cyAzMi1iaXQuClRoaXMgYmluZGVyIGNvZGUgaXMgcmVhbGx5IGxvbmcgYW5kIEdDQyBhbGxvY2F0
ZXMgcmVnaXN0ZXIgcjMwLCB3aGljaAp0cmlnZ2VycyB0aGUgaXNzdWUuIFRoZSA2NC1iaXQgZ2V0
X3VzZXIgYXNtIHRyaWVzIHRvIGdldCB0aGUgNjQtYml0IHBhaXIKcmVnaXN0ZXIsIHdoaWNoIGZv
ciByMzAgb3ZlcmZsb3dzIHRoZSBnZW5lcmFsIHJlZ2lzdGVyIG5hbWVzIGFuZCByZXR1cm5zCnRo
ZSBkdW1teSByZWdpc3RlciA/YXAuCgpUaGUgZml4IGhlcmUgaXMgdG8gbW92ZSB0aGUgdGVtcG9y
YXJ5IHZhcmlhYmxlcyBpbnRvIHRoZSBhc20gbWFjcm9zLiAgV2UKdXNlIGEgMzItYml0IF9fZ3Vf
dG1wIGZvciAzMi1iaXQgYW5kIHNtYWxsZXIgbWFjcm8gYW5kIGEgNjQtYml0IHRtcCBpbgp0aGUg
NjQtYml0IG1hY3JvLiAgVGhlIGNhc3QgaW4gdGhlIDY0LWJpdCBtYWNybyBoYXMgYSB0cmljayBv
ZiBjYXN0aW5nCnRocm91Z2ggX190eXBlb2ZfXygoeCktKHgpKSB3aGljaCBhdm9pZHMgdGhlIGJl
bG93IHdhcm5pbmcuICBUaGlzIHdhcwpiYXJyb3dlZCBmcm9tIHJpc2N2LgoKICAgIGFyY2gvb3Bl
bnJpc2MvaW5jbHVkZS9hc20vdWFjY2Vzcy5oOjI0MDo4OiB3YXJuaW5nOiBjYXN0IHRvIHBvaW50
ZXIgZnJvbSBpbnRlZ2VyIG9mIGRpZmZlcmVudCBzaXplCgpJIHRlc3RlZCB0aGlzIGlzIGEgc21h
bGwgdW5pdCB0ZXN0IHRvIGNoZWNrIHJlYWRpbmcgYmV0d2VlbiA2NC1iaXQgYW5kCjMyLWJpdCBw
b2ludGVycyB0byA2NC1iaXQgYW5kIDMyLWJpdCB2YWx1ZXMgaW4gYWxsIGNvbWJpbmF0aW9ucy4g
IEFsc28gSQpyYW4gbWFrZSBDPTEgdG8gY29uZmlybSBubyBuZXcgc3BhcnNlIHdhcm5pbmdzIGNh
bWUgdXAuICBJdCBhbGwgbG9va3MKY2xlYW4gdG8gbWUuCgpMaW5rOiBodHRwczovL2xvcmUua2Vy
bmVsLm9yZy9sa21sLzIwMjAwODIwMDQ1My5vaG5ocWtqUSUyNWxrcEBpbnRlbC5jb20vClNpZ25l
ZC1vZmYtYnk6IFN0YWZmb3JkIEhvcm5lIDxzaG9ybmVAZ21haWwuY29tPgpDYzogTHVjIFZhbiBP
b3N0ZW5yeWNrIDxsdWMudmFub29zdGVucnlja0BnbWFpbC5jb20+Ci0tLQpDaGFuZ2VzIHNpbmNl
IHYyOgogLSBBZGQgYmFjayB0ZW1wb3JhcnkgdmFyaWFibGVzIGJ1dCBtb3ZlIHRvIGEgZGlmZmVy
ZW50IHBsYWNlLCBhcyBkZXNjcmliZWQgaW4KICAgY29tbWl0IG1lc3NhZ2UuCkNoYW5nZXMgc2lu
Y2UgdjE6CiAtIE5ldwoKIGFyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20vdWFjY2Vzcy5oIHwgMzMg
KysrKysrKysrKysrKysrKysrLS0tLS0tLS0tLS0KIDEgZmlsZSBjaGFuZ2VkLCAyMSBpbnNlcnRp
b25zKCspLCAxMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL29wZW5yaXNjL2luY2x1
ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCmlu
ZGV4IGYwMzkwMjExMjM2Yi4uMTIwZjUwMDU0NjFiIDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNj
L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAorKysgYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3Vh
Y2Nlc3MuaApAQCAtMTY1LDE5ICsxNjUsMTkgQEAgc3RydWN0IF9fbGFyZ2Vfc3RydWN0IHsKIAog
I2RlZmluZSBfX2dldF91c2VyX25vY2hlY2soeCwgcHRyLCBzaXplKQkJCVwKICh7CQkJCQkJCQlc
Ci0JbG9uZyBfX2d1X2VyciwgX19ndV92YWw7CQkJCVwKLQlfX2dldF91c2VyX3NpemUoX19ndV92
YWwsIChwdHIpLCAoc2l6ZSksIF9fZ3VfZXJyKTsJXAotCSh4KSA9IChfX2ZvcmNlIF9fdHlwZW9m
X18oKihwdHIpKSlfX2d1X3ZhbDsJCVwKKwlsb25nIF9fZ3VfZXJyOwkJCQkJCVwKKwlfX2dldF91
c2VyX3NpemUoKHgpLCAocHRyKSwgKHNpemUpLCBfX2d1X2Vycik7CQlcCiAJX19ndV9lcnI7CQkJ
CQkJXAogfSkKIAogI2RlZmluZSBfX2dldF91c2VyX2NoZWNrKHgsIHB0ciwgc2l6ZSkJCQkJCVwK
ICh7CQkJCQkJCQkJXAotCWxvbmcgX19ndV9lcnIgPSAtRUZBVUxULCBfX2d1X3ZhbCA9IDA7CQkJ
CVwKKwlsb25nIF9fZ3VfZXJyID0gLUVGQVVMVDsJCQkJCVwKIAljb25zdCBfX3R5cGVvZl9fKCoo
cHRyKSkgX191c2VyICpfX2d1X2FkZHIgPSAocHRyKTsJCVwKLQlpZiAoYWNjZXNzX29rKF9fZ3Vf
YWRkciwgc2l6ZSkpCQkJXAotCQlfX2dldF91c2VyX3NpemUoX19ndV92YWwsIF9fZ3VfYWRkciwg
KHNpemUpLCBfX2d1X2Vycik7CVwKLQkoeCkgPSAoX19mb3JjZSBfX3R5cGVvZl9fKCoocHRyKSkp
X19ndV92YWw7CQkJXAorCWlmIChhY2Nlc3Nfb2soX19ndV9hZGRyLCBzaXplKSkJCQkJCVwKKwkJ
X19nZXRfdXNlcl9zaXplKCh4KSwgX19ndV9hZGRyLCAoc2l6ZSksIF9fZ3VfZXJyKTsJXAorCWVs
c2UJCQkJCQkJCVwKKwkJKHgpID0gKF9fdHlwZW9mX18oKihwdHIpKSkgMDsJCQkJXAogCV9fZ3Vf
ZXJyOwkJCQkJCQlcCiB9KQogCkBAIC0xOTEsMTEgKzE5MSwxMyBAQCBkbyB7CQkJCQkJCQkJXAog
CWNhc2UgMjogX19nZXRfdXNlcl9hc20oeCwgcHRyLCByZXR2YWwsICJsLmxoeiIpOyBicmVhazsJ
CVwKIAljYXNlIDQ6IF9fZ2V0X3VzZXJfYXNtKHgsIHB0ciwgcmV0dmFsLCAibC5sd3oiKTsgYnJl
YWs7CQlcCiAJY2FzZSA4OiBfX2dldF91c2VyX2FzbTIoeCwgcHRyLCByZXR2YWwpOyBicmVhazsJ
CQlcCi0JZGVmYXVsdDogKHgpID0gX19nZXRfdXNlcl9iYWQoKTsJCQkJXAorCWRlZmF1bHQ6ICh4
KSA9IChfX3R5cGVvZl9fKCoocHRyKSkpX19nZXRfdXNlcl9iYWQoKTsJCVwKIAl9CQkJCQkJCQlc
CiB9IHdoaWxlICgwKQogCiAjZGVmaW5lIF9fZ2V0X3VzZXJfYXNtKHgsIGFkZHIsIGVyciwgb3Ap
CQlcCit7CQkJCQkJCVwKKwl1bnNpZ25lZCBsb25nIF9fZ3VfdG1wOwkJCQlcCiAJX19hc21fXyBf
X3ZvbGF0aWxlX18oCQkJCVwKIAkJIjE6CSJvcCIgJTEsMCglMilcbiIJCVwKIAkJIjI6XG4iCQkJ
CQlcCkBAIC0yMDksMTAgKzIxMSwxNCBAQCBkbyB7CQkJCQkJCQkJXAogCQkiCS5hbGlnbiAyXG4i
CQkJXAogCQkiCS5sb25nIDFiLDNiXG4iCQkJXAogCQkiLnByZXZpb3VzIgkJCQlcCi0JCTogIj1y
IihlcnIpLCAiPXIiKHgpCQkJXAotCQk6ICJyIihhZGRyKSwgImkiKC1FRkFVTFQpLCAiMCIoZXJy
KSkKKwkJOiAiPXIiKGVyciksICI9ciIoX19ndV90bXApCQlcCisJCTogInIiKGFkZHIpLCAiaSIo
LUVGQVVMVCksICIwIihlcnIpKTsJXAorCSh4KSA9IChfX3R5cGVvZl9fKCooYWRkcikpKV9fZ3Vf
dG1wOwkJXAorfQogCiAjZGVmaW5lIF9fZ2V0X3VzZXJfYXNtMih4LCBhZGRyLCBlcnIpCQkJXAor
ewkJCQkJCQlcCisJdW5zaWduZWQgbG9uZyBsb25nIF9fZ3VfdG1wOwkJCVwKIAlfX2FzbV9fIF9f
dm9sYXRpbGVfXygJCQkJXAogCQkiMToJbC5sd3ogJTEsMCglMilcbiIJCVwKIAkJIjI6CWwubHd6
ICVIMSw0KCUyKVxuIgkJXApAQCAtMjI5LDggKzIzNSwxMSBAQCBkbyB7CQkJCQkJCQkJXAogCQki
CS5sb25nIDFiLDRiXG4iCQkJXAogCQkiCS5sb25nIDJiLDRiXG4iCQkJXAogCQkiLnByZXZpb3Vz
IgkJCQlcCi0JCTogIj1yIihlcnIpLCAiPSZyIih4KQkJCVwKLQkJOiAiciIoYWRkciksICJpIigt
RUZBVUxUKSwgIjAiKGVycikpCisJCTogIj1yIihlcnIpLCAiPSZyIihfX2d1X3RtcCkJCVwKKwkJ
OiAiciIoYWRkciksICJpIigtRUZBVUxUKSwgIjAiKGVycikpOwlcCisJKHgpID0gKF9fdHlwZW9m
X18oKihhZGRyKSkpKAkJCVwKKwkJKF9fdHlwZW9mX18oKHgpLSh4KSkpX19ndV90bXApOwkJXAor
fQogCiAvKiBtb3JlIGNvbXBsZXggcm91dGluZXMgKi8KIAotLSAKMi4yNi4yCgpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxp
c3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVz
Lm9yZy9saXN0aW5mby9vcGVucmlzYwo=
