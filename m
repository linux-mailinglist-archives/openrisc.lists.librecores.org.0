Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 1D9BB2499B2
	for <lists+openrisc@lfdr.de>; Wed, 19 Aug 2020 11:55:44 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 47DFE20CA9;
	Wed, 19 Aug 2020 11:55:43 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 0EE3020CB3
 for <openrisc@lists.librecores.org>; Tue, 18 Aug 2020 17:16:51 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 140422054F;
 Tue, 18 Aug 2020 15:16:37 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1597763808;
 bh=pWqW8YgLG90UU3p8BWQ4xo9QKFARTHRes7KpRDQutEY=;
 h=From:To:Cc:Subject:Date:From;
 b=mZ4Dw/78TkBwbT4zckybu8GS6IeYljCyckNW7F7V9LPqkH0uP6lZLns364B8ofjDq
 g40MFxNJ9gEv01k6pNkEpjYOvmf4wvbJAjpvy8rkOX3Ub/pu7s4r9Q//DEwKnW4wz3
 DIa8FLdmh9cooXoz1dI6BSyEhKPCYBl/+8BDlFOg=
From: Mike Rapoport <rppt@kernel.org>
To: Andrew Morton <akpm@linux-foundation.org>
Date: Tue, 18 Aug 2020 18:16:17 +0300
Message-Id: <20200818151634.14343-1-rppt@kernel.org>
X-Mailer: git-send-email 2.26.2
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 19 Aug 2020 11:55:42 +0200
Subject: [OpenRISC] [PATCH v3 00/17] memblock: seasonal cleaning^w cleanup
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Thomas Gleixner <tglx@linutronix.de>,
 Emil Renner Berthing <kernel@esmil.dk>, linux-sh@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Dave Hansen <dave.hansen@linux.intel.com>, linux-mips@vger.kernel.org,
 Max Filippov <jcmvbkbc@gmail.com>, Paul Mackerras <paulus@samba.org>,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 Will Deacon <will@kernel.org>, Christoph Hellwig <hch@lst.de>,
 Marek Szyprowski <m.szyprowski@samsung.com>, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Baoquan He <bhe@redhat.com>, Michael Ellerman <mpe@ellerman.id.au>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Mike Rapoport <rppt@linux.ibm.com>, clang-built-linux@googlegroups.com,
 Ingo Molnar <mingo@redhat.com>, linux-arm-kernel@lists.infradead.org,
 Catalin Marinas <catalin.marinas@arm.com>,
 uclinux-h8-devel@lists.sourceforge.jp, linux-xtensa@linux-xtensa.org,
 openrisc@lists.librecores.org, Borislav Petkov <bp@alien8.de>,
 Andy Lutomirski <luto@kernel.org>, Paul Walmsley <paul.walmsley@sifive.com>,
 Hari Bathini <hbathini@linux.ibm.com>, Daniel Axtens <dja@axtens.net>,
 Michal Simek <monstr@monstr.eu>, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-mm@kvack.org, linux-kernel@vger.kernel.org,
 iommu@lists.linux-foundation.org, Palmer Dabbelt <palmer@dabbelt.com>,
 linuxppc-dev@lists.ozlabs.org, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKSGksCgpUaGVzZSBwYXRj
aGVzIHNpbXBsaWZ5IHNldmVyYWwgdXNlcyBvZiBtZW1ibG9jayBpdGVyYXRvcnMgYW5kIGhpZGUg
c29tZSBvZgp0aGUgbWVtYmxvY2sgaW1wbGVtZW50YXRpb24gZGV0YWlscyBmcm9tIHRoZSByZXN0
IG9mIHRoZSBzeXN0ZW0uCgpUaGUgcGF0Y2hlcyBhcmUgb24gdG9wIG9mIHY1LjktcmMxCgp2MyBj
aGFuZ2VzOgoqIHJlYmFzZSBvbiB2NS45LXJjMSwgYXMgdGhlIHJlc3VsdCB0aGlzIHJlcXVpcmVk
IHNvbWUgbm9uLXRyaXZpYWwgY2hhbmdlcwogIGluIHBhdGNoZXMgMTAgYW5kIDE2LiBJIGRpZG4n
dCBhZGQgQmFvcXVhbidzIFJldmlld2VkLWJ5IHRvIHRoZXNlcwogIHBhdGNoZXMsIGJ1dCBJIGtl
ZXB0IFRob21hcyBhbmQgTWlndWVsCiogQWRkIEFja2VkLWJ5IGZyb20gVGhvbWFzIGFuZCBNaWd1
ZWwgYXMgdGhlcmUgd2VyZSBjaGFuZ2VzIGluIE1JUFMgYW5kCiAgb25seSB0cml2aWFsIGNoYW5n
ZXMgaW4gLmNsYW5nLWZvcm1hdAoqIEFkZGVkIFJldmlld2VkLWJ5IGZyb20gQmFvcXVhbiBleGNl
cHQgZm9yIHRoZSBwYXRjaGVzIDEwIGFuZCAxNgoqIEZpeGVkIG1pc2MgYnVpbGQgZXJyb3JzIGFu
ZCB3YXJuaW5ncyByZXBvcnRlZCBieSBrYnVpbGQgYm90CiogVXBkYXRlZCBQb3dlclBDIEtWTSBy
ZXNlcnZhdGlvbiBzaXplIChwYXRjaCAyKSwgYXMgcGVyIERhbmllbCdzIGNvbW1lbnQKCnYyIGNo
YW5nZXM6CiogcmVwbGFjZSBmb3JfZWFjaF9tZW1ibG9jaygpIHdpdGggdHdvIHZlcnNpb25zLCBv
bmUgZm9yIG1lbWJsb2NrLm1lbW9yeQogIGFuZCBhbm90aGVyIG9uZSBmb3IgbWVtYmxvY2sucmVz
ZXJ2ZWQKKiBmaXggb3ZlcnplYWxvdXMgY2xlYW51cCBvZiBwb3dlcnBjIGZhZGFtcDoga2VlcCB0
aGUgdHJhdmVyc2FsIG92ZXIgdGhlCiAgbWVtYmxvY2tzLCBidXQgdXNlIGJldHRlciBzdWl0ZWQg
aXRlcmF0b3JzCiogZG9uJ3QgcmVtb3ZlIHRyYXZlcnNhbCBvdmVyIG1lbWJsb2NrLnJlc2VydmVk
IGluIHg4NiBudW1hIGNsZWFudXAgYnV0CiAgcmVwbGFjZSBmb3JfZWFjaF9tZW1ibG9jaygpIHdp
dGggbmV3IGZvcl9lYWNoX3Jlc2VydmVkX21lbV9yZWdpb24oKQoqIHNpbXBsaWZ5IHJhbWRpc2sg
YW5kIGNyYXNoIGtlcm5lbCBhbGxvY2F0aW9ucyBvbiB4ODYKKiBkcm9wIG1vcmUgcmVkdW5kYW50
IGFuZCB1bnVzZWQgY29kZTogX19uZXh0X3Jlc2VydmVkX21lbV9yZWdpb24oKSBhbmQKICBtZW1i
bG9ja19tZW1fc2l6ZSgpCiogYWRkIGRlc2NyaXB0aW9uIG9mIG51bWEgaW5pdGlhbGl6YXRpb24g
Zml4IG9uIGFybTY0ICh0aGFua3MgSm9uYXRoYW4pCiogYWRkIEFja2VkIGFuZCBSZXZpZXdlZCB0
YWdzCgpNaWtlIFJhcG9wb3J0ICgxNyk6CiAgS1ZNOiBQUEM6IEJvb2szUyBIVjogc2ltcGxpZnkg
a3ZtX2NtYV9yZXNlcnZlKCkKICBkbWEtY29udGlndW91czogc2ltcGxpZnkgY21hX2Vhcmx5X3Bl
cmNlbnRfbWVtb3J5KCkKICBhcm0sIHh0ZW5zYTogc2ltcGxpZnkgaW5pdGlhbGl6YXRpb24gb2Yg
aGlnaCBtZW1vcnkgcGFnZXMKICBhcm02NDogbnVtYTogc2ltcGxpZnkgZHVtbXlfbnVtYV9pbml0
KCkKICBoODMwMCwgbmRzMzIsIG9wZW5yaXNjOiBzaW1wbGlmeSBkZXRlY3Rpb24gb2YgbWVtb3J5
IGV4dGVudHMKICByaXNjdjogZHJvcCB1bm5lZWRlZCBub2RlIGluaXRpYWxpemF0aW9uCiAgbWly
Y29ibGF6ZTogZHJvcCB1bm5lZWRlZCBOVU1BIGFuZCBzcGFyc2VtZW0gaW5pdGlhbGl6YXRpb25z
CiAgbWVtYmxvY2s6IG1ha2UgZm9yX2VhY2hfbWVtYmxvY2tfdHlwZSgpIGl0ZXJhdG9yIHByaXZh
dGUKICBtZW1ibG9jazogbWFrZSBtZW1ibG9ja19kZWJ1ZyBhbmQgcmVsYXRlZCBmdW5jdGlvbmFs
aXR5IHByaXZhdGUKICBtZW1ibG9jazogcmVkdWNlIG51bWJlciBvZiBwYXJhbWV0ZXJzIGluIGZv
cl9lYWNoX21lbV9yYW5nZSgpCiAgYXJjaCwgbW06IHJlcGxhY2UgZm9yX2VhY2hfbWVtYmxvY2so
KSB3aXRoIGZvcl9lYWNoX21lbV9wZm5fcmFuZ2UoKQogIGFyY2gsIGRyaXZlcnM6IHJlcGxhY2Ug
Zm9yX2VhY2hfbWVtYm9jaygpIHdpdGggZm9yX2VhY2hfbWVtX3JhbmdlKCkKICB4ODYvc2V0dXA6
IHNpbXBsaWZ5IGluaXRyZCByZWxvY2F0aW9uIGFuZCByZXNlcnZhdGlvbgogIHg4Ni9zZXR1cDog
c2ltcGxpZnkgcmVzZXJ2ZV9jcmFzaGtlcm5lbCgpCiAgbWVtYmxvY2s6IHJlbW92ZSB1bnVzZWQg
bWVtYmxvY2tfbWVtX3NpemUoKQogIG1lbWJsb2NrOiBpbXBsZW1lbnQgZm9yX2VhY2hfcmVzZXJ2
ZWRfbWVtX3JlZ2lvbigpIHVzaW5nCiAgICBfX25leHRfbWVtX3JlZ2lvbigpCiAgbWVtYmxvY2s6
IHVzZSBzZXBhcmF0ZSBpdGVyYXRvcnMgZm9yIG1lbW9yeSBhbmQgcmVzZXJ2ZWQgcmVnaW9ucwoK
IC5jbGFuZy1mb3JtYXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgNSArLQogYXJjaC9h
cm0va2VybmVsL3NldHVwLmMgICAgICAgICAgICAgICAgICB8IDE4ICsrKy0tCiBhcmNoL2FybS9t
bS9pbml0LmMgICAgICAgICAgICAgICAgICAgICAgIHwgNTkgKysrLS0tLS0tLS0tLS0tCiBhcmNo
L2FybS9tbS9tbXUuYyAgICAgICAgICAgICAgICAgICAgICAgIHwgMzkgKysrKy0tLS0tLQogYXJj
aC9hcm0vbW0vcG1zYS12Ny5jICAgICAgICAgICAgICAgICAgICB8IDIzICsrKy0tLQogYXJjaC9h
cm0vbW0vcG1zYS12OC5jICAgICAgICAgICAgICAgICAgICB8IDE3ICsrLS0tCiBhcmNoL2FybS94
ZW4vbW0uYyAgICAgICAgICAgICAgICAgICAgICAgIHwgIDcgKy0KIGFyY2gvYXJtNjQva2VybmVs
L21hY2hpbmVfa2V4ZWNfZmlsZS5jICAgfCAgNiArLQogYXJjaC9hcm02NC9rZXJuZWwvc2V0dXAu
YyAgICAgICAgICAgICAgICB8ICA0ICstCiBhcmNoL2FybTY0L21tL2luaXQuYyAgICAgICAgICAg
ICAgICAgICAgIHwgMTEgKy0tCiBhcmNoL2FybTY0L21tL2thc2FuX2luaXQuYyAgICAgICAgICAg
ICAgIHwgMTAgKy0tCiBhcmNoL2FybTY0L21tL21tdS5jICAgICAgICAgICAgICAgICAgICAgIHwg
MTEgKy0tCiBhcmNoL2FybTY0L21tL251bWEuYyAgICAgICAgICAgICAgICAgICAgIHwgMTUgKyst
LQogYXJjaC9jNngva2VybmVsL3NldHVwLmMgICAgICAgICAgICAgICAgICB8ICA5ICsrLQogYXJj
aC9oODMwMC9rZXJuZWwvc2V0dXAuYyAgICAgICAgICAgICAgICB8ICA4ICstCiBhcmNoL21pY3Jv
YmxhemUvbW0vaW5pdC5jICAgICAgICAgICAgICAgIHwgMjEgKystLS0tCiBhcmNoL21pcHMvY2F2
aXVtLW9jdGVvbi9kbWEtb2N0ZW9uLmMgICAgIHwgMTIgKy0tCiBhcmNoL21pcHMva2VybmVsL3Nl
dHVwLmMgICAgICAgICAgICAgICAgIHwgMzEgKysrKy0tLS0KIGFyY2gvbWlwcy9uZXRsb2dpYy94
bHAvc2V0dXAuYyAgICAgICAgICAgfCAgMiArLQogYXJjaC9uZHMzMi9rZXJuZWwvc2V0dXAuYyAg
ICAgICAgICAgICAgICB8ICA4ICstCiBhcmNoL29wZW5yaXNjL2tlcm5lbC9zZXR1cC5jICAgICAg
ICAgICAgIHwgIDkgKy0tCiBhcmNoL29wZW5yaXNjL21tL2luaXQuYyAgICAgICAgICAgICAgICAg
IHwgIDggKy0KIGFyY2gvcG93ZXJwYy9rZXJuZWwvZmFkdW1wLmMgICAgICAgICAgICAgfCA1NyAr
KysrKysrLS0tLS0tLQogYXJjaC9wb3dlcnBjL2tleGVjL2ZpbGVfbG9hZF82NC5jICAgICAgICB8
IDE2ICsrLS0KIGFyY2gvcG93ZXJwYy9rdm0vYm9vazNzX2h2X2J1aWx0aW4uYyAgICAgfCAxMiAr
LS0KIGFyY2gvcG93ZXJwYy9tbS9ib29rM3M2NC9oYXNoX3V0aWxzLmMgICAgfCAxNiArKy0tCiBh
cmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvcmFkaXhfcGd0YWJsZS5jIHwgMTAgKy0tCiBhcmNoL3Bv
d2VycGMvbW0va2FzYW4va2FzYW5faW5pdF8zMi5jICAgIHwgIDggKy0KIGFyY2gvcG93ZXJwYy9t
bS9tZW0uYyAgICAgICAgICAgICAgICAgICAgfCAzMyArKysrLS0tLQogYXJjaC9wb3dlcnBjL21t
L251bWEuYyAgICAgICAgICAgICAgICAgICB8ICA3ICstCiBhcmNoL3Bvd2VycGMvbW0vcGd0YWJs
ZV8zMi5jICAgICAgICAgICAgIHwgIDggKy0KIGFyY2gvcmlzY3YvbW0vaW5pdC5jICAgICAgICAg
ICAgICAgICAgICAgfCAzNiArKystLS0tLS0KIGFyY2gvcmlzY3YvbW0va2FzYW5faW5pdC5jICAg
ICAgICAgICAgICAgfCAxMCArLS0KIGFyY2gvczM5MC9rZXJuZWwvc2V0dXAuYyAgICAgICAgICAg
ICAgICAgfCAyNyArKysrLS0tCiBhcmNoL3MzOTAvbW0vcGFnZS1zdGF0ZXMuYyAgICAgICAgICAg
ICAgIHwgIDYgKy0KIGFyY2gvczM5MC9tbS92bWVtLmMgICAgICAgICAgICAgICAgICAgICAgfCAg
NyArLQogYXJjaC9zaC9tbS9pbml0LmMgICAgICAgICAgICAgICAgICAgICAgICB8ICA5ICstLQog
YXJjaC9zcGFyYy9tbS9pbml0XzY0LmMgICAgICAgICAgICAgICAgICB8IDEyICstLQogYXJjaC94
ODYva2VybmVsL3NldHVwLmMgICAgICAgICAgICAgICAgICB8IDU2ICsrKysrLS0tLS0tLS0tCiBh
cmNoL3g4Ni9tbS9udW1hLmMgICAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gveHRl
bnNhL21tL2luaXQuYyAgICAgICAgICAgICAgICAgICAgfCA1NSArKystLS0tLS0tLS0tLQogZHJp
dmVycy9idXMvbXZlYnUtbWJ1cy5jICAgICAgICAgICAgICAgICB8IDEyICstLQogZHJpdmVycy9p
cnFjaGlwL2lycS1naWMtdjMtaXRzLmMgICAgICAgICB8ICAyICstCiBpbmNsdWRlL2xpbnV4L21l
bWJsb2NrLmggICAgICAgICAgICAgICAgIHwgODggKysrKysrKysrKysrKy0tLS0tLS0tLQoga2Vy
bmVsL2RtYS9jb250aWd1b3VzLmMgICAgICAgICAgICAgICAgICB8IDExICstLQogbW0vbWVtYmxv
Y2suYyAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDk1ICsrKysrKysrKystLS0tLS0tLS0t
LS0tLQogbW0vcGFnZV9hbGxvYy5jICAgICAgICAgICAgICAgICAgICAgICAgICB8IDExICsrLQog
bW0vc3BhcnNlLmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IDEwICstLQogNDggZmls
ZXMgY2hhbmdlZCwgMzg3IGluc2VydGlvbnMoKyksIDU2MiBkZWxldGlvbnMoLSkKCi0tIAoyLjI2
LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5S
SVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xp
c3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
