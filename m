Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 5806D91107
	for <lists+openrisc@lfdr.de>; Sat, 17 Aug 2019 17:02:39 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 4B59D2048B;
	Sat, 17 Aug 2019 17:02:37 +0200 (CEST)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 8102E2048B
 for <openrisc@lists.librecores.org>; Sat, 17 Aug 2019 09:48:53 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=CaLJaPEKvO5Hm3eeNP+bX0FcX1nCEvR/me9d/8pRy28=; b=U4PCG16fwmCyiljptPfc8WfLen
 QCVcQz/1i9SwkiFqThMstjjrrPQV2H2AHdT6uhsOy9dZSehAfqkOcV/b8cXBM2CFaNn9WyvtJx16t
 h8tV47TgSiTI2lGqg4SqbDEvw2H1m8uPafXHh/qIu9HJK2E9qB0UTKRf3YdKJuqn2O/K64orgjwgu
 uxhlxw0zhGCKGPYd2nxs2kbyycPhwb4fuVPr+MhP1z2JBj1oxuyRlWCEzLJEl4F9DJubvBCQbUCHs
 /KD+8KQE4SSo9M2IuumaA/bcPYqXZROF/GmfHVMmPXB/kjelQfdrPsKde73YT37igLjAgLaqA75uy
 7pVfDgbA==;
Received: from [2001:4bb8:18c:28b5:44f9:d544:957f:32cb] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hytSA-00052o-Js; Sat, 17 Aug 2019 07:48:47 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Sat, 17 Aug 2019 09:32:39 +0200
Message-Id: <20190817073253.27819-13-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190817073253.27819-1-hch@lst.de>
References: <20190817073253.27819-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Sat, 17 Aug 2019 17:02:30 +0200
Subject: [OpenRISC] [PATCH 12/26] x86: clean up ioremap
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, linux-mips@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-mtd@lists.infradead.org,
 linux-alpha@vger.kernel.org, sparclinux@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, linux-riscv@lists.infradead.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VXNlIGlvcmVtYXAgYXMgdGhlIG1haW4gaW1wbGVtZW50ZWQgZnVuY3Rpb24sIGFuZCBkZWZpbmVk
CmlvcmVtYXBfbm9jYWNoZSB0byBpdCBhcyBhIGRlcHJlY2F0ZWQgYWxpYXMuCgpTaWduZWQtb2Zm
LWJ5OiBDaHJpc3RvcGggSGVsbHdpZyA8aGNoQGxzdC5kZT4KLS0tCiBhcmNoL3g4Ni9pbmNsdWRl
L2FzbS9pby5oIHwgOCArKy0tLS0tLQogYXJjaC94ODYvbW0vaW9yZW1hcC5jICAgICB8IDggKysr
Ky0tLS0KIGFyY2gveDg2L21tL3BhZ2VhdHRyLmMgICAgfCA0ICsrLS0KIDMgZmlsZXMgY2hhbmdl
ZCwgOCBpbnNlcnRpb25zKCspLCAxMiBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni9pbmNsdWRlL2FzbS9pby5oIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vaW8uaAppbmRleCA2YmVk
OTdmZjZkYjIuLjZiNWNjNDEzMTlhNyAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20v
aW8uaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9pby5oCkBAIC0xODAsOCArMTgwLDYgQEAg
c3RhdGljIGlubGluZSB1bnNpZ25lZCBpbnQgaXNhX3ZpcnRfdG9fYnVzKHZvbGF0aWxlIHZvaWQg
KmFkZHJlc3MpCiAgKiBUaGUgZGVmYXVsdCBpb3JlbWFwKCkgYmVoYXZpb3IgaXMgbm9uLWNhY2hl
ZDsgaWYgeW91IG5lZWQgc29tZXRoaW5nCiAgKiBlbHNlLCB5b3UgcHJvYmFibHkgd2FudCBvbmUg
b2YgdGhlIGZvbGxvd2luZy4KICAqLwotZXh0ZXJuIHZvaWQgX19pb21lbSAqaW9yZW1hcF9ub2Nh
Y2hlKHJlc291cmNlX3NpemVfdCBvZmZzZXQsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7Ci0jZGVmaW5l
IGlvcmVtYXBfbm9jYWNoZSBpb3JlbWFwX25vY2FjaGUKIGV4dGVybiB2b2lkIF9faW9tZW0gKmlv
cmVtYXBfdWMocmVzb3VyY2Vfc2l6ZV90IG9mZnNldCwgdW5zaWduZWQgbG9uZyBzaXplKTsKICNk
ZWZpbmUgaW9yZW1hcF91YyBpb3JlbWFwX3VjCiBleHRlcm4gdm9pZCBfX2lvbWVtICppb3JlbWFw
X2NhY2hlKHJlc291cmNlX3NpemVfdCBvZmZzZXQsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7CkBAIC0y
MDUsMTEgKzIwMyw5IEBAIGV4dGVybiB2b2lkIF9faW9tZW0gKmlvcmVtYXBfZW5jcnlwdGVkKHJl
c291cmNlX3NpemVfdCBwaHlzX2FkZHIsIHVuc2lnbmVkIGxvbmcKICAqIElmIHRoZSBhcmVhIHlv
dSBhcmUgdHJ5aW5nIHRvIG1hcCBpcyBhIFBDSSBCQVIgeW91IHNob3VsZCBoYXZlIGEKICAqIGxv
b2sgYXQgcGNpX2lvbWFwKCkuCiAgKi8KLXN0YXRpYyBpbmxpbmUgdm9pZCBfX2lvbWVtICppb3Jl
bWFwKHJlc291cmNlX3NpemVfdCBvZmZzZXQsIHVuc2lnbmVkIGxvbmcgc2l6ZSkKLXsKLQlyZXR1
cm4gaW9yZW1hcF9ub2NhY2hlKG9mZnNldCwgc2l6ZSk7Ci19Cit2b2lkIF9faW9tZW0gKmlvcmVt
YXAocmVzb3VyY2Vfc2l6ZV90IG9mZnNldCwgdW5zaWduZWQgbG9uZyBzaXplKTsKICNkZWZpbmUg
aW9yZW1hcCBpb3JlbWFwCisjZGVmaW5lIGlvcmVtYXBfbm9jYWNoZSBpb3JlbWFwCiAKIGV4dGVy
biB2b2lkIGlvdW5tYXAodm9sYXRpbGUgdm9pZCBfX2lvbWVtICphZGRyKTsKICNkZWZpbmUgaW91
bm1hcCBpb3VubWFwCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9tbS9pb3JlbWFwLmMgYi9hcmNoL3g4
Ni9tbS9pb3JlbWFwLmMKaW5kZXggNjNlOTlmMTVkN2NmLi5jOWU5MDIxMWJkZGIgMTAwNjQ0Ci0t
LSBhL2FyY2gveDg2L21tL2lvcmVtYXAuYworKysgYi9hcmNoL3g4Ni9tbS9pb3JlbWFwLmMKQEAg
LTI3OSwxMSArMjc5LDExIEBAIF9faW9yZW1hcF9jYWxsZXIocmVzb3VyY2Vfc2l6ZV90IHBoeXNf
YWRkciwgdW5zaWduZWQgbG9uZyBzaXplLAogfQogCiAvKioKLSAqIGlvcmVtYXBfbm9jYWNoZSAg
ICAgLSAgIG1hcCBidXMgbWVtb3J5IGludG8gQ1BVIHNwYWNlCisgKiBpb3JlbWFwICAgICAtICAg
bWFwIGJ1cyBtZW1vcnkgaW50byBDUFUgc3BhY2UKICAqIEBwaHlzX2FkZHI6ICAgIGJ1cyBhZGRy
ZXNzIG9mIHRoZSBtZW1vcnkKICAqIEBzaXplOiAgICAgIHNpemUgb2YgdGhlIHJlc291cmNlIHRv
IG1hcAogICoKLSAqIGlvcmVtYXBfbm9jYWNoZSBwZXJmb3JtcyBhIHBsYXRmb3JtIHNwZWNpZmlj
IHNlcXVlbmNlIG9mIG9wZXJhdGlvbnMgdG8KKyAqIGlvcmVtYXAgcGVyZm9ybXMgYSBwbGF0Zm9y
bSBzcGVjaWZpYyBzZXF1ZW5jZSBvZiBvcGVyYXRpb25zIHRvCiAgKiBtYWtlIGJ1cyBtZW1vcnkg
Q1BVIGFjY2Vzc2libGUgdmlhIHRoZSByZWFkYi9yZWFkdy9yZWFkbC93cml0ZWIvCiAgKiB3cml0
ZXcvd3JpdGVsIGZ1bmN0aW9ucyBhbmQgdGhlIG90aGVyIG1taW8gaGVscGVycy4gVGhlIHJldHVy
bmVkCiAgKiBhZGRyZXNzIGlzIG5vdCBndWFyYW50ZWVkIHRvIGJlIHVzYWJsZSBkaXJlY3RseSBh
cyBhIHZpcnR1YWwKQEAgLTI5OSw3ICsyOTksNyBAQCBfX2lvcmVtYXBfY2FsbGVyKHJlc291cmNl
X3NpemVfdCBwaHlzX2FkZHIsIHVuc2lnbmVkIGxvbmcgc2l6ZSwKICAqCiAgKiBNdXN0IGJlIGZy
ZWVkIHdpdGggaW91bm1hcC4KICAqLwotdm9pZCBfX2lvbWVtICppb3JlbWFwX25vY2FjaGUocmVz
b3VyY2Vfc2l6ZV90IHBoeXNfYWRkciwgdW5zaWduZWQgbG9uZyBzaXplKQordm9pZCBfX2lvbWVt
ICppb3JlbWFwKHJlc291cmNlX3NpemVfdCBwaHlzX2FkZHIsIHVuc2lnbmVkIGxvbmcgc2l6ZSkK
IHsKIAkvKgogCSAqIElkZWFsbHksIHRoaXMgc2hvdWxkIGJlOgpAQCAtMzE0LDcgKzMxNCw3IEBA
IHZvaWQgX19pb21lbSAqaW9yZW1hcF9ub2NhY2hlKHJlc291cmNlX3NpemVfdCBwaHlzX2FkZHIs
IHVuc2lnbmVkIGxvbmcgc2l6ZSkKIAlyZXR1cm4gX19pb3JlbWFwX2NhbGxlcihwaHlzX2FkZHIs
IHNpemUsIHBjbSwKIAkJCQlfX2J1aWx0aW5fcmV0dXJuX2FkZHJlc3MoMCksIGZhbHNlKTsKIH0K
LUVYUE9SVF9TWU1CT0woaW9yZW1hcF9ub2NhY2hlKTsKK0VYUE9SVF9TWU1CT0woaW9yZW1hcCk7
CiAKIC8qKgogICogaW9yZW1hcF91YyAgICAgLSAgIG1hcCBidXMgbWVtb3J5IGludG8gQ1BVIHNw
YWNlIGFzIHN0cm9uZ2x5IHVuY2FjaGFibGUKZGlmZiAtLWdpdCBhL2FyY2gveDg2L21tL3BhZ2Vh
dHRyLmMgYi9hcmNoL3g4Ni9tbS9wYWdlYXR0ci5jCmluZGV4IDZhOWE3N2E0MDNjOS4uNWI3YTky
MzFiODViIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9tbS9wYWdlYXR0ci5jCisrKyBiL2FyY2gveDg2
L21tL3BhZ2VhdHRyLmMKQEAgLTE3NzQsNyArMTc3NCw3IEBAIHN0YXRpYyBpbmxpbmUgaW50IGNw
YV9jbGVhcl9wYWdlc19hcnJheShzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCBpbnQgbnVtcGFnZXMsCiBp
bnQgX3NldF9tZW1vcnlfdWModW5zaWduZWQgbG9uZyBhZGRyLCBpbnQgbnVtcGFnZXMpCiB7CiAJ
LyoKLQkgKiBmb3Igbm93IFVDIE1JTlVTLiBzZWUgY29tbWVudHMgaW4gaW9yZW1hcF9ub2NhY2hl
KCkKKwkgKiBmb3Igbm93IFVDIE1JTlVTLiBzZWUgY29tbWVudHMgaW4gaW9yZW1hcCgpCiAJICog
SWYgeW91IHJlYWxseSBuZWVkIHN0cm9uZyBVQyB1c2UgaW9yZW1hcF91YygpLCBidXQgbm90ZQog
CSAqIHRoYXQgeW91IGNhbm5vdCBvdmVycmlkZSBJTyBhcmVhcyB3aXRoIHNldF9tZW1vcnlfKigp
IGFzCiAJICogdGhlc2UgaGVscGVycyBjYW5ub3Qgd29yayB3aXRoIElPIG1lbW9yeS4KQEAgLTE3
ODksNyArMTc4OSw3IEBAIGludCBzZXRfbWVtb3J5X3VjKHVuc2lnbmVkIGxvbmcgYWRkciwgaW50
IG51bXBhZ2VzKQogCWludCByZXQ7CiAKIAkvKgotCSAqIGZvciBub3cgVUMgTUlOVVMuIHNlZSBj
b21tZW50cyBpbiBpb3JlbWFwX25vY2FjaGUoKQorCSAqIGZvciBub3cgVUMgTUlOVVMuIHNlZSBj
b21tZW50cyBpbiBpb3JlbWFwKCkKIAkgKi8KIAlyZXQgPSByZXNlcnZlX21lbXR5cGUoX19wYShh
ZGRyKSwgX19wYShhZGRyKSArIG51bXBhZ2VzICogUEFHRV9TSVpFLAogCQkJICAgICAgX1BBR0Vf
Q0FDSEVfTU9ERV9VQ19NSU5VUywgTlVMTCk7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVu
UklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xp
c3RpbmZvL29wZW5yaXNjCg==
