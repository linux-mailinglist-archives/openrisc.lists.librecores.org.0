Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 50EB57BEF0
	for <lists+openrisc@lfdr.de>; Wed, 31 Jul 2019 13:09:08 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 2150920152;
	Wed, 31 Jul 2019 13:09:07 +0200 (CEST)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id BB7E320192
 for <openrisc@lists.librecores.org>; Mon, 22 Jul 2019 13:08:04 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Sender:Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:
 Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From:
 Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=nnOiiiZ4oRLl2AU8mphnTFAoem96tiQ3SW7JCN71AkA=; b=hYIcK68dJexwDiZj2u23cuCa2/
 X1V99/upmk8kqo5/J8Yemke73MaSAiYrXJ197+Pwj8E5GgVb37+XkGmjI/w9hr85iqd67uEEgIUp8
 G4uJjW5yOa84GsbgkdgOX0mE/dSyKA5fFMGiBTFdT32mMfqxYJPnz9v2TK8dab9e4B7SapRTIHtlS
 Nfrv383WDslYxsYSvxGnyTy3TJZ9IxJCxS0cEb0/6rBoSiYKk/pAZSJPbJ2aToTkfdQhy6jrR7rYG
 PZYxGpCda8+3AJNfix9qBvXMQloOf/1nSRQd/n64++UwRfW211Q4RoIC/uHf0JJbk1Gbwy/f/DiSC
 4nzKAdeQ==;
Received: from 177.157.124.3.dynamic.adsl.gvt.net.br ([177.157.124.3]
 helo=bombadil.infradead.org)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hpWAe-00024y-J8; Mon, 22 Jul 2019 11:07:56 +0000
Received: from mchehab by bombadil.infradead.org with local (Exim 4.92)
 (envelope-from <mchehab@bombadil.infradead.org>)
 id 1hpWAa-000419-8S; Mon, 22 Jul 2019 08:07:52 -0300
From: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
To: 
Date: Mon, 22 Jul 2019 08:07:37 -0300
Message-Id: <353497a08f6c01f2433174acbe35dc5991a51697.1563792334.git.mchehab+samsung@kernel.org>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <cover.1563792333.git.mchehab+samsung@kernel.org>
References: <cover.1563792333.git.mchehab+samsung@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 31 Jul 2019 13:09:05 +0200
Subject: [OpenRISC] [PATCH 10/22] docs: openrisc: convert to ReST and add to
 documentation body
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Jonas Bonn <jonas@southpole.se>, linux-doc@vger.kernel.org,
 Jonathan Corbet <corbet@lwn.net>, openrisc@lists.librecores.org,
 Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

TWFudWFsbHkgY29udmVydCB0aGUgdHdvIG9wZW5SaXNjIGRvY3VtZW50cyB0byBSZVNULCBhZGRp
bmcgdGhlbQp0byB0aGUgTGludXggZG9jdW1lbnRhdGlvbiBib2R5LgoKU2lnbmVkLW9mZi1ieTog
TWF1cm8gQ2FydmFsaG8gQ2hlaGFiIDxtY2hlaGFiK3NhbXN1bmdAa2VybmVsLm9yZz4KLS0tCiBE
b2N1bWVudGF0aW9uL2luZGV4LnJzdCAgICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiBEb2N1
bWVudGF0aW9uL29wZW5yaXNjL2luZGV4LnJzdCAgICAgICAgICAgICAgfCAxOCArKysrKysrKysr
KysrCiAuLi4vb3BlbnJpc2Mve1JFQURNRSA9PiBvcGVucmlzY19wb3J0LnJzdH0gICAgfCAyNSAr
KysrKysrKysrKysrLS0tLS0tCiBEb2N1bWVudGF0aW9uL29wZW5yaXNjL3tUT0RPID0+IHRvZG8u
cnN0fSAgICAgfCAgOSArKysrLS0tCiA0IGZpbGVzIGNoYW5nZWQsIDQzIGluc2VydGlvbnMoKyks
IDEwIGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0IERvY3VtZW50YXRpb24vb3BlbnJp
c2MvaW5kZXgucnN0CiByZW5hbWUgRG9jdW1lbnRhdGlvbi9vcGVucmlzYy97UkVBRE1FID0+IG9w
ZW5yaXNjX3BvcnQucnN0fSAoODAlKQogcmVuYW1lIERvY3VtZW50YXRpb24vb3BlbnJpc2Mve1RP
RE8gPT4gdG9kby5yc3R9ICg3OCUpCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9pbmRleC5y
c3QgYi9Eb2N1bWVudGF0aW9uL2luZGV4LnJzdAppbmRleCA5YmIwOGQyNzJiZDUuLjU1ODNiMmU2
NDY5MiAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9pbmRleC5yc3QKKysrIGIvRG9jdW1lbnRh
dGlvbi9pbmRleC5yc3QKQEAgLTE0OSw2ICsxNDksNyBAQCBpbXBsZW1lbnRhdGlvbi4KICAgIGlh
NjQvaW5kZXgKICAgIG02OGsvaW5kZXgKICAgIHBvd2VycGMvaW5kZXgKKyAgIG9wZW5yaXNjL2lu
ZGV4CiAgICBwYXJpc2MvaW5kZXgKICAgIHJpc2N2L2luZGV4CiAgICBzMzkwL2luZGV4CmRpZmYg
LS1naXQgYS9Eb2N1bWVudGF0aW9uL29wZW5yaXNjL2luZGV4LnJzdCBiL0RvY3VtZW50YXRpb24v
b3BlbnJpc2MvaW5kZXgucnN0Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAw
MC4uNzQ4YjNlZWExNzA3Ci0tLSAvZGV2L251bGwKKysrIGIvRG9jdW1lbnRhdGlvbi9vcGVucmlz
Yy9pbmRleC5yc3QKQEAgLTAsMCArMSwxOCBAQAorLi4gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IEdQTC0yLjAKKworPT09PT09PT09PT09PT09PT09PT09CitPcGVuUklTQyBBcmNoaXRlY3R1cmUK
Kz09PT09PT09PT09PT09PT09PT09PQorCisuLiB0b2N0cmVlOjoKKyAgIDptYXhkZXB0aDogMgor
CisgICBvcGVucmlzY19wb3J0CisgICB0b2RvCisKKy4uIG9ubHk6OiAgc3VicHJvamVjdCBhbmQg
aHRtbAorCisgICBJbmRpY2VzCisgICA9PT09PT09CisKKyAgICogOnJlZjpgZ2VuaW5kZXhgCmRp
ZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL29wZW5yaXNjL1JFQURNRSBiL0RvY3VtZW50YXRpb24v
b3BlbnJpc2Mvb3BlbnJpc2NfcG9ydC5yc3QKc2ltaWxhcml0eSBpbmRleCA4MCUKcmVuYW1lIGZy
b20gRG9jdW1lbnRhdGlvbi9vcGVucmlzYy9SRUFETUUKcmVuYW1lIHRvIERvY3VtZW50YXRpb24v
b3BlbnJpc2Mvb3BlbnJpc2NfcG9ydC5yc3QKaW5kZXggNzc3YTg5M2Q1MzNkLi5hMTg3NDdhOGQx
OTEgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vb3BlbnJpc2MvUkVBRE1FCisrKyBiL0RvY3Vt
ZW50YXRpb24vb3BlbnJpc2Mvb3BlbnJpc2NfcG9ydC5yc3QKQEAgLTEsMyArMSw0IEBACis9PT09
PT09PT09PT09PQogT3BlblJJU0MgTGludXgKID09PT09PT09PT09PT09CiAKQEAgLTYsOCArNywx
MCBAQCB0YXJnZXQgYXJjaGl0ZWN0dXJlLCBzcGVjaWZpY2FsbHksIGlzIHRoZSAzMi1iaXQgT3Bl
blJJU0MgMTAwMCBmYW1pbHkgKG9yMWspLgogCiBGb3IgaW5mb3JtYXRpb24gYWJvdXQgT3BlblJJ
U0MgcHJvY2Vzc29ycyBhbmQgb25nb2luZyBkZXZlbG9wbWVudDoKIAorCT09PT09PT0JCT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09CiAJd2Vic2l0ZQkJaHR0cDovL29wZW5yaXNjLmlvCiAJ
ZW1haWwJCW9wZW5yaXNjQGxpc3RzLmxpYnJlY29yZXMub3JnCisJPT09PT09PQkJPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT0KIAogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAKQEAgLTI0LDEzICsyNywxNSBA
QCBUb29sY2hhaW4gYmluYXJpZXMgY2FuIGJlIG9idGFpbmVkIGZyb20gb3BlbnJpc2MuaW8gb3Ig
b3VyIGdpdGh1YiByZWxlYXNlcyBwYWdlLgogSW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyB0aGUg
ZGlmZmVyZW50IHRvb2xjaGFpbnMgY2FuIGJlIGZvdW5kIG9uIG9wZW5yaXNjLmlvCiBvciBTdGFm
Zm9yZCdzIHRvb2xjaGFpbiBidWlsZCBhbmQgcmVsZWFzZSBzY3JpcHRzLgogCisJPT09PT09PT09
PQk9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAJYmlu
YXJpZXMJaHR0cHM6Ly9naXRodWIuY29tL29wZW5yaXNjL29yMWstZ2NjL3JlbGVhc2VzCiAJdG9v
bGNoYWlucwlodHRwczovL29wZW5yaXNjLmlvL3NvZnR3YXJlCiAJYnVpbGRpbmcJaHR0cHM6Ly9n
aXRodWIuY29tL3N0ZmZyZGhybi9vcjFrLXRvb2xjaGFpbi1idWlsZAorCT09PT09PT09PT0JPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogCiAyKSBCdWls
ZGluZwogCi1CdWlsZCB0aGUgTGludXgga2VybmVsIGFzIHVzdWFsCitCdWlsZCB0aGUgTGludXgg
a2VybmVsIGFzIHVzdWFsOjoKIAogCW1ha2UgQVJDSD1vcGVucmlzYyBkZWZjb25maWcKIAltYWtl
IEFSQ0g9b3BlbnJpc2MKQEAgLTQzLDYgKzQ4LDggQEAgZGV2ZWxvcG1lbnQgYm9hcmQgd2l0aCB0
aGUgT3BlblJJU0MgU29DLiAgRHVyaW5nIHRoZSBidWlsZCBGUEdBIFJUTCBpcyBjb2RlCiBkb3du
bG9hZGVkIGZyb20gdGhlIEZ1c2VTb0MgSVAgY29yZXMgcmVwb3NpdG9yeSBhbmQgYnVpbHQgdXNp
bmcgdGhlIEZQR0EgdmVuZG9yCiB0b29scy4gIEJpbmFyaWVzIGFyZSBsb2FkZWQgb250byB0aGUg
Ym9hcmQgd2l0aCBvcGVub2NkLgogCis6OgorCiAJZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNv
bS9vbG9may9mdXNlc29jCiAJY2QgZnVzZXNvYwogCXN1ZG8gcGlwIGluc3RhbGwgLWUgLgpAQCAt
NjUsNyArNzIsOSBAQCBwbGF0Zm9ybS4gIFBsZWFzZSBmb2xsb3cgdGhlIE9wZW5SSVNDIGluc3Ry
dWN0aW9ucyBvbiB0aGUgUUVNVSB3ZWJzaXRlIHRvIGdldAogTGludXggcnVubmluZyBvbiBRRU1V
LiAgWW91IGNhbiBidWlsZCBRRU1VIHlvdXJzZWxmLCBidXQgeW91ciBMaW51eCBkaXN0cmlidXRp
b24KIGxpa2VseSBwcm92aWRlcyBiaW5hcnkgcGFja2FnZXMgdG8gc3VwcG9ydCBPcGVuUklTQy4K
IAorCT09PT09PT09PT09PT0JPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09CiAJcWVtdSBvcGVucmlzYwlodHRwczovL3dpa2kucWVtdS5vcmcvRG9j
dW1lbnRhdGlvbi9QbGF0Zm9ybXMvT3BlblJJU0MKKwk9PT09PT09PT09PT09CT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogCiAtLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0KIApAQCAtNzUsMzYgKzg0LDM4IEBAIFRlcm1pbm9sb2d5CiBJbiB0aGUgY29kZSwgdGhlIGZv
bGxvd2luZyBwYXJ0aWNsZXMgYXJlIHVzZWQgb24gc3ltYm9scyB0byBsaW1pdCB0aGUgc2NvcGUK
IHRvIG1vcmUgb3IgbGVzcyBzcGVjaWZpYyBwcm9jZXNzb3IgaW1wbGVtZW50YXRpb25zOgogCis9
PT09PT09PT0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiBvcGVucmlz
YzogdGhlIE9wZW5SSVNDIGNsYXNzIG9mIHByb2Nlc3NvcnMKIG9yMWs6ICAgICB0aGUgT3BlblJJ
U0MgMTAwMCBmYW1pbHkgb2YgcHJvY2Vzc29ycwogb3IxMjAwOiAgIHRoZSBPcGVuUklTQyAxMjAw
IHByb2Nlc3NvcgorPT09PT09PT09ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PQogCiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0KIAogSGlzdG9yeQogPT09PT09PT0KIAotMTguIDExLiAyMDAz
CU1hdGpheiBCcmVza3ZhciAocGhvZW5peEBic2VtaS5jb20pCisxOC0xMS0yMDAzCU1hdGpheiBC
cmVza3ZhciAocGhvZW5peEBic2VtaS5jb20pCiAJaW5pdGlhbCBwb3J0IG9mIGxpbnV4IHRvIE9w
ZW5SSVNDL29yMzIgYXJjaGl0ZWN0dXJlLgogICAgICAgICBhbGwgdGhlIGNvcmUgc3R1ZmYgaXMg
aW1wbGVtZW50ZWQgYW5kIHNlYW1zIHVzYWJsZS4KIAotMDguIDEyLiAyMDAzCU1hdGpheiBCcmVz
a3ZhciAocGhvZW5peEBic2VtaS5jb20pCiswOC0xMi0yMDAzCU1hdGpheiBCcmVza3ZhciAocGhv
ZW5peEBic2VtaS5jb20pCiAJY29tcGxldGUgY2hhbmdlIG9mIFRMQiBtaXNzIGhhbmRsaW5nLgog
CXJld3JpdGUgb2YgZXhjZXB0aW9ucyBoYW5kbGluZy4KIAlmdWxseSBmdW5jdGlvbmFsIHNhc2gt
My42IGluIGRlZmF1bHQgaW5pdHJkLgogCWEgbXVjaCBpbXByb3ZlZCB2ZXJzaW9uIHdpdGggY2hh
bmdlcyBhbGwgYXJvdW5kLgogCi0xMC4gMDQuIDIwMDQJTWF0amF6IEJyZXNrdmFyIChwaG9lbml4
QGJzZW1pLmNvbSkKKzEwLTA0LTIwMDQJTWF0amF6IEJyZXNrdmFyIChwaG9lbml4QGJzZW1pLmNv
bSkKIAlhbG90IG9mIGJ1Z2ZpeGVzIGFsbCBvdmVyLgogCWV0aGVybmV0IHN1cHBvcnQsIGZ1bmN0
aW9uYWwgaHR0cCBhbmQgdGVsbmV0IHNlcnZlcnMuCiAJcnVubmluZyBtYW55IHN0YW5kYXJkIGxp
bnV4IGFwcHMuCiAKLTI2LiAwNi4gMjAwNAlNYXRqYXogQnJlc2t2YXIgKHBob2VuaXhAYnNlbWku
Y29tKQorMjYtMDYtMjAwNAlNYXRqYXogQnJlc2t2YXIgKHBob2VuaXhAYnNlbWkuY29tKQogCXBv
cnQgdG8gMi42LngKIAotMzAuIDExLiAyMDA0CU1hdGpheiBCcmVza3ZhciAocGhvZW5peEBic2Vt
aS5jb20pCiszMC0xMS0yMDA0CU1hdGpheiBCcmVza3ZhciAocGhvZW5peEBic2VtaS5jb20pCiAJ
bG90cyBvZiBidWdmaXhlcyBhbmQgZW5oYW5jbWVudHMuCiAJYWRkZWQgb3BlbmNvcmVzIGZyYW1l
YnVmZmVyIGRyaXZlci4KIAotMDkuIDEwLiAyMDEwICAgIEpvbmFzIEJvbm4gKGpvbmFzQHNvdXRo
cG9sZS5zZSkKKzA5LTEwLTIwMTAgICAgSm9uYXMgQm9ubiAoam9uYXNAc291dGhwb2xlLnNlKQog
CW1ham9yIHJld3JpdGUgdG8gYnJpbmcgdXAgdG8gcGFyIHdpdGggdXBzdHJlYW0gTGludXggMi42
LjM2CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL29wZW5yaXNjL1RPRE8gYi9Eb2N1bWVudGF0
aW9uL29wZW5yaXNjL3RvZG8ucnN0CnNpbWlsYXJpdHkgaW5kZXggNzglCnJlbmFtZSBmcm9tIERv
Y3VtZW50YXRpb24vb3BlbnJpc2MvVE9ETwpyZW5hbWUgdG8gRG9jdW1lbnRhdGlvbi9vcGVucmlz
Yy90b2RvLnJzdAppbmRleCBjNDNkNGUxZDE0ZWIuLjQyMGIxOGI4N2VkYSAxMDA2NDQKLS0tIGEv
RG9jdW1lbnRhdGlvbi9vcGVucmlzYy9UT0RPCisrKyBiL0RvY3VtZW50YXRpb24vb3BlbnJpc2Mv
dG9kby5yc3QKQEAgLTEsMTIgKzEsMTUgQEAKKz09PT0KK1RPRE8KKz09PT0KKwogVGhlIE9wZW5S
SVNDIExpbnV4IHBvcnQgaXMgZnVsbHkgZnVuY3Rpb25hbCBhbmQgaGFzIGJlZW4gdHJhY2tpbmcg
dXBzdHJlYW0KIHNpbmNlIDIuNi4zNS4gIFRoZXJlIGFyZSwgaG93ZXZlciwgcmVtYWluaW5nIGl0
ZW1zIHRvIGJlIGNvbXBsZXRlZCB3aXRoaW4KIHRoZSBjb21pbmcgbW9udGhzLiAgSGVyZSdzIGEg
bGlzdCBvZiBrbm93bi10by1iZS1sZXNzLXRoYW4tc3RlbGxhciBpdGVtcwogdGhhdCBhcmUgZHVl
IGZvciBpbnZlc3RpZ2F0aW9uIHNob3J0bHksIGkuZS4gb3VyIFRPRE8gbGlzdDoKIAotLS0gSW1w
bGVtZW50IHRoZSByZXN0IG9mIHRoZSBETUEgQVBJLi4uIGRtYV9tYXBfc2csIGV0Yy4KKy0gIElt
cGxlbWVudCB0aGUgcmVzdCBvZiB0aGUgRE1BIEFQSS4uLiBkbWFfbWFwX3NnLCBldGMuCiAKLS0t
IEZpbmlzaCB0aGUgcmVuYW1pbmcgY2xlYW51cC4uLiB0aGVyZSBhcmUgcmVmZXJlbmNlcyB0byBv
cjMyIGluIHRoZSBjb2RlCistICBGaW5pc2ggdGhlIHJlbmFtaW5nIGNsZWFudXAuLi4gdGhlcmUg
YXJlIHJlZmVyZW5jZXMgdG8gb3IzMiBpbiB0aGUgY29kZQogICAgd2hpY2ggd2FzIGFuIG9sZGVy
IG5hbWUgZm9yIHRoZSBhcmNoaXRlY3R1cmUuICBUaGUgbmFtZSB3ZSd2ZSBzZXR0bGVkIG9uIGlz
CiAgICBvcjFrIGFuZCB0aGlzIGNoYW5nZSBpcyBzbG93bHkgdHJpY2tsaW5nIHRocm91Z2ggdGhl
IHN0YWNrLiAgRm9yIHRoZSB0aW1lCiAgICBiZWluZywgb3IzMiBpcyBlcXVpdmFsZW50IHRvIG9y
MWsuCi0KLS0gCjIuMjEuMAoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMu
b3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
