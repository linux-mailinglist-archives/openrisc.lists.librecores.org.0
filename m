Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 4F2E317D60E
	for <lists+openrisc@lfdr.de>; Sun,  8 Mar 2020 21:11:40 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id B5A2520A32;
	Sun,  8 Mar 2020 21:11:37 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id C95782069B
 for <openrisc@lists.librecores.org>; Thu,  5 Mar 2020 07:50:52 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 3F9941FB;
 Wed,  4 Mar 2020 22:50:51 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.1.88])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id B5EE33F534;
 Wed,  4 Mar 2020 22:54:31 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org
Date: Thu,  5 Mar 2020 12:20:13 +0530
Message-Id: <1583391014-8170-2-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1583391014-8170-1-git-send-email-anshuman.khandual@arm.com>
References: <1583391014-8170-1-git-send-email-anshuman.khandual@arm.com>
X-Mailman-Approved-At: Sun, 08 Mar 2020 21:11:35 +0100
Subject: [OpenRISC] [PATCH 1/2] mm/vma: Define a default value for
 VM_DATA_DEFAULT_FLAGS
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, linux-mips@vger.kernel.org,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Guo Ren <guoren@kernel.org>, linux-parisc@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Jonas Bonn <jonas@southpole.se>,
 linux-s390@vger.kernel.org, linux-snps-arc@lists.infradead.org,
 linux-c6x-dev@linux-c6x.org, Brian Cain <bcain@codeaurora.org>,
 Michael Ellerman <mpe@ellerman.id.au>, hughd@google.com,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 linux-arm-kernel@lists.infradead.org, Mark Salter <msalter@redhat.com>,
 Paul Burton <paulburton@kernel.org>, uclinux-h8-devel@lists.sourceforge.jp,
 linux-xtensa@linux-xtensa.org, Anshuman Khandual <anshuman.khandual@arm.com>,
 Jeff Dike <jdike@addtoit.com>, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Paul Walmsley <paul.walmsley@sifive.com>, Thomas Gleixner <tglx@linutronix.de>,
 Guan Xuetao <gxt@pku.edu.cn>, vbabka@suse.cz, Chris Zankel <chris@zankel.net>,
 Michal Simek <monstr@monstr.eu>, Tony Luck <tony.luck@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 Vineet Gupta <vgupta@synopsys.com>, linux-kernel@vger.kernel.org,
 Ralf Baechle <ralf@linux-mips.org>, linux-alpha@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhlcmUgYXJlIG1hbnkgcGxhdGZvcm1zIHdpdGggZXhhY3Qgc2FtZSB2YWx1ZSBmb3IgVk1fREFU
QV9ERUZBVUxUX0ZMQUdTClRoaXMgY3JlYXRlcyBhIGRlZmF1bHQgdmFsdWUgZm9yIFZNX0RBVEFf
REVGQVVMVF9GTEFHUyBpbiBsaW5lIHdpdGggdGhlCmV4aXN0aW5nIFZNX1NUQUNLX0RFRkFVTFRf
RkxBR1MuIFdoaWxlIGhlcmUsIGFsc28gZGVmaW5lIHNvbWUgbW9yZSBtYWNyb3MKd2l0aCBzdGFu
ZGFyZCBWTUEgYWNjZXNzIGZsYWcgY29tYmluYXRpb25zIHRoYXQgYXJlIHVzZWQgZnJlcXVlbnRs
eSBhY3Jvc3MKbWFueSBwbGF0Zm9ybXMuIEFwYXJ0IGZyb20gc2ltcGxpZmljYXRpb24sIHRoaXMg
cmVkdWNlcyBjb2RlIGR1cGxpY2F0aW9uCmFzIHdlbGwuCgpDYzogUmljaGFyZCBIZW5kZXJzb24g
PHJ0aEB0d2lkZGxlLm5ldD4KQ2M6IFZpbmVldCBHdXB0YSA8dmd1cHRhQHN5bm9wc3lzLmNvbT4K
Q2M6IFJ1c3NlbGwgS2luZyA8bGludXhAYXJtbGludXgub3JnLnVrPgpDYzogQ2F0YWxpbiBNYXJp
bmFzIDxjYXRhbGluLm1hcmluYXNAYXJtLmNvbT4KQ2M6IE1hcmsgU2FsdGVyIDxtc2FsdGVyQHJl
ZGhhdC5jb20+CkNjOiBHdW8gUmVuIDxndW9yZW5Aa2VybmVsLm9yZz4KQ2M6IFlvc2hpbm9yaSBT
YXRvIDx5c2F0b0B1c2Vycy5zb3VyY2Vmb3JnZS5qcD4KQ2M6IEJyaWFuIENhaW4gPGJjYWluQGNv
ZGVhdXJvcmEub3JnPgpDYzogVG9ueSBMdWNrIDx0b255Lmx1Y2tAaW50ZWwuY29tPgpDYzogR2Vl
cnQgVXl0dGVyaG9ldmVuIDxnZWVydEBsaW51eC1tNjhrLm9yZz4KQ2M6IE1pY2hhbCBTaW1layA8
bW9uc3RyQG1vbnN0ci5ldT4KQ2M6IFJhbGYgQmFlY2hsZSA8cmFsZkBsaW51eC1taXBzLm9yZz4K
Q2M6IFBhdWwgQnVydG9uIDxwYXVsYnVydG9uQGtlcm5lbC5vcmc+CkNjOiBOaWNrIEh1IDxuaWNr
aHVAYW5kZXN0ZWNoLmNvbT4KQ2M6IExleSBGb29uIFRhbiA8bGV5LmZvb24udGFuQGludGVsLmNv
bT4KQ2M6IEpvbmFzIEJvbm4gPGpvbmFzQHNvdXRocG9sZS5zZT4KQ2M6ICJKYW1lcyBFLkouIEJv
dHRvbWxleSIgPEphbWVzLkJvdHRvbWxleUBIYW5zZW5QYXJ0bmVyc2hpcC5jb20+CkNjOiBNaWNo
YWVsIEVsbGVybWFuIDxtcGVAZWxsZXJtYW4uaWQuYXU+CkNjOiBQYXVsIFdhbG1zbGV5IDxwYXVs
LndhbG1zbGV5QHNpZml2ZS5jb20+CkNjOiBIZWlrbyBDYXJzdGVucyA8aGVpa28uY2Fyc3RlbnNA
ZGUuaWJtLmNvbT4KQ2M6IFJpY2ggRmVsa2VyIDxkYWxpYXNAbGliYy5vcmc+CkNjOiAiRGF2aWQg
Uy4gTWlsbGVyIiA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KQ2M6IEd1YW4gWHVldGFvIDxneHRAcGt1
LmVkdS5jbj4KQ2M6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51dHJvbml4LmRlPgpDYzogSmVm
ZiBEaWtlIDxqZGlrZUBhZGR0b2l0LmNvbT4KQ2M6IENocmlzIFphbmtlbCA8Y2hyaXNAemFua2Vs
Lm5ldD4KQ2M6IEFuZHJldyBNb3J0b24gPGFrcG1AbGludXgtZm91bmRhdGlvbi5vcmc+CkNjOiBs
aW51eC1hbHBoYUB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5v
cmcKQ2M6IGxpbnV4LXNucHMtYXJjQGxpc3RzLmluZnJhZGVhZC5vcmcKQ2M6IGxpbnV4LWFybS1r
ZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgtYzZ4LWRldkBsaW51eC1jNngub3Jn
CkNjOiB1Y2xpbnV4LWg4LWRldmVsQGxpc3RzLnNvdXJjZWZvcmdlLmpwCkNjOiBsaW51eC1oZXhh
Z29uQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtaWE2NEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxp
bnV4LW02OGtAbGlzdHMubGludXgtbTY4ay5vcmcKQ2M6IGxpbnV4LW1pcHNAdmdlci5rZXJuZWwu
b3JnCkNjOiBuaW9zMi1kZXZAbGlzdHMucm9ja2V0Ym9hcmRzLm9yZwpDYzogb3BlbnJpc2NAbGlz
dHMubGlicmVjb3Jlcy5vcmcKQ2M6IGxpbnV4LXBhcmlzY0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxp
bnV4cHBjLWRldkBsaXN0cy5vemxhYnMub3JnCkNjOiBsaW51eC1yaXNjdkBsaXN0cy5pbmZyYWRl
YWQub3JnCkNjOiBsaW51eC1zMzkwQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtc2hAdmdlci5r
ZXJuZWwub3JnCkNjOiBzcGFyY2xpbnV4QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtdW1AbGlz
dHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgteHRlbnNhQGxpbnV4LXh0ZW5zYS5vcmcKQ2M6IGxp
bnV4LW1tQGt2YWNrLm9yZwpTaWduZWQtb2ZmLWJ5OiBBbnNodW1hbiBLaGFuZHVhbCA8YW5zaHVt
YW4ua2hhbmR1YWxAYXJtLmNvbT4KQWNrZWQtYnk6IEdlZXJ0IFV5dHRlcmhvZXZlbiA8Z2VlcnRA
bGludXgtbTY4ay5vcmc+ClJldmlld2VkLWJ5OiBWbGFzdGltaWwgQmFia2EgPHZiYWJrYUBzdXNl
LmN6PgotLS0KIGFyY2gvYWxwaGEvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgfCAgMyAtLS0KIGFy
Y2gvYXJjL2luY2x1ZGUvYXNtL3BhZ2UuaCAgICAgICAgfCAgMiArLQogYXJjaC9hcm0vaW5jbHVk
ZS9hc20vcGFnZS5oICAgICAgICB8ICA0ICstLS0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGFn
ZS5oICAgICAgfCAgNCArLS0tCiBhcmNoL2M2eC9pbmNsdWRlL2FzbS9wYWdlLmggICAgICAgIHwg
IDUgKy0tLS0KIGFyY2gvY3NreS9pbmNsdWRlL2FzbS9wYWdlLmggICAgICAgfCAgMyAtLS0KIGFy
Y2gvaDgzMDAvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgfCAgMiAtLQogYXJjaC9oZXhhZ29uL2lu
Y2x1ZGUvYXNtL3BhZ2UuaCAgICB8ICAzICstLQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BhZ2Uu
aCAgICAgICB8ICA1ICstLS0tCiBhcmNoL202OGsvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgIHwg
IDMgLS0tCiBhcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGFnZS5oIHwgIDIgLS0KIGFyY2gv
bWlwcy9pbmNsdWRlL2FzbS9wYWdlLmggICAgICAgfCAgNSArLS0tLQogYXJjaC9uZHMzMi9pbmNs
dWRlL2FzbS9wYWdlLmggICAgICB8ICAzIC0tLQogYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9wYWdl
LmggICAgICB8ICAzICstLQogYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9wYWdlLmggICB8ICA1
IC0tLS0tCiBhcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9wYWdlLmggICAgIHwgIDMgLS0tCiBhcmNo
L3Bvd2VycGMvaW5jbHVkZS9hc20vcGFnZS5oICAgIHwgIDkgKystLS0tLS0tCiBhcmNoL3Bvd2Vy
cGMvaW5jbHVkZS9hc20vcGFnZV82NC5oIHwgIDcgKystLS0tLQogYXJjaC9yaXNjdi9pbmNsdWRl
L2FzbS9wYWdlLmggICAgICB8ICAzICstLQogYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3BhZ2UuaCAg
ICAgICB8ICAzICstLQogYXJjaC9zaC9pbmNsdWRlL2FzbS9wYWdlLmggICAgICAgICB8ICAzIC0t
LQogYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wYWdlXzMyLmggICB8ICAzIC0tLQogYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS9wYWdlXzY0LmggICB8ICAzIC0tLQogYXJjaC91bmljb3JlMzIvaW5jbHVk
ZS9hc20vcGFnZS5oICB8ICAzIC0tLQogYXJjaC94ODYvaW5jbHVkZS9hc20vcGFnZV90eXBlcy5o
ICB8ICA0ICstLS0KIGFyY2gveDg2L3VtL2FzbS92bS1mbGFncy5oICAgICAgICAgfCAxMCArKy0t
LS0tLS0tCiBhcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9wYWdlLmggICAgIHwgIDMgLS0tCiBpbmNs
dWRlL2xpbnV4L21tLmggICAgICAgICAgICAgICAgIHwgMTQgKysrKysrKysrKysrKysKIDI4IGZp
bGVzIGNoYW5nZWQsIDMxIGluc2VydGlvbnMoKyksIDg5IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdp
dCBhL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9hbHBoYS9pbmNsdWRlL2Fz
bS9wYWdlLmgKaW5kZXggZjNmYjI4NDg0NzBhLi5lMjQxYmQ4ODg4MGYgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvYWxwaGEvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvYWxwaGEvaW5jbHVkZS9hc20v
cGFnZS5oCkBAIC05MCw5ICs5MCw2IEBAIHR5cGVkZWYgc3RydWN0IHBhZ2UgKnBndGFibGVfdDsK
ICNkZWZpbmUgdmlydF9hZGRyX3ZhbGlkKGthZGRyKQlwZm5fdmFsaWQoX19wYShrYWRkcikgPj4g
UEFHRV9TSElGVCkKICNlbmRpZiAvKiBDT05GSUdfRElTQ09OVElHTUVNICovCiAKLSNkZWZpbmUg
Vk1fREFUQV9ERUZBVUxUX0ZMQUdTCQkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwK
LQkJCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KICNpbmNsdWRl
IDxhc20tZ2VuZXJpYy9tZW1vcnlfbW9kZWwuaD4KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9nZXRv
cmRlci5oPgogCmRpZmYgLS1naXQgYS9hcmNoL2FyYy9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNo
L2FyYy9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggMGEzMmU4Y2ZkMDc0Li5iMGRmZWQwZjEyYmUg
MTAwNjQ0Ci0tLSBhL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL2FyYy9p
bmNsdWRlL2FzbS9wYWdlLmgKQEAgLTEwMiw3ICsxMDIsNyBAQCB0eXBlZGVmIHB0ZV90ICogcGd0
YWJsZV90OwogI2RlZmluZSB2aXJ0X2FkZHJfdmFsaWQoa2FkZHIpICBwZm5fdmFsaWQodmlydF90
b19wZm4oa2FkZHIpKQogCiAvKiBEZWZhdWx0IFBlcm1pc3Npb25zIGZvciBzdGFjay9oZWFwcyBw
YWdlcyAoTm9uIEV4ZWN1dGFibGUpICovCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUyAg
IChWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlF
WEVDKQorI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19OT05fRVhF
QwogCiAjZGVmaW5lIFdBTlRfUEFHRV9WSVJUVUFMICAgMQogCmRpZmYgLS1naXQgYS9hcmNoL2Fy
bS9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2FybS9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXgg
YzJiNzVjYmEyNmRmLi4xMWIwNThhNzJhNWIgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL2luY2x1ZGUv
YXNtL3BhZ2UuaAorKysgYi9hcmNoL2FybS9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTE2MSw5ICsx
NjEsNyBAQCBleHRlcm4gaW50IHBmbl92YWxpZCh1bnNpZ25lZCBsb25nKTsKIAogI2VuZGlmIC8q
ICFfX0FTU0VNQkxZX18gKi8KIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MgXAotCSgo
KGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVTX0VYRUMpID8gVk1fRVhFQyA6IDAp
IHwgXAotCSBWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBW
TV9NQVlFWEVDKQorI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19U
U0tfRVhFQwogCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIuaD4KIApkaWZmIC0tZ2l0
IGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNt
L3BhZ2UuaAppbmRleCBkMzlkZGIyNThhMDQuLmNiNGUxZTZjYTM4NSAxMDA2NDQKLS0tIGEvYXJj
aC9hcm02NC9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9w
YWdlLmgKQEAgLTMyLDkgKzMyLDcgQEAgZXh0ZXJuIGludCBwZm5fdmFsaWQodW5zaWduZWQgbG9u
Zyk7CiAKICNlbmRpZiAvKiAhX19BU1NFTUJMWV9fICovCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZB
VUxUX0ZMQUdTIFwKLQkoKChjdXJyZW50LT5wZXJzb25hbGl0eSAmIFJFQURfSU1QTElFU19FWEVD
KSA/IFZNX0VYRUMgOiAwKSB8IFwKLQkgVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fTUFZUkVBRCB8
IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdT
CVZNX0RBVEFfRkxBR1NfVFNLX0VYRUMKIAogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVy
Lmg+CiAKZGlmZiAtLWdpdCBhL2FyY2gvYzZ4L2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvYzZ4
L2luY2x1ZGUvYXNtL3BhZ2UuaAppbmRleCA3MGRiMWU3NjMyYmMuLjQwMDc5ODk5MDg0ZCAxMDA2
NDQKLS0tIGEvYXJjaC9jNngvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvYzZ4L2luY2x1
ZGUvYXNtL3BhZ2UuaApAQCAtMiwxMCArMiw3IEBACiAjaWZuZGVmIF9BU01fQzZYX1BBR0VfSAog
I2RlZmluZSBfQVNNX0M2WF9QQUdFX0gKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1Mg
XAotCShWTV9SRUFEIHwgVk1fV1JJVEUgfCBcCi0JKChjdXJyZW50LT5wZXJzb25hbGl0eSAmIFJF
QURfSU1QTElFU19FWEVDKSA/IFZNX0VYRUMgOiAwKSB8IFwKLQkJIFZNX01BWVJFQUQgfCBWTV9N
QVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9E
QVRBX0ZMQUdTX1RTS19FWEVDCiAKICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9wYWdlLmg+CiAKZGlm
ZiAtLWdpdCBhL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2Nza3kvaW5jbHVk
ZS9hc20vcGFnZS5oCmluZGV4IDk3MzhlYWNlZmRjNy4uOWI5OGJmMzFkNTdjIDEwMDY0NAotLS0g
YS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvY3NreS9pbmNsdWRlL2Fz
bS9wYWdlLmgKQEAgLTg1LDkgKzg1LDYgQEAgZXh0ZXJuIHVuc2lnbmVkIGxvbmcgdmFfcGFfb2Zm
c2V0OwogCQkJCSBQSFlTX09GRlNFVF9PRkZTRVQpCiAjZGVmaW5lIHZpcnRfdG9fcGFnZSh4KQko
bWVtX21hcCArIE1BUF9OUih4KSkKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZN
X1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0JCQkJVk1fTUFZUkVBRCB8IFZNX01BWVdS
SVRFIHwgVk1fTUFZRVhFQykKLQogI2RlZmluZSBwZm5fdG9fa2FkZHIoeCkJX192YShQRk5fUEhZ
Uyh4KSkKIAogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9tb2RlbC5oPgpkaWZmIC0tZ2l0
IGEvYXJjaC9oODMwMC9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2g4MzAwL2luY2x1ZGUvYXNt
L3BhZ2UuaAppbmRleCA4ZGE1MTI0YWQzNDQuLjUzZTAzNzU0NDIzOSAxMDA2NDQKLS0tIGEvYXJj
aC9oODMwMC9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9oODMwMC9pbmNsdWRlL2FzbS9w
YWdlLmgKQEAgLTYsOCArNiw2IEBACiAjaW5jbHVkZSA8bGludXgvdHlwZXMuaD4KIAogI2RlZmlu
ZSBNQVBfTlIoYWRkcikgKCgodWludHB0cl90KShhZGRyKS1QQUdFX09GRlNFVCkgPj4gUEFHRV9T
SElGVCkKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCShWTV9SRUFEIHwgVk1fV1JJVEUg
fCBWTV9FWEVDIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVD
KQogCiAjaWZuZGVmIF9fQVNTRU1CTFlfXwogZXh0ZXJuIHVuc2lnbmVkIGxvbmcgcm9tX2xlbmd0
aDsKZGlmZiAtLWdpdCBhL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2hl
eGFnb24vaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IGVlMzFmMzZmNDhmMy4uN2NiZjcxOWM1Nzhl
IDEwMDY0NAotLS0gYS9hcmNoL2hleGFnb24vaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gv
aGV4YWdvbi9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTkzLDggKzkzLDcgQEAgc3RydWN0IHBhZ2U7
CiAjZGVmaW5lIHZpcnRfdG9fcGFnZShrYWRkcikgcGZuX3RvX3BhZ2UoUEZOX0RPV04oX19wYShr
YWRkcikpKQogCiAvKiBEZWZhdWx0IHZtIGFyZWEgYmVoYXZpb3IgaXMgbm9uLWV4ZWN1dGFibGUu
ICAqLwotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MgKFZNX1JFQUQgfCBWTV9XUklURSB8
IFwKLQkJCQlWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBW
TV9EQVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19OT05fRVhFQwogCiAjZGVmaW5lIHBm
bl92YWxpZChwZm4pICgocGZuKSA8IG1heF9tYXBucikKICNkZWZpbmUgdmlydF9hZGRyX3ZhbGlk
KGthZGRyKSBwZm5fdmFsaWQoX19wYShrYWRkcikgPj4gUEFHRV9TSElGVCkKZGlmZiAtLWdpdCBh
L2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL2lhNjQvaW5jbHVkZS9hc20vcGFn
ZS5oCmluZGV4IDU3OThiZDJiNDYyYy4uYjY5YTU0OTlkNzViIDEwMDY0NAotLS0gYS9hcmNoL2lh
NjQvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wYWdlLmgK
QEAgLTIxOCwxMCArMjE4LDcgQEAgZ2V0X29yZGVyICh1bnNpZ25lZCBsb25nIHNpemUpCiAKICNk
ZWZpbmUgUEFHRV9PRkZTRVQJCQlSR05fQkFTRShSR05fS0VSTkVMKQogCi0jZGVmaW5lIFZNX0RB
VEFfREVGQVVMVF9GTEFHUwkJKFZNX1JFQUQgfCBWTV9XUklURSB8CQkJCQlcCi0JCQkJCSBWTV9N
QVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDIHwJCVwKLQkJCQkJICgoKGN1cnJlbnQt
PnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVTX0VYRUMpICE9IDApCVwKLQkJCQkJICA/IFZNX0VY
RUMgOiAwKSkKKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCVZNX0RBVEFfRkxBR1NfVFNL
X0VYRUMKIAogI2RlZmluZSBHQVRFX0FERFIJCVJHTl9CQVNFKFJHTl9HQVRFKQogCmRpZmYgLS1n
aXQgYS9hcmNoL202OGsvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNt
L3BhZ2UuaAppbmRleCAwNWUxZTFlNzdhOWEuLjlkMmVmMGE1MTcyMCAxMDA2NDQKLS0tIGEvYXJj
aC9tNjhrL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL202OGsvaW5jbHVkZS9hc20vcGFn
ZS5oCkBAIC01NSw5ICs1NSw2IEBAIGV4dGVybiB1bnNpZ25lZCBsb25nIF9yYW1lbmQ7CiAjZGVm
aW5lIF9fcGh5c190b19wZm4ocGFkZHIpCSgodW5zaWduZWQgbG9uZykoKHBhZGRyKSA+PiBQQUdF
X1NISUZUKSkKICNkZWZpbmUgX19wZm5fdG9fcGh5cyhwZm4pCVBGTl9QSFlTKHBmbikKIAotI2Rl
ZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMg
fCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KICNpbmNs
dWRlIDxhc20tZ2VuZXJpYy9nZXRvcmRlci5oPgogCiAjZW5kaWYgLyogX002OEtfUEFHRV9IICov
CmRpZmYgLS1naXQgYS9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9t
aWNyb2JsYXplL2luY2x1ZGUvYXNtL3BhZ2UuaAppbmRleCBmNGI0NGIyNGIwMmUuLjQzYmQ1NjBi
N2I2NyAxMDA2NDQKLS0tIGEvYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysg
Yi9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC0xOTcsOCArMTk3LDYgQEAg
ZXh0ZXJuIGludCBwYWdlX2lzX3JhbSh1bnNpZ25lZCBsb25nIHBmbik7CiAKICNpZmRlZiBDT05G
SUdfTU1VCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCShWTV9SRUFEIHwgVk1fV1JJ
VEUgfCBWTV9FWEVDIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlF
WEVDKQogI2VuZGlmIC8qIENPTkZJR19NTVUgKi8KIAogI2VuZGlmIC8qIF9fS0VSTkVMX18gKi8K
ZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL21pcHMvaW5j
bHVkZS9hc20vcGFnZS5oCmluZGV4IDBiYTRjZTZlMmJmMy4uZTJmNTAzZmM3YTg0IDEwMDY0NAot
LS0gYS9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvbWlwcy9pbmNsdWRl
L2FzbS9wYWdlLmgKQEAgLTI1MywxMCArMjUzLDcgQEAgZXh0ZXJuIGJvb2wgX192aXJ0X2FkZHJf
dmFsaWQoY29uc3Qgdm9sYXRpbGUgdm9pZCAqa2FkZHIpOwogI2RlZmluZSB2aXJ0X2FkZHJfdmFs
aWQoa2FkZHIpCQkJCQkJXAogCV9fdmlydF9hZGRyX3ZhbGlkKChjb25zdCB2b2xhdGlsZSB2b2lk
ICopIChrYWRkcikpCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTIFwKLQkoVk1fUkVB
RCB8IFZNX1dSSVRFIHwgXAotCSAoKGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVT
X0VYRUMpID8gVk1fRVhFQyA6IDApIHwgXAotCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBW
TV9NQVlFWEVDKQorI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19U
U0tfRVhFQwogCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvbWVtb3J5X21vZGVsLmg+CiAjaW5jbHVk
ZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIuaD4KZGlmZiAtLWdpdCBhL2FyY2gvbmRzMzIvaW5jbHVk
ZS9hc20vcGFnZS5oIGIvYXJjaC9uZHMzMi9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggODZiMzIw
MTRjNWY5Li5hZGQzM2E3ZjAyYzggMTAwNjQ0Ci0tLSBhL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20v
cGFnZS5oCisrKyBiL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC01OSw5ICs1OSw2
IEBAIHR5cGVkZWYgc3RydWN0IHBhZ2UgKnBndGFibGVfdDsKIAogI2VuZGlmIC8qICFfX0FTU0VN
QkxZX18gKi8KIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9X
UklURSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01B
WUVYRUMpCi0KICNlbmRpZiAvKiBfX0tFUk5FTF9fICovCiAKICNlbmRpZgpkaWZmIC0tZ2l0IGEv
YXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3Bh
Z2UuaAppbmRleCA3OWZjYWM2MWY2ZWYuLjZhOTg5ODE5YTdjMSAxMDA2NDQKLS0tIGEvYXJjaC9u
aW9zMi9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9uaW9zMi9pbmNsdWRlL2FzbS9wYWdl
LmgKQEAgLTk4LDggKzk4LDcgQEAgc3RhdGljIGlubGluZSBib29sIHBmbl92YWxpZCh1bnNpZ25l
ZCBsb25nIHBmbikKICMgZGVmaW5lIHZpcnRfdG9fcGFnZSh2YWRkcikJcGZuX3RvX3BhZ2UoUEZO
X0RPV04odmlydF90b19waHlzKHZhZGRyKSkpCiAjIGRlZmluZSB2aXJ0X2FkZHJfdmFsaWQodmFk
ZHIpCXBmbl92YWxpZChQRk5fRE9XTih2aXJ0X3RvX3BoeXModmFkZHIpKSkKIAotIyBkZWZpbmUg
Vk1fREFUQV9ERUZBVUxUX0ZMQUdTCShWTV9SRUFEIHwgVk1fV1JJVEUgfCBcCi0JCQkJIFZNX01B
WVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisjIGRlZmluZSBWTV9EQVRBX0RFRkFV
TFRfRkxBR1MJVk1fREFUQV9GTEFHU19OT05fRVhFQwogCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMv
bWVtb3J5X21vZGVsLmg+CiAKZGlmZiAtLWdpdCBhL2FyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20v
cGFnZS5oIGIvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggMDEwNjlkYjU5
NDU0Li5hYWI2ZTY0ZDZkYjQgMTAwNjQ0Ci0tLSBhL2FyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20v
cGFnZS5oCisrKyBiL2FyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC04NiwxMSAr
ODYsNiBAQCB0eXBlZGVmIHN0cnVjdCBwYWdlICpwZ3RhYmxlX3Q7CiAKICNlbmRpZiAvKiBfX0FT
U0VNQkxZX18gKi8KIAotCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8
IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwg
Vk1fTUFZRVhFQykKLQotCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvbWVtb3J5X21vZGVsLmg+CiAj
aW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC9wYXJp
c2MvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGFnZS5oCmlu
ZGV4IDc5NmFlMjllOWI5YS4uNmIzZjY3NDBhNmE2IDEwMDY0NAotLS0gYS9hcmNoL3BhcmlzYy9p
bmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGFnZS5oCkBA
IC0xODAsOSArMTgwLDYgQEAgZXh0ZXJuIGludCBucG1lbV9yYW5nZXM7CiAjZGVmaW5lIHBhZ2Vf
dG9fcGh5cyhwYWdlKQkocGFnZV90b19wZm4ocGFnZSkgPDwgUEFHRV9TSElGVCkKICNkZWZpbmUg
dmlydF90b19wYWdlKGthZGRyKSAgICAgcGZuX3RvX3BhZ2UoX19wYShrYWRkcikgPj4gUEFHRV9T
SElGVCkKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklU
RSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVY
RUMpCi0KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9tZW1vcnlfbW9kZWwuaD4KICNpbmNsdWRlIDxh
c20tZ2VuZXJpYy9nZXRvcmRlci5oPgogI2luY2x1ZGUgPGFzbS9wZGMuaD4KZGlmZiAtLWdpdCBh
L2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9h
c20vcGFnZS5oCmluZGV4IDA4MGEwYmY4ZTU0Yi4uM2VlOGRmMGY2NmUwIDEwMDY0NAotLS0gYS9h
cmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRl
L2FzbS9wYWdlLmgKQEAgLTI0MCwxMyArMjQwLDggQEAgc3RhdGljIGlubGluZSBib29sIHBmbl92
YWxpZCh1bnNpZ25lZCBsb25nIHBmbikKICAqIGFuZCBuZWVkcyB0byBiZSBleGVjdXRhYmxlLiAg
VGhpcyBtZWFucyB0aGUgd2hvbGUgaGVhcCBlbmRzCiAgKiB1cCBiZWluZyBleGVjdXRhYmxlLgog
ICovCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUzMyIFwKLQkoKChjdXJyZW50LT5wZXJz
b25hbGl0eSAmIFJFQURfSU1QTElFU19FWEVDKSA/IFZNX0VYRUMgOiAwKSB8IFwKLQkJCQkgVk1f
UkVBRCB8IFZNX1dSSVRFIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9N
QVlFWEVDKQotCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUzY0CShWTV9SRUFEIHwgVk1f
V1JJVEUgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisj
ZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUzMyCVZNX0RBVEFfRkxBR1NfVFNLX0VYRUMKKyNk
ZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTNjQJVk1fREFUQV9GTEFHU19OT05fRVhFQwogCiAj
aWZkZWYgX19wb3dlcnBjNjRfXwogI2luY2x1ZGUgPGFzbS9wYWdlXzY0Lmg+CmRpZmYgLS1naXQg
YS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGFnZV82NC5oIGIvYXJjaC9wb3dlcnBjL2luY2x1
ZGUvYXNtL3BhZ2VfNjQuaAppbmRleCA1OTYyNzk3Zjc4NGEuLjc5YTliN2M2YTEzMiAxMDA2NDQK
LS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BhZ2VfNjQuaAorKysgYi9hcmNoL3Bvd2Vy
cGMvaW5jbHVkZS9hc20vcGFnZV82NC5oCkBAIC05NCwxMSArOTQsOCBAQCBleHRlcm4gdTY0IHBw
YzY0X3BmdF9zaXplOwogICogc3RhY2sgYnkgZGVmYXVsdCwgc28gaW4gdGhlIGFic2VuY2Ugb2Yg
YSBQVF9HTlVfU1RBQ0sgcHJvZ3JhbSBoZWFkZXIKICAqIHdlIHR1cm4gZXhlY3V0ZSBwZXJtaXNz
aW9uIG9mZi4KICAqLwotI2RlZmluZSBWTV9TVEFDS19ERUZBVUxUX0ZMQUdTMzIJKFZNX1JFQUQg
fCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0JCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUg
fCBWTV9NQVlFWEVDKQotCi0jZGVmaW5lIFZNX1NUQUNLX0RFRkFVTFRfRkxBR1M2NAkoVk1fUkVB
RCB8IFZNX1dSSVRFIHwgXAotCQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZ
RVhFQykKKyNkZWZpbmUgVk1fU1RBQ0tfREVGQVVMVF9GTEFHUzMyCVZNX0RBVEFfRkxBR1NfRVhF
QworI2RlZmluZSBWTV9TVEFDS19ERUZBVUxUX0ZMQUdTNjQJVk1fREFUQV9GTEFHU19OT05fRVhF
QwogCiAjZGVmaW5lIFZNX1NUQUNLX0RFRkFVTFRfRkxBR1MgXAogCShpc18zMmJpdF90YXNrKCkg
PyBcCmRpZmYgLS1naXQgYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvcmlz
Y3YvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDhjYTE5MzBjYWE0NC4uMmQ1MGY3NmVmZTQ4IDEw
MDY0NAotLS0gYS9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL3Jpc2N2
L2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMTM3LDggKzEzNyw3IEBAIGV4dGVybiBwaHlzX2FkZHJf
dCBfX3BoeXNfYWRkcl9zeW1ib2wodW5zaWduZWQgbG9uZyB4KTsKIAogI2RlZmluZSB2aXJ0X2Fk
ZHJfdmFsaWQodmFkZHIpCShwZm5fdmFsaWQodmlydF90b19wZm4odmFkZHIpKSkKIAotI2RlZmlu
ZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQkJCQkgVk1f
TUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9ERUZB
VUxUX0ZMQUdTCVZNX0RBVEFfRkxBR1NfTk9OX0VYRUMKIAogI2luY2x1ZGUgPGFzbS1nZW5lcmlj
L21lbW9yeV9tb2RlbC5oPgogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CmRpZmYg
LS1naXQgYS9hcmNoL3MzOTAvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9zMzkwL2luY2x1ZGUv
YXNtL3BhZ2UuaAppbmRleCAxMDE5ZWZkODViOWQuLjA4OWY0OTIzMDk2NiAxMDA2NDQKLS0tIGEv
YXJjaC9zMzkwL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL3MzOTAvaW5jbHVkZS9hc20v
cGFnZS5oCkBAIC0xNzYsOCArMTc2LDcgQEAgc3RhdGljIGlubGluZSBpbnQgZGV2bWVtX2lzX2Fs
bG93ZWQodW5zaWduZWQgbG9uZyBwZm4pCiAKICNkZWZpbmUgdmlydF9hZGRyX3ZhbGlkKGthZGRy
KQlwZm5fdmFsaWQoX19wYShrYWRkcikgPj4gUEFHRV9TSElGVCkKIAotI2RlZmluZSBWTV9EQVRB
X0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8
IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdT
CVZNX0RBVEFfRkxBR1NfTk9OX0VYRUMKIAogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9t
b2RlbC5oPgogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CmRpZmYgLS1naXQgYS9h
cmNoL3NoL2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvc2gvaW5jbHVkZS9hc20vcGFnZS5oCmlu
ZGV4IDVlZWY4YmUzZTU5Zi4uZWE4ZDY4ZjU4ZTM5IDEwMDY0NAotLS0gYS9hcmNoL3NoL2luY2x1
ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL3NoL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMTgyLDkg
KzE4Miw2IEBAIHR5cGVkZWYgc3RydWN0IHBhZ2UgKnBndGFibGVfdDsKICNlbmRpZgogI2RlZmlu
ZSB2aXJ0X2FkZHJfdmFsaWQoa2FkZHIpCXBmbl92YWxpZChfX3BhKGthZGRyKSA+PiBQQUdFX1NI
SUZUKQogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8IFZNX1dSSVRF
IHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhF
QykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9tb2RlbC5oPgogI2luY2x1ZGUgPGFz
bS1nZW5lcmljL2dldG9yZGVyLmg+CiAKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvaW5jbHVkZS9h
c20vcGFnZV8zMi5oIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wYWdlXzMyLmgKaW5kZXggYjc2
ZDU5ZWRlYzhjLi40NzgyNjAwMDI4MzYgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvaW5jbHVkZS9h
c20vcGFnZV8zMi5oCisrKyBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGFnZV8zMi5oCkBAIC0x
MzMsOSArMTMzLDYgQEAgZXh0ZXJuIHVuc2lnbmVkIGxvbmcgcGZuX2Jhc2U7CiAjZGVmaW5lIHBm
bl92YWxpZChwZm4pCQkoKChwZm4pID49IChwZm5fYmFzZSkpICYmICgoKHBmbiktKHBmbl9iYXNl
KSkgPCBtYXhfbWFwbnIpKQogI2RlZmluZSB2aXJ0X2FkZHJfdmFsaWQoa2FkZHIpCSgoKCh1bnNp
Z25lZCBsb25nKShrYWRkciktUEFHRV9PRkZTRVQpPj5QQUdFX1NISUZUKSA8IG1heF9tYXBucikK
IAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFZN
X0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0K
ICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9tZW1vcnlfbW9kZWwuaD4KICNpbmNsdWRlIDxhc20tZ2Vu
ZXJpYy9nZXRvcmRlci5oPgogCmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3Bh
Z2VfNjQuaCBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGFnZV82NC5oCmluZGV4IGU4MGYyZDVi
ZjYyZi4uMjU0ZGZmZDg1ZmIxIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3Bh
Z2VfNjQuaAorKysgYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BhZ2VfNjQuaApAQCAtMTU4LDkg
KzE1OCw2IEBAIGV4dGVybiB1bnNpZ25lZCBsb25nIFBBR0VfT0ZGU0VUOwogCiAjZW5kaWYgLyog
IShfX0FTU0VNQkxZX18pICovCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCShWTV9S
RUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJ
VEUgfCBWTV9NQVlFWEVDKQotCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIuaD4KIAog
I2VuZGlmIC8qIF9TUEFSQzY0X1BBR0VfSCAqLwpkaWZmIC0tZ2l0IGEvYXJjaC91bmljb3JlMzIv
aW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC91bmljb3JlMzIvaW5jbHVkZS9hc20vcGFnZS5oCmlu
ZGV4IDhhODkzMzU2NzNmOS4uOTZkNmJkZjE4MGJkIDEwMDY0NAotLS0gYS9hcmNoL3VuaWNvcmUz
Mi9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC91bmljb3JlMzIvaW5jbHVkZS9hc20vcGFn
ZS5oCkBAIC02OSw5ICs2OSw2IEBAIGV4dGVybiBpbnQgcGZuX3ZhbGlkKHVuc2lnbmVkIGxvbmcp
OwogCiAjZW5kaWYgLyogIV9fQVNTRU1CTFlfXyAqLwogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVM
VF9GTEFHUyBcCi0JKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBWTV9NQVlSRUFEIHwg
Vk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQotCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3Jk
ZXIuaD4KIAogI2VuZGlmCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYWdlX3R5
cGVzLmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYWdlX3R5cGVzLmgKaW5kZXggYzg1ZTE1MDEw
ZjQ4Li5lMjdhYTZiZTYzMjAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhZ2Vf
dHlwZXMuaAorKysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wYWdlX3R5cGVzLmgKQEAgLTM1LDkg
KzM1LDcgQEAKIAogI2RlZmluZSBQQUdFX09GRlNFVAkJKCh1bnNpZ25lZCBsb25nKV9fUEFHRV9P
RkZTRVQpCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTIFwKLQkoKChjdXJyZW50LT5w
ZXJzb25hbGl0eSAmIFJFQURfSU1QTElFU19FWEVDKSA/IFZNX0VYRUMgOiAwICkgfCBcCi0JIFZN
X1JFQUQgfCBWTV9XUklURSB8IFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMp
CisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9EQVRBX0ZMQUdTX1RTS19FWEVDCiAK
ICNkZWZpbmUgX19QSFlTSUNBTF9TVEFSVAlBTElHTihDT05GSUdfUEhZU0lDQUxfU1RBUlQsIFwK
IAkJCQkgICAgICBDT05GSUdfUEhZU0lDQUxfQUxJR04pCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni91
bS9hc20vdm0tZmxhZ3MuaCBiL2FyY2gveDg2L3VtL2FzbS92bS1mbGFncy5oCmluZGV4IDdjMjk3
ZTllMjQxMy4uZGY3YTM4OTZmNWRkIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni91bS9hc20vdm0tZmxh
Z3MuaAorKysgYi9hcmNoL3g4Ni91bS9hc20vdm0tZmxhZ3MuaApAQCAtOSwxNyArOSwxMSBAQAog
CiAjaWZkZWYgQ09ORklHX1g4Nl8zMgogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUyBc
Ci0JKFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQkoKGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYgUkVB
RF9JTVBMSUVTX0VYRUMpID8gVk1fRVhFQyA6IDAgKSB8IFwKLQkJIFZNX01BWVJFQUQgfCBWTV9N
QVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9E
QVRBX0ZMQUdTX1RTS19FWEVDCiAKICNlbHNlCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZM
QUdTIChWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgXAotCVZNX01BWVJFQUQgfCBWTV9N
QVlXUklURSB8IFZNX01BWUVYRUMpCi0jZGVmaW5lIFZNX1NUQUNLX0RFRkFVTFRfRkxBR1MgKFZN
X0dST1dTRE9XTiB8IFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQlWTV9FWEVDIHwgVk1fTUFZUkVB
RCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fU1RBQ0tfREVGQVVMVF9G
TEFHUyAoVk1fR1JPV1NET1dOIHwgVk1fREFUQV9GTEFHU19FWEVDKQogCiAjZW5kaWYKICNlbmRp
ZgpkaWZmIC0tZ2l0IGEvYXJjaC94dGVuc2EvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC94dGVu
c2EvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IGY0NzcxYzI5YzdlOS4uMzdjZTI1ZWY5MmQ2IDEw
MDY0NAotLS0gYS9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC94dGVu
c2EvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC0yMDMsOCArMjAzLDUgQEAgc3RhdGljIGlubGluZSB1
bnNpZ25lZCBsb25nIF9fX3BhKHVuc2lnbmVkIGxvbmcgdmEpCiAKICNlbmRpZiAvKiBfX0FTU0VN
QkxZX18gKi8KIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9X
UklURSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01B
WUVYRUMpCi0KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9tZW1vcnlfbW9kZWwuaD4KICNlbmRpZiAv
KiBfWFRFTlNBX1BBR0VfSCAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9tbS5oIGIvaW5j
bHVkZS9saW51eC9tbS5oCmluZGV4IGIwZTUzZWYxM2ZmMS4uMzg2MTUyNDM2OGE0IDEwMDY0NAot
LS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKKysrIGIvaW5jbHVkZS9saW51eC9tbS5oCkBAIC0zNDIs
NiArMzQyLDIwIEBAIGV4dGVybiB1bnNpZ25lZCBpbnQga29ianNpemUoY29uc3Qgdm9pZCAqb2Jq
cCk7CiAvKiBCaXRzIHNldCBpbiB0aGUgVk1BIHVudGlsIHRoZSBzdGFjayBpcyBpbiBpdHMgZmlu
YWwgbG9jYXRpb24gKi8KICNkZWZpbmUgVk1fU1RBQ0tfSU5DT01QTEVURV9TRVRVUAkoVk1fUkFO
RF9SRUFEIHwgVk1fU0VRX1JFQUQpCiAKKyNkZWZpbmUgVEFTS19FWEVDICgoY3VycmVudC0+cGVy
c29uYWxpdHkgJiBSRUFEX0lNUExJRVNfRVhFQykgPyBWTV9FWEVDIDogMCkKKworLyogQ29tbW9u
IGRhdGEgZmxhZyBjb21iaW5hdGlvbnMgKi8KKyNkZWZpbmUgVk1fREFUQV9GTEFHU19UU0tfRVhF
QwkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVEFTS19FWEVDIHwgXAorCQkJCSBWTV9NQVlSRUFEIHwg
Vk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBWTV9EQVRBX0ZMQUdTX05PTl9FWEVD
CShWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9NQVlSRUFEIHwgXAorCQkJCSBWTV9NQVlXUklURSB8
IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfRkxBR1NfRVhFQwkoVk1fUkVBRCB8IFZNX1dS
SVRFIHwgVk1fRVhFQyB8IFwKKwkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZ
RVhFQykKKworI2lmbmRlZiBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJCS8qIGFyY2ggY2FuIG92ZXJy
aWRlIHRoaXMgKi8KKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTICBWTV9EQVRBX0ZMQUdT
X0VYRUMKKyNlbmRpZgorCiAjaWZuZGVmIFZNX1NUQUNLX0RFRkFVTFRfRkxBR1MJCS8qIGFyY2gg
Y2FuIG92ZXJyaWRlIHRoaXMgKi8KICNkZWZpbmUgVk1fU1RBQ0tfREVGQVVMVF9GTEFHUyBWTV9E
QVRBX0RFRkFVTFRfRkxBR1MKICNlbmRpZgotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJ
U0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0
aW5mby9vcGVucmlzYwo=
