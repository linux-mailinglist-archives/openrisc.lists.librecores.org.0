Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id CA2DB1FECBC
	for <lists+openrisc@lfdr.de>; Thu, 18 Jun 2020 09:47:17 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id A34C220844;
	Thu, 18 Jun 2020 09:47:15 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id D421420B59
 for <openrisc@lists.librecores.org>; Mon, 15 Jun 2020 08:22:52 +0200 (CEST)
Received: from kernel.org (unknown [87.70.26.44])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 8B91020679;
 Mon, 15 Jun 2020 06:22:38 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1592202170;
 bh=IKJvBvjeDqS8XxYjcYKMghfxByCgZw7vR9AeiQrgnp8=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=S3UP8AeeMsW+v5i18Wx1TbAZ8Ci6uCYg9fR4ByYtTpOdS7/JA4RJHwdk/5UC+Ci6O
 KVADb/LwUMXlZyQ1/wXlmdBnhEry8xB5YILPg9s3jHQ+IqKIE1ZBXLOg7MWig6SY9w
 Mm31hVNJqLf3PP+UItsGUlwES2gS+vhdSe8ZCWkU=
Date: Mon, 15 Jun 2020 09:22:34 +0300
From: Mike Rapoport <rppt@kernel.org>
To: Greg Ungerer <gerg@linux-m68k.org>
Message-ID: <20200615062234.GA7882@kernel.org>
References: <20200412194859.12663-5-rppt@kernel.org>
 <f53e68db-ed81-6ef6-5087-c7246d010ea2@linux-m68k.org>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <f53e68db-ed81-6ef6-5087-c7246d010ea2@linux-m68k.org>
X-Mailman-Approved-At: Thu, 18 Jun 2020 09:47:10 +0200
Subject: Re: [OpenRISC] [PATCH 04/21] mm: free_area_init: use maximal zone
 PFNs rather than zone sizes
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: dalias@libc.org, linux-ia64@vger.kernel.org, linux-doc@vger.kernel.org,
 catalin.marinas@arm.com, heiko.carstens@de.ibm.com, x86@kernel.org,
 linux-mips@vger.kernel.org, James.Bottomley@hansenpartnership.com,
 jcmvbkbc@gmail.com, guoren@kernel.org, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, bcain@codeaurora.org, corbet@lwn.net,
 mpe@ellerman.id.au, linux-hexagon@vger.kernel.org, deller@gmx.de,
 linux-sh@vger.kernel.org, linux@armlinux.org.uk, ley.foon.tan@intel.com,
 rppt@linux.ibm.com, ysato@users.sourceforge.jp,
 linux-arm-kernel@lists.infradead.org, msalter@redhat.com, mattst88@gmail.com,
 linux-snps-arc@lists.infradead.org, uclinux-h8-devel@lists.sourceforge.jp,
 linux-xtensa@linux-xtensa.org, nickhu@andestech.com,
 linux-um@lists.infradead.org, richard@nod.at, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, green.hu@gmail.com, paul.walmsley@sifive.com,
 mhocko@kernel.org, gxt@pku.edu.cn, Hoan@os.amperecomputing.com,
 monstr@monstr.eu, tony.luck@intel.com, bhe@redhat.com,
 linux-parisc@vger.kernel.org, linux-mm@kvack.org, vgupta@synopsys.com,
 linux-kernel@vger.kernel.org, linux-alpha@vger.kernel.org,
 akpm@linux-foundation.org, tsbogend@alpha.franken.de,
 linuxppc-dev@lists.ozlabs.org, davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

SGkgR3JlZywKCk9uIE1vbiwgSnVuIDE1LCAyMDIwIGF0IDAxOjUzOjQyUE0gKzEwMDAsIEdyZWcg
VW5nZXJlciB3cm90ZToKPiBIaSBNaWtlLAo+IAo+IEZyb206IE1pa2UgUmFwb3BvcnQgPHJwcHRA
bGludXguaWJtLmNvbT4KPiA+IEN1cnJlbnRseSwgYXJjaGl0ZWN0dXJlcyB0aGF0IHVzZSBmcmVl
X2FyZWFfaW5pdCgpIHRvIGluaXRpYWxpemUgbWVtb3J5IG1hcAo+ID4gYW5kIG5vZGUgYW5kIHpv
bmUgc3RydWN0dXJlcyBuZWVkIHRvIGNhbGN1bGF0ZSB6b25lIGFuZCBob2xlIHNpemVzLiBXZSBj
YW4KPiA+IHVzZSBmcmVlX2FyZWFfaW5pdF9ub2RlcygpIGluc3RlYWQgYW5kIGxldCBpdCBkZXRl
Y3QgdGhlIHpvbmUgYm91bmRhcmllcwo+ID4gd2hpbGUgdGhlIGFyY2hpdGVjdHVyZXMgd2lsbCBv
bmx5IGhhdmUgdG8gc3VwcGx5IHRoZSBwb3NzaWJsZSBsaW1pdHMgZm9yCj4gPiB0aGUgem9uZXMu
Cj4gPiAKPiA+IFNpZ25lZC1vZmYtYnk6IE1pa2UgUmFwb3BvcnQgPHJwcHRAbGludXguaWJtLmNv
bT4KPiAKPiBUaGlzIGlzIGNhdXNpbmcgc29tZSBuZXcgd2FybmluZ3MgZm9yIG1lIG9uIGJvb3Qg
b24gYXQgbGVhc3Qgb25lIG5vbi1NTVUgbTY4ayB0YXJnZXQ6CgpUaGVyZSB3ZXJlIGEgY291cGxl
IG9mIGNoYW5nZXMgdGhhdCBjYXVzZSB0aGlzLiBUaGUgZnJlZV9hcmVhX2luaXQoKQpub3cgcmVs
aWVzIG9uIG1lbWJsb2NrIGRhdGEgYW5kIGFyY2hpdGVjdHVyYWwgbGltaXRzIGZvciB6b25lIHNp
emVzCnJhdGhlciB0aGFuIG9uIGV4cGxpc2l0IHBmbnMgY2FsY3VsYXRlZCBieSB0aGUgYXJjaCBj
b2RlLiBJJ3ZlIHVwZGF0ZQptb3Rvcm9sYSB2YXJpYW50IGFuZCBtaXNzZWQgY29sZGZpcmUuIEFu
Z2VsbyBzZW50IGEgZml4IGZvciBtY2ZtbXUuYwpbMV0gYW5kIEkndmUgdXBkYXRlZCBpdCB0byBp
bmNsdWRlIG5vbW11IGFzIHdlbGwKClsxXSBodHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1t
NjhrLzIwMjAwNjE0MjI1MTE5Ljc3NzcwMi0xLWFuZ2Vsby5kdXJlZ2hlbGxvQHRpbWVzeXMuY29t
CgpGcm9tIDU1Yjg1MjNkZjJhNWM0NTY1YjEzMmMwNjkxOTkwZjA4MjEwNDBmZWMgTW9uIFNlcCAx
NyAwMDowMDowMCAyMDAxCkZyb206IEFuZ2VsbyBEdXJlZ2hlbGxvIDxhbmdlbG8uZHVyZWdoZWxs
b0B0aW1lc3lzLmNvbT4KRGF0ZTogTW9uLCAxNSBKdW4gMjAyMCAwMDo1MToxOSArMDIwMApTdWJq
ZWN0OiBbUEFUQ0hdIG02OGs6IGZpeCByZWdpc3RyYXRpb24gb2YgbWVtb3J5IHJlZ2lvbnMgd2l0
aCBtZW1ibG9jawoKQ29tbWl0IDNmMDhhMzAyZjUzMyAoIm1tOiByZW1vdmUgQ09ORklHX0hBVkVf
TUVNQkxPQ0tfTk9ERV9NQVAgb3B0aW9uIikKaW50cm9kdWNlZCBhc3N1bXB0aW9uIHRoYXQgVU1B
IHN5c3RlbXMgaGF2ZSB0aGVpciBtZW1vcnkgYXQgbm9kZSAwIGFuZAp1cGRhdGVkIG1vc3Qgb2Yg
dGhlbSwgYnV0IGl0IGZvcmdvdCBub21tdSBhbmQgY29sZGZpcmUgdmFyaWFudHMgb2YgbTY4ay4K
ClRoZSBsYXRlciBjaGFuZ2UgaW4gZnJlZSBhcmVhIGluaXRpYWxpemF0aW9uIGluIGNvbW1pdCBm
YTMzNTRlNGVhMzkgKCJtbToKZnJlZV9hcmVhX2luaXQ6IHVzZSBtYXhpbWFsIHpvbmUgUEZOcyBy
YXRoZXIgdGhhbiB6b25lIHNpemVzIikgZXhwb3NlZCB0aGF0CmFuZCBjYXVzZWQgYSBsb3Qgb2Yg
IkJVRzogQmFkIHBhZ2Ugc3RhdGUgaW4gcHJvY2VzcyBzd2FwcGVyIiByZXBvcnRzLgoKVXNpbmcg
bWVtYmxvY2tfYWRkX25vZGUoKSB3aXRoIG5pZCA9IDAgdG8gcmVnaXN0ZXIgbWVtb3J5IGJhbmtz
IHNvbHZlcyB0aGUKcHJvYmxlbS4KCkZpeGVzOiAzZjA4YTMwMmY1MzMgKCJtbTogcmVtb3ZlIENP
TkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQIG9wdGlvbiIpCkZpeGVzOiBmYTMzNTRlNGVhMzkg
KCJtbTogZnJlZV9hcmVhX2luaXQ6IHVzZSBtYXhpbWFsIHpvbmUgUEZOcyByYXRoZXIgdGhhbiB6
b25lIHNpemVzIikKU2lnbmVkLW9mZi1ieTogQW5nZWxvIER1cmVnaGVsbG8gPGFuZ2Vsby5kdXJl
Z2hlbGxvQHRpbWVzeXMuY29tPgpDby1kZXZlbG9wZWQtYnk6IE1pa2UgUmFwb3BvcnQgPHJwcHRA
bGludXguaWJtLmNvbT4KU2lnbmVkLW9mZi1ieTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5p
Ym0uY29tPgotLS0KIGFyY2gvbTY4ay9rZXJuZWwvc2V0dXBfbm8uYyB8IDIgKy0KIGFyY2gvbTY4
ay9tbS9tY2ZtbXUuYyAgICAgICB8IDIgKy0KIDIgZmlsZXMgY2hhbmdlZCwgMiBpbnNlcnRpb25z
KCspLCAyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvbTY4ay9rZXJuZWwvc2V0dXBf
bm8uYyBiL2FyY2gvbTY4ay9rZXJuZWwvc2V0dXBfbm8uYwppbmRleCBlNzc5YjE5ZTAxOTMuLjBj
NDU4OWEzOWJhOSAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL2tlcm5lbC9zZXR1cF9uby5jCisrKyBi
L2FyY2gvbTY4ay9rZXJuZWwvc2V0dXBfbm8uYwpAQCAtMTM4LDcgKzEzOCw3IEBAIHZvaWQgX19p
bml0IHNldHVwX2FyY2goY2hhciAqKmNtZGxpbmVfcCkKIAlwcl9kZWJ1ZygiTUVNT1JZIC0+IFJP
TUZTPTB4JXAtMHglMDZseCBNRU09MHglMDZseC0weCUwNmx4XG4gIiwKIAkJIF9fYnNzX3N0b3As
IG1lbW9yeV9zdGFydCwgbWVtb3J5X3N0YXJ0LCBtZW1vcnlfZW5kKTsKIAotCW1lbWJsb2NrX2Fk
ZChtZW1vcnlfc3RhcnQsIG1lbW9yeV9lbmQgLSBtZW1vcnlfc3RhcnQpOworCW1lbWJsb2NrX2Fk
ZF9ub2RlKG1lbW9yeV9zdGFydCwgbWVtb3J5X2VuZCAtIG1lbW9yeV9zdGFydCwgMCk7CiAKIAkv
KiBLZWVwIGEgY29weSBvZiBjb21tYW5kIGxpbmUgKi8KIAkqY21kbGluZV9wID0gJmNvbW1hbmRf
bGluZVswXTsKZGlmZiAtLWdpdCBhL2FyY2gvbTY4ay9tbS9tY2ZtbXUuYyBiL2FyY2gvbTY4ay9t
bS9tY2ZtbXUuYwppbmRleCAyOWY0NzkyM2FhNDYuLjdkMDQyMTBkMzRmMCAxMDA2NDQKLS0tIGEv
YXJjaC9tNjhrL21tL21jZm1tdS5jCisrKyBiL2FyY2gvbTY4ay9tbS9tY2ZtbXUuYwpAQCAtMTc0
LDcgKzE3NCw3IEBAIHZvaWQgX19pbml0IGNmX2Jvb3RtZW1fYWxsb2Modm9pZCkKIAltNjhrX21l
bW9yeVswXS5hZGRyID0gX3JhbWJhc2U7CiAJbTY4a19tZW1vcnlbMF0uc2l6ZSA9IF9yYW1lbmQg
LSBfcmFtYmFzZTsKIAotCW1lbWJsb2NrX2FkZChtNjhrX21lbW9yeVswXS5hZGRyLCBtNjhrX21l
bW9yeVswXS5zaXplKTsKKwltZW1ibG9ja19hZGRfbm9kZShtNjhrX21lbW9yeVswXS5hZGRyLCBt
NjhrX21lbW9yeVswXS5zaXplLCAwKTsKIAogCS8qIGNvbXB1dGUgdG90YWwgcGFnZXMgaW4gc3lz
dGVtICovCiAJbnVtX3BhZ2VzID0gUEZOX0RPV04oX3JhbWVuZCAtIF9yYW1iYXNlKTsKLS0gCjIu
MjYuMgoKCj4gLi4uCj4gTkVUOiBSZWdpc3RlcmVkIHByb3RvY29sIGZhbWlseSAxNwo+IEJVRzog
QmFkIHBhZ2Ugc3RhdGUgaW4gcHJvY2VzcyBzd2FwcGVyICBwZm46MjAxNjUKPiBwYWdlOjQxZmUw
Y2EwIHJlZmNvdW50OjAgbWFwY291bnQ6MSBtYXBwaW5nOjAwMDAwMDAwIGluZGV4OjB4MAo+IGZs
YWdzOiAweDAoKQo+IHJhdzogMDAwMDAwMDAgMDAwMDAxMDAgMDAwMDAxMjIgMDAwMDAwMDAgMDAw
MDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAKPiBwYWdlIGR1bXBlZCBiZWNhdXNlOiBu
b256ZXJvIG1hcGNvdW50Cj4gQ1BVOiAwIFBJRDogMSBDb21tOiBzd2FwcGVyIE5vdCB0YWludGVk
IDUuOC4wLXJjMS0wMDAwMS1nM2EzOGY4YTYwYzY1LWRpcnR5ICMxCj4gU3RhY2sgZnJvbSA0MDRj
OWViYzoKPiAgICAgICAgIDQwNGM5ZWJjIDQwMjlhYjI4IDQwMjlhYjI4IDQwMDg4NDcwIDQxZmUw
Y2EwIDQwMjk5ZTIxIDQwMjk5ZGYxIDQwNGJhMmE0Cj4gICAgICAgICAwMDAyMDE2NSAwMDAwMDAw
MCA0MWZkMmMxMCA0MDJjN2JhMCA0MWZkMmMwNCA0MDA4ODUwNCA0MWZlMGNhMCA0MDI5OWUyMQo+
ICAgICAgICAgMDAwMDAwMDAgNDAwODhhMTIgNDFmZTBjYTAgNDFmZTBjYTQgMDAwMDAyMGEgMDAw
MDAwMDAgMDAwMDAwMDEgNDAyY2EwMDAKPiAgICAgICAgIDAwMDAwMDAwIDQxZmUwY2EwIDQxZmQy
YzEwIDQxZmQyYzEwIDAwMDAwMDAwIDAwMDAwMDAwIDQwMmIyMzg4IDAwMDAwMDAxCgouLi4KCj4g
Cj4gU3lzdGVtIGJvb3RzIHByZXR0eSBtdWNoIGFzIG5vcm1hbCB0aHJvdWdoIHVzZXIgc3BhY2Ug
YWZ0ZXIgdGhpcy4KPiBTZWVtcyB0byBiZSBmdWxseSBvcGVyYXRpb25hbCBkZXNwaXRlIGFsbCB0
aG9zZSBCVUdPTnMuCj4gCj4gU3BlY2lmaWNhbGx5IHRoaXMgaXMgYSBNNTIwOEVWQiB0YXJnZXQg
KGFyY2gvbTY4ay9jb25maWdzL201MjA4ZXZiKS4KPiAKPiAKPiBbc25pcF0KPiA+IGRpZmYgLS1n
aXQgYS9hcmNoL202OGsvbW0vaW5pdC5jIGIvYXJjaC9tNjhrL21tL2luaXQuYwo+ID4gaW5kZXgg
Yjg4ZDUxMGQ0ZmUzLi42ZDMxNDc2NjJmZjIgMTAwNjQ0Cj4gPiAtLS0gYS9hcmNoL202OGsvbW0v
aW5pdC5jCj4gPiArKysgYi9hcmNoL202OGsvbW0vaW5pdC5jCj4gPiBAQCAtODQsNyArODQsNyBA
QCB2b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2b2lkKQo+ID4gIAkgKiBwYWdlX2FsbG9jIGdldCBk
aWZmZXJlbnQgdmlld3Mgb2YgdGhlIHdvcmxkLgo+ID4gIAkgKi8KPiA+ICAJdW5zaWduZWQgbG9u
ZyBlbmRfbWVtID0gbWVtb3J5X2VuZCAmIFBBR0VfTUFTSzsKPiA+IC0JdW5zaWduZWQgbG9uZyB6
b25lc19zaXplW01BWF9OUl9aT05FU10gPSB7IDAsIH07Cj4gPiArCXVuc2lnbmVkIGxvbmcgbWF4
X3pvbmVfcGZuW01BWF9OUl9aT05FU10gPSB7IDAsIH07Cj4gPiAgCWhpZ2hfbWVtb3J5ID0gKHZv
aWQgKikgZW5kX21lbTsKPiA+IEBAIC05OCw4ICs5OCw4IEBAIHZvaWQgX19pbml0IHBhZ2luZ19p
bml0KHZvaWQpCj4gPiAgCSAqLwo+ID4gIAlzZXRfZnMgKFVTRVJfRFMpOwo+ID4gLQl6b25lc19z
aXplW1pPTkVfRE1BXSA9IChlbmRfbWVtIC0gUEFHRV9PRkZTRVQpID4+IFBBR0VfU0hJRlQ7Cj4g
PiAtCWZyZWVfYXJlYV9pbml0KHpvbmVzX3NpemUpOwo+ID4gKwltYXhfem9uZV9wZm5bWk9ORV9E
TUFdID0gZW5kX21lbSA+PiBQQUdFX1NISUZUOwo+ID4gKwlmcmVlX2FyZWFfaW5pdChtYXhfem9u
ZV9wZm4pOwo+IAo+IFRoaXMgd29ycmllcyBtZSBhIGxpdHRsZS4gT24gdGhpcyB0YXJnZXQgUEFH
RV9PRkZTRVQgd2lsbCBiZSBub24tMC4KPiBUaG91Z2h0cz8KClRoZSBpbml0aWFsaXphdGlvbiBp
biBmcmVlX2FyZWFfaW5pdCgpIHRha2VzIGludG8gYWNjb3VudCB0aGUgYWN0dWFsCnBoeXNpY2Fs
IG1lbW9yeSBzaXppbmcgZnJvbSBtZW1ibG9jayBhbmQgbWF4X3pvbmVfcGZuIGFzIHRoZQphcmNo
aXRlY3R1cmFsIGxpbWl0IGZvciBwb3NzaWJsZSB6b25lIGV4dGVudHMuIFRoaXMgKGFuZCB0aGUg
cGF0Y2gKYWJvdmUpIGlzIGVub3VnaCB0byBwcm9wZXJseSBzZXR1cCBub2RlIGFuZCB6b25lcy4g
Cgo+IFJlZ2FyZHMKPiBHcmVnCj4gCj4gCj4gCgotLSAKU2luY2VyZWx5IHlvdXJzLApNaWtlLgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBt
YWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5s
aWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
