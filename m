Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 1C7EE376D10
	for <lists+openrisc@lfdr.de>; Sat,  8 May 2021 00:57:15 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 64E47209D6;
	Sat,  8 May 2021 00:57:13 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id AE7A22134D
 for <openrisc@lists.librecores.org>; Sat,  8 May 2021 00:09:04 +0200 (CEST)
Received: by mail.kernel.org (Postfix) with ESMTPSA id AA33B60BD3;
 Fri,  7 May 2021 22:08:54 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1620425342;
 bh=pLN/AlAGxiGZnqtkHzoskF1g1y+Og1zx70nNd/gvob8=;
 h=From:To:Cc:Subject:Date:From;
 b=GZ13BdKpryifxhRwUeXYiDxMV+BWySTA7GY7/CWwvuCWkusUFDxkw2jKiOlfzjbCr
 So4fZaGkAyPTwA8Q1TjLVhcTwgJc8xvHUXFTKFHcbAkEIqYdWcKh0axCM+T92qoOrQ
 bkgNUSiGEeKqAdmwuN3qiVKoII2y7FbwOUX6mX301a6kiRL+VhsHKLQbMnh2CNRIHJ
 HKxjre312EfivKKOz+Q2DN/Jdax+mgS6zOKiXtE7A5jQN2E+WeTOOh+m15wqAaIqSp
 vmCijYogutqPzDP5KIogDPopYspUOizf4eB1toyhkfcE7uWw2BB6nwUsTEL9hofb0l
 fr7hse6Wb3kJA==
From: Arnd Bergmann <arnd@kernel.org>
To: linux-arch@vger.kernel.org
Date: Sat,  8 May 2021 00:07:45 +0200
Message-Id: <20210507220813.365382-1-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
MIME-Version: 1.0
X-Mailman-Approved-At: Sat, 08 May 2021 00:57:11 +0200
Subject: [OpenRISC] [RFC 0/12] Unify asm/unaligned.h around struct helper
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-sh@vger.kernel.org,
 "Richard Russon \(FlatCap\)" <ldm@flatcap.org>,
 Amitkumar Karwar <amitkarwar@gmail.com>, Russell King <linux@armlinux.org.uk>,
 Eric Dumazet <edumazet@google.com>, Paul Mackerras <paulus@samba.org>,
 "H. Peter Anvin" <hpa@zytor.com>, sparclinux@vger.kernel.org,
 Thomas Gleixner <tglx@linutronix.de>, Jonas Bonn <jonas@southpole.se>,
 Florian Fainelli <f.fainelli@gmail.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>,
 Michael Ellerman <mpe@ellerman.id.au>, x86@kernel.org,
 James Morris <jmorris@namei.org>, Ingo Molnar <mingo@redhat.com>,
 linux-arm-kernel@lists.infradead.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Jakub Kicinski <kuba@kernel.org>, "Serge E. Hallyn" <serge@hallyn.com>,
 Arnd Bergmann <arnd@arndb.de>, Ganapathi Bhat <ganapathi017@gmail.com>,
 linuxppc-dev@lists.ozlabs.org, linux-block@vger.kernel.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Borislav Petkov <bp@alien8.de>, Kalle Valo <kvalo@codeaurora.org>,
 Jens Axboe <axboe@kernel.dk>, John Johansen <john.johansen@canonical.com>,
 Xinming Hu <huxinming820@gmail.com>, Vineet Gupta <vgupta@synopsys.com>,
 linux-wireless@vger.kernel.org, linux-kernel@vger.kernel.org,
 Vladimir Oltean <vladimir.oltean@nxp.com>,
 linux-ntfs-dev@lists.sourceforge.net, linux-security-module@vger.kernel.org,
 linux-crypto@vger.kernel.org, netdev@vger.kernel.org,
 Linus Torvalds <torvalds@linux-foundation.org>,
 Sharvari Harisangam <sharvari.harisangam@nxp.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KClRoZSBnZXRfdW5hbGlnbmVkKCkv
cHV0X3VuYWxpZ25lZCgpIGhlbHBlcnMgYXJlIHRyYWRpdGlvbmFsbHkgYXJjaGl0ZWN0dXJlCnNw
ZWNpZmljLCB3aXRoIHRoZSB0d28gbWFpbiB2YXJpYW50cyBiZWluZyB0aGUgImFjY2Vzcy1vay5o
IiB2ZXJzaW9uCnRoYXQgYXNzdW1lcyB1bmFsaWduZWQgcG9pbnRlciBhY2Nlc3NlcyBhbHdheXMg
d29yayBvbiBhIHBhcnRpY3VsYXIKYXJjaGl0ZWN0dXJlLCBhbmQgdGhlICJsZS1zdHJ1Y3QuaCIg
dmVyc2lvbiB0aGF0IGNhc3RzIHRoZSBkYXRhIHRvIGEKYnl0ZSBhbGlnbmVkIHR5cGUgYmVmb3Jl
IGRlcmVmZXJlbmNpbmcsIGZvciBhcmNoaXRlY3R1cmVzIHRoYXQgY2Fubm90CmFsd2F5cyBkbyB1
bmFsaWduZWQgYWNjZXNzZXMgaW4gaGFyZHdhcmUuCgpCYXNlZCBvbiB0aGUgZGlzY3Vzc2lvbiBs
aW5rZWQgYmVsb3csIGl0IGFwcGVhcnMgdGhhdCB0aGUgYWNjZXNzLW9rCnZlcnNpb24gaXMgbm90
IHJlYWxpYWJsZSBvbiBhbnkgYXJjaGl0ZWN0dXJlLCBidXQgdGhlIHN0cnVjdCB2ZXJzaW9uCnBy
b2JhYmx5IGhhcyBubyBkb3duc2lkZXMuIFRoaXMgc2VyaWVzIGNoYW5nZXMgdGhlIGNvZGUgdG8g
dXNlIHRoZQpzYW1lIGltcGxlbWVudGF0aW9uIG9uIGFsbCBhcmNoaXRlY3R1cmVzLCBhZGRyZXNz
aW5nIHRoZSBmZXcgZXhjZXB0aW9ucwpzZXBhcmF0ZWx5LgoKSSd2ZSBwdXNoZWQgdGhlIHBhdGNo
ZXMgdG8gdGhlIGFzbS1nZW5lcmljIGdpdCB0cmVlIGZvciB0ZXN0aW5nLgoKCUFybmQKCkxpbms6
IGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL2xrbWwvNzVkMDc2OTEtMWU0Zi03NDFmLTk4NTItMzhj
MGI0ZjUyMGJjQHN5bm9wc3lzLmNvbS8KTGluazogaHR0cHM6Ly9nY2MuZ251Lm9yZy9idWd6aWxs
YS9zaG93X2J1Zy5jZ2k/aWQ9MTAwMzYzCkxpbms6IGdpdDovL2dpdC5rZXJuZWwub3JnL3B1Yi9z
Y20vbGludXgva2VybmVsL2dpdC9hcm5kL2FzbS1nZW5lcmljLmdpdCB1bmFsaWduZWQtcmV3b3Jr
CgpBcm5kIEJlcmdtYW5uICgxMik6CiAgYXNtLWdlbmVyaWM6IHVzZSBhc20tZ2VuZXJpYy91bmFs
aWduZWQuaCBmb3IgbW9zdCBhcmNoaXRlY3R1cmVzCiAgb3BlbnJpc2M6IGFsd2F5cyB1c2UgdW5h
bGlnbmVkLXN0cnVjdCBoZWFkZXIKICBzaDogcmVtb3ZlIHVuYWxpZ25lZCBhY2Nlc3MgZm9yIHNo
NGEKICBtNjhrOiBzZWxlY3QgQ09ORklHX0hBVkVfRUZGSUNJRU5UX1VOQUxJR05FRF9BQ0NFU1MK
ICBwb3dlcnBjOiB1c2UgbGludXgvdW5hbGlnbmVkL2xlX3N0cnVjdC5oIG9uIExFIHBvd2VyNwog
IGFzbS1nZW5lcmljOiB1bmFsaWduZWQ6IHJlbW92ZSBieXRlc2hpZnQgaGVscGVycwogIGFzbS1n
ZW5lcmljOiB1bmFsaWduZWQgYWx3YXlzIHVzZSBzdHJ1Y3QgaGVscGVycwogIHBhcnRpdGlvbnM6
IG1zZG9zOiBmaXggb25lLWJ5dGUgZ2V0X3VuYWxpZ25lZCgpCiAgYXBwYXJtb3I6IHVzZSBnZXRf
dW5hbGlnbmVkKCkgb25seSBmb3IgbXVsdGktYnl0ZSB3b3JkcwogIG13aWZpZXg6IHJlLWZpeCBm
b3IgdW5hbGlnbmVkIGFjY2Vzc2VzCiAgbmV0cG9sbDogYXZvaWQgcHV0X3VuYWxpZ25lZCgpIG9u
IHNpbmdsZSBjaGFyYWN0ZXIKICBhc20tZ2VuZXJpYzogc2ltcGxpZnkgYXNtL3VuYWxpZ25lZC5o
CgogYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICB8ICAxMiAtLQog
YXJjaC9hcm0vaW5jbHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICAgICB8ICAyNyAtLS0KIGFy
Y2gvaWE2NC9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICAgfCAgMTIgLS0KIGFyY2gv
bTY4ay9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDEgKwogYXJjaC9tNjhr
L2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oICAgICAgICAgICB8ICAyNiAtLS0KIGFyY2gvbWljcm9i
bGF6ZS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgfCAgMjcgLS0tCiBhcmNoL21pcHMvY3J5
cHRvL2NyYzMyLW1pcHMuYyAgICAgICAgICAgICAgIHwgICAyICstCiBhcmNoL29wZW5yaXNjL2lu
Y2x1ZGUvYXNtL3VuYWxpZ25lZC5oICAgICAgIHwgIDQ3IC0tLS0tCiBhcmNoL3BhcmlzYy9pbmNs
dWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgIHwgICA2ICstCiBhcmNoL3Bvd2VycGMvaW5jbHVk
ZS9hc20vdW5hbGlnbmVkLmggICAgICAgIHwgIDIyIC0tLQogYXJjaC9zaC9pbmNsdWRlL2FzbS91
bmFsaWduZWQtc2g0YS5oICAgICAgICB8IDE5OSAtLS0tLS0tLS0tLS0tLS0tLS0tLQogYXJjaC9z
aC9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICAgICB8ICAxMyAtLQogYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaCAgICAgICAgICB8ICAxMSAtLQogYXJjaC94ODYvaW5j
bHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICAgICB8ICAxNSAtLQogYXJjaC94dGVuc2EvaW5j
bHVkZS9hc20vdW5hbGlnbmVkLmggICAgICAgICB8ICAyOSAtLS0KIGJsb2NrL3BhcnRpdGlvbnMv
bGRtLmggICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGJsb2NrL3BhcnRpdGlvbnMvbXNk
b3MuYyAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGRyaXZlcnMvbmV0L3dpcmVsZXNzL21h
cnZlbGwvbXdpZmlleC9wY2llLmMgfCAgMTAgKy0KIGluY2x1ZGUvYXNtLWdlbmVyaWMvdW5hbGln
bmVkLmggICAgICAgICAgICAgfCAxNDkgKysrKysrKysrKysrLS0tCiBpbmNsdWRlL2xpbnV4L3Vu
YWxpZ25lZC9hY2Nlc3Nfb2suaCAgICAgICAgIHwgIDY4IC0tLS0tLS0KIGluY2x1ZGUvbGludXgv
dW5hbGlnbmVkL2JlX2J5dGVzaGlmdC5oICAgICAgfCAgNzEgLS0tLS0tLQogaW5jbHVkZS9saW51
eC91bmFsaWduZWQvYmVfbWVtbW92ZS5oICAgICAgICB8ICAzNyAtLS0tCiBpbmNsdWRlL2xpbnV4
L3VuYWxpZ25lZC9iZV9zdHJ1Y3QuaCAgICAgICAgIHwgIDM3IC0tLS0KIGluY2x1ZGUvbGludXgv
dW5hbGlnbmVkL2dlbmVyaWMuaCAgICAgICAgICAgfCAxMTUgLS0tLS0tLS0tLS0KIGluY2x1ZGUv
bGludXgvdW5hbGlnbmVkL2xlX2J5dGVzaGlmdC5oICAgICAgfCAgNzEgLS0tLS0tLQogaW5jbHVk
ZS9saW51eC91bmFsaWduZWQvbGVfbWVtbW92ZS5oICAgICAgICB8ICAzNyAtLS0tCiBpbmNsdWRl
L2xpbnV4L3VuYWxpZ25lZC9sZV9zdHJ1Y3QuaCAgICAgICAgIHwgIDM3IC0tLS0KIGluY2x1ZGUv
bGludXgvdW5hbGlnbmVkL21lbW1vdmUuaCAgICAgICAgICAgfCAgNDYgLS0tLS0KIG5ldC9jb3Jl
L25ldHBvbGwuYyAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDQgKy0KIHNlY3VyaXR5L2Fw
cGFybW9yL3BvbGljeV91bnBhY2suYyAgICAgICAgICAgfCAgIDIgKy0KIDMwIGZpbGVzIGNoYW5n
ZWQsIDEzNyBpbnNlcnRpb25zKCspLCAxMDAwIGRlbGV0aW9ucygtKQogZGVsZXRlIG1vZGUgMTAw
NjQ0IGFyY2gvYWxwaGEvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0
NCBhcmNoL2FybS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGFy
Y2gvaWE2NC9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGFyY2gv
bTY4ay9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGFyY2gvbWlj
cm9ibGF6ZS9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGFyY2gv
b3BlbnJpc2MvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBhcmNo
L3Bvd2VycGMvaW5jbHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBhcmNo
L3NoL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC1zaDRhLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBhcmNo
L3NoL2luY2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgYXJjaC9zcGFy
Yy9pbmNsdWRlL2FzbS91bmFsaWduZWQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGFyY2gveDg2L2lu
Y2x1ZGUvYXNtL3VuYWxpZ25lZC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgYXJjaC94dGVuc2EvaW5j
bHVkZS9hc20vdW5hbGlnbmVkLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2xpbnV4L3Vu
YWxpZ25lZC9hY2Nlc3Nfb2suaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGludXgvdW5h
bGlnbmVkL2JlX2J5dGVzaGlmdC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC91
bmFsaWduZWQvYmVfbWVtbW92ZS5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC91
bmFsaWduZWQvYmVfc3RydWN0LmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2xpbnV4L3Vu
YWxpZ25lZC9nZW5lcmljLmgKIGRlbGV0ZSBtb2RlIDEwMDY0NCBpbmNsdWRlL2xpbnV4L3VuYWxp
Z25lZC9sZV9ieXRlc2hpZnQuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGludXgvdW5h
bGlnbmVkL2xlX21lbW1vdmUuaAogZGVsZXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGludXgvdW5h
bGlnbmVkL2xlX3N0cnVjdC5oCiBkZWxldGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9saW51eC91bmFs
aWduZWQvbWVtbW92ZS5oCgpDYzogQW1pdGt1bWFyIEthcndhciA8YW1pdGthcndhckBnbWFpbC5j
b20+CkNjOiBBcm5kIEJlcmdtYW5uIDxhcm5kQGFybmRiLmRlPgpDYzogQmVuamFtaW4gSGVycmVu
c2NobWlkdCA8YmVuaEBrZXJuZWwuY3Jhc2hpbmcub3JnPgpDYzogQm9yaXNsYXYgUGV0a292IDxi
cEBhbGllbjguZGU+CkNjOiBFcmljIER1bWF6ZXQgPGVkdW1hemV0QGdvb2dsZS5jb20+CkNjOiBG
bG9yaWFuIEZhaW5lbGxpIDxmLmZhaW5lbGxpQGdtYWlsLmNvbT4KQ2M6IEdhbmFwYXRoaSBCaGF0
IDxnYW5hcGF0aGkwMTdAZ21haWwuY29tPgpDYzogR2VlcnQgVXl0dGVyaG9ldmVuIDxnZWVydEBs
aW51eC1tNjhrLm9yZz4KQ2M6ICJILiBQZXRlciBBbnZpbiIgPGhwYUB6eXRvci5jb20+CkNjOiBJ
bmdvIE1vbG5hciA8bWluZ29AcmVkaGF0LmNvbT4KQ2M6IEpha3ViIEtpY2luc2tpIDxrdWJhQGtl
cm5lbC5vcmc+CkNjOiBKYW1lcyBNb3JyaXMgPGptb3JyaXNAbmFtZWkub3JnPgpDYzogSmVucyBB
eGJvZSA8YXhib2VAa2VybmVsLmRrPgpDYzogSm9obiBKb2hhbnNlbiA8am9obi5qb2hhbnNlbkBj
YW5vbmljYWwuY29tPgpDYzogSm9uYXMgQm9ubiA8am9uYXNAc291dGhwb2xlLnNlPgpDYzogS2Fs
bGUgVmFsbyA8a3ZhbG9AY29kZWF1cm9yYS5vcmc+CkNjOiBNaWNoYWVsIEVsbGVybWFuIDxtcGVA
ZWxsZXJtYW4uaWQuYXU+CkNjOiBQYXVsIE1hY2tlcnJhcyA8cGF1bHVzQHNhbWJhLm9yZz4KQ2M6
IFJpY2ggRmVsa2VyIDxkYWxpYXNAbGliYy5vcmc+CkNjOiAiUmljaGFyZCBSdXNzb24gKEZsYXRD
YXApIiA8bGRtQGZsYXRjYXAub3JnPgpDYzogUnVzc2VsbCBLaW5nIDxsaW51eEBhcm1saW51eC5v
cmcudWs+CkNjOiAiU2VyZ2UgRS4gSGFsbHluIiA8c2VyZ2VAaGFsbHluLmNvbT4KQ2M6IFNoYXJ2
YXJpIEhhcmlzYW5nYW0gPHNoYXJ2YXJpLmhhcmlzYW5nYW1AbnhwLmNvbT4KQ2M6IFN0YWZmb3Jk
IEhvcm5lIDxzaG9ybmVAZ21haWwuY29tPgpDYzogU3RlZmFuIEtyaXN0aWFuc3NvbiA8c3RlZmFu
LmtyaXN0aWFuc3NvbkBzYXVuYWxhaHRpLmZpPgpDYzogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxp
bnV0cm9uaXguZGU+CkNjOiBWbGFkaW1pciBPbHRlYW4gPHZsYWRpbWlyLm9sdGVhbkBueHAuY29t
PgpDYzogWGlubWluZyBIdSA8aHV4aW5taW5nODIwQGdtYWlsLmNvbT4KQ2M6IFlvc2hpbm9yaSBT
YXRvIDx5c2F0b0B1c2Vycy5zb3VyY2Vmb3JnZS5qcD4KQ2M6IHg4NkBrZXJuZWwub3JnCkNjOiBs
aW51eC1rZXJuZWxAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1hcm0ta2VybmVsQGxpc3RzLmlu
ZnJhZGVhZC5vcmcKQ2M6IGxpbnV4LW02OGtAbGlzdHMubGludXgtbTY4ay5vcmcKQ2M6IGxpbnV4
LWNyeXB0b0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IG9wZW5yaXNjQGxpc3RzLmxpYnJlY29yZXMub3Jn
CkNjOiBsaW51eHBwYy1kZXZAbGlzdHMub3psYWJzLm9yZwpDYzogbGludXgtc2hAdmdlci5rZXJu
ZWwub3JnCkNjOiBzcGFyY2xpbnV4QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtbnRmcy1kZXZA
bGlzdHMuc291cmNlZm9yZ2UubmV0CkNjOiBsaW51eC1ibG9ja0B2Z2VyLmtlcm5lbC5vcmcKQ2M6
IGxpbnV4LXdpcmVsZXNzQHZnZXIua2VybmVsLm9yZwpDYzogbmV0ZGV2QHZnZXIua2VybmVsLm9y
ZwpDYzogbGludXgtYXJjaEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LXNlY3VyaXR5LW1vZHVs
ZUB2Z2VyLmtlcm5lbC5vcmcKCi0tIAoyLjI5LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0
cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29w
ZW5yaXNjCg==
