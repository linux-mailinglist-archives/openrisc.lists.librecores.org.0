Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 6C9601D3F77
	for <lists+openrisc@lfdr.de>; Thu, 14 May 2020 23:00:45 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 52DA820B08;
	Thu, 14 May 2020 23:00:45 +0200 (CEST)
Received: from mail-pj1-f65.google.com (mail-pj1-f65.google.com
 [209.85.216.65])
 by mail.librecores.org (Postfix) with ESMTPS id A03B920A79
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 23:00:43 +0200 (CEST)
Received: by mail-pj1-f65.google.com with SMTP id t9so1000pjw.0
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 14:00:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=jRrWtrs3tQOoWTPko7wgJJQJexeLAsPXncwFTKukXME=;
 b=a35KSpQ91AwjCBD51c7M0Z5twIZPSbVsdqZOGQGHBEk97BBjA7o9N821eBwQXgyBk+
 RaIr7vZJyjRfbpT71dRRkOchCMRECxAIve2wKljWWV5t2TiUfkAYckLfEfchw1NQqLib
 Qfp6TacQs+Ja4g7ToWa8I2+kKWckQL8saEluIx+x3FszXIH9Od3QKwp4UcNN8DJgpEem
 /vV3yDKYz914t8/p79DSOx5iwL2DQAK/uxm965yTlTNIkqXtwJhl7I4aqDjSuDB8uYfw
 4FzILSY2xvGrsv8BIsvQFzCA74d+/qQaRpZAHGZW5OYOMxeb6FrbUs9h7KtdzVOwkK2r
 b8FQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=jRrWtrs3tQOoWTPko7wgJJQJexeLAsPXncwFTKukXME=;
 b=nJU8g5UOaGrk54znrZKXvYztZdE/SsJnQx/0bgz2eWCrMnBv15jaILL/FmuLoT5qIE
 +VcSPtuZaMrcjaPLy4cCKy/99r1wGOqhZdcWXze++5otO4JlJR48mOcgCg5PxKUkaR5A
 b9Q29TUi1fvABNAoJ0uXv3ZLStEOmM6ICr69t1ko8+3G7qM0rtAWAxA52fxhcomU6cMQ
 9vGbbY3yZPTQs1KHaxzI3tOYE+UPYj7bszMlYTbfjGfDTf7c8GnePBXsrj1AYHSm4VAI
 dbXdC0WiGCSHI5cBH3QUHa9o4PlK1W/4wzkO5O4lop4U8GawW/HbjEFTaTPzZs3vyciW
 O0vA==
X-Gm-Message-State: AOAM5319BxJuoqQTEnoMo0Kt3cIX5/+NmZnXxsNfy1cY18RvRKNEWyOe
 SJrkuz1niRdqncaEh9WZrzw=
X-Google-Smtp-Source: ABdhPJxBC03/P0AxIFGBdrzXLMLw2MOHzMaMSOygMtic5vbs4YbxAXjM53mFDeI2QgO5A/37EtSLAg==
X-Received: by 2002:a17:902:8b86:: with SMTP id
 ay6mr407050plb.338.1589490041303; 
 Thu, 14 May 2020 14:00:41 -0700 (PDT)
Received: from localhost (g216.222-224-245.ppp.wakwak.ne.jp. [222.224.245.216])
 by smtp.gmail.com with ESMTPSA id u17sm98308pgo.90.2020.05.14.14.00.39
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 14 May 2020 14:00:40 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GNU Binutils <binutils@sourceware.org>
Date: Fri, 15 May 2020 06:00:13 +0900
Message-Id: <20200514210018.2749462-4-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200514210018.2749462-1-shorne@gmail.com>
References: <20200514210018.2749462-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 3/8] or1k: Add TLS mask to handle multiple model
 access
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

SW4gY2FzZXMgd2hlcmUgYSB2YXJpYWJsZSBpcyBhY2Nlc3NlZCBib3RoIHZpYSBHRCBhbmQgSUUg
dGhlIEdPVCB3YXMgbm90CmdldHRpbmcgc2V0dXAgY29ycmVjdGx5IGFuZCBjYXVzaW5nIGZhaWx1
cmVzLiAgVGhpcyB3YXMgbm90aWNlZCBydW5uaW5nCnRoZSBnbGliYyB0ZXN0c3VpdGUuCgpUaGlz
IHBhdGNoIHVzZXMgdGxzX3R5cGUgYXMgYSBiaXRtYXNrIHRvIGFsbG93IGZvciBoYW5kbGluZyBt
dWx0aXBsZQphY2Nlc3MgdHlwZXMgdG8gVExTIHN5bWJvbHMuCgpiZmQvQ2hhbmdlTG9nOgoKeXl5
eS1tbS1kZCAgU3RhZmZvcmQgSG9ybmUgIDxzaG9ybmVAZ21haWwuY29tPgoKCSogYmZkL2VsZjMy
LW9yMWsuYyAob3Ixa19zZXRfZ290X2FuZF9yZWxhX3NpemVzKTogTmV3IGZ1bmN0aW9uLgoJKG9y
MWtfaW5pdGlhbF9leGVjX29mZnNldCk6IE5ldyBmdW5jdGlvbi4KCShUTFNfR0QsIFRMU19JRSwg
VExTX0xELCBUTFNfTEUpOiBSZWRlZmluZSBtYWNyb3MgYXMgbWFza3MuCgkob3Ixa19lbGZfcmVs
b2NhdGVfc2VjdGlvbik6IEFsbG93IGZvciBUTFMgdG8gaGFuZGxlIG11bHRpcGxlCgltb2RlbCBh
Y2Nlc3MuCgkob3Ixa19lbGZfY2hlY2tfcmVsb2NzKTogVXNlIE9SIHRvIHNldCBUTFMgYWNjZXNz
LgoJKGFsbG9jYXRlX2R5bnJlbG9jcyk6IFVzZSBvcjFrX3NldF9nb3RfYW5kX3JlbGFfc2l6ZXMg
dG8gc2V0CglzaXplcy4KCShvcjFrX2VsZl9zaXplX2R5bmFtaWNfc2VjdGlvbnMpOiBVc2UKCW9y
MWtfc2V0X2dvdF9hbmRfcmVsYV9zaXplcyB0byBzZXQgc2l6ZXMuCi0tLQogYmZkL2VsZjMyLW9y
MWsuYyB8IDE0OSArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0t
LQogMSBmaWxlIGNoYW5nZWQsIDEwMyBpbnNlcnRpb25zKCspLCA0NiBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9iZmQvZWxmMzItb3Ixay5jIGIvYmZkL2VsZjMyLW9yMWsuYwppbmRleCA5OWEz
NmM3ZjA0Li5hY2ZkYjViZWYyIDEwMDY0NAotLS0gYS9iZmQvZWxmMzItb3Ixay5jCisrKyBiL2Jm
ZC9lbGYzMi1vcjFrLmMKQEAgLTg3MywxMiArODczLDE2IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qg
b3Ixa19yZWxvY19tYXAgb3Ixa19yZWxvY19tYXBbXSA9CiAgIHsgQkZEX1JFTE9DX09SMUtfUExU
QTI2LAlSX09SMUtfUExUQTI2IH0sCiB9OwogCisvKiB0bHNfdHlwZSBpcyBhIG1hc2sgdXNlZCB0
byB0cmFjayBob3cgZWFjaCBzeW1ib2wgaXMgYWNjZXNzZWQsCisgICBpdCBtYXkgYmUgYWNjZXNz
ZWQgdmlhIG11bHRpcGxlIHR5cGVzIG9mIFRMUyBhY2Nlc3MgbWV0aG9kcy4KKyAgIFdlIHRyYWNr
IHRoaXMgZm9yIHNpemluZyAoYWxsb2NhdGluZyBnb3QgKyByZWxvY2F0aW9uIHNlY3Rpb24gc3Bh
Y2UpIGFuZAorICAgZm9yIGhvdyB0byBwcm9jZXNzIHJlbG9jYXRpb25zLiAgKi8KICNkZWZpbmUg
VExTX1VOS05PV04gICAgMAogI2RlZmluZSBUTFNfTk9ORSAgICAgICAxCiAjZGVmaW5lIFRMU19H
RAkgICAgICAgMgotI2RlZmluZSBUTFNfTEQJICAgICAgIDMKLSNkZWZpbmUgVExTX0lFCSAgICAg
ICA0Ci0jZGVmaW5lIFRMU19MRQkgICAgICAgNQorI2RlZmluZSBUTFNfTEQJICAgICAgIDQKKyNk
ZWZpbmUgVExTX0lFCSAgICAgICA4CisjZGVmaW5lIFRMU19MRQkgICAgICAxNgogCiAvKiBFTEYg
bGlua2VyIGhhc2ggZW50cnkuICAqLwogc3RydWN0IGVsZl9vcjFrX2xpbmtfaGFzaF9lbnRyeQpA
QCAtMTA1OCw2ICsxMDYyLDI0IEBAIHRwb2ZmIChzdHJ1Y3QgYmZkX2xpbmtfaW5mbyAqaW5mbywg
YmZkX3ZtYSBhZGRyZXNzKQogICByZXR1cm4gKGFkZHJlc3MgLSBlbGZfaGFzaF90YWJsZSAoaW5m
byktPnRsc19zZWMtPnZtYSk7CiB9CiAKKy8qIElmIHdlIGhhdmUgYm90aCBJRSBhbmQgR0QgYWNj
ZXNzZXMgdG8gYSBzeW1ib2wgdGhlIElFIHJlbG9jYXRpb25zIHNob3VsZCBiZQorICAgb2Zmc2V0
IGJ5IDggYnl0ZXMgYmVjYXVzZSB0aGUgZ290IGNvbnRhaW5zIGJvdGggR0QgYW5kIElFIGVudHJp
ZXMuICAqLworc3RhdGljIGJmZF92bWEKK29yMWtfaW5pdGlhbF9leGVjX29mZnNldCAocmVsb2Nf
aG93dG9fdHlwZSAqaG93dG8sIHVuc2lnbmVkIGNoYXIgdGxzX3R5cGVfbWFzaykKK3sKKyAgIHN3
aXRjaCAoaG93dG8tPnR5cGUpCisgICAgIHsKKyAgICAgY2FzZSBSX09SMUtfVExTX0lFX0hJMTY6
CisgICAgIGNhc2UgUl9PUjFLX1RMU19JRV9MTzE2OgorICAgICBjYXNlIFJfT1IxS19UTFNfSUVf
UEcyMToKKyAgICAgY2FzZSBSX09SMUtfVExTX0lFX0xPMTM6CisgICAgIGNhc2UgUl9PUjFLX1RM
U19JRV9BSEkxNjoKKyAgICAgICByZXR1cm4gKHRsc190eXBlX21hc2sgJiBUTFNfR0QpICE9IDAg
PyA4IDogMDsKKyAgICAgZGVmYXVsdDoKKyAgICAgICByZXR1cm4gMDsKKyAgICAgfQorfQorCiAv
KiBMaWtlIF9iZmRfZmluYWxfbGlua19yZWxvY2F0ZSwgYnV0IGhhbmRsZXMgbm9uLWNvbnRpZ3Vv
dXMgZmllbGRzLiAgKi8KIAogc3RhdGljIGJmZF9yZWxvY19zdGF0dXNfdHlwZQpAQCAtMTU5Mywx
OSArMTYxNSwyNiBAQCBvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0aW9uIChiZmQgKm91dHB1dF9iZmQs
CiAJICAgIGJmZF9ieXRlICpsb2M7CiAJICAgIGludCBkeW5hbWljOwogCSAgICBpbnQgaW5keCA9
IDA7CisJICAgIHVuc2lnbmVkIGNoYXIgdGxzX3R5cGU7CiAKIAkgICAgc3JlbGdvdCA9IGh0YWIt
PnJvb3Quc3JlbGdvdDsKIAogCSAgICAvKiBNYXJrIGFzIFRMUyByZWxhdGVkIEdPVCBlbnRyeSBi
eSBzZXR0aW5nCi0JICAgICAgIGJpdCAyIGFzIHdlbGwgYXMgYml0IDEuICAqLworCSAgICAgICBi
aXQgMiB0byBpbmRjYXRlIFRMUyBhbmQgYml0IDEgdG8gaW5kaWNhdGUgR09ULiAgKi8KIAkgICAg
aWYgKGggIT0gTlVMTCkKIAkgICAgICB7CiAJCWdvdG9mZiA9IGgtPmdvdC5vZmZzZXQ7CisJCXRs
c190eXBlID0gKChzdHJ1Y3QgZWxmX29yMWtfbGlua19oYXNoX2VudHJ5ICopIGgpLT50bHNfdHlw
ZTsKIAkJaC0+Z290Lm9mZnNldCB8PSAzOwogCSAgICAgIH0KIAkgICAgZWxzZQogCSAgICAgIHsK
KwkJdW5zaWduZWQgY2hhciAqbG9jYWxfdGxzX3R5cGU7CisKIAkJZ290b2ZmID0gbG9jYWxfZ290
X29mZnNldHNbcl9zeW1uZHhdOworCQlsb2NhbF90bHNfdHlwZSA9ICh1bnNpZ25lZCBjaGFyICop
IGVsZl9vcjFrX2xvY2FsX3Rsc190eXBlIChpbnB1dF9iZmQpOworCQl0bHNfdHlwZSA9IGxvY2Fs
X3Rsc190eXBlID09IE5VTEwgPyBUTFNfTk9ORQorCQkJCQkJICA6IGxvY2FsX3Rsc190eXBlW3Jf
c3ltbmR4XTsKIAkJbG9jYWxfZ290X29mZnNldHNbcl9zeW1uZHhdIHw9IDM7CiAJICAgICAgfQog
CkBAIC0xNjM4LDExICsxNjY3LDcgQEAgb3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZkICpv
dXRwdXRfYmZkLAogCQkJICAgfHwgaC0+cm9vdC50eXBlICE9IGJmZF9saW5rX2hhc2hfdW5kZWZ3
ZWFrKTsKIAogCSAgICAvKiBTaGFyZWQgR0QuICAqLwotCSAgICBpZiAoZHluYW1pYwotCQkmJiAo
aG93dG8tPnR5cGUgPT0gUl9PUjFLX1RMU19HRF9ISTE2Ci0JCSAgICB8fCBob3d0by0+dHlwZSA9
PSBSX09SMUtfVExTX0dEX0xPMTYKLQkJICAgIHx8IGhvd3RvLT50eXBlID09IFJfT1IxS19UTFNf
R0RfUEcyMQotCQkgICAgfHwgaG93dG8tPnR5cGUgPT0gUl9PUjFLX1RMU19HRF9MTzEzKSkKKwkg
ICAgaWYgKGR5bmFtaWMgJiYgKCh0bHNfdHlwZSAmIFRMU19HRCkgIT0gMCkpCiAJICAgICAgewog
CQlpbnQgaTsKIApAQCAtMTY3NCwxNyArMTY5OSwxNyBAQCBvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0
aW9uIChiZmQgKm91dHB1dF9iZmQsCiAJCSAgfQogCSAgICAgIH0KIAkgICAgLyogU3RhdGljIEdE
LiAgKi8KLQkgICAgZWxzZSBpZiAoaG93dG8tPnR5cGUgPT0gUl9PUjFLX1RMU19HRF9ISTE2Ci0J
CSAgICAgfHwgaG93dG8tPnR5cGUgPT0gUl9PUjFLX1RMU19HRF9MTzE2Ci0JCSAgICAgfHwgaG93
dG8tPnR5cGUgPT0gUl9PUjFLX1RMU19HRF9QRzIxCi0JCSAgICAgfHwgaG93dG8tPnR5cGUgPT0g
Ul9PUjFLX1RMU19HRF9MTzEzKQorCSAgICBlbHNlIGlmICgodGxzX3R5cGUgJiBUTFNfR0QpICE9
IDApCiAJICAgICAgewogCQliZmRfcHV0XzMyIChvdXRwdXRfYmZkLCAxLCBzZ290LT5jb250ZW50
cyArIGdvdG9mZik7CiAJCWJmZF9wdXRfMzIgKG91dHB1dF9iZmQsIHRwb2ZmIChpbmZvLCByZWxv
Y2F0aW9uKSwKIAkJICAgIHNnb3QtPmNvbnRlbnRzICsgZ290b2ZmICsgNCk7CiAJICAgICAgfQor
CisJICAgIGdvdG9mZiArPSBvcjFrX2luaXRpYWxfZXhlY19vZmZzZXQgKGhvd3RvLCB0bHNfdHlw
ZSk7CisKIAkgICAgLyogU2hhcmVkIElFLiAgKi8KLQkgICAgZWxzZSBpZiAoZHluYW1pYykKKwkg
ICAgaWYgKGR5bmFtaWMgJiYgKCh0bHNfdHlwZSAmIFRMU19JRSkgIT0gMCkpCiAJICAgICAgewog
CQlCRkRfQVNTRVJUIChzcmVsZ290LT5jb250ZW50cyAhPSBOVUxMKTsKIApAQCAtMTcwOCwxMSAr
MTczMyw5IEBAIG9yMWtfZWxmX3JlbG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAkJ
YmZkX3B1dF8zMiAob3V0cHV0X2JmZCwgMCwgc2dvdC0+Y29udGVudHMgKyBnb3RvZmYpOwogCSAg
ICAgIH0KIAkgICAgLyogU3RhdGljIElFLiAgKi8KLQkgICAgZWxzZQotCSAgICAgIHsKLQkJYmZk
X3B1dF8zMiAob3V0cHV0X2JmZCwgdHBvZmYgKGluZm8sIHJlbG9jYXRpb24pLAotCQkJICAgIHNn
b3QtPmNvbnRlbnRzICsgZ290b2ZmKTsKLQkgICAgICB9CisJICAgIGVsc2UgaWYgKCh0bHNfdHlw
ZSAmIFRMU19JRSkgIT0gMCkKKwkgICAgICBiZmRfcHV0XzMyIChvdXRwdXRfYmZkLCB0cG9mZiAo
aW5mbywgcmVsb2NhdGlvbiksCisJCQkgIHNnb3QtPmNvbnRlbnRzICsgZ290b2ZmKTsKIAogCSAg
ICAvKiBUaGUgUEcyMSBhbmQgTE8xMyByZWxvY3MgYXJlIHBjLXJlbGF0aXZlLCB3aGlsZSB0aGUK
IAkgICAgICAgcmVzdCBhcmUgR09UIHJlbGF0aXZlLiAgKi8KQEAgLTE5MDksNyArMTkzMiw3IEBA
IG9yMWtfZWxmX2NoZWNrX3JlbG9jcyAoYmZkICphYmZkLAogCiAgICAgICAvKiBSZWNvcmQgVExT
IHR5cGUuICAqLwogICAgICAgaWYgKGggIT0gTlVMTCkKLQkgICgoc3RydWN0IGVsZl9vcjFrX2xp
bmtfaGFzaF9lbnRyeSAqKSBoKS0+dGxzX3R5cGUgPSB0bHNfdHlwZTsKKwkgICgoc3RydWN0IGVs
Zl9vcjFrX2xpbmtfaGFzaF9lbnRyeSAqKSBoKS0+dGxzX3R5cGUgfD0gdGxzX3R5cGU7CiAgICAg
ICBlbHNlCiAJewogCSAgdW5zaWduZWQgY2hhciAqbG9jYWxfdGxzX3R5cGU7CkBAIC0xOTI2LDcg
KzE5NDksNyBAQCBvcjFrX2VsZl9jaGVja19yZWxvY3MgKGJmZCAqYWJmZCwKIAkJcmV0dXJuIEZB
TFNFOwogCSAgICAgIGVsZl9vcjFrX2xvY2FsX3Rsc190eXBlIChhYmZkKSA9IGxvY2FsX3Rsc190
eXBlOwogCSAgICB9Ci0JICBsb2NhbF90bHNfdHlwZVtyX3N5bW5keF0gPSB0bHNfdHlwZTsKKwkg
IGxvY2FsX3Rsc190eXBlW3Jfc3ltbmR4XSB8PSB0bHNfdHlwZTsKIAl9CiAKICAgICAgIHN3aXRj
aCAocl90eXBlKQpAQCAtMjY0OCw2ICsyNjcxLDU2IEBAIG9yMWtfZWxmX2FkanVzdF9keW5hbWlj
X3N5bWJvbCAoc3RydWN0IGJmZF9saW5rX2luZm8gKmluZm8sCiAgIHJldHVybiBfYmZkX2VsZl9h
ZGp1c3RfZHluYW1pY19jb3B5IChpbmZvLCBoLCBzKTsKIH0KIAorLyogQ2FjbHVsYXRlIGFuIHVw
ZGF0ZSB0aGUgc2l6ZXMgcmVxdWlyZWQgZm9yIGEgc3ltYm9sIGluIHRoZSBHT1QgYW5kCisgICBS
RUxBIHJlbG9jYXRpb24gc2VjdGlvbiBiYXNlZCBvbiB0aGUgVExTX1RZUEUgYW5kIHdoZXRoZXIg
b3Igbm90IHRoZSBzeW1ib2wKKyAgIGlzIERZTkFNSUMuCisKKyAgIFN5bWJvbHMgd2l0aCBUTFNf
R0QgYWNjZXNzIHJlcXVpcmUgOCBieXRlcyBpbiB0aGUgR09UIGFuZCwgaWYgZHluYW1pYywKKyAg
IHJlcXVpcmUgdHdvIHJlbG9jYXRpb24gZW50cmllcy4gIFN5bWJvbHMgd2l0aCBUTFNfSUUgYWNj
ZXNzIHJlcXVpcmUgNCBieXRlcworICAgaW4gdGhlIEdPVCBhbmQsIGlmIGR5bmFtaWMsIHJlcXVp
cmUgb25lIHJlbG9jYXRpb24gZW50cnkuICBTeW1ib2xzIG1heSBoYXZlCisgICBib3RoIFRMU19H
RCBhbmQgVExTX0lFIGFjY2VzcyB0byBiZSBhY2NvdW50ZWQgZm9yLgorCisgICBPdGhlciBzeW1i
b2xzIHJlcXVpcmUgNCBieXRlcyBpbiB0aGUgR09UIHRhYmxlIGFuZCwgaWYgZHluYW1pYywgcmVx
dWlyZSBvbmUKKyAgIHJlbG9jYXRpb24gZW50cnkuICAqLworCitzdGF0aWMgdm9pZAorb3Ixa19z
ZXRfZ290X2FuZF9yZWxhX3NpemVzIChjb25zdCB1bnNpZ25lZCBjaGFyIHRsc190eXBlLAorCQkJ
ICAgICBjb25zdCBiZmRfYm9vbGVhbiBkeW5hbWljLAorCQkJICAgICBiZmRfdm1hICpnb3Rfc2l6
ZSwKKwkJCSAgICAgYmZkX3ZtYSAqcmVsYV9zaXplKQoreworICBiZmRfYm9vbGVhbiBpc190bHNf
ZW50cnkgPSBGQUxTRTsKKworICAvKiBUTFMgR0QgcmVxdWlyZXMgdHdvIEdPVCBlbnRyaWVzIGFu
ZCB0d28gcmVsb2NzLiAgKi8KKyAgaWYgKCh0bHNfdHlwZSAmIFRMU19HRCkgIT0gMCkKKyAgICB7
CisgICAgICAqZ290X3NpemUgKz0gODsKKyAgICAgIGlzX3Rsc19lbnRyeSA9IFRSVUU7CisgICAg
fQorCisgIGlmICgodGxzX3R5cGUgJiBUTFNfSUUpICE9IDApCisgICAgeworICAgICAgKmdvdF9z
aXplICs9IDQ7CisgICAgICBpc190bHNfZW50cnkgPSBUUlVFOworICAgIH0KKworICBpZiAoaXNf
dGxzX2VudHJ5ID09IEZBTFNFKQorICAgICpnb3Rfc2l6ZSArPSA0OworCisgIGlmIChkeW5hbWlj
KQorICAgIHsKKyAgICAgIGlmICgodGxzX3R5cGUgJiBUTFNfR0QpICE9IDApCisJKnJlbGFfc2l6
ZSArPSAyICogc2l6ZW9mIChFbGYzMl9FeHRlcm5hbF9SZWxhKTsKKworICAgICAgaWYgKCh0bHNf
dHlwZSAmIFRMU19JRSkgIT0gMCkKKwkqcmVsYV9zaXplICs9IHNpemVvZiAoRWxmMzJfRXh0ZXJu
YWxfUmVsYSk7CisKKyAgICAgIGlmIChpc190bHNfZW50cnkgPT0gRkFMU0UpCisJKnJlbGFfc2l6
ZSArPSBzaXplb2YgKEVsZjMyX0V4dGVybmFsX1JlbGEpOworICAgIH0KK30KKworCiAvKiBBbGxv
Y2F0ZSBzcGFjZSBpbiAucGx0LCAuZ290IGFuZCBhc3NvY2lhdGVkIHJlbG9jIHNlY3Rpb25zIGZv
cgogICAgZHluYW1pYyByZWxvY3MuICAqLwogCkBAIC0yNzQ3LDE5ICsyODIwLDEwIEBAIGFsbG9j
YXRlX2R5bnJlbG9jcyAoc3RydWN0IGVsZl9saW5rX2hhc2hfZW50cnkgKmgsIHZvaWQgKiBpbmYp
CiAKICAgICAgIHRsc190eXBlID0gKChzdHJ1Y3QgZWxmX29yMWtfbGlua19oYXNoX2VudHJ5ICop
IGgpLT50bHNfdHlwZTsKIAotICAgICAgLyogVExTIEdEIHJlcXVpcmVzIHR3byBHT1QgYW5kIHR3
byByZWxvY3MuICAqLwotICAgICAgaWYgKHRsc190eXBlID09IFRMU19HRCkKLQlzLT5zaXplICs9
IDg7Ci0gICAgICBlbHNlCi0Jcy0+c2l6ZSArPSA0OwogICAgICAgZHluID0gaHRhYi0+cm9vdC5k
eW5hbWljX3NlY3Rpb25zX2NyZWF0ZWQ7Ci0gICAgICBpZiAoV0lMTF9DQUxMX0ZJTklTSF9EWU5B
TUlDX1NZTUJPTCAoZHluLCBiZmRfbGlua19waWMgKGluZm8pLCBoKSkKLQl7Ci0JICBpZiAodGxz
X3R5cGUgPT0gVExTX0dEKQotCSAgICBodGFiLT5yb290LnNyZWxnb3QtPnNpemUgKz0gMiAqIHNp
emVvZiAoRWxmMzJfRXh0ZXJuYWxfUmVsYSk7Ci0JICBlbHNlCi0JICAgIGh0YWItPnJvb3Quc3Jl
bGdvdC0+c2l6ZSArPSBzaXplb2YgKEVsZjMyX0V4dGVybmFsX1JlbGEpOwotCX0KKyAgICAgIGR5
biA9IFdJTExfQ0FMTF9GSU5JU0hfRFlOQU1JQ19TWU1CT0wgKGR5biwgYmZkX2xpbmtfcGljIChp
bmZvKSwgaCk7CisgICAgICBvcjFrX3NldF9nb3RfYW5kX3JlbGFfc2l6ZXMgKHRsc190eXBlLCBk
eW4sCisJCQkJICAgJnMtPnNpemUsICZodGFiLT5yb290LnNyZWxnb3QtPnNpemUpOwogICAgIH0K
ICAgZWxzZQogICAgIGgtPmdvdC5vZmZzZXQgPSAoYmZkX3ZtYSkgLTE7CkBAIC0yOTY0LDIwICsz
MDI4LDEzIEBAIG9yMWtfZWxmX3NpemVfZHluYW1pY19zZWN0aW9ucyAoYmZkICpvdXRwdXRfYmZk
IEFUVFJJQlVURV9VTlVTRUQsCiAJewogCSAgaWYgKCpsb2NhbF9nb3QgPiAwKQogCSAgICB7Ci0J
ICAgICAgKmxvY2FsX2dvdCA9IHMtPnNpemU7CisJICAgICAgdW5zaWduZWQgY2hhciB0bHNfdHlw
ZSA9IChsb2NhbF90bHNfdHlwZSA9PSBOVUxMKQorCQkJCQk/IFRMU19VTktOT1dOCisJCQkJCTog
KmxvY2FsX3Rsc190eXBlOwogCi0JICAgICAgLyogVExTIEdEIHJlcXVpcmVzIHR3byBHT1QgYW5k
IHR3byByZWxvY3MuICAqLwotCSAgICAgIGlmIChsb2NhbF90bHNfdHlwZSAhPSBOVUxMICYmICps
b2NhbF90bHNfdHlwZSA9PSBUTFNfR0QpCi0JCXMtPnNpemUgKz0gODsKLQkgICAgICBlbHNlCi0J
CXMtPnNpemUgKz0gNDsKLQkgICAgICBpZiAoYmZkX2xpbmtfcGljIChpbmZvKSkKLQkJewotCQkg
IGlmIChsb2NhbF90bHNfdHlwZSAhPSBOVUxMICYmICpsb2NhbF90bHNfdHlwZSA9PSBUTFNfR0Qp
Ci0JCSAgICBzcmVsLT5zaXplICs9IDIgKiBzaXplb2YgKEVsZjMyX0V4dGVybmFsX1JlbGEpOwot
CQkgIGVsc2UKLQkJICAgIHNyZWwtPnNpemUgKz0gc2l6ZW9mIChFbGYzMl9FeHRlcm5hbF9SZWxh
KTsKLQkJfQorCSAgICAgICpsb2NhbF9nb3QgPSBzLT5zaXplOworCSAgICAgIG9yMWtfc2V0X2dv
dF9hbmRfcmVsYV9zaXplcyAodGxzX3R5cGUsIGJmZF9saW5rX3BpYyAoaW5mbyksCisJCQkJCSAg
ICZzLT5zaXplLCAmc3JlbC0+c2l6ZSk7CiAJICAgIH0KIAkgIGVsc2UKIAotLSAKMi4yNi4yCgpf
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBt
YWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5s
aWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
