Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 132884378CB
	for <lists+openrisc@lfdr.de>; Fri, 22 Oct 2021 16:11:33 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id CCC8724220;
	Fri, 22 Oct 2021 16:11:31 +0200 (CEST)
Received: from mout.gmx.net (mout.gmx.net [212.227.15.18])
 by mail.librecores.org (Postfix) with ESMTPS id 52A66240CD
 for <openrisc@lists.librecores.org>; Fri, 22 Oct 2021 16:11:30 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=gmx.net;
 s=badeba3b8450; t=1634911859;
 bh=vujfeMuBrUuuTlmusG8h3g2DSrTlcZ4DkGKFVEwSHo8=;
 h=X-UI-Sender-Class:Date:Subject:To:Cc:References:From:In-Reply-To;
 b=DRKlzadMhWGJc6+kIDLJqK2HyeSjNBUSf1mDOOko6uonxZ0XmJB8LuqPk9IMxhT8M
 HIqwI3mRdATBCHY1fj3XMJF5gOStLBLTnYLND5AKIIgLBMkVk7r9JkQSvx7m2rBwzz
 qBwn2oMcnq/az6+XktN0KJ06q9jYgHWf5OpZFbqs=
X-UI-Sender-Class: 01bb95c1-4bf8-414a-932a-4f6e2808ef9c
Received: from [192.168.20.60] ([92.116.180.101]) by mail.gmx.net (mrgmx004
 [212.227.17.190]) with ESMTPSA (Nemesis) id 1M8ygO-1ma5Ej23fi-0063uT; Fri, 22
 Oct 2021 16:10:59 +0200
Message-ID: <f76f2e53-f179-ebcb-0b29-7d76588b5ee0@gmx.de>
Date: Fri, 22 Oct 2021 16:10:35 +0200
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.2.0
Content-Language: en-US
To: Arnd Bergmann <arnd@kernel.org>, Peter Zijlstra <peterz@infradead.org>,
 Ingo Molnar <mingo@redhat.com>, Will Deacon <will@kernel.org>
References: <20211022120058.1031690-1-arnd@kernel.org>
From: Helge Deller <deller@gmx.de>
In-Reply-To: <20211022120058.1031690-1-arnd@kernel.org>
X-Provags-ID: V03:K1:dvfUKgNArSXkFOAG642hgJ+NCLPr8U/Y8j+xJ1cQSnJMG5ZBohE
 QE2JEVtTuIGyPxJoOhxNwRi2TZMmV+qSU2CTm2McWAyp78m/oxb+M58kNTRiBV33w10sD5D
 7H8nzoEjQciUx/DgmJRFUBdM7EOS5w9m1l7wUOpRxFMMj3HFdu/A8SsEErkNaeN/hre3VcI
 jOYRTyGpLJLcsNHPAzvaw==
X-Spam-Flag: NO
X-UI-Out-Filterresults: notjunk:1;V03:K0:+8KKO5IzmXY=:+EDVQ7Ok1o3Qrd4rtP8JMi
 hp7fzbyfCYNV+gmUYZ7KPY8CSspGQhOCLYUfMQg63Fg3zw/tAgKL8z4EGwSSkA5vxsd4D4KAt
 uEsk3qRKLxWx9o4w42Ks2qLDVDljrNK/bMLijcHMypY+gfHUEZr36NHaLXqfyH4iu/LRq5Yp+
 5moR/+czjF1Pqo98Feey2kHZGdU1NzxchIpX3o9jd/TxXKIK/mmtr8Y5zMfydgUWVBiwMlHnv
 NFecSphiKkbJjS5Rv2qp8tFzvbim0ipOOEjvAEeMhujOSW+erDaaQLyNhFYf4PM1quFWZ4PTM
 Qj8EMQLwfwBXniieaeM2Oq3BhCn98aDuNeVHg8fQemLy3VkL9OYNdiOJNW0ygEr+Zl6rc21Xr
 nq7pcaNirjSuxtL7E0btufN+o2o1YT88sD7JSseStRLVarDd5apzkLeOfyCaNlOLygk5n9Zly
 Dvn+lhLx5uOEL4BDa6Ll1i+FZ32UJOgVo5oG3m6HY+I7c1nsntFTeFuihtUWJt5kjQyYuxIMn
 pKiXJXBsESLNzV27GMWQEhWfNKalv4bj/QZBnZiPaXYuJzsLk5cqfcDjNPFKaSb7iiC5OcM7I
 7jZbByEk9440BcVPgZNMMR6oYubohe3HnvP3mERCBrkkZXD8BupgMoSrDD/bX5/rFjIcXfU3y
 pWcxqER92o9VNyWWrOQvUEcM2Bj+QzUPBUB+RueQQuCf/OvJOifQw528iG9RV9eEITZApQanL
 O7Fw7rxyBKeFJqorHUfDLpmkhvcqtKIq3O43JoahJ+hNutLd87K3+TizSSHyGlU2odQkdxKSy
 fT22d1J+mFduKw1Ssc85F2jb0n9HhNu4J12zXa2ZKv9raFrjQDeUbpn+OWT2pyKKT6AToeadW
 m7+ewFLs/hQ2/CrgTg/Z6/vOB802X9KRNUnUvZlxkxtwKFMiPFjWEGugt5MmvjMXo8/aZT0bs
 0d+ou9U/9rlQj9nKffCRIfHfQyCbwnd4d8xhEiignDSIS69LFcp19P1cHL2y1yo52fuxg4Ptm
 EgZWn5ONJU4+3e1+oPW0XE+dRWqHZvqvyaAPo6xZVahZFepQ2PBGftdXtX3hW3T9iVYOi0w3c
 VU94PjQPIv/rnM=
Subject: Re: [OpenRISC] [PATCH] locking: remove spin_lock_flags() etc
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Jonas Bonn <jonas@southpole.se>, linux-s390@vger.kernel.org,
 Alexander Gordeev <agordeev@linux.ibm.com>, linux-ia64@vger.kernel.org,
 Vasily Gorbik <gor@linux.ibm.com>, Arnd Bergmann <arnd@arndb.de>,
 Michael Ellerman <mpe@ellerman.id.au>, Boqun Feng <boqun.feng@gmail.com>,
 linux-kernel@vger.kernel.org,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Christian Borntraeger <borntraeger@de.ibm.com>, openrisc@lists.librecores.org,
 Paul Mackerras <paulus@samba.org>, linux-parisc@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Waiman Long <longman@redhat.com>, linuxppc-dev@lists.ozlabs.org,
 Heiko Carstens <hca@linux.ibm.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gMTAvMjIvMjEgMTM6NTksIEFybmQgQmVyZ21hbm4gd3JvdGU6Cj4gRnJvbTogQXJuZCBCZXJn
bWFubiA8YXJuZEBhcm5kYi5kZT4KPgo+IHBhcmlzYywgaWE2NCBhbmQgcG93ZXJwYzMyIGFyZSB0
aGUgb25seSByZW1haW5pbmcgYXJjaGl0ZWN0dXJlcyB0aGF0Cj4gcHJvdmlkZSBjdXN0b20gYXJj
aF97c3BpbixyZWFkLHdyaXRlfV9sb2NrX2ZsYWdzKCkgZnVuY3Rpb25zLCB3aGljaCBhcmUKPiBt
ZWFudCB0byByZS1lbmFibGUgaW50ZXJydXB0cyB3aGlsZSB3YWl0aW5nIGZvciBhIHNwaW5sb2Nr
Lgo+Cj4gSG93ZXZlciwgbm9uZSBvZiB0aGVzZSBjYW4gYWN0dWFsbHkgcnVuIGludG8gdGhpcyBj
b2RlcGF0aCwgYmVjYXVzZQo+IGl0IGlzIG9ubHkgY2FsbGVkIG9uIGFyY2hpdGVjdHVyZXMgd2l0
aG91dCBDT05GSUdfR0VORVJJQ19MT0NLQlJFQUssCj4gb3Igd2hlbiBDT05GSUdfREVCVUdfTE9D
S19BTExPQyBpcyBzZXQgd2l0aG91dCBDT05GSUdfTE9DS0RFUCwgYW5kIG5vbmUKPiBvZiB0aG9z
ZSBjb21iaW5hdGlvbnMgYXJlIHBvc3NpYmxlIG9uIHRoZSB0aHJlZSBhcmNoaXRlY3R1cmVzLgo+
Cj4gR29pbmcgYmFjayBpbiB0aGUgZ2l0IGhpc3RvcnksIGl0IGFwcGVhcnMgdGhhdCBhcmNoL21u
MTAzMDAgbWF5IGhhdmUKPiBiZWVuIGFibGUgdG8gcnVuIGludG8gdGhpcyBjb2RlIHBhdGgsIGJ1
dCB0aGVyZSBpcyBhIGdvb2QgY2hhbmNlIHRoYXQKPiBpdCBuZXZlciB3b3JrZWQuIE9uIHRoZSBh
cmNoaXRlY3R1cmVzIHRoYXQgc3RpbGwgZXhpc3QsIGl0IHdhcwo+IGFscmVhZHkgaW1wb3NzaWJs
ZSB0byBoaXQgYmFjayBpbiAyMDA4IGFmdGVyIHRoZSBpbnRyb2R1Y3Rpb24gb2YKPiBDT05GSUdf
R0VORVJJQ19MT0NLQlJFQUssIGFuZCBwb3NzaWJseSBlYXJsaWVyLgo+Cj4gQXMgdGhpcyBpcyBh
bGwgZGVhZCBjb2RlLCBqdXN0IHJlbW92ZSBpdCBhbmQgdGhlIGhlbHBlciBmdW5jdGlvbnMgYnVp
bHQKPiBhcm91bmQgaXQuIEZvciBhcmNoL2lhNjQsIHRoZSBpbmxpbmUgYXNtIGNvdWxkIGJlIGNs
ZWFuZWQgdXAsIGJ1dAo+IGl0IHNlZW1zIHNhZmVyIHRvIGxlYXZlIGl0IHVudG91Y2hlZC4KPgo+
IFNpZ25lZC1vZmYtYnk6IEFybmQgQmVyZ21hbm4gPGFybmRAYXJuZGIuZGU+CgpBY2tlZC1ieTog
SGVsZ2UgRGVsbGVyIDxkZWxsZXJAZ214LmRlPiAgIyBwYXJpc2MKCkhlbGdlCgo+IC0tLQo+ICBh
cmNoL2lhNjQvaW5jbHVkZS9hc20vc3BpbmxvY2suaCAgICAgICAgICAgfCAyMyArKysrKystLS0t
LS0tLS0tLS0tLS0tCj4gIGFyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20vc3BpbmxvY2suaCAgICAg
ICB8ICAzIC0tLQo+ICBhcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9zcGlubG9jay5oICAgICAgICAg
fCAxNSAtLS0tLS0tLS0tLS0tLQo+ICBhcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vc2ltcGxlX3Nw
aW5sb2NrLmggfCAyMSAtLS0tLS0tLS0tLS0tLS0tLS0tLQo+ICBhcmNoL3MzOTAvaW5jbHVkZS9h
c20vc3BpbmxvY2suaCAgICAgICAgICAgfCAgOCAtLS0tLS0tLQo+ICBpbmNsdWRlL2xpbnV4L2xv
Y2tkZXAuaCAgICAgICAgICAgICAgICAgICAgfCAxNyAtLS0tLS0tLS0tLS0tLS0tCj4gIGluY2x1
ZGUvbGludXgvcndsb2NrLmggICAgICAgICAgICAgICAgICAgICB8IDE1IC0tLS0tLS0tLS0tLS0t
Cj4gIGluY2x1ZGUvbGludXgvcndsb2NrX2FwaV9zbXAuaCAgICAgICAgICAgICB8ICA2ICsrLS0t
LQo+ICBpbmNsdWRlL2xpbnV4L3NwaW5sb2NrLmggICAgICAgICAgICAgICAgICAgfCAxMyAtLS0t
LS0tLS0tLS0KPiAgaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21wLmggICAgICAgICAgIHwg
IDkgLS0tLS0tLS0tCj4gIGluY2x1ZGUvbGludXgvc3BpbmxvY2tfdXAuaCAgICAgICAgICAgICAg
ICB8ICAxIC0KPiAga2VybmVsL2xvY2tpbmcvc3BpbmxvY2suYyAgICAgICAgICAgICAgICAgIHwg
IDMgKy0tCj4gIDEyIGZpbGVzIGNoYW5nZWQsIDkgaW5zZXJ0aW9ucygrKSwgMTI1IGRlbGV0aW9u
cygtKQo+Cj4gZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9zcGlubG9jay5oIGIv
YXJjaC9pYTY0L2luY2x1ZGUvYXNtL3NwaW5sb2NrLmgKPiBpbmRleCA4NjQ3NzU5NzBjNTAuLjBl
NWMxYWQzMjM5YyAxMDA2NDQKPiAtLS0gYS9hcmNoL2lhNjQvaW5jbHVkZS9hc20vc3BpbmxvY2su
aAo+ICsrKyBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9zcGlubG9jay5oCj4gQEAgLTEyNCwxOCAr
MTI0LDEzIEBAIHN0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBhcmNoX3NwaW5fdW5sb2NrKGFy
Y2hfc3BpbmxvY2tfdCAqbG9jaykKPiAgCV9fdGlja2V0X3NwaW5fdW5sb2NrKGxvY2spOwo+ICB9
Cj4KPiAtc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIGFyY2hfc3Bpbl9sb2NrX2ZsYWdzKGFy
Y2hfc3BpbmxvY2tfdCAqbG9jaywKPiAtCQkJCQkJICB1bnNpZ25lZCBsb25nIGZsYWdzKQo+IC17
Cj4gLQlhcmNoX3NwaW5fbG9jayhsb2NrKTsKPiAtfQo+IC0jZGVmaW5lIGFyY2hfc3Bpbl9sb2Nr
X2ZsYWdzCWFyY2hfc3Bpbl9sb2NrX2ZsYWdzCj4gLQo+ICAjaWZkZWYgQVNNX1NVUFBPUlRFRAo+
Cj4gIHN0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZAo+IC1hcmNoX3JlYWRfbG9ja19mbGFncyhh
cmNoX3J3bG9ja190ICpsb2NrLCB1bnNpZ25lZCBsb25nIGZsYWdzKQo+ICthcmNoX3JlYWRfbG9j
ayhhcmNoX3J3bG9ja190ICpsb2NrKQo+ICB7Cj4gKwl1bnNpZ25lZCBsb25nIGZsYWdzID0gMDsK
PiArCj4gIAlfX2FzbV9fIF9fdm9sYXRpbGVfXyAoCj4gIAkJInRiaXQubnogcDYsIHAwID0gJTEs
JTJcbiIKPiAgCQkiYnIuZmV3IDNmXG4iCj4gQEAgLTE1NywxMyArMTUyLDggQEAgYXJjaF9yZWFk
X2xvY2tfZmxhZ3MoYXJjaF9yd2xvY2tfdCAqbG9jaywgdW5zaWduZWQgbG9uZyBmbGFncykKPiAg
CQk6ICJwNiIsICJwNyIsICJyMiIsICJtZW1vcnkiKTsKPiAgfQo+Cj4gLSNkZWZpbmUgYXJjaF9y
ZWFkX2xvY2tfZmxhZ3MgYXJjaF9yZWFkX2xvY2tfZmxhZ3MKPiAtI2RlZmluZSBhcmNoX3JlYWRf
bG9jayhsb2NrKSBhcmNoX3JlYWRfbG9ja19mbGFncyhsb2NrLCAwKQo+IC0KPiAgI2Vsc2UgLyog
IUFTTV9TVVBQT1JURUQgKi8KPgo+IC0jZGVmaW5lIGFyY2hfcmVhZF9sb2NrX2ZsYWdzKHJ3LCBm
bGFncykgYXJjaF9yZWFkX2xvY2socncpCj4gLQo+ICAjZGVmaW5lIGFyY2hfcmVhZF9sb2NrKHJ3
KQkJCQkJCQkJXAo+ICBkbyB7CQkJCQkJCQkJCQlcCj4gIAlhcmNoX3J3bG9ja190ICpfX3JlYWRf
bG9ja19wdHIgPSAocncpOwkJCQkJCVwKPiBAQCAtMTg2LDggKzE3NiwxMCBAQCBkbyB7CQkJCQkJ
CQlcCj4gICNpZmRlZiBBU01fU1VQUE9SVEVECj4KPiAgc3RhdGljIF9fYWx3YXlzX2lubGluZSB2
b2lkCj4gLWFyY2hfd3JpdGVfbG9ja19mbGFncyhhcmNoX3J3bG9ja190ICpsb2NrLCB1bnNpZ25l
ZCBsb25nIGZsYWdzKQo+ICthcmNoX3dyaXRlX2xvY2soYXJjaF9yd2xvY2tfdCAqbG9jaykKPiAg
ewo+ICsJdW5zaWduZWQgbG9uZyBmbGFncyA9IDA7Cj4gKwo+ICAJX19hc21fXyBfX3ZvbGF0aWxl
X18gKAo+ICAJCSJ0Yml0Lm56IHA2LCBwMCA9ICUxLCAlMlxuIgo+ICAJCSJtb3YgYXIuY2N2ID0g
cjBcbiIKPiBAQCAtMjEwLDkgKzIwMiw2IEBAIGFyY2hfd3JpdGVfbG9ja19mbGFncyhhcmNoX3J3
bG9ja190ICpsb2NrLCB1bnNpZ25lZCBsb25nIGZsYWdzKQo+ICAJCTogImFyLmNjdiIsICJwNiIs
ICJwNyIsICJyMiIsICJyMjkiLCAibWVtb3J5Iik7Cj4gIH0KPgo+IC0jZGVmaW5lIGFyY2hfd3Jp
dGVfbG9ja19mbGFncyBhcmNoX3dyaXRlX2xvY2tfZmxhZ3MKPiAtI2RlZmluZSBhcmNoX3dyaXRl
X2xvY2socncpIGFyY2hfd3JpdGVfbG9ja19mbGFncyhydywgMCkKPiAtCj4gICNkZWZpbmUgYXJj
aF93cml0ZV90cnlsb2NrKHJ3KQkJCQkJCQlcCj4gICh7CQkJCQkJCQkJCVwKPiAgCXJlZ2lzdGVy
IGxvbmcgcmVzdWx0OwkJCQkJCQlcCj4gZGlmZiAtLWdpdCBhL2FyY2gvb3BlbnJpc2MvaW5jbHVk
ZS9hc20vc3BpbmxvY2suaCBiL2FyY2gvb3BlbnJpc2MvaW5jbHVkZS9hc20vc3BpbmxvY2suaAo+
IGluZGV4IGE4OTQwYmRmY2I3ZS4uMjY0OTQ0YTcxNTM1IDEwMDY0NAo+IC0tLSBhL2FyY2gvb3Bl
bnJpc2MvaW5jbHVkZS9hc20vc3BpbmxvY2suaAo+ICsrKyBiL2FyY2gvb3BlbnJpc2MvaW5jbHVk
ZS9hc20vc3BpbmxvY2suaAo+IEBAIC0xOSw5ICsxOSw2IEBACj4KPiAgI2luY2x1ZGUgPGFzbS9x
cndsb2NrLmg+Cj4KPiAtI2RlZmluZSBhcmNoX3JlYWRfbG9ja19mbGFncyhsb2NrLCBmbGFncykg
YXJjaF9yZWFkX2xvY2sobG9jaykKPiAtI2RlZmluZSBhcmNoX3dyaXRlX2xvY2tfZmxhZ3MobG9j
aywgZmxhZ3MpIGFyY2hfd3JpdGVfbG9jayhsb2NrKQo+IC0KPiAgI2RlZmluZSBhcmNoX3NwaW5f
cmVsYXgobG9jaykJY3B1X3JlbGF4KCkKPiAgI2RlZmluZSBhcmNoX3JlYWRfcmVsYXgobG9jaykJ
Y3B1X3JlbGF4KCkKPiAgI2RlZmluZSBhcmNoX3dyaXRlX3JlbGF4KGxvY2spCWNwdV9yZWxheCgp
Cj4gZGlmZiAtLWdpdCBhL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3NwaW5sb2NrLmggYi9hcmNo
L3BhcmlzYy9pbmNsdWRlL2FzbS9zcGlubG9jay5oCj4gaW5kZXggZmE1ZWU4YTQ1ZGJkLi5hNmU1
ZDY2YTc2NTYgMTAwNjQ0Cj4gLS0tIGEvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vc3BpbmxvY2su
aAo+ICsrKyBiL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3NwaW5sb2NrLmgKPiBAQCAtMjMsMjEg
KzIzLDYgQEAgc3RhdGljIGlubGluZSB2b2lkIGFyY2hfc3Bpbl9sb2NrKGFyY2hfc3BpbmxvY2tf
dCAqeCkKPiAgCQkJY29udGludWU7Cj4gIH0KPgo+IC1zdGF0aWMgaW5saW5lIHZvaWQgYXJjaF9z
cGluX2xvY2tfZmxhZ3MoYXJjaF9zcGlubG9ja190ICp4LAo+IC0JCQkJCXVuc2lnbmVkIGxvbmcg
ZmxhZ3MpCj4gLXsKPiAtCXZvbGF0aWxlIHVuc2lnbmVkIGludCAqYTsKPiAtCj4gLQlhID0gX19s
ZGN3X2FsaWduKHgpOwo+IC0Jd2hpbGUgKF9fbGRjdyhhKSA9PSAwKQo+IC0JCXdoaWxlICgqYSA9
PSAwKQo+IC0JCQlpZiAoZmxhZ3MgJiBQU1dfU01fSSkgewo+IC0JCQkJbG9jYWxfaXJxX2VuYWJs
ZSgpOwo+IC0JCQkJbG9jYWxfaXJxX2Rpc2FibGUoKTsKPiAtCQkJfQo+IC19Cj4gLSNkZWZpbmUg
YXJjaF9zcGluX2xvY2tfZmxhZ3MgYXJjaF9zcGluX2xvY2tfZmxhZ3MKPiAtCj4gIHN0YXRpYyBp
bmxpbmUgdm9pZCBhcmNoX3NwaW5fdW5sb2NrKGFyY2hfc3BpbmxvY2tfdCAqeCkKPiAgewo+ICAJ
dm9sYXRpbGUgdW5zaWduZWQgaW50ICphOwo+IGRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvaW5j
bHVkZS9hc20vc2ltcGxlX3NwaW5sb2NrLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vc2lt
cGxlX3NwaW5sb2NrLmgKPiBpbmRleCA4OTg1NzkxYTJiYTUuLjdhZTZhZWVmODQ2NCAxMDA2NDQK
PiAtLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vc2ltcGxlX3NwaW5sb2NrLmgKPiArKysg
Yi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vc2ltcGxlX3NwaW5sb2NrLmgKPiBAQCAtMTIzLDI3
ICsxMjMsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgYXJjaF9zcGluX2xvY2soYXJjaF9zcGlubG9j
a190ICpsb2NrKQo+ICAJfQo+ICB9Cj4KPiAtc3RhdGljIGlubGluZQo+IC12b2lkIGFyY2hfc3Bp
bl9sb2NrX2ZsYWdzKGFyY2hfc3BpbmxvY2tfdCAqbG9jaywgdW5zaWduZWQgbG9uZyBmbGFncykK
PiAtewo+IC0JdW5zaWduZWQgbG9uZyBmbGFnc19kaXM7Cj4gLQo+IC0Jd2hpbGUgKDEpIHsKPiAt
CQlpZiAobGlrZWx5KF9fYXJjaF9zcGluX3RyeWxvY2sobG9jaykgPT0gMCkpCj4gLQkJCWJyZWFr
Owo+IC0JCWxvY2FsX3NhdmVfZmxhZ3MoZmxhZ3NfZGlzKTsKPiAtCQlsb2NhbF9pcnFfcmVzdG9y
ZShmbGFncyk7Cj4gLQkJZG8gewo+IC0JCQlITVRfbG93KCk7Cj4gLQkJCWlmIChpc19zaGFyZWRf
cHJvY2Vzc29yKCkpCj4gLQkJCQlzcGxwYXJfc3Bpbl95aWVsZChsb2NrKTsKPiAtCQl9IHdoaWxl
ICh1bmxpa2VseShsb2NrLT5zbG9jayAhPSAwKSk7Cj4gLQkJSE1UX21lZGl1bSgpOwo+IC0JCWxv
Y2FsX2lycV9yZXN0b3JlKGZsYWdzX2Rpcyk7Cj4gLQl9Cj4gLX0KPiAtI2RlZmluZSBhcmNoX3Nw
aW5fbG9ja19mbGFncyBhcmNoX3NwaW5fbG9ja19mbGFncwo+IC0KPiAgc3RhdGljIGlubGluZSB2
b2lkIGFyY2hfc3Bpbl91bmxvY2soYXJjaF9zcGlubG9ja190ICpsb2NrKQo+ICB7Cj4gIAlfX2Fz
bV9fIF9fdm9sYXRpbGVfXygiIyBhcmNoX3NwaW5fdW5sb2NrXG5cdCIKPiBkaWZmIC0tZ2l0IGEv
YXJjaC9zMzkwL2luY2x1ZGUvYXNtL3NwaW5sb2NrLmggYi9hcmNoL3MzOTAvaW5jbHVkZS9hc20v
c3BpbmxvY2suaAo+IGluZGV4IGVmNTk1ODhhMzA0Mi4uODg4YTJmMWM5ZWUzIDEwMDY0NAo+IC0t
LSBhL2FyY2gvczM5MC9pbmNsdWRlL2FzbS9zcGlubG9jay5oCj4gKysrIGIvYXJjaC9zMzkwL2lu
Y2x1ZGUvYXNtL3NwaW5sb2NrLmgKPiBAQCAtNjcsMTQgKzY3LDYgQEAgc3RhdGljIGlubGluZSB2
b2lkIGFyY2hfc3Bpbl9sb2NrKGFyY2hfc3BpbmxvY2tfdCAqbHApCj4gIAkJYXJjaF9zcGluX2xv
Y2tfd2FpdChscCk7Cj4gIH0KPgo+IC1zdGF0aWMgaW5saW5lIHZvaWQgYXJjaF9zcGluX2xvY2tf
ZmxhZ3MoYXJjaF9zcGlubG9ja190ICpscCwKPiAtCQkJCQl1bnNpZ25lZCBsb25nIGZsYWdzKQo+
IC17Cj4gLQlpZiAoIWFyY2hfc3Bpbl90cnlsb2NrX29uY2UobHApKQo+IC0JCWFyY2hfc3Bpbl9s
b2NrX3dhaXQobHApOwo+IC19Cj4gLSNkZWZpbmUgYXJjaF9zcGluX2xvY2tfZmxhZ3MJYXJjaF9z
cGluX2xvY2tfZmxhZ3MKPiAtCj4gIHN0YXRpYyBpbmxpbmUgaW50IGFyY2hfc3Bpbl90cnlsb2Nr
KGFyY2hfc3BpbmxvY2tfdCAqbHApCj4gIHsKPiAgCWlmICghYXJjaF9zcGluX3RyeWxvY2tfb25j
ZShscCkpCj4gZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvbG9ja2RlcC5oIGIvaW5jbHVkZS9s
aW51eC9sb2NrZGVwLmgKPiBpbmRleCA5ZmUxNjViZWIwZjkuLjQ2N2I5NDI1NzEwNSAxMDA2NDQK
PiAtLS0gYS9pbmNsdWRlL2xpbnV4L2xvY2tkZXAuaAo+ICsrKyBiL2luY2x1ZGUvbGludXgvbG9j
a2RlcC5oCj4gQEAgLTQ4MSwyMyArNDgxLDYgQEAgZG8gewkJCQkJCQkJXAo+Cj4gICNlbmRpZiAv
KiBDT05GSUdfTE9DS19TVEFUICovCj4KPiAtI2lmZGVmIENPTkZJR19MT0NLREVQCj4gLQo+IC0v
Kgo+IC0gKiBPbiBsb2NrZGVwIHdlIGRvbnQgd2FudCB0aGUgaGFuZC1jb2RlZCBpcnEtZW5hYmxl
IG9mCj4gLSAqIF9yYXdfKl9sb2NrX2ZsYWdzKCkgY29kZSwgYmVjYXVzZSBsb2NrZGVwIGFzc3Vt
ZXMKPiAtICogdGhhdCBpbnRlcnJ1cHRzIGFyZSBub3QgcmUtZW5hYmxlZCBkdXJpbmcgbG9jay1h
Y3F1aXJlOgo+IC0gKi8KPiAtI2RlZmluZSBMT0NLX0NPTlRFTkRFRF9GTEFHUyhfbG9jaywgdHJ5
LCBsb2NrLCBsb2NrZmwsIGZsYWdzKSBcCj4gLQlMT0NLX0NPTlRFTkRFRCgoX2xvY2spLCAodHJ5
KSwgKGxvY2spKQo+IC0KPiAtI2Vsc2UgLyogQ09ORklHX0xPQ0tERVAgKi8KPiAtCj4gLSNkZWZp
bmUgTE9DS19DT05URU5ERURfRkxBR1MoX2xvY2ssIHRyeSwgbG9jaywgbG9ja2ZsLCBmbGFncykg
XAo+IC0JbG9ja2ZsKChfbG9jayksIChmbGFncykpCj4gLQo+IC0jZW5kaWYgLyogQ09ORklHX0xP
Q0tERVAgKi8KPiAtCj4gICNpZmRlZiBDT05GSUdfUFJPVkVfTE9DS0lORwo+ICBleHRlcm4gdm9p
ZCBwcmludF9pcnF0cmFjZV9ldmVudHMoc3RydWN0IHRhc2tfc3RydWN0ICpjdXJyKTsKPiAgI2Vs
c2UKPiBkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9yd2xvY2suaCBiL2luY2x1ZGUvbGludXgv
cndsb2NrLmgKPiBpbmRleCA3Y2U5YTUxYWU1YzAuLjJjMGFkNDE3Y2UzYyAxMDA2NDQKPiAtLS0g
YS9pbmNsdWRlL2xpbnV4L3J3bG9jay5oCj4gKysrIGIvaW5jbHVkZS9saW51eC9yd2xvY2suaAo+
IEBAIC0zMCwzMSArMzAsMTYgQEAgZG8gewkJCQkJCQkJXAo+Cj4gICNpZmRlZiBDT05GSUdfREVC
VUdfU1BJTkxPQ0sKPiAgIGV4dGVybiB2b2lkIGRvX3Jhd19yZWFkX2xvY2socndsb2NrX3QgKmxv
Y2spIF9fYWNxdWlyZXMobG9jayk7Cj4gLSNkZWZpbmUgZG9fcmF3X3JlYWRfbG9ja19mbGFncyhs
b2NrLCBmbGFncykgZG9fcmF3X3JlYWRfbG9jayhsb2NrKQo+ICAgZXh0ZXJuIGludCBkb19yYXdf
cmVhZF90cnlsb2NrKHJ3bG9ja190ICpsb2NrKTsKPiAgIGV4dGVybiB2b2lkIGRvX3Jhd19yZWFk
X3VubG9jayhyd2xvY2tfdCAqbG9jaykgX19yZWxlYXNlcyhsb2NrKTsKPiAgIGV4dGVybiB2b2lk
IGRvX3Jhd193cml0ZV9sb2NrKHJ3bG9ja190ICpsb2NrKSBfX2FjcXVpcmVzKGxvY2spOwo+IC0j
ZGVmaW5lIGRvX3Jhd193cml0ZV9sb2NrX2ZsYWdzKGxvY2ssIGZsYWdzKSBkb19yYXdfd3JpdGVf
bG9jayhsb2NrKQo+ICAgZXh0ZXJuIGludCBkb19yYXdfd3JpdGVfdHJ5bG9jayhyd2xvY2tfdCAq
bG9jayk7Cj4gICBleHRlcm4gdm9pZCBkb19yYXdfd3JpdGVfdW5sb2NrKHJ3bG9ja190ICpsb2Nr
KSBfX3JlbGVhc2VzKGxvY2spOwo+ICAjZWxzZQo+IC0KPiAtI2lmbmRlZiBhcmNoX3JlYWRfbG9j
a19mbGFncwo+IC0jIGRlZmluZSBhcmNoX3JlYWRfbG9ja19mbGFncyhsb2NrLCBmbGFncykJYXJj
aF9yZWFkX2xvY2sobG9jaykKPiAtI2VuZGlmCj4gLQo+IC0jaWZuZGVmIGFyY2hfd3JpdGVfbG9j
a19mbGFncwo+IC0jIGRlZmluZSBhcmNoX3dyaXRlX2xvY2tfZmxhZ3MobG9jaywgZmxhZ3MpCWFy
Y2hfd3JpdGVfbG9jayhsb2NrKQo+IC0jZW5kaWYKPiAtCj4gICMgZGVmaW5lIGRvX3Jhd19yZWFk
X2xvY2socndsb2NrKQlkbyB7X19hY3F1aXJlKGxvY2spOyBhcmNoX3JlYWRfbG9jaygmKHJ3bG9j
ayktPnJhd19sb2NrKTsgfSB3aGlsZSAoMCkKPiAtIyBkZWZpbmUgZG9fcmF3X3JlYWRfbG9ja19m
bGFncyhsb2NrLCBmbGFncykgXAo+IC0JCWRvIHtfX2FjcXVpcmUobG9jayk7IGFyY2hfcmVhZF9s
b2NrX2ZsYWdzKCYobG9jayktPnJhd19sb2NrLCAqKGZsYWdzKSk7IH0gd2hpbGUgKDApCj4gICMg
ZGVmaW5lIGRvX3Jhd19yZWFkX3RyeWxvY2socndsb2NrKQlhcmNoX3JlYWRfdHJ5bG9jaygmKHJ3
bG9jayktPnJhd19sb2NrKQo+ICAjIGRlZmluZSBkb19yYXdfcmVhZF91bmxvY2socndsb2NrKQlk
byB7YXJjaF9yZWFkX3VubG9jaygmKHJ3bG9jayktPnJhd19sb2NrKTsgX19yZWxlYXNlKGxvY2sp
OyB9IHdoaWxlICgwKQo+ICAjIGRlZmluZSBkb19yYXdfd3JpdGVfbG9jayhyd2xvY2spCWRvIHtf
X2FjcXVpcmUobG9jayk7IGFyY2hfd3JpdGVfbG9jaygmKHJ3bG9jayktPnJhd19sb2NrKTsgfSB3
aGlsZSAoMCkKPiAtIyBkZWZpbmUgZG9fcmF3X3dyaXRlX2xvY2tfZmxhZ3MobG9jaywgZmxhZ3Mp
IFwKPiAtCQlkbyB7X19hY3F1aXJlKGxvY2spOyBhcmNoX3dyaXRlX2xvY2tfZmxhZ3MoJihsb2Nr
KS0+cmF3X2xvY2ssICooZmxhZ3MpKTsgfSB3aGlsZSAoMCkKPiAgIyBkZWZpbmUgZG9fcmF3X3dy
aXRlX3RyeWxvY2socndsb2NrKQlhcmNoX3dyaXRlX3RyeWxvY2soJihyd2xvY2spLT5yYXdfbG9j
aykKPiAgIyBkZWZpbmUgZG9fcmF3X3dyaXRlX3VubG9jayhyd2xvY2spCWRvIHthcmNoX3dyaXRl
X3VubG9jaygmKHJ3bG9jayktPnJhd19sb2NrKTsgX19yZWxlYXNlKGxvY2spOyB9IHdoaWxlICgw
KQo+ICAjZW5kaWYKPiBkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5o
IGIvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5oCj4gaW5kZXggYWJmYjUzYWIxMWJlLi5m
MWRiNmYxN2M0ZmIgMTAwNjQ0Cj4gLS0tIGEvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5o
Cj4gKysrIGIvaW5jbHVkZS9saW51eC9yd2xvY2tfYXBpX3NtcC5oCj4gQEAgLTE1Nyw4ICsxNTcs
NyBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgX19yYXdfcmVhZF9sb2NrX2lycXNhdmUo
cndsb2NrX3QgKmxvY2spCj4gIAlsb2NhbF9pcnFfc2F2ZShmbGFncyk7Cj4gIAlwcmVlbXB0X2Rp
c2FibGUoKTsKPiAgCXJ3bG9ja19hY3F1aXJlX3JlYWQoJmxvY2stPmRlcF9tYXAsIDAsIDAsIF9S
RVRfSVBfKTsKPiAtCUxPQ0tfQ09OVEVOREVEX0ZMQUdTKGxvY2ssIGRvX3Jhd19yZWFkX3RyeWxv
Y2ssIGRvX3Jhd19yZWFkX2xvY2ssCj4gLQkJCSAgICAgZG9fcmF3X3JlYWRfbG9ja19mbGFncywg
JmZsYWdzKTsKPiArCUxPQ0tfQ09OVEVOREVEKGxvY2ssIGRvX3Jhd19yZWFkX3RyeWxvY2ssIGRv
X3Jhd19yZWFkX2xvY2spOwo+ICAJcmV0dXJuIGZsYWdzOwo+ICB9Cj4KPiBAQCAtMTg0LDggKzE4
Myw3IEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBfX3Jhd193cml0ZV9sb2NrX2lycXNh
dmUocndsb2NrX3QgKmxvY2spCj4gIAlsb2NhbF9pcnFfc2F2ZShmbGFncyk7Cj4gIAlwcmVlbXB0
X2Rpc2FibGUoKTsKPiAgCXJ3bG9ja19hY3F1aXJlKCZsb2NrLT5kZXBfbWFwLCAwLCAwLCBfUkVU
X0lQXyk7Cj4gLQlMT0NLX0NPTlRFTkRFRF9GTEFHUyhsb2NrLCBkb19yYXdfd3JpdGVfdHJ5bG9j
aywgZG9fcmF3X3dyaXRlX2xvY2ssCj4gLQkJCSAgICAgZG9fcmF3X3dyaXRlX2xvY2tfZmxhZ3Ms
ICZmbGFncyk7Cj4gKwlMT0NLX0NPTlRFTkRFRChsb2NrLCBkb19yYXdfd3JpdGVfdHJ5bG9jaywg
ZG9fcmF3X3dyaXRlX2xvY2spOwo+ICAJcmV0dXJuIGZsYWdzOwo+ICB9Cj4KPiBkaWZmIC0tZ2l0
IGEvaW5jbHVkZS9saW51eC9zcGlubG9jay5oIGIvaW5jbHVkZS9saW51eC9zcGlubG9jay5oCj4g
aW5kZXggYzA0ZTk5ZWRmZTkyLi40MGU0NjdjZGVlMmQgMTAwNjQ0Cj4gLS0tIGEvaW5jbHVkZS9s
aW51eC9zcGlubG9jay5oCj4gKysrIGIvaW5jbHVkZS9saW51eC9zcGlubG9jay5oCj4gQEAgLTE3
Niw3ICsxNzYsNiBAQCBkbyB7CQkJCQkJCQkJXAo+Cj4gICNpZmRlZiBDT05GSUdfREVCVUdfU1BJ
TkxPQ0sKPiAgIGV4dGVybiB2b2lkIGRvX3Jhd19zcGluX2xvY2socmF3X3NwaW5sb2NrX3QgKmxv
Y2spIF9fYWNxdWlyZXMobG9jayk7Cj4gLSNkZWZpbmUgZG9fcmF3X3NwaW5fbG9ja19mbGFncyhs
b2NrLCBmbGFncykgZG9fcmF3X3NwaW5fbG9jayhsb2NrKQo+ICAgZXh0ZXJuIGludCBkb19yYXdf
c3Bpbl90cnlsb2NrKHJhd19zcGlubG9ja190ICpsb2NrKTsKPiAgIGV4dGVybiB2b2lkIGRvX3Jh
d19zcGluX3VubG9jayhyYXdfc3BpbmxvY2tfdCAqbG9jaykgX19yZWxlYXNlcyhsb2NrKTsKPiAg
I2Vsc2UKPiBAQCAtMTg3LDE4ICsxODYsNiBAQCBzdGF0aWMgaW5saW5lIHZvaWQgZG9fcmF3X3Nw
aW5fbG9jayhyYXdfc3BpbmxvY2tfdCAqbG9jaykgX19hY3F1aXJlcyhsb2NrKQo+ICAJbW1pb3di
X3NwaW5fbG9jaygpOwo+ICB9Cj4KPiAtI2lmbmRlZiBhcmNoX3NwaW5fbG9ja19mbGFncwo+IC0j
ZGVmaW5lIGFyY2hfc3Bpbl9sb2NrX2ZsYWdzKGxvY2ssIGZsYWdzKQlhcmNoX3NwaW5fbG9jayhs
b2NrKQo+IC0jZW5kaWYKPiAtCj4gLXN0YXRpYyBpbmxpbmUgdm9pZAo+IC1kb19yYXdfc3Bpbl9s
b2NrX2ZsYWdzKHJhd19zcGlubG9ja190ICpsb2NrLCB1bnNpZ25lZCBsb25nICpmbGFncykgX19h
Y3F1aXJlcyhsb2NrKQo+IC17Cj4gLQlfX2FjcXVpcmUobG9jayk7Cj4gLQlhcmNoX3NwaW5fbG9j
a19mbGFncygmbG9jay0+cmF3X2xvY2ssICpmbGFncyk7Cj4gLQltbWlvd2Jfc3Bpbl9sb2NrKCk7
Cj4gLX0KPiAtCj4gIHN0YXRpYyBpbmxpbmUgaW50IGRvX3Jhd19zcGluX3RyeWxvY2socmF3X3Nw
aW5sb2NrX3QgKmxvY2spCj4gIHsKPiAgCWludCByZXQgPSBhcmNoX3NwaW5fdHJ5bG9jaygmKGxv
Y2spLT5yYXdfbG9jayk7Cj4gZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfYXBp
X3NtcC5oIGIvaW5jbHVkZS9saW51eC9zcGlubG9ja19hcGlfc21wLmgKPiBpbmRleCA2YjhlMWEw
YjEzN2IuLjUxZmEwZGFiNjhjNCAxMDA2NDQKPiAtLS0gYS9pbmNsdWRlL2xpbnV4L3NwaW5sb2Nr
X2FwaV9zbXAuaAo+ICsrKyBiL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfYXBpX3NtcC5oCj4gQEAg
LTEwOCwxNiArMTA4LDcgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9fcmF3X3NwaW5f
bG9ja19pcnFzYXZlKHJhd19zcGlubG9ja190ICpsb2NrKQo+ICAJbG9jYWxfaXJxX3NhdmUoZmxh
Z3MpOwo+ICAJcHJlZW1wdF9kaXNhYmxlKCk7Cj4gIAlzcGluX2FjcXVpcmUoJmxvY2stPmRlcF9t
YXAsIDAsIDAsIF9SRVRfSVBfKTsKPiAtCS8qCj4gLQkgKiBPbiBsb2NrZGVwIHdlIGRvbnQgd2Fu
dCB0aGUgaGFuZC1jb2RlZCBpcnEtZW5hYmxlIG9mCj4gLQkgKiBkb19yYXdfc3Bpbl9sb2NrX2Zs
YWdzKCkgY29kZSwgYmVjYXVzZSBsb2NrZGVwIGFzc3VtZXMKPiAtCSAqIHRoYXQgaW50ZXJydXB0
cyBhcmUgbm90IHJlLWVuYWJsZWQgZHVyaW5nIGxvY2stYWNxdWlyZToKPiAtCSAqLwo+IC0jaWZk
ZWYgQ09ORklHX0xPQ0tERVAKPiAgCUxPQ0tfQ09OVEVOREVEKGxvY2ssIGRvX3Jhd19zcGluX3Ry
eWxvY2ssIGRvX3Jhd19zcGluX2xvY2spOwo+IC0jZWxzZQo+IC0JZG9fcmF3X3NwaW5fbG9ja19m
bGFncyhsb2NrLCAmZmxhZ3MpOwo+IC0jZW5kaWYKPiAgCXJldHVybiBmbGFnczsKPiAgfQo+Cj4g
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfdXAuaCBiL2luY2x1ZGUvbGludXgv
c3BpbmxvY2tfdXAuaAo+IGluZGV4IDBhYzkxMTJjMWJiZS4uMTY1MjEwNzRiNmY3IDEwMDY0NAo+
IC0tLSBhL2luY2x1ZGUvbGludXgvc3BpbmxvY2tfdXAuaAo+ICsrKyBiL2luY2x1ZGUvbGludXgv
c3BpbmxvY2tfdXAuaAo+IEBAIC02Miw3ICs2Miw2IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBhcmNo
X3NwaW5fdW5sb2NrKGFyY2hfc3BpbmxvY2tfdCAqbG9jaykKPiAgI2RlZmluZSBhcmNoX3NwaW5f
aXNfbG9ja2VkKGxvY2spCSgodm9pZCkobG9jayksIDApCj4gIC8qIGZvciBzY2hlZC9jb3JlLmMg
YW5kIGtlcm5lbF9sb2NrLmM6ICovCj4gICMgZGVmaW5lIGFyY2hfc3Bpbl9sb2NrKGxvY2spCQlk
byB7IGJhcnJpZXIoKTsgKHZvaWQpKGxvY2spOyB9IHdoaWxlICgwKQo+IC0jIGRlZmluZSBhcmNo
X3NwaW5fbG9ja19mbGFncyhsb2NrLCBmbGFncykJZG8geyBiYXJyaWVyKCk7ICh2b2lkKShsb2Nr
KTsgfSB3aGlsZSAoMCkKPiAgIyBkZWZpbmUgYXJjaF9zcGluX3VubG9jayhsb2NrKQlkbyB7IGJh
cnJpZXIoKTsgKHZvaWQpKGxvY2spOyB9IHdoaWxlICgwKQo+ICAjIGRlZmluZSBhcmNoX3NwaW5f
dHJ5bG9jayhsb2NrKQkoeyBiYXJyaWVyKCk7ICh2b2lkKShsb2NrKTsgMTsgfSkKPiAgI2VuZGlm
IC8qIERFQlVHX1NQSU5MT0NLICovCj4gZGlmZiAtLWdpdCBhL2tlcm5lbC9sb2NraW5nL3NwaW5s
b2NrLmMgYi9rZXJuZWwvbG9ja2luZy9zcGlubG9jay5jCj4gaW5kZXggYzU4MzBjZmEzNzlhLi5i
NTYyZjkyODkzNzIgMTAwNjQ0Cj4gLS0tIGEva2VybmVsL2xvY2tpbmcvc3BpbmxvY2suYwo+ICsr
KyBiL2tlcm5lbC9sb2NraW5nL3NwaW5sb2NrLmMKPiBAQCAtMzc4LDggKzM3OCw3IEBAIHVuc2ln
bmVkIGxvbmcgX19sb2NrZnVuYyBfcmF3X3NwaW5fbG9ja19pcnFzYXZlX25lc3RlZChyYXdfc3Bp
bmxvY2tfdCAqbG9jaywKPiAgCWxvY2FsX2lycV9zYXZlKGZsYWdzKTsKPiAgCXByZWVtcHRfZGlz
YWJsZSgpOwo+ICAJc3Bpbl9hY3F1aXJlKCZsb2NrLT5kZXBfbWFwLCBzdWJjbGFzcywgMCwgX1JF
VF9JUF8pOwo+IC0JTE9DS19DT05URU5ERURfRkxBR1MobG9jaywgZG9fcmF3X3NwaW5fdHJ5bG9j
aywgZG9fcmF3X3NwaW5fbG9jaywKPiAtCQkJCWRvX3Jhd19zcGluX2xvY2tfZmxhZ3MsICZmbGFn
cyk7Cj4gKwlMT0NLX0NPTlRFTkRFRChsb2NrLCBkb19yYXdfc3Bpbl90cnlsb2NrLCBkb19yYXdf
c3Bpbl9sb2NrKTsKPiAgCXJldHVybiBmbGFnczsKPiAgfQo+ICBFWFBPUlRfU1lNQk9MKF9yYXdf
c3Bpbl9sb2NrX2lycXNhdmVfbmVzdGVkKTsKPgoKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3Rz
LmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3Bl
bnJpc2MK
