Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 7B83AEAEB2
	for <lists+openrisc@lfdr.de>; Thu, 31 Oct 2019 12:21:28 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 5B63F20771;
	Thu, 31 Oct 2019 12:21:28 +0100 (CET)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 2307820736
 for <openrisc@lists.librecores.org>; Tue, 29 Oct 2019 07:49:37 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=1Ko5vX482tR0uQnQI1MnV6/Z/jjaFodCfNm4px/nvU8=; b=nYbODC0yYGVUM6bEVWymqF39zP
 GmadlvLrGZb3UuUdvA6VdrZCC/nfjZ8idoXgOd7kTi+OxrX40qF9g/e4NHrXahzmj6eGREnTdN1lw
 JsjXTRgazbmU1PJ2vLBU4XQoDQVQ8ZRNcetC+HQFmc3xRTXxvLU7UHeixei9jqeFFTbEAHq/e22v0
 Olzh9HYozyKQbx/lANp87sqc3TRPs6haNYIpl3wahuhrhHr78BUXb53LEzl08AuXyysJWjaI7U7Gg
 pvoyEQgsLG3Dcxt6znYvitWkzq5fu3iHSWKwxWf3RUVVQbRniefmZ7vpIzZGGcnBh7l5z7BcmF76f
 yKs/W5Vg==;
Received: from [2001:4bb8:18c:c7d:c70:4a89:bc61:2] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iPLJd-0003v8-1x; Tue, 29 Oct 2019 06:49:17 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Tue, 29 Oct 2019 07:48:26 +0100
Message-Id: <20191029064834.23438-14-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191029064834.23438-1-hch@lst.de>
References: <20191029064834.23438-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Thu, 31 Oct 2019 12:21:18 +0100
Subject: [OpenRISC] [PATCH 13/21] m68k: rename __iounmap and mark it static
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, linux-mips@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-mtd@lists.infradead.org,
 linux-alpha@vger.kernel.org, sparclinux@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, linux-riscv@lists.infradead.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

bTY4ayB1c2VzIF9faW91bm1hcCBhcyB0aGUgbmFtZSBmb3IgYW4gaW50ZXJuYWwgaGVscGVyIHRo
YXQgaXMgb25seQp1c2VkIGZvciBzb21lIENQVSB0eXBlcy4gIE1hcmsgaXQgc3RhdGljLCBnaXZl
IGl0IGEgYmV0dGVyIG5hbWUKYW5kIG1vdmUgaXQgYXJvdW5kIGEgYml0IHRvIGF2b2lkIGEgZm9y
d2FyZCBkZWNsYXJhdGlvbi4KClNpZ25lZC1vZmYtYnk6IENocmlzdG9waCBIZWxsd2lnIDxoY2hA
bHN0LmRlPgotLS0KIGFyY2gvbTY4ay9pbmNsdWRlL2FzbS9rbWFwLmggfCAgIDEgLQogYXJjaC9t
NjhrL21tL2ttYXAuYyAgICAgICAgICB8IDEwMCArKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0t
LS0tLS0tLQogMiBmaWxlcyBjaGFuZ2VkLCA1MCBpbnNlcnRpb25zKCspLCA1MSBkZWxldGlvbnMo
LSkKCmRpZmYgLS1naXQgYS9hcmNoL202OGsvaW5jbHVkZS9hc20va21hcC5oIGIvYXJjaC9tNjhr
L2luY2x1ZGUvYXNtL2ttYXAuaAppbmRleCA0MjFiNmM5Yzc2OWQuLjU1OWNiOTFiZWRlMSAxMDA2
NDQKLS0tIGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL2ttYXAuaAorKysgYi9hcmNoL202OGsvaW5j
bHVkZS9hc20va21hcC5oCkBAIC0yMCw3ICsyMCw2IEBAIGV4dGVybiB2b2lkIF9faW9tZW0gKl9f
aW9yZW1hcCh1bnNpZ25lZCBsb25nIHBoeXNhZGRyLCB1bnNpZ25lZCBsb25nIHNpemUsCiAJCQkg
ICAgICAgaW50IGNhY2hlZmxhZyk7CiAjZGVmaW5lIGlvdW5tYXAgaW91bm1hcAogZXh0ZXJuIHZv
aWQgaW91bm1hcCh2b2lkIF9faW9tZW0gKmFkZHIpOwotZXh0ZXJuIHZvaWQgX19pb3VubWFwKHZv
aWQgKmFkZHIsIHVuc2lnbmVkIGxvbmcgc2l6ZSk7CiAKICNkZWZpbmUgaW9yZW1hcCBpb3JlbWFw
CiBzdGF0aWMgaW5saW5lIHZvaWQgX19pb21lbSAqaW9yZW1hcCh1bnNpZ25lZCBsb25nIHBoeXNh
ZGRyLCB1bnNpZ25lZCBsb25nIHNpemUpCmRpZmYgLS1naXQgYS9hcmNoL202OGsvbW0va21hcC5j
IGIvYXJjaC9tNjhrL21tL2ttYXAuYwppbmRleCA0MGEzYjMyN2RhMDcuLjIzZjk0NjZhYWJiNSAx
MDA2NDQKLS0tIGEvYXJjaC9tNjhrL21tL2ttYXAuYworKysgYi9hcmNoL202OGsvbW0va21hcC5j
CkBAIC01NCw2ICs1NCw1NSBAQCBzdGF0aWMgaW5saW5lIHZvaWQgZnJlZV9pb19hcmVhKHZvaWQg
KmFkZHIpCiAKIHN0YXRpYyBzdHJ1Y3Qgdm1fc3RydWN0ICppb2xpc3Q7CiAKKy8qCisgKiBfX2Zy
ZWVfaW9fYXJlYSB1bm1hcHMgbmVhcmx5IGV2ZXJ5dGhpbmcsIHNvIGJlIGNhcmVmdWwKKyAqIEN1
cnJlbnRseSBpdCBkb2Vzbid0IGZyZWUgcG9pbnRlci9wYWdlIHRhYmxlcyBhbnltb3JlIGJ1dCB0
aGlzCisgKiB3YXNuJ3QgdXNlZCBhbnl3YXkgYW5kIG1pZ2h0IGJlIGFkZGVkIGxhdGVyLgorICov
CitzdGF0aWMgdm9pZCBfX2ZyZWVfaW9fYXJlYSh2b2lkICphZGRyLCB1bnNpZ25lZCBsb25nIHNp
emUpCit7CisJdW5zaWduZWQgbG9uZyB2aXJ0YWRkciA9ICh1bnNpZ25lZCBsb25nKWFkZHI7CisJ
cGdkX3QgKnBnZF9kaXI7CisJcG1kX3QgKnBtZF9kaXI7CisJcHRlX3QgKnB0ZV9kaXI7CisKKwl3
aGlsZSAoKGxvbmcpc2l6ZSA+IDApIHsKKwkJcGdkX2RpciA9IHBnZF9vZmZzZXRfayh2aXJ0YWRk
cik7CisJCWlmIChwZ2RfYmFkKCpwZ2RfZGlyKSkgeworCQkJcHJpbnRrKCJpb3VubWFwOiBiYWQg
cGdkKCUwOGx4KVxuIiwgcGdkX3ZhbCgqcGdkX2RpcikpOworCQkJcGdkX2NsZWFyKHBnZF9kaXIp
OworCQkJcmV0dXJuOworCQl9CisJCXBtZF9kaXIgPSBwbWRfb2Zmc2V0KHBnZF9kaXIsIHZpcnRh
ZGRyKTsKKworCQlpZiAoQ1BVX0lTXzAyMF9PUl8wMzApIHsKKwkJCWludCBwbWRfb2ZmID0gKHZp
cnRhZGRyL1BUUlRSRUVTSVpFKSAmIDE1OworCQkJaW50IHBtZF90eXBlID0gcG1kX2Rpci0+cG1k
W3BtZF9vZmZdICYgX0RFU0NUWVBFX01BU0s7CisKKwkJCWlmIChwbWRfdHlwZSA9PSBfUEFHRV9Q
UkVTRU5UKSB7CisJCQkJcG1kX2Rpci0+cG1kW3BtZF9vZmZdID0gMDsKKwkJCQl2aXJ0YWRkciAr
PSBQVFJUUkVFU0laRTsKKwkJCQlzaXplIC09IFBUUlRSRUVTSVpFOworCQkJCWNvbnRpbnVlOwor
CQkJfSBlbHNlIGlmIChwbWRfdHlwZSA9PSAwKQorCQkJCWNvbnRpbnVlOworCQl9CisKKwkJaWYg
KHBtZF9iYWQoKnBtZF9kaXIpKSB7CisJCQlwcmludGsoImlvdW5tYXA6IGJhZCBwbWQgKCUwOGx4
KVxuIiwgcG1kX3ZhbCgqcG1kX2RpcikpOworCQkJcG1kX2NsZWFyKHBtZF9kaXIpOworCQkJcmV0
dXJuOworCQl9CisJCXB0ZV9kaXIgPSBwdGVfb2Zmc2V0X2tlcm5lbChwbWRfZGlyLCB2aXJ0YWRk
cik7CisKKwkJcHRlX3ZhbCgqcHRlX2RpcikgPSAwOworCQl2aXJ0YWRkciArPSBQQUdFX1NJWkU7
CisJCXNpemUgLT0gUEFHRV9TSVpFOworCX0KKworCWZsdXNoX3RsYl9hbGwoKTsKK30KKwogc3Rh
dGljIHN0cnVjdCB2bV9zdHJ1Y3QgKmdldF9pb19hcmVhKHVuc2lnbmVkIGxvbmcgc2l6ZSkKIHsK
IAl1bnNpZ25lZCBsb25nIGFkZHI7CkBAIC05MCw3ICsxMzksNyBAQCBzdGF0aWMgaW5saW5lIHZv
aWQgZnJlZV9pb19hcmVhKHZvaWQgKmFkZHIpCiAJCWlmICh0bXAtPmFkZHIgPT0gYWRkcikgewog
CQkJKnAgPSB0bXAtPm5leHQ7CiAJCQkvKiByZW1vdmUgZ2FwIGFkZGVkIGluIGdldF9pb19hcmVh
KCkgKi8KLQkJCV9faW91bm1hcCh0bXAtPmFkZHIsIHRtcC0+c2l6ZSAtIElPX1NJWkUpOworCQkJ
X19mcmVlX2lvX2FyZWEodG1wLT5hZGRyLCB0bXAtPnNpemUgLSBJT19TSVpFKTsKIAkJCWtmcmVl
KHRtcCk7CiAJCQlyZXR1cm47CiAJCX0KQEAgLTI0OSw1NSArMjk4LDYgQEAgdm9pZCBpb3VubWFw
KHZvaWQgX19pb21lbSAqYWRkcikKIH0KIEVYUE9SVF9TWU1CT0woaW91bm1hcCk7CiAKLS8qCi0g
KiBfX2lvdW5tYXAgdW5tYXBzIG5lYXJseSBldmVyeXRoaW5nLCBzbyBiZSBjYXJlZnVsCi0gKiBD
dXJyZW50bHkgaXQgZG9lc24ndCBmcmVlIHBvaW50ZXIvcGFnZSB0YWJsZXMgYW55bW9yZSBidXQg
dGhpcwotICogd2Fzbid0IHVzZWQgYW55d2F5IGFuZCBtaWdodCBiZSBhZGRlZCBsYXRlci4KLSAq
Lwotdm9pZCBfX2lvdW5tYXAodm9pZCAqYWRkciwgdW5zaWduZWQgbG9uZyBzaXplKQotewotCXVu
c2lnbmVkIGxvbmcgdmlydGFkZHIgPSAodW5zaWduZWQgbG9uZylhZGRyOwotCXBnZF90ICpwZ2Rf
ZGlyOwotCXBtZF90ICpwbWRfZGlyOwotCXB0ZV90ICpwdGVfZGlyOwotCi0Jd2hpbGUgKChsb25n
KXNpemUgPiAwKSB7Ci0JCXBnZF9kaXIgPSBwZ2Rfb2Zmc2V0X2sodmlydGFkZHIpOwotCQlpZiAo
cGdkX2JhZCgqcGdkX2RpcikpIHsKLQkJCXByaW50aygiaW91bm1hcDogYmFkIHBnZCglMDhseClc
biIsIHBnZF92YWwoKnBnZF9kaXIpKTsKLQkJCXBnZF9jbGVhcihwZ2RfZGlyKTsKLQkJCXJldHVy
bjsKLQkJfQotCQlwbWRfZGlyID0gcG1kX29mZnNldChwZ2RfZGlyLCB2aXJ0YWRkcik7Ci0KLQkJ
aWYgKENQVV9JU18wMjBfT1JfMDMwKSB7Ci0JCQlpbnQgcG1kX29mZiA9ICh2aXJ0YWRkci9QVFJU
UkVFU0laRSkgJiAxNTsKLQkJCWludCBwbWRfdHlwZSA9IHBtZF9kaXItPnBtZFtwbWRfb2ZmXSAm
IF9ERVNDVFlQRV9NQVNLOwotCi0JCQlpZiAocG1kX3R5cGUgPT0gX1BBR0VfUFJFU0VOVCkgewot
CQkJCXBtZF9kaXItPnBtZFtwbWRfb2ZmXSA9IDA7Ci0JCQkJdmlydGFkZHIgKz0gUFRSVFJFRVNJ
WkU7Ci0JCQkJc2l6ZSAtPSBQVFJUUkVFU0laRTsKLQkJCQljb250aW51ZTsKLQkJCX0gZWxzZSBp
ZiAocG1kX3R5cGUgPT0gMCkKLQkJCQljb250aW51ZTsKLQkJfQotCi0JCWlmIChwbWRfYmFkKCpw
bWRfZGlyKSkgewotCQkJcHJpbnRrKCJpb3VubWFwOiBiYWQgcG1kICglMDhseClcbiIsIHBtZF92
YWwoKnBtZF9kaXIpKTsKLQkJCXBtZF9jbGVhcihwbWRfZGlyKTsKLQkJCXJldHVybjsKLQkJfQot
CQlwdGVfZGlyID0gcHRlX29mZnNldF9rZXJuZWwocG1kX2RpciwgdmlydGFkZHIpOwotCi0JCXB0
ZV92YWwoKnB0ZV9kaXIpID0gMDsKLQkJdmlydGFkZHIgKz0gUEFHRV9TSVpFOwotCQlzaXplIC09
IFBBR0VfU0laRTsKLQl9Ci0KLQlmbHVzaF90bGJfYWxsKCk7Ci19Ci0KIC8qCiAgKiBTZXQgbmV3
IGNhY2hlIG1vZGUgZm9yIHNvbWUga2VybmVsIGFkZHJlc3Mgc3BhY2UuCiAgKiBUaGUgY2FsbGVy
IG11c3QgcHVzaCBkYXRhIGZvciB0aGF0IHJhbmdlIGl0c2VsZiwgaWYgc3VjaCBkYXRhIG1heSBh
bHJlYWR5Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVz
Lm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
