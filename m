Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 3BC2B1B20C8
	for <lists+openrisc@lfdr.de>; Tue, 21 Apr 2020 10:02:06 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id E672E20B07;
	Tue, 21 Apr 2020 10:02:05 +0200 (CEST)
Received: from mail-wm1-f65.google.com (mail-wm1-f65.google.com
 [209.85.128.65])
 by mail.librecores.org (Postfix) with ESMTPS id 5EDDA20A9C
 for <openrisc@lists.librecores.org>; Sat, 18 Apr 2020 22:19:50 +0200 (CEST)
Received: by mail-wm1-f65.google.com with SMTP id e26so6491393wmk.5
 for <openrisc@lists.librecores.org>; Sat, 18 Apr 2020 13:19:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=arista.com; s=googlenew;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=jZu2SG2CC0n9e6bY0OW4NrZkgCkX838M7bfDqNvau2s=;
 b=NtWMGxm5Z5KL60IcA5G6+HePF4i0/+hybqLX4fP2XMV4pk2XK/oJgFwY9QTP7vjDcS
 5rwxVW1+vHKUvZUBrN7R1Jm5os3oCs5jvHX41VQ5J2K9Y+GI66NfmYOUEkhyxC+rjZg7
 2GfsY1ICyicOKD9p22ci+KNPTEheYKJMkOJUNpoxfOXV+MY7Nfvt7+EMftdBGU8cAV7Z
 Hc5O1LA9T9GP/asJoaPI+CZlJFXlG6W/t2lsj8SpH+N8Lys5LxM4YnccVfQhfWVsNDrM
 t9gj0wsuKk0zluKdzjzbtHVloZk5oDJD4LvQFErIsDvme+gEa5teq5SfPrxjPtC9exZQ
 O63A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=jZu2SG2CC0n9e6bY0OW4NrZkgCkX838M7bfDqNvau2s=;
 b=GVWaea1m8GCaVFOUkr9PsqHtZ0qKoOx+maMgFRBu6VesA9xZhmLZdkBW4GN3Sloehp
 NXkGM4rV4z4LsxjWOo2xNnLn8sOYb9Sdvt+fnzLEvbg+fIISG8LIRKnc/D1qCi16Amxi
 mA5oN6lapA2KKpuyndXXA2WPq5BCQVNAWNWV6rI0ljhHXbYvRyiyNAOHLMXKGbbwqEYb
 KfyXbVEM5+DOL9k9sMw2o4VxV/UI1f04d4cdLxMaWUdE2shaDO6AaO34KfO0qjo3mxB+
 Ji95ZivHzfUMepyVRESSBBS0VRl2zdv7ZyIgPVidwwxtVqyfjWIly8DhIU6WJ1Fu0tD4
 66kw==
X-Gm-Message-State: AGi0Pub4vxZho09nQal20W2U9Q+iRQ9Fpspj+Xvb3jpbyzv1uRz4eENc
 qF7ivjn9BmxA3YXfhZeUwTtwUQ==
X-Google-Smtp-Source: APiQypIu9Ehl1Z9anj4NXd+uZnvSgH6ch0y3g33ZANXWX1DjUHPmY1LH5q1VbQfnVR586X/qqwr8lw==
X-Received: by 2002:a05:600c:210c:: with SMTP id
 u12mr10004137wml.135.1587241189836; 
 Sat, 18 Apr 2020 13:19:49 -0700 (PDT)
Received: from localhost.localdomain ([2a02:8084:e84:2480:228:f8ff:fe6f:83a8])
 by smtp.gmail.com with ESMTPSA id
 m1sm31735255wro.64.2020.04.18.13.19.45
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Sat, 18 Apr 2020 13:19:48 -0700 (PDT)
From: Dmitry Safonov <dima@arista.com>
To: linux-kernel@vger.kernel.org
Date: Sat, 18 Apr 2020 21:18:54 +0100
Message-Id: <20200418201944.482088-1-dima@arista.com>
X-Mailer: git-send-email 2.26.0
MIME-Version: 1.0
X-Mailman-Approved-At: Tue, 21 Apr 2020 10:01:35 +0200
Subject: [OpenRISC] [PATCHv3 00/50] Add log level to show_stack()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Juri Lelli <juri.lelli@redhat.com>, linux-sh@vger.kernel.org,
 Catalin Marinas <catalin.marinas@arm.com>, Ben Segall <bsegall@google.com>,
 Guo Ren <guoren@kernel.org>, Pavel Machek <pavel@ucw.cz>,
 Vincent Guittot <vincent.guittot@linaro.org>,
 Paul Burton <paulburton@kernel.org>, Dmitry Safonov <dima@arista.com>,
 Michael Ellerman <mpe@ellerman.id.au>, Mel Gorman <mgorman@suse.de>,
 Jiri Slaby <jslaby@suse.com>, Matt Turner <mattst88@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp, Len Brown <len.brown@intel.com>,
 linux-pm@vger.kernel.org, Heiko Carstens <heiko.carstens@de.ibm.com>,
 linux-um@lists.infradead.org, Thomas Gleixner <tglx@linutronix.de>,
 Dietmar Eggemann <dietmar.eggemann@arm.com>,
 Greg Kroah-Hartman <gregkh@linuxfoundation.org>,
 "Rafael J. Wysocki" <rjw@rjwysocki.net>, Ralf Baechle <ralf@linux-mips.org>,
 Paul Mackerras <paulus@samba.org>, Andrew Morton <akpm@linux-foundation.org>,
 linux-ia64@vger.kernel.org, Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>,
 James Hogan <jhogan@kernel.org>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Vincent Chen <deanbo422@gmail.com>,
 Ingo Molnar <mingo@kernel.org>, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-hexagon@vger.kernel.org, Helge Deller <deller@gmx.de>,
 "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>,
 linux-xtensa@linux-xtensa.org, Vasily Gorbik <gor@linux.ibm.com>,
 Aurelien Jacquiot <jacquiot.aurelien@gmail.com>,
 linux-m68k@lists.linux-m68k.org, linux-arm-kernel@lists.infradead.org,
 Chris Zankel <chris@zankel.net>, Tony Luck <tony.luck@intel.com>,
 Douglas Anderson <dianders@chromium.org>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>,
 Dmitry Safonov <0x7f454c46@gmail.com>, Will Deacon <will@kernel.org>,
 Daniel Thompson <daniel.thompson@linaro.org>,
 Brian Cain <bcain@codeaurora.org>,
 Christian Borntraeger <borntraeger@de.ibm.com>,
 kgdb-bugreport@lists.sourceforge.net, linux-snps-arc@lists.infradead.org,
 Fenghua Yu <fenghua.yu@intel.com>, Borislav Petkov <bp@alien8.de>,
 Jeff Dike <jdike@addtoit.com>, Steven Rostedt <rostedt@goodmis.org>,
 Ivan Kokshaysky <ink@jurassic.park.msu.ru>, Greentime Hu <green.hu@gmail.com>,
 Guan Xuetao <gxt@pku.edu.cn>, linux-parisc@vger.kernel.org,
 linux-alpha@vger.kernel.org, Ley Foon Tan <lftan@altera.com>,
 "David S. Miller" <davem@davemloft.net>, Rich Felker <dalias@libc.org>,
 Petr Mladek <pmladek@suse.com>, Peter Zijlstra <peterz@infradead.org>,
 "H. Peter Anvin" <hpa@zytor.com>, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org,
 Anton Ivanov <anton.ivanov@cambridgegreys.com>,
 Jonas Bonn <jonas@southpole.se>, Richard Weinberger <richard@nod.at>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 clang-built-linux@googlegroups.com, Ingo Molnar <mingo@redhat.com>,
 Mark Salter <msalter@redhat.com>, Albert Ou <aou@eecs.berkeley.edu>,
 openrisc@lists.librecores.org, Paul Walmsley <paul.walmsley@sifive.com>,
 Michal Simek <monstr@monstr.eu>, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, Sergey Senozhatsky <sergey.senozhatsky@gmail.com>,
 Palmer Dabbelt <palmer@dabbelt.com>, Jason Wessel <jason.wessel@windriver.com>,
 nios2-dev@lists.rocketboards.org, linuxppc-dev@lists.ozlabs.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Q2hhbmdlcyB0byB2MzoKLSBDb2xsZWN0ZWQgbW9yZSBhcmNoaXRlY3R1YWwgQWNrcyBhbmQgUmV2
aWV3ZWQtYnkKLSBGaXhlZCBjb21waWxhdGlvbiBvbiBzcGFyYzY0CgpDaGFuZ2VzIHRvIHYyOgot
IFJlbW92ZWQgZXhjZXNzaXZlIHByX2NvbnQoIlxuIikgKG5pdHMgYnkgU2Vub3poYXRza3kpCi0g
TGVhdmUgYmFja3RyYWNlIGRlYnVnZ2luZyBtZXNzYWdlcyB3aXRoIHByX2RlYnVnKCkKICAobm90
ZWQgYnkgUnVzc2VsbCBLaW5nIGFuZCBXaWxsIERlYWNvbikKLSBDb3JyZWN0IG1pY3JvYmxhemVf
dW53aW5kX2lubmVyKCkgZGVjbGFyYXRpb24KICAoVGhhbmtzIHRvIE1pY2hhbCBTaW1layBhbmQg
a2J1aWxkIHRlc3Qgcm9ib3QpCi0gRml4IGNvcHknbidwYXN0ZSB0eXBvIGluIHNob3dfc3RhY2tf
bG9nbHZsKCkgZm9yIHNwYXJjCiAgKGtidWlsZCByb2JvdCkKLSBGaXggYmFja3RyYWNlIG91dHB1
dCBvbiB4dGVuc2EKICAoVGhhbmtzIE1heCBGaWxpcHBvdikKLSBBZGQgbG9nbGV2ZWwgdG8gc2hv
d19zdGFjaygpIG9uIHMzOTAgKGtidWlsZCByb2JvdCkKLSBDb2xsZWN0ZWQgYWxsIFJldmlld2Vk
LWJ5IGFuZCBBY2tlZC1ieSAodGhhbmtzISkKCnYyOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9s
aW51eC1yaXNjdi8yMDIwMDMxNjE0MzkxNi4xOTU2MDgtMS1kaW1hQGFyaXN0YS5jb20vCnYxOiBo
dHRwczovL2xvcmUua2VybmVsLm9yZy9saW51eC1yaXNjdi8yMDE5MTEwNjAzMDU0Mi44Njg1NDEt
MS1kaW1hQGFyaXN0YS5jb20vCgpBZGQgbG9nIGxldmVsIGFyZ3VtZW50IHRvIHNob3dfc3RhY2so
KS4KRG9uZSBpbiB0aHJlZSBzdGFnZXM6CjEuIEludHJvZHVjaW5nIHNob3dfc3RhY2tfbG9nbHZs
KCkgZm9yIGV2ZXJ5IGFyY2hpdGVjdHVyZQoyLiBNaWdyYXRpbmcgb2xkIHVzZXJzIHdpdGggYW4g
ZXhwbGljaXQgbG9nIGxldmVsCjMuIFJlbmFtaW5nIHNob3dfc3RhY2tfbG9nbHZsKCkgaW50byBz
aG93X3N0YWNrKCkKCkp1c3RpZmljYXRpb246Cm8gSXQncyBhIGRlc2lnbiBtaXN0YWtlIHRvIG1v
dmUgYSBidXNpbmVzcy1sb2dpYyBkZWNpc2lvbgogIGludG8gcGxhdGZvcm0gcmVhbGl6YXRpb24g
ZGV0YWlsLgpvIEkgaGF2ZSBjdXJyZW50bHkgdHdvIHBhdGNoZXMgc2V0cyB0aGF0IHdvdWxkIGJl
bmVmaXQgZnJvbSB0aGlzIHdvcms6CiAgUmVtb3ZpbmcgY29uc29sZV9sb2dsZXZlbCBqdW1wcyBp
biBzeXNycSBkcml2ZXIgWzFdCiAgSHVuZyB0YXNrIHdhcm5pbmcgYmVmb3JlIHBhbmljIFsyXSAt
IHN1Z2dlc3RlZCBieSBUZXRzdW8gKGJ1dCBoZQogIHByb2JhYmx5IGRpZG4ndCByZWFsaXNlIHdo
YXQgaXQgd291bGQgaW52b2x2ZSkuCm8gV2hpbGUgZG9pbmcgKDEpLCAoMikgdGhlIGJhY2t0cmFj
ZXMgd2VyZSBhZGp1c3RlZCB0byBoZWFkZXJzCiAgYW5kIG90aGVyIG1lc3NhZ2VzIGZvciBlYWNo
IHNpdHVhdGlvbiAtIHNvIHRoZXJlIHdvbid0IGJlIGEgc2l0dWF0aW9uCiAgd2hlbiB0aGUgYmFj
a3RyYWNlIGlzIHByaW50ZWQsIGJ1dCB0aGUgaGVhZGVycyBhcmUgbWlzc2luZyBiZWNhdXNlCiAg
dGhleSBoYXZlIGxlc3NlciBsb2cgbGV2ZWwgKG9yIHRoZSByZXZlcnNlKS4KbyBBcyB0aGUgcmVz
dWx0IGluICgyKSBwbGF5cyB3aXRoIGNvbnNvbGVfbG9nbGV2ZWwgZm9yIGtkYiBhcmUgcmVtb3Zl
ZC4KClRoZSBsZWFzdCBpbXBvcnRhbnQgZm9yIHVwc3RyZWFtLCBidXQgbWF5YmUgc3RpbGwgd29y
dGggdG8gbm90ZSB0aGF0CmV2ZXJ5IGNvbXBhbnkgSSd2ZSB3b3JrZWQgaW4gc28gZmFyIGhhZCBh
biBvZmYtbGlzdCBwYXRjaCB0byBwcmludApiYWNrdHJhY2Ugd2l0aCB0aGUgbmVlZGVkIGxvZyBs
ZXZlbCAoYnV0IG9ubHkgZm9yIHRoZSBhcmNoaXRlY3R1cmUgdGhleQpjYXJlZCBhYm91dCkuCklm
IHlvdSBoYXZlIG90aGVyIGlkZWFzIGhvdyB5b3Ugd2lsbCBiZW5lZml0IGZyb20gc2hvd19zdGFj
aygpIHdpdGgKYSBsb2cgbGV2ZWwgLSBwbGVhc2UsIHJlcGx5IHRvIHRoaXMgY292ZXIgbGV0dGVy
LgoKU2VlIGFsc28gZGlzY3Vzc2lvbiBvbiB2MToKaHR0cHM6Ly9sb3JlLmtlcm5lbC5vcmcvbGlu
dXgtcmlzY3YvMjAxOTExMDYwODM1MzguejVubHB1ZjY0Y2lneGlnaEBwYXRod2F5LnN1c2UuY3ov
CgpDYzogQW5kcmV3IE1vcnRvbiA8YWtwbUBsaW51eC1mb3VuZGF0aW9uLm9yZz4KQ2M6IEdyZWcg
S3JvYWgtSGFydG1hbiA8Z3JlZ2toQGxpbnV4Zm91bmRhdGlvbi5vcmc+CkNjOiBJbmdvIE1vbG5h
ciA8bWluZ29Aa2VybmVsLm9yZz4KQ2M6IEppcmkgU2xhYnkgPGpzbGFieUBzdXNlLmNvbT4KQ2M6
IFBldHIgTWxhZGVrIDxwbWxhZGVrQHN1c2UuY29tPgpDYzogU2VyZ2V5IFNlbm96aGF0c2t5IDxz
ZXJnZXkuc2Vub3poYXRza3lAZ21haWwuY29tPgpDYzogU3RldmVuIFJvc3RlZHQgPHJvc3RlZHRA
Z29vZG1pcy5vcmc+CkNjOiBUZXRzdW8gSGFuZGEgPHBlbmd1aW4ta2VybmVsQEktbG92ZS5TQUtV
UkEubmUuanA+CgpUaGFua3MsCkRtaXRyeQoKWzFdOiBodHRwczovL2xvcmUua2VybmVsLm9yZy9s
a21sLzIwMTkwNTI4MDAyNDEyLjE2MjUtMS1kaW1hQGFyaXN0YS5jb20vVC8jdQpbMl06IGh0dHBz
Oi8vbGttbC5rZXJuZWwub3JnL3IvNDFmZDc2NTItZGYxZi0yNmY2LWFiYTAtYjg3ZWJhZTA3ZGI2
QGktbG92ZS5zYWt1cmEubmUuanAKCkRtaXRyeSBTYWZvbm92ICg1MCk6CiAga2FsbHN5bXMvcHJp
bnRrOiBBZGQgbG9nbHZsIHRvIHByaW50X2lwX3N5bSgpCiAgYWxwaGE6IEFkZCBzaG93X3N0YWNr
X2xvZ2x2bCgpCiAgYXJjOiBBZGQgc2hvd19zdGFja19sb2dsdmwoKQogIGFybS9hc206IEFkZCBs
b2dsdmwgdG8gY19iYWNrdHJhY2UoKQogIGFybTogQWRkIGxvZ2x2bCB0byB1bndpbmRfYmFja3Ry
YWNlKCkKICBhcm06IEFkZCBsb2dsdmwgdG8gZHVtcF9iYWNrdHJhY2UoKQogIGFybTogV2lyZSB1
cCBkdW1wX2JhY2t0cmFjZV97ZW50cnksc3RtfQogIGFybTogQWRkIHNob3dfc3RhY2tfbG9nbHZs
KCkKICBhcm02NDogQWRkIGxvZ2x2bCB0byBkdW1wX2JhY2t0cmFjZSgpCiAgYXJtNjQ6IEFkZCBz
aG93X3N0YWNrX2xvZ2x2bCgpCiAgYzZ4OiBBZGQgc2hvd19zdGFja19sb2dsdmwoKQogIGNza3k6
IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgaDgzMDA6IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgp
CiAgaGV4YWdvbjogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICBpYTY0OiBQYXNzIGxvZyBsZXZl
bCBhcyBhcmcgaW50byBpYTY0X2RvX3Nob3dfc3RhY2soKQogIGlhNjQ6IEFkZCBzaG93X3N0YWNr
X2xvZ2x2bCgpCiAgbTY4azogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICBtaWNyb2JsYXplOiBB
ZGQgbG9nbHZsIHRvIG1pY3JvYmxhemVfdW53aW5kX2lubmVyKCkKICBtaWNyb2JsYXplOiBBZGQg
bG9nbHZsIHRvIG1pY3JvYmxhemVfdW53aW5kKCkKICBtaWNyb2JsYXplOiBBZGQgc2hvd19zdGFj
a19sb2dsdmwoKQogIG1pcHM6IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgbmRzMzI6IEFkZCBz
aG93X3N0YWNrX2xvZ2x2bCgpCiAgbmlvczI6IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgb3Bl
bnJpc2M6IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgcGFyaXNjOiBBZGQgc2hvd19zdGFja19s
b2dsdmwoKQogIHBvd2VycGM6IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgcmlzY3Y6IEFkZCBz
aG93X3N0YWNrX2xvZ2x2bCgpCiAgczM5MDogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICBzaDog
QWRkIGxvZ2x2bCB0byBkdW1wX21lbSgpCiAgc2g6IFJlbW92ZSBuZWVkbGVzcyBwcmludGsoKQog
IHNoOiBBZGQgbG9nbHZsIHRvIHByaW50a19hZGRyZXNzKCkKICBzaDogQWRkIGxvZ2x2bCB0byBz
aG93X3RyYWNlKCkKICBzaDogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICBzcGFyYzogQWRkIHNo
b3dfc3RhY2tfbG9nbHZsKCkKICB1bS9zeXNycTogUmVtb3ZlIG5lZWRsZXNzIHZhcmlhYmxlIHNw
CiAgdW06IEFkZCBzaG93X3N0YWNrX2xvZ2x2bCgpCiAgdW5pY29yZTMyOiBSZW1vdmUgdW51c2Vk
IHBtb2RlIGFyZ3VtZW50IGluIGNfYmFja3RyYWNlKCkKICB1bmljb3JlMzI6IEFkZCBsb2dsdmwg
dG8gY19iYWNrdHJhY2UoKQogIHVuaWNvcmUzMjogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICB4
ODY6IEFkZCBtaXNzaW5nIGNvbnN0IHF1YWxpZmllcnMgZm9yIGxvZ19sdmwKICB4ODY6IEFkZCBz
aG93X3N0YWNrX2xvZ2x2bCgpCiAgeHRlbnNhOiBBZGQgbG9nbHZsIHRvIHNob3dfdHJhY2UoKQog
IHh0ZW5zYTogQWRkIHNob3dfc3RhY2tfbG9nbHZsKCkKICBzeXNycTogVXNlIHNob3dfc3RhY2tf
bG9nbHZsKCkKICB4ODYvYW1kX2dhcnQ6IFByaW50IHN0YWNrdHJhY2UgZm9yIGEgbGVhayB3aXRo
IEtFUk5fRVJSCiAgcG93ZXI6IFVzZSBzaG93X3N0YWNrX2xvZ2x2bCgpCiAga2RiOiBEb24ndCBw
bGF5IHdpdGggY29uc29sZV9sb2dsZXZlbAogIHNjaGVkOiBQcmludCBzdGFjayB0cmFjZSB3aXRo
IEtFUk5fSU5GTwogIGtlcm5lbDogVXNlIHNob3dfc3RhY2tfbG9nbHZsKCkKICBrZXJuZWw6IFJl
bmFtZSBzaG93X3N0YWNrX2xvZ2x2bCgpID0+IHNob3dfc3RhY2soKQoKIGFyY2gvYWxwaGEva2Vy
bmVsL3RyYXBzLmMgICAgICAgICAgICB8IDIyICsrKysrKystLS0tLS0tLQogYXJjaC9hcmMvaW5j
bHVkZS9hc20vYnVnLmggICAgICAgICAgIHwgIDMgKystCiBhcmNoL2FyYy9rZXJuZWwvc3RhY2t0
cmFjZS5jICAgICAgICAgfCAxNyArKysrKysrLS0tLS0KIGFyY2gvYXJjL2tlcm5lbC90cm91Ymxl
c2hvb3QuYyAgICAgICB8ICAyICstCiBhcmNoL2FybS9pbmNsdWRlL2FzbS9idWcuaCAgICAgICAg
ICAgfCAgMyArKy0KIGFyY2gvYXJtL2luY2x1ZGUvYXNtL3RyYXBzLmggICAgICAgICB8ICAzICsr
LQogYXJjaC9hcm0vaW5jbHVkZS9hc20vdW53aW5kLmggICAgICAgIHwgIDMgKystCiBhcmNoL2Fy
bS9rZXJuZWwvdHJhcHMuYyAgICAgICAgICAgICAgfCAzOSArKysrKysrKysrKysrKystLS0tLS0t
LS0tLS0KIGFyY2gvYXJtL2tlcm5lbC91bndpbmQuYyAgICAgICAgICAgICB8ICA1ICsrLS0KIGFy
Y2gvYXJtL2xpYi9iYWNrdHJhY2UtY2xhbmcuUyAgICAgICB8ICA5ICsrKysrLS0KIGFyY2gvYXJt
L2xpYi9iYWNrdHJhY2UuUyAgICAgICAgICAgICB8IDE0ICsrKysrKystLS0KIGFyY2gvYXJtNjQv
aW5jbHVkZS9hc20vc3RhY2t0cmFjZS5oICB8ICAzICsrLQogYXJjaC9hcm02NC9rZXJuZWwvcHJv
Y2Vzcy5jICAgICAgICAgIHwgIDIgKy0KIGFyY2gvYXJtNjQva2VybmVsL3RyYXBzLmMgICAgICAg
ICAgICB8IDE3ICsrKysrKy0tLS0tLQogYXJjaC9jNngva2VybmVsL3RyYXBzLmMgICAgICAgICAg
ICAgIHwgMTYgKysrKysrLS0tLS0KIGFyY2gvY3NreS9rZXJuZWwvZHVtcHN0YWNrLmMgICAgICAg
ICB8ICA5ICsrKystLS0KIGFyY2gvY3NreS9rZXJuZWwvcHRyYWNlLmMgICAgICAgICAgICB8ICA0
ICstLQogYXJjaC9oODMwMC9rZXJuZWwvdHJhcHMuYyAgICAgICAgICAgIHwgMTIgKysrKy0tLS0t
CiBhcmNoL2hleGFnb24va2VybmVsL3RyYXBzLmMgICAgICAgICAgfCAyNSArKysrKysrKy0tLS0t
LS0tLQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3B0cmFjZS5oICAgICAgIHwgIDEgLQogYXJjaC9p
YTY0L2tlcm5lbC9tY2EuYyAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gvaWE2NC9rZXJuZWwv
cHJvY2Vzcy5jICAgICAgICAgICB8IDE3ICsrKysrKy0tLS0tLQogYXJjaC9tNjhrL2tlcm5lbC90
cmFwcy5jICAgICAgICAgICAgIHwgMTMgKysrKy0tLS0tCiBhcmNoL21pY3JvYmxhemUvaW5jbHVk
ZS9hc20vdW53aW5kLmggfCAgMyArKy0KIGFyY2gvbWljcm9ibGF6ZS9rZXJuZWwvc3RhY2t0cmFj
ZS5jICB8ICA0ICstLQogYXJjaC9taWNyb2JsYXplL2tlcm5lbC90cmFwcy5jICAgICAgIHwgMTIg
KysrKy0tLS0tCiBhcmNoL21pY3JvYmxhemUva2VybmVsL3Vud2luZC5jICAgICAgfCA0MCArKysr
KysrKysrKysrKysrKy0tLS0tLS0tLS0tCiBhcmNoL21pcHMva2VybmVsL3RyYXBzLmMgICAgICAg
ICAgICAgfCAzNSArKysrKysrKysrKystLS0tLS0tLS0tLS0KIGFyY2gvbmRzMzIva2VybmVsL3Ry
YXBzLmMgICAgICAgICAgICB8IDE1ICsrKysrKy0tLS0tCiBhcmNoL25pb3MyL2tlcm5lbC90cmFw
cy5jICAgICAgICAgICAgfCAxNyArKysrKystLS0tLS0KIGFyY2gvb3BlbnJpc2Mva2VybmVsL3Ry
YXBzLmMgICAgICAgICB8IDEyICsrKysrLS0tLQogYXJjaC9wYXJpc2Mva2VybmVsL3RyYXBzLmMg
ICAgICAgICAgIHwgMjQgKysrKysrKystLS0tLS0tLS0KIGFyY2gvcG93ZXJwYy9rZXJuZWwvcHJv
Y2Vzcy5jICAgICAgICB8IDE1ICsrKysrKy0tLS0tCiBhcmNoL3Bvd2VycGMva2VybmVsL3N0YWNr
dHJhY2UuYyAgICAgfCAgMiArLQogYXJjaC9yaXNjdi9rZXJuZWwvc3RhY2t0cmFjZS5jICAgICAg
IHwgIDkgKysrKy0tLQogYXJjaC9zMzkwL2tlcm5lbC9kdW1wc3RhY2suYyAgICAgICAgIHwgMTMg
KysrKy0tLS0tCiBhcmNoL3NoL2luY2x1ZGUvYXNtL2tkZWJ1Zy5oICAgICAgICAgfCAgNiArKyst
LQogYXJjaC9zaC9pbmNsdWRlL2FzbS9wcm9jZXNzb3JfMzIuaCAgIHwgIDIgKy0KIGFyY2gvc2gv
a2VybmVsL2R1bXBzdGFjay5jICAgICAgICAgICB8IDM2ICsrKysrKysrKysrKy0tLS0tLS0tLS0t
LS0KIGFyY2gvc2gva2VybmVsL3Byb2Nlc3NfMzIuYyAgICAgICAgICB8ICAyICstCiBhcmNoL3No
L2tlcm5lbC9wcm9jZXNzXzY0LmMgICAgICAgICAgfCAgMyArLS0KIGFyY2gvc2gva2VybmVsL3Ry
YXBzLmMgICAgICAgICAgICAgICB8ICA0ICstLQogYXJjaC9zaC9tbS9mYXVsdC5jICAgICAgICAg
ICAgICAgICAgIHwgIDIgKy0KIGFyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3NfMzIuYyAgICAgICB8
IDEwICsrKy0tLS0KIGFyY2gvc3BhcmMva2VybmVsL3Byb2Nlc3NfNjQuYyAgICAgICB8ICAyICst
CiBhcmNoL3NwYXJjL2tlcm5lbC90cmFwc182NC5jICAgICAgICAgfCAgOSArKysrLS0tCiBhcmNo
L3VtL2RyaXZlcnMvbWNvbnNvbGVfa2Vybi5jICAgICAgfCAgMiArLQogYXJjaC91bS9rZXJuZWwv
c3lzcnEuYyAgICAgICAgICAgICAgIHwgMjMgKysrKysrKystLS0tLS0tLQogYXJjaC91bmljb3Jl
MzIva2VybmVsL3NldHVwLmggICAgICAgIHwgIDIgKy0KIGFyY2gvdW5pY29yZTMyL2tlcm5lbC90
cmFwcy5jICAgICAgICB8IDM0ICsrKysrKysrKysrLS0tLS0tLS0tLS0tCiBhcmNoL3VuaWNvcmUz
Mi9saWIvYmFja3RyYWNlLlMgICAgICAgfCAyNCArKysrKysrKysrKy0tLS0tLQogYXJjaC94ODYv
aW5jbHVkZS9hc20vc3RhY2t0cmFjZS5oICAgIHwgIDIgKy0KIGFyY2gveDg2L2tlcm5lbC9hbWRf
Z2FydF82NC5jICAgICAgICB8ICAyICstCiBhcmNoL3g4Ni9rZXJuZWwvZHVtcHN0YWNrLmMgICAg
ICAgICAgfCAgOSArKysrLS0tCiBhcmNoL3h0ZW5zYS9rZXJuZWwvdHJhcHMuYyAgICAgICAgICAg
fCAyMiArKysrKysrKy0tLS0tLS0KIGRyaXZlcnMvYmFzZS9wb3dlci9tYWluLmMgICAgICAgICAg
ICB8ICAyICstCiBkcml2ZXJzL3R0eS9zeXNycS5jICAgICAgICAgICAgICAgICAgfCAgMiArLQog
aW5jbHVkZS9saW51eC9rYWxsc3ltcy5oICAgICAgICAgICAgIHwgIDQgKy0tCiBpbmNsdWRlL2xp
bnV4L3NjaGVkL2RlYnVnLmggICAgICAgICAgfCAgMyArKy0KIGtlcm5lbC9kZWJ1Zy9rZGIva2Ri
X2J0LmMgICAgICAgICAgICB8IDE1ICsrKysrKy0tLS0tCiBrZXJuZWwvbG9ja2luZy9sb2NrZGVw
LmMgICAgICAgICAgICAgfCAgNCArLS0KIGtlcm5lbC9sb2NraW5nL3J0bXV0ZXgtZGVidWcuYyAg
ICAgICB8ICAyICstCiBrZXJuZWwvc2NoZWQvY29yZS5jICAgICAgICAgICAgICAgICAgfCAgOCAr
KystLS0KIGtlcm5lbC90cmFjZS9mdHJhY2UuYyAgICAgICAgICAgICAgICB8ICA4ICsrKy0tLQog
bGliL2R1bXBfc3RhY2suYyAgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIHRvb2xzL2luY2x1
ZGUvbGludXgva2FsbHN5bXMuaCAgICAgICB8ICAyICstCiA2NiBmaWxlcyBjaGFuZ2VkLCAzNzUg
aW5zZXJ0aW9ucygrKSwgMzE1IGRlbGV0aW9ucygtKQoKLS0gCjIuMjYuMAoKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0
Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5v
cmcvbGlzdGluZm8vb3BlbnJpc2MK
