Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 7627344F0F6
	for <lists+openrisc@lfdr.de>; Sat, 13 Nov 2021 04:17:01 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 4ED84242B0;
	Sat, 13 Nov 2021 04:17:01 +0100 (CET)
Received: from mail-pl1-f178.google.com (mail-pl1-f178.google.com
 [209.85.214.178])
 by mail.librecores.org (Postfix) with ESMTPS id E4F64242A8
 for <openrisc@lists.librecores.org>; Sat, 13 Nov 2021 04:16:59 +0100 (CET)
Received: by mail-pl1-f178.google.com with SMTP id k4so9881004plx.8
 for <openrisc@lists.librecores.org>; Fri, 12 Nov 2021 19:16:59 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=1KlRWb7RDIoyIMjfRtJogItwbdhKxRx7tNjXvN6NHQE=;
 b=myyVPRCVAbXW9vfkvCSiq86lm6RoWhn9O1kpX3uFFQdz1BvYBgEhYB3ip/Xus4NMxB
 zDVfRbTWoUZW9Nffc6mjz571/Y5ti33gf06aHZyVRG9/jV3aPTG+F+eKjORdHWDqW575
 XAS7yXtW8MFqVrIoeW0YsygqIU9yyVVAj9pSeYBvsg7ZQ2g+BO77MDC081D8pP8G/bzR
 8R3Mqd1wteu2E0pszJJReKFYp5mhb16KEA6zznufZr9Xm5v6tAH1d0Mo2NcYbzcKYBVu
 6Y6qKC7Nc4++1xw8B3nrvg/OJVGE5O0jUrtUPajvZSG/dVZKR+grH9CGXhN8F6zb7OfO
 L19A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=1KlRWb7RDIoyIMjfRtJogItwbdhKxRx7tNjXvN6NHQE=;
 b=wPWfIGuAQuLMBqXD1NymjSzbpi3ixjbFiibeCHIicjSEWhVIv2UG9vUryZY10b9pcF
 eYsEyaHz87EHaXeudIRVmFU3HTELv/yvIz0JtwagD5Bcyn9mH3Yk3CFXEuiH3MvCIHMS
 3LyAJ0J1b3/uX84CducYYSlowL/j/8/gIfNXTCEbF+jI81959G6xvGxzm3rgfYwUIsEk
 pmj6GDnnGs81MGH784MufAvYtXRDw7JElbj813cq6hbe100YPPywx5HwhKzQobGvo/Tv
 KAYy6niWXpUAX4sPJ9RZexE7yxbYnn6u3tVe+T4+4qZRutjaJhoIldSijCOFpjyfXtvs
 IZUw==
X-Gm-Message-State: AOAM531okDpu9Y5bTnXvhcyaOxXwj24qQ3UmBD97scTAL5E0Zu1IVy3A
 ktUbeMHZG3I3LOaIsFD4C0Eu3wI7exg=
X-Google-Smtp-Source: ABdhPJyWptNOI/y+QJo1sa+j3zHWGRjc8OGGpiF3PGHYXyrIfxpIShqLtYdZYd5EpiFireL4w/tHVQ==
X-Received: by 2002:a17:90a:bb0d:: with SMTP id
 u13mr23404590pjr.158.1636773418446; 
 Fri, 12 Nov 2021 19:16:58 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id k14sm8284609pff.6.2021.11.12.19.16.57
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 12 Nov 2021 19:16:57 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Sat, 13 Nov 2021 12:16:31 +0900
Message-Id: <20211113031639.2402161-6-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20211113031639.2402161-1-shorne@gmail.com>
References: <20211113031639.2402161-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 05/13] or1k: Thread Local Storage support
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T3BlblJJU0MgaW5jbHVkZXMgMyBUTFMgYWRkcmVzc2luZyBtb2RlbHMuICBMb2NhbCBEeW5hbWlj
IG9wdGltaXphdGlvbnMKYXJlIG5vdCBkb25lIGluIHRoZSBsaW5rZXIgYW5kIHRoZXJlZm9yZSB1
c2UgdGhlIHNhbWUgY29kZSBzZXF1ZW5jZXMgYXMKR2xvYmFsIER5bmFtaWMuCi0tLQogc3lzZGVw
cy9vcjFrL2RsLXRscy5oICAgICAgICAgICAgIHwgIDI2ICsrKysKIHN5c2RlcHMvb3Ixay9saWJj
LXRscy5jICAgICAgICAgICB8ICAzMiArKysrKwogc3lzZGVwcy9vcjFrL25wdGwvdGNiLW9mZnNl
dHMuc3ltIHwgICA2ICsKIHN5c2RlcHMvb3Ixay9ucHRsL3Rscy5oICAgICAgICAgICB8IDE4OSAr
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysKIHN5c2RlcHMvb3Ixay9zdGFja2luZm8uaCAg
ICAgICAgICB8ICAzMyArKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgMjg2IGluc2VydGlvbnMoKykK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL29yMWsvZGwtdGxzLmgKIGNyZWF0ZSBtb2RlIDEw
MDY0NCBzeXNkZXBzL29yMWsvbGliYy10bHMuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMv
b3Ixay9ucHRsL3RjYi1vZmZzZXRzLnN5bQogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvb3Ix
ay9ucHRsL3Rscy5oCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVwcy9vcjFrL3N0YWNraW5mby5o
CgpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL2RsLXRscy5oIGIvc3lzZGVwcy9vcjFrL2RsLXRs
cy5oCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLmYyNTY0NWM3MTUKLS0t
IC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvZGwtdGxzLmgKQEAgLTAsMCArMSwyNiBAQAor
LyogQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLgorCisg
ICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBD
IExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29y
CisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UgYXMKKyAgIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3Vu
ZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLjEgb2YgdGhlCisgICBMaWNlbnNlLCBvciAoYXQgeW91
ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBk
aXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJ
VEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YK
KyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4g
IFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBk
ZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUg
TGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExp
YnJhcnk7IGlmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAg
Ki8KKworLyogVHlwZSB1c2VkIGZvciB0aGUgcmVwcmVzZW50YXRpb24gb2YgVExTIGluZm9ybWF0
aW9uIGluIHRoZSBHT1QuICAqLwordHlwZWRlZiBzdHJ1Y3QKK3sKKyAgdW5zaWduZWQgbG9uZyBp
bnQgdGlfbW9kdWxlOworICB1bnNpZ25lZCBsb25nIGludCB0aV9vZmZzZXQ7Cit9IHRsc19pbmRl
eDsKKworZXh0ZXJuIHZvaWQgKl9fdGxzX2dldF9hZGRyICh0bHNfaW5kZXggKnRpKTsKZGlmZiAt
LWdpdCBhL3N5c2RlcHMvb3Ixay9saWJjLXRscy5jIGIvc3lzZGVwcy9vcjFrL2xpYmMtdGxzLmMK
bmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uNDM1NzE5NDRkZAotLS0gL2Rl
di9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9saWJjLXRscy5jCkBAIC0wLDAgKzEsMzIgQEAKKy8q
IENvcHlyaWdodCAoQykgMjAyMSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKworICAg
VGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAgIFRoZSBHTlUgQyBM
aWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgor
ICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1
YmxpYyBMaWNlbnNlIGFzCisgICBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRh
dGlvbjsgZWl0aGVyIHZlcnNpb24gMi4xIG9mIHRoZQorICAgTGljZW5zZSwgb3IgKGF0IHlvdXIg
b3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlz
dHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRI
T1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisg
ICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBT
ZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0
YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExl
c3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJy
YXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4gICov
CisKKyNpbmNsdWRlIDxjc3UvbGliYy10bHMuYz4KKyNpbmNsdWRlIDxkbC10bHMuaD4KKworLyog
T24gT3BlblJJU0MsIGxpbmtlciBvcHRpbWl6YXRpb25zIGFyZSBub3QgcmVxdWlyZWQsIHNvIF9f
dGxzX2dldF9hZGRyCisgICBjYW4gYmUgY2FsbGVkIGV2ZW4gaW4gc3RhdGljYWxseSBsaW5rZWQg
YmluYXJpZXMuICBJbiB0aGlzIGNhc2UgbW9kdWxlCisgICBtdXN0IGJlIGFsd2F5cyAxIGFuZCBQ
VF9UTFMgc2VnbWVudCBleGlzdCBpbiB0aGUgYmluYXJ5LCBvdGhlcndpc2UgaXQKKyAgIHdvdWxk
IG5vdCBsaW5rLiAgKi8KKwordm9pZCAqCitfX3Rsc19nZXRfYWRkciAodGxzX2luZGV4ICp0aSkK
K3sKKyAgZHR2X3QgKmR0diA9IFRIUkVBRF9EVFYgKCk7CisgIHJldHVybiAoY2hhciAqKSBkdHZb
MV0ucG9pbnRlci52YWwgKyB0aS0+dGlfb2Zmc2V0OworfQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9v
cjFrL25wdGwvdGNiLW9mZnNldHMuc3ltIGIvc3lzZGVwcy9vcjFrL25wdGwvdGNiLW9mZnNldHMu
c3ltCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLjg2MDI1YTQwMmQKLS0t
IC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvbnB0bC90Y2Itb2Zmc2V0cy5zeW0KQEAgLTAs
MCArMSw2IEBACisjaW5jbHVkZSA8c3lzZGVwLmg+CisjaW5jbHVkZSA8dGxzLmg+CisKK01VTFRJ
UExFX1RIUkVBRFNfT0ZGU0VUICAgICAgICAgb2Zmc2V0b2YgKHN0cnVjdCBwdGhyZWFkLCBoZWFk
ZXIubXVsdGlwbGVfdGhyZWFkcykKK1RJRF9PRkZTRVQgICAgICAgICAgICAgICAgICAgICAgb2Zm
c2V0b2YgKHN0cnVjdCBwdGhyZWFkLCB0aWQpCitUUF9UT19QVEhSRUFEX09GRlNFVCAgICAgICAg
ICAgIC0oc2l6ZW9mIChzdHJ1Y3QgcHRocmVhZCkgKyBzaXplb2YgKHRjYmhlYWRfdCkpCmRpZmYg
LS1naXQgYS9zeXNkZXBzL29yMWsvbnB0bC90bHMuaCBiL3N5c2RlcHMvb3Ixay9ucHRsL3Rscy5o
Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLjdhZDRkMmMyODAKLS0tIC9k
ZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvbnB0bC90bHMuaApAQCAtMCwwICsxLDE4OSBAQAor
LyogRGVmaW5pdGlvbiBmb3IgdGhyZWFkLWxvY2FsIGRhdGEgaGFuZGxpbmcuICBOUFRML09wZW5S
SVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0
aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKwor
ICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1
dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVz
c2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBT
b2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNl
LCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMg
TGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVs
LAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQg
d2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VM
QVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5
IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGgg
dGhlIEdOVSBDIExpYnJhcnkuICBJZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcv
bGljZW5zZXMvPi4gICovCisKKyNpZm5kZWYgX1RMU19ICisjZGVmaW5lIF9UTFNfSCAgMQorCisj
aW5jbHVkZSA8ZGwtc3lzZGVwLmg+CisKKyNpZm5kZWYgX19BU1NFTUJMRVJfXworIyBpbmNsdWRl
IDxzdGRib29sLmg+CisjIGluY2x1ZGUgPHN0ZGRlZi5oPgorIyBpbmNsdWRlIDxzdGRpbnQuaD4K
KyMgaW5jbHVkZSA8ZGwtZHR2Lmg+CisKK3R5cGVkZWYgc3RydWN0Cit7CisgIGR0dl90ICpkdHY7
CisgIHZvaWQgKl9fcGFkZGluZ1szXTsgLyogVG8gbWFpbnRhaW4gMTYgYnl0ZSBwYWRkaW5nLCBu
ZWVkZWQgYnkgU1RBQ0tfQUxJR04uICAqLworfSB0Y2JoZWFkX3Q7CisKK3JlZ2lzdGVyIHRjYmhl
YWRfdCAqX190aHJlYWRfc2VsZiBfX2FzbV9fKCJyMTAiKTsKKworIyBkZWZpbmUgVExTX01VTFRJ
UExFX1RIUkVBRFNfSU5fVENCIDEKKworI2Vsc2UgLyogX19BU1NFTUJMRVJfXyAqLworIyBpbmNs
dWRlIDx0Y2Itb2Zmc2V0cy5oPgorI2VuZGlmIC8qIF9fQVNTRU1CTEVSX18gKi8KKworI2lmbmRl
ZiBfX0FTU0VNQkxFUl9fCisKKy8qIEdldCBzeXN0ZW0gY2FsbCBpbmZvcm1hdGlvbi4gICovCisj
IGluY2x1ZGUgPHN5c2RlcC5oPgorCisvKiBUaGUgVFAgcG9pbnRzIHRvIHRoZSBzdGFydCBvZiB0
aGUgVExTIGJsb2NrLgorICAgQXMgSSB1bmRlcnN0YW5kIGl0LCB0aGlzIGlzbid0IHN0cmljdGx5
IHRoYXQgIlRQIHBvaW50cyB0byBEVFYiIC0gaXQncworICAgbW9yZSB3aGVyZSB0byBwbGFjZSB0
aGUgVENCIGluIHRoZSBUTFMgYmxvY2suIFRoaXMgd2lsbCBwbGFjZSBpdCBpbgorICAgdGhlIGJl
Z2lubmluZy4KKworICAgTGF5b3V0OgorICAgICstLS0tLSstLS0tLSstLS0tLS0tLS0tLS0tLS0t
LS0tLS0tKworICAgIHwgUFJFIHwgVENCIHwgVExTIE1FTU9SWSAuLiAgICAgICAgfAorICAgICst
LS0tLSstLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKworCQkgXiByMTAgLyBUUAorCisgICBQ
UkUgaXMgdGhlIHN0cnVjdCBwdGhyZWFkIGRlc2NyaWJlZCBiZWxvdworICAgVENCIGlzIHRjYmhl
YWRfdAorICAgVExTIG1lbW9yeSBpcyB3aGVyZSB0aGUgVExTIHByb2dyYW0gc2VjdGlvbnMgYXJl
IGxvYWRlZAorCisgICBTZWUgX2RsX2FsbG9jYXRlX3Rsc19zdG9yYWdlIGFuZCBfX2xpYmNfc2V0
dXBfdGxzIGZvciBtb3JlIGluZm9ybWF0aW9uLiAgKi8KKworIyBkZWZpbmUgVExTX0RUVl9BVF9U
UCAgMQorIyBkZWZpbmUgVExTX1RDQl9BVF9UUCAgMAorCisvKiBHZXQgdGhlIHRocmVhZCBkZXNj
cmlwdG9yIGRlZmluaXRpb24uICAqLworIyBpbmNsdWRlIDxucHRsL2Rlc2NyLmg+CisKKy8qIFJl
cXVpcmVtZW50cyBmb3IgdGhlIFRDQi4gICovCisjIGRlZmluZSBUTFNfSU5JVF9UQ0JfU0laRSAg
ICBzaXplb2YgKHRjYmhlYWRfdCkKKyMgZGVmaW5lIFRMU19JTklUX1RDQl9BTElHTiAgIF9fYWxp
Z25vZl9fIChzdHJ1Y3QgcHRocmVhZCkKKworIyBkZWZpbmUgVExTX1RDQl9TSVpFICAgICAgICAg
c2l6ZW9mICh0Y2JoZWFkX3QpCisjIGRlZmluZSBUTFNfVENCX0FMSUdOICAgICAgICBfX2FsaWdu
b2ZfXyAoc3RydWN0IHB0aHJlYWQpCisKKy8qIFRoaXMgaXMgdGhlIHNpemUgb2YgdGhlIFRDQi4g
ICovCisKKy8qIFRoaXMgaXMgdGhlIHNpemUgd2UgbmVlZCBiZWZvcmUgVENCLgorICAgVG8gc3Vw
cG9ydCBUSFJFQURfR0VUTUVNIHdpdGggZnJpZW5kcyB3ZSB3YW50IHRvIGhhdmUgYQorICAgc3Ry
dWN0IHB0aHJlYWQgYXZhaWxhYmxlLgorICAgWWFuayBpdCBpbiBpbmZyb250IG9mIGV2ZXJ5dGhp
bmcsIEknbSBzdXJlIG5vYm9keSB3aWxsIG1pbmQuCisKKyAgIFRoaXMgbWVtb3J5IGlzIHJlYWxs
eSBhbGxvY2F0ZWQgUFJFIHRoZSBUTFMgYmxvY2ssIHNvIGl0J3MgcG9zc2libGUKKyAgIHRvIGRv
ICgoY2hhciopdGxzYmxvY2spIC0gVExTX1BSRV9UQ0JfU0laRSB0byBhY2Nlc3MgaXQuCisgICBU
aGlzIGlzIGRvbmUgZm9yIFRIUkVBRF9TRUxGLiAgKi8KKworIyBkZWZpbmUgVExTX1BSRV9UQ0Jf
U0laRSBzaXplb2YgKHN0cnVjdCBwdGhyZWFkKQorCisKKy8qIEluc3RhbGwgdGhlIGR0diBwb2lu
dGVyLgorICAgV2hlbiBjYWxsZWQsIGR0dnAgaXMgYSBwb2ludGVyIG5vdCB0aGUgRFRWIHBlciBz
YXkgKHdoaWNoIHNob3VsZCBzdGFydAorICAgd2l0aCB0aGUgZ2VuZXJhdGlvbiBjb3VudGVyKSBi
dXQgdG8gdGhlIGxlbmd0aCBvZiB0aGUgRFRWLgorICAgV2UgY2FuIGFsd2F5cyBpbmRleCB3aXRo
IC0xLCBzbyB3ZSBzdG9yZSBkdHZwWzFdLiAgKi8KKworIyBkZWZpbmUgSU5TVEFMTF9EVFYodGNi
cCwgZHR2cCkgXAorICAoKCh0Y2JoZWFkX3QgKikgKHRjYnApKS0+ZHR2ID0gKGR0dnApICsgMSkK
KworLyogSW5zdGFsbCBuZXcgZHR2IGZvciBjdXJyZW50IHRocmVhZAorICAgSW4gYSBsb2dpY2lh
bCB3b3JsZCBkdHYgaGVyZSB3b3VsZCBhbHNvIHBvaW50IHRvIHRoZSBsZW5ndGggb2YgdGhlIERU
Vi4KKyAgIEhvd2V2ZXIgaXQgZG9lcyBub3QsIHRoaXMgdGltZSBpdCBwb2ludHMgdG8gdGhlIGdl
bmVyYXRpb24gY291bnRlciwKKyAgIHNvIGp1c3Qgc3RvcmUgaXQuCisKKyAgIE5vdGU6IC0xIGlz
IHN0aWxsIHZhbGlkIGFuZCBjb250YWlucyB0aGUgbGVuZ3RoLiAgKi8KKworIyBkZWZpbmUgSU5T
VEFMTF9ORVdfRFRWKGR0dikgKFRIUkVBRF9EVFYoKSA9IChkdHYpKQorCisvKiBSZXR1cm4gZHR2
IG9mIGdpdmVuIHRocmVhZCBkZXNjcmlwdG9yLiAgKi8KKyMgZGVmaW5lIEdFVF9EVFYodGNicCkg
KCgodGNiaGVhZF90ICopICh0Y2JwKSktPmR0dikKKworLyogQ29kZSB0byBpbml0aWFsbHkgaW5p
dGlhbGl6ZSB0aGUgdGhyZWFkIHBvaW50ZXIuCisKKyAgIFNldCBUUCB0byB0aGUgYWRkcmVzcyBf
YWZ0ZXJfIHRjYmhlYWRfdC4gVGhpcyB3aWxsIGFsbG93IHVzCisgICB0byBjaGFuZ2UgdGhlIHNp
emUgb2YgdGNiaGVhZF90IHdpdGhvdXQgaGF2aW5nIHRvIHJlLWxpbmsgZXZlcnl0aGluZy4KKwor
ICAgVGhpcyBoYXMgdG8gcmV0dXJuIE5VTEwgb24gc3VjY2VzcyAob3IgYSBzdHJpbmcgd2l0aCB0
aGUgZmFpbHVyZSB0ZXh0KS4KKyAgIEl0J3MgaGFyZCB0byBmYWlsIHRoaXMsIHNvIHJldHVybiBO
VUxMIGFsd2F5cy4gICovCisKKyMgZGVmaW5lIFRMU19JTklUX1RQKHRjYnApIFwKKyAgKHtfX3Ro
cmVhZF9zZWxmID0gKCh0Y2JoZWFkX3QgKil0Y2JwICsgMSk7IE5VTEw7fSkKKworLyogVmFsdWUg
cGFzc2VkIHRvICdjbG9uZScgZm9yIGluaXRpYWxpemF0aW9uIG9mIHRoZSB0aHJlYWQgcmVnaXN0
ZXIuICAqLworIyBkZWZpbmUgVExTX0RFRklORV9JTklUX1RQKHRwLCBwZCkgXAorICB2b2lkICp0
cCA9ICgoY2hhciAqKSBwZCArIFRMU19QUkVfVENCX1NJWkUgKyBUTFNfSU5JVF9UQ0JfU0laRSkK
KworLyogUmV0dXJuIHRoZSBhZGRyZXNzIG9mIHRoZSBkdHYgZm9yIHRoZSBjdXJyZW50IHRocmVh
ZC4KKworICAgRGVyZWZlcmVuY2UgVFAsIG9mZnNldCB0byBkdHYgLSByZWFsbHkgc3RyYWlnaHRm
b3J3YXJkLgorICAgUmVtZW1iZXIgdGhhdCB3ZSBtYWRlIFRQIHBvaW50IHRvIGFmdGVyIHRjYiwg
c28gd2UgbmVlZCB0byByZXZlcnNlIHRoYXQuICAqLworCisjICBkZWZpbmUgVEhSRUFEX0RUVigp
IFwKKyAgKCgoKHRjYmhlYWRfdCAqKV9fdGhyZWFkX3NlbGYpLTEpLT5kdHYpCisKKy8qIFJldHVy
biB0aGUgdGhyZWFkIGRlc2NyaXB0b3IgZm9yIHRoZSBjdXJyZW50IHRocmVhZC4KKworICAgUmV0
dXJuIGEgcG9pbnRlciB0byB0aGUgVExTX1BSRSBhcmVhIHdoZXJlIHdlIGFsbG9jYXRlZCBzcGFj
ZSBmb3IKKyAgIGEgc3RydWN0IHB0aHJlYWQuIEFnYWluLCBUUCBwb2ludHMgdG8gYWZ0ZXIgdGNi
aGVhZF90LCBjb21wZW5zYXRlIHdpdGgKKyAgIFRMU19JTklUX1RDQl9TSVpFLgorCisgICBJIHJl
Z2FyZCB0aGlzIGlzIGEgc2VwZXJhdGUgc3lzdGVtIGZyb20gdGhlICJub3JtYWwiIFRMUy4gICov
CisKKyMgZGVmaW5lIFRIUkVBRF9TRUxGIFwKKyAgKChzdHJ1Y3QgcHRocmVhZCAqKSAoKGNoYXIg
KikgX190aHJlYWRfc2VsZiAtIFRMU19JTklUX1RDQl9TSVpFIFwKKyAgICAtIFRMU19QUkVfVENC
X1NJWkUpKQorCisvKiBNYWdpYyBmb3IgbGlidGhyZWFkX2RiIHRvIGtub3cgaG93IHRvIGRvIFRI
UkVBRF9TRUxGLiAgKi8KKworIyBkZWZpbmUgREJfVEhSRUFEX1NFTEYgXAorICBSRUdJU1RFUiAo
MzIsIDMyLCAxMCAqIDQsIC0gVExTX0lOSVRfVENCX1NJWkUgLSBUTFNfUFJFX1RDQl9TSVpFKQor
CisvKiBBY2Nlc3MgdG8gZGF0YSBpbiB0aGUgdGhyZWFkIGRlc2NyaXB0b3IgaXMgZWFzeS4gICov
CisKKyNkZWZpbmUgVEhSRUFEX0dFVE1FTShkZXNjciwgbWVtYmVyKSBcCisgIGRlc2NyLT5tZW1i
ZXIKKyNkZWZpbmUgVEhSRUFEX0dFVE1FTV9OQyhkZXNjciwgbWVtYmVyLCBpZHgpIFwKKyAgZGVz
Y3ItPm1lbWJlcltpZHhdCisjZGVmaW5lIFRIUkVBRF9TRVRNRU0oZGVzY3IsIG1lbWJlciwgdmFs
dWUpIFwKKyAgZGVzY3ItPm1lbWJlciA9ICh2YWx1ZSkKKyNkZWZpbmUgVEhSRUFEX1NFVE1FTV9O
QyhkZXNjciwgbWVtYmVyLCBpZHgsIHZhbHVlKSBcCisgIGRlc2NyLT5tZW1iZXJbaWR4XSA9ICh2
YWx1ZSkKKworLyogR2V0IGFuZCBzZXQgdGhlIGdsb2JhbCBzY29wZSBnZW5lcmF0aW9uIGNvdW50
ZXIgaW4gc3RydWN0IHB0aHJlYWQuICAqLworCisjZGVmaW5lIFRIUkVBRF9HU0NPUEVfRkxBR19V
TlVTRUQgMAorI2RlZmluZSBUSFJFQURfR1NDT1BFX0ZMQUdfVVNFRCAgIDEKKyNkZWZpbmUgVEhS
RUFEX0dTQ09QRV9GTEFHX1dBSVQgICAyCisjZGVmaW5lIFRIUkVBRF9HU0NPUEVfUkVTRVRfRkxB
RygpCQkJCQlcCisgIGRvCQkJCQkJCQkJXAorICAgIHsJCQkJCQkJCQlcCisgICAgICBpbnQgX19y
ZXMgPSBhdG9taWNfZXhjaGFuZ2VfcmVsICgmVEhSRUFEX1NFTEYtPmhlYWRlci5nc2NvcGVfZmxh
ZyxcCisJCQkJICAgICAgIFRIUkVBRF9HU0NPUEVfRkxBR19VTlVTRUQpOwlcCisgICAgICBpZiAo
X19yZXMgPT0gVEhSRUFEX0dTQ09QRV9GTEFHX1dBSVQpCQkJCVwKKwkgIGxsbF9mdXRleF93YWtl
ICgmVEhSRUFEX1NFTEYtPmhlYWRlci5nc2NvcGVfZmxhZywgMSwJCVwKKwkJCSAgTExMX1BSSVZB
VEUpOwkJCQkJXAorICAgIH0JCQkJCQkJCQlcCisgIHdoaWxlICgwKQorI2RlZmluZSBUSFJFQURf
R1NDT1BFX1NFVF9GTEFHKCkJCQkJCVwKKyAgZG8JCQkJCQkJCQlcCisgICAgewkJCQkJCQkJCVwK
KyAgICAgIFRIUkVBRF9TRUxGLT5oZWFkZXIuZ3Njb3BlX2ZsYWcgPSBUSFJFQURfR1NDT1BFX0ZM
QUdfVVNFRDsJXAorICAgICAgYXRvbWljX3dyaXRlX2JhcnJpZXIgKCk7CQkJCQkJXAorICAgIH0J
CQkJCQkJCQlcCisgIHdoaWxlICgwKQorCisjZW5kaWYgLyogX19BU1NFTUJMRVJfXyAqLworCisj
ZW5kaWYgIC8qIHRscy5oICovCmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvc3RhY2tpbmZvLmgg
Yi9zeXNkZXBzL29yMWsvc3RhY2tpbmZvLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAw
MDAwMDAwMC4uMTRlNzY3YzViZgotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9zdGFj
a2luZm8uaApAQCAtMCwwICsxLDMzIEBACisvKiBDb3B5cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0
d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMg
TGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNh
biByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9m
IHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBi
eSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24gMi4xIG9m
IHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisg
ICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdp
bGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4g
dGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZP
UiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQ
dWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVj
ZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNl
IGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnkuICBJZiBub3QsIHNlZQorICAgPGh0dHBzOi8v
d3d3LmdudS5vcmcvbGljZW5zZXMvPi4gICovCisKKy8qIFRoaXMgZmlsZSBjb250YWlucyBhIGJp
dCBvZiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3RhY2sgYWxsb2NhdGlvbgorICAgb2YgdGhlIHBy
b2Nlc3Nvci4gICovCisKKyNpZm5kZWYgX1NUQUNLSU5GT19ICisjZGVmaW5lIF9TVEFDS0lORk9f
SAkxCisKKyNpbmNsdWRlIDxlbGYuaD4KKworLyogT24gb3IxayB0aGUgc3RhY2sgZ3Jvd3MgZG93
bi4gICovCisjZGVmaW5lIF9TVEFDS19HUk9XU19ET1dOCTEKKworLyogRGVmYXVsdCB0byBhbiBl
eGVjdXRhYmxlIHN0YWNrLiAgUEZfWCBjYW4gYmUgb3ZlcnJpZGRlbiBpZiBQVF9HTlVfU1RBQ0sg
aXMKKyAqIHByZXNlbnQsIGJ1dCBpdCBpcyBwcmVzdW1lZCBhYnNlbnQuICAqLworI2RlZmluZSBE
RUZBVUxUX1NUQUNLX1BFUk1TIChQRl9SfFBGX1d8UEZfWCkKKworI2VuZGlmIC8qIHN0YWNraW5m
by5oICovCi0tIAoyLjMxLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVz
Lm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
