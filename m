Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 7B265314145
	for <lists+openrisc@lfdr.de>; Mon,  8 Feb 2021 22:08:42 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 1A73920EDB;
	Mon,  8 Feb 2021 22:08:42 +0100 (CET)
Received: from mail-pl1-f178.google.com (mail-pl1-f178.google.com
 [209.85.214.178])
 by mail.librecores.org (Postfix) with ESMTPS id 1408920E2C
 for <openrisc@lists.librecores.org>; Mon,  8 Feb 2021 22:08:40 +0100 (CET)
Received: by mail-pl1-f178.google.com with SMTP id g3so8526621plp.2
 for <openrisc@lists.librecores.org>; Mon, 08 Feb 2021 13:08:39 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-disposition:in-reply-to;
 bh=YJm8/HDh14/f+tvsioH0OsNm+NiMBDPt1A1hbcOg0gk=;
 b=qA9gL7bax5VaTfb1Q9le4KTA55ZfmYpH0hVaoV/PU5clxXs5TH6zlJsJ6o3iNmMc2p
 ugjId/IW5Cb2ocoyafHz7IB/3r1P3I2/n42iFdtZ9dviXc/012e+M8t6tcK9bt5VE4ZX
 Tf/opz3MzVjFq8hJR9kO9eealXMb4730WNixibvjK5L9DigF1E5JQZn+0UssADzrTuzv
 8/ZArRt5kZQYb3NJO4BuTfXLAz8aolJ+BdVt94HKJFyJJgnuTMe5xXaEZu3wNAYY+45V
 WwYfEf9ZH7RO3WpH5m4NaatvvD0MSTniosvaP+OgBkdf4Iq0+vGXZLfalExQSuBcIYQy
 bQ8g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:references
 :mime-version:content-disposition:in-reply-to;
 bh=YJm8/HDh14/f+tvsioH0OsNm+NiMBDPt1A1hbcOg0gk=;
 b=qQKHMJDv2oA/8djgE36Sy98bNQ9Zx7QmExm/dmjPKixKzhe2My5BySJxh7WEsb4Nbf
 Cn5uXTT4OMslpARE8cw0/HwnTeTs/hLoJOO80fCT3lTjGJKwuBP6B6HulINhpChPHNDR
 bCcIPqDHpw9s0HDKQIWLAm3moJDVawFijJ1KMoii/bTS+ckSSMPAX8ymnGtEaNu9NhXh
 yO9FAUXdbj8E8G1gbnPZOCT3Tee5FkZfgpJc1PkUNhNBDmic4zASwTypw2dZfLk6nS41
 cUBcYxUlGpjMyQih9fLRBSRSQp2rlHALSZ/9AT4EWqdOXy0AkQwH6m3t/QuMCJ9kp8hE
 1WtA==
X-Gm-Message-State: AOAM533S0h+sffPw4eg1iaPsffoZCZw8V4xNDABEYacYgHErofvnnX0h
 SM9FWTHJUybniN6g6+ksXoM=
X-Google-Smtp-Source: ABdhPJy0MkXjn1dSSn/gaCaXWvjjnzPKS1eo6r6pTqGzH5m/3fFoP4yGSNUtV30YcgrVm2fAXKyisQ==
X-Received: by 2002:a17:90b:611:: with SMTP id
 gb17mr699915pjb.192.1612818518410; 
 Mon, 08 Feb 2021 13:08:38 -0800 (PST)
Received: from localhost (g186.222-224-165.ppp.wakwak.ne.jp. [222.224.165.186])
 by smtp.gmail.com with ESMTPSA id t21sm4185317pfe.174.2021.02.08.13.08.37
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 08 Feb 2021 13:08:37 -0800 (PST)
Date: Tue, 9 Feb 2021 06:08:35 +0900
From: Stafford Horne <shorne@gmail.com>
To: Jan Henrik Weinstock <jan.weinstock@rwth-aachen.de>
Message-ID: <20210208210835.GO2002709@lianli.shorne-pla.net>
References: <9dc6c716-c5da-4214-96d8-e088db29d403@rwthex-s2-a.rwth-ad.de>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <9dc6c716-c5da-4214-96d8-e088db29d403@rwthex-s2-a.rwth-ad.de>
Subject: Re: [OpenRISC] [PATCH v2] Use devicetree to determine present cpus
 (v2)
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: jonas@southpole.se, openrisc@lists.librecores.org,
 linux-kernel@vger.kernel.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhhbmtzIEphbiwKCkkgd2FzIGFibGUgdG8gdGFrZSB0aGVzZSAyIG1haWxzIGFuZCBtZXJnZSB0
aGVtIHRvZ2V0aGVyIHRvIGEgc2luZ2xlIHBhdGNoLgoKSSB3aWxsIHNlbmQgdGhlIHJlc3VsdCBm
b3IgcmV2aWV3IGluIGEgYml0LgoKTmV4dCB0aW1lIHBsZWFzZSBsZWFybiBzb21lIGdpdC9saW51
eCBrZXJuZWwgZGV2ZWxvcGVyIGJhc2ljcy4gIEl0IHdpbGwKaGVscCBtYWtlIHRoaXMgbW9yZSBz
bW9vdGggaW50aGUgZnV0dXJlLiAgVEhlIGNvZGUgY2hhbmdlcyB5b3UgbWFkZSB3ZXJlIGdyZWF0
CmFuZCBJIGhvcGUgdG8gc2VlIG1vcmUgaW4gdGhlIGZ1dHVyZS4gOikKClNvbWUgdGlwczoKICAt
IFVzZSAnZ2l0IHJlYmFzZSAtaScsIGFuZCB0aGUgZml4dXAvc3F1YXNoIGNvbW1hbmQgdG8gbWVy
Z2UgdHdvIG9yIG1vcmUKICAgIGNvbW1pdHMuICBBbHNvLCB0aGVyZSB5b3Ugc2hvdWxkIGFkZCB0
aGUgc3VtbWFyeSBhcyB5b3UgZGlkIGluIHlvdXIgbWFpbAogICAgaW4gdGhlIGdpdCBjb21taXQg
bWVzc2FnZS4KICAtIFVzZSAnZ2l0IGZvcm1hdC1wYXRjaCAtbyBwYXRjaC1kaXIgLXYyIDxiYXRj
aC1iYXNlLWNvbW1pdC1pZD4nIHRvIGNyZWF0ZQogICAgeW91ciBwYXRjaC4KICAtIFVzZSAnLi9z
Y3JpcHRzL2NoZWNrcGF0Y2gucGwgcGF0Y2gtZGlyLzxwYXRjaC1uYW1lPi5wYXRjaCcgdG8gY2hl
Y2sgeW91cgogICAgcGF0Y2ggYmVmb3JlIHlvdSBzZW5kIGl0LiAgSWYgYW55IGlzc3VlcyB1c2Ug
J2dpdCByZWJhc2UnIG9yICdnaXQgY29tbWl0CiAgIC0tYW1lbmQnIHRvIGZpeCB1cCB0aGUgY2hl
Y2twYXRjaCBpc3N1ZXMgdGhlbiB0ZXN0IGFuZCBjcmVhdGUgYSBuZXcgcGF0Y2guCiAgLSBVc2Ug
Jy4vc2NyaXB0cy9nZXQtbWFpbnRhaW5lcnMucGwnIHdpdGggJ2dpdCBzZW5kLWVtYWlsJyBsaWtl
IHRoaXMgYmVsb3cuCgpTb21lIGxpbmtzOgogIC0gaHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2Mv
aHRtbC9sYXRlc3QvcHJvY2Vzcy9zdWJtaXR0aW5nLXBhdGNoZXMuaHRtbAogIC0gaHR0cDovL25p
Y2tkZXNhdWxuaWVycy5naXRodWIuaW8vYmxvZy8yMDE3LzA1LzE2L3N1Ym1pdHRpbmcteW91ci1m
aXJzdC1wYXRjaC10by10aGUtbGludXgta2VybmVsLWFuZC1yZXNwb25kaW5nLXRvLWZlZWRiYWNr
LwogICAgKGV4cGxhaW5zIC0tY2MtY21kLCB5b3UgY2FuIGFsc28gYWRkIC0tbm8tcm9sZXN0YXRz
IHRvIC5nZXRfbWFpbnRhaW5lci5jb25mYAogIC0gaHR0cHM6Ly90aG91Z2h0Ym90LmNvbS9ibG9n
L2dpdC1pbnRlcmFjdGl2ZS1yZWJhc2Utc3F1YXNoLWFtZW5kLXJld3JpdGluZy1oaXN0b3J5CiAg
ICAoZXhwbGFpbiByZWJhc2Ugc3F1YXNoIGZpeHVwKQoKClRoaXMgaXMgdXN1YWxseSB3aGF0IEkg
ZG8gYWZ0ZXIgdGVzdGluZy4KCiAgICAkIGdpdCBsbyAgICMgbXkgY3VzdG9tIGFsaWFzOiBsbyA9
IGxvZyAtLXByZXR0eT1mb3JtYXQ6JyVDKHllbGxvdyklY2QgJUMoZ3JlZW4pJWggJUMoYmx1ZSkl
PCgxNiklYU4lQ3Jlc2V0ICVzICVDKGF1dG8pJWQlQ3Jlc2V0JyAtLWRlY29yYXRlIC0tZGF0ZT1z
aG9ydCAtbjEwCiAgICAyMDIxLTAyLTA5IDhmNzIyZjY3NDUyZiBKYW4gSGVucmlrIFdlaW5zdG9j
ayBvcGVucmlzYzogVXNlIGRldmljZXRyZWUgdG8gZGV0ZXJtaW5lIHByZXNlbnQgY3B1cyAgKEhF
QUQgLT4gb3Ixay01LjEyLXVwZGF0ZXMpCiAgICAyMDIxLTAxLTI1IDIyNjEzNTIxNTdhOSBTdGFm
Zm9yZCBIb3JuZSAgIE1lcmdlIHJlbW90ZS10cmFja2luZyBicmFuY2ggJ29wZW5yaXNjL29yMWst
NS4xMS1maXhlcycgaW50byBvcjFrLTUuMTItdXBkYXRlcyAgKHNob3JuZS9vcjFrLTUuMTItdXBk
YXRlcywgc2hvcm5lL2Zvci1uZXh0LCBvcGVucmlzYy9mb3ItbmV4dCwgZm9yLW5leHQpCiAgICAy
MDIxLTAxLTIxIDM3MDZmOWY3NmE0ZiBHZWVydCBVeXR0ZXJob2V2ZW4gZHJpdmVycy9zb2MvbGl0
ZXg6IEFkZCByZXN0YXJ0IGhhbmRsZXIKICAgIDIwMjEtMDEtMjAgMDMxYzdhOGNkNmZjIEdlZXJ0
IFV5dHRlcmhvZXZlbiBvcGVucmlzYzogaW86IEFkZCBtaXNzaW5nIF9faW9tZW0gYW5ub3RhdGlv
biB0byBpb3VubWFwKCkgIChzaG9ybmUvb3Ixay01LjExLWZpeGVzLCBvcGVucmlzYy9vcjFrLTUu
MTEtZml4ZXMsIG9yMWstNS4xMS1maXhlcykKICAgIDIwMjEtMDEtMTggODAzYzcyYzg1NDdjIE1h
c2FoaXJvIFlhbWFkYSAgb3BlbnJpc2M6IGFkZCBhcmNoL29wZW5yaXNjL0tidWlsZAogICAgMjAy
MS0wMS0xNCA0ZjcwZDE1MDI5NGIgR2FicmllbCBTb21sbyAgICBkcml2ZXJzL3NvYy9saXRleDog
bWFrZSAnbGl0ZXhfW3NldHxnZXRdX3JlZygpJyBtZXRob2RzIHByaXZhdGUKICAgIDIwMjEtMDEt
MTQgNTFmMTA5MjI4MzA4IEdhYnJpZWwgU29tbG8gICAgZHJpdmVycy9zb2MvbGl0ZXg6IHN1cHBv
cnQgMzItYml0IHN1YnJlZ2lzdGVycywgNjQtYml0IENQVXMKICAgIDIwMjEtMDEtMTQgZmZhNGVi
YzQ4OTcxIEdhYnJpZWwgU29tbG8gICAgZHJpdmVycy9zb2MvbGl0ZXg6IHMvTElURVhfUkVHX1NJ
WkUvTElURVhfU1VCUkVHX0FMSUdOL2cKICAgIDIwMjEtMDEtMTQgYjVkMzA2MWVhMmU2IEdhYnJp
ZWwgU29tbG8gICAgZHJpdmVycy9zb2MvbGl0ZXg6IHNlcGFyYXRlIE1NSU8gZnJvbSBzdWJyZWdp
c3RlciBvZmZzZXQgY2FsY3VsYXRpb24KICAgIDIwMjEtMDEtMTQgOWQ5M2E5ZThhYWIzIEdhYnJp
ZWwgU29tbG8gICAgZHJpdmVycy9zb2MvbGl0ZXg6IG1vdmUgZ2VuZXJpYyBhY2Nlc3NvcnMgdG8g
bGl0ZXguaAoKICAgICQgZ2l0IGZvcm1hdC1wYXRjaCAtdjMgLW8gcGF0Y2hlcy8gMjI2MTM1MjE1
N2E5CiAgICBwYXRjaGVzL3YzLTAwMDEtb3BlbnJpc2MtVXNlLWRldmljZXRyZWUtdG8tZGV0ZXJt
aW5lLXByZXNlbnQtY3B1cy5wYXRjaAoKICAgICMgQmVsb3cgYSB3YXJuaW5nIGlzIHByaW50ZWQg
YnV0IEkgdGhpbmsgaXRzIE9LIGFzIHdlIGNhbiB1c2UgTlJfQ1BVUyBpbiBzbXAuYwogICAgJCAu
L3NjcmlwdHMvY2hlY2twYXRjaC5wbCBwYXRjaGVzL3YzLTAwMDEtb3BlbnJpc2MtVXNlLWRldmlj
ZXRyZWUtdG8tZGV0ZXJtaW5lLXByZXNlbnQtY3B1cy5wYXRjaAogICAgV0FSTklORzogdXNhZ2Ug
b2YgTlJfQ1BVUyBpcyBvZnRlbiB3cm9uZyAtIGNvbnNpZGVyIHVzaW5nIGNwdV9wb3NzaWJsZSgp
LCBudW1fcG9zc2libGVfY3B1cygpLCBmb3JfZWFjaF9wb3NzaWJsZV9jcHUoKSwgZXRjCiAgICAj
NDU6IEZJTEU6IGFyY2gvb3BlbnJpc2Mva2VybmVsL3NtcC5jOjczOgogICAgKyAgICAgICAgICAg
ICAgIGlmIChjcHVfaWQgPCBOUl9DUFVTKQoKICAgIHRvdGFsOiAwIGVycm9ycywgMSB3YXJuaW5n
cywgNDUgbGluZXMgY2hlY2tlZAoKICAgIE5PVEU6IEZvciBzb21lIG9mIHRoZSByZXBvcnRlZCBk
ZWZlY3RzLCBjaGVja3BhdGNoIG1heSBiZSBhYmxlIHRvCgkgIG1lY2hhbmljYWxseSBjb252ZXJ0
IHRvIHRoZSB0eXBpY2FsIHN0eWxlIHVzaW5nIC0tZml4IG9yIC0tZml4LWlucGxhY2UuCgogICAg
cGF0Y2hlcy92My0wMDAxLW9wZW5yaXNjLVVzZS1kZXZpY2V0cmVlLXRvLWRldGVybWluZS1wcmVz
ZW50LWNwdXMucGF0Y2ggaGFzIHN0eWxlIHByb2JsZW1zLCBwbGVhc2UgcmV2aWV3LgoKICAgIE5P
VEU6IElmIGFueSBvZiB0aGUgZXJyb3JzIGFyZSBmYWxzZSBwb3NpdGl2ZXMsIHBsZWFzZSByZXBv
cnQKCSAgdGhlbSB0byB0aGUgbWFpbnRhaW5lciwgc2VlIENIRUNLUEFUQ0ggaW4gTUFJTlRBSU5F
UlMuCgogICAgJCBnaXQgc2VuZC1lbWFpbCAtLXRvIGxpbnV4LWtlcm5lbCAtLWNjLWNtZCAuL3Nj
cmlwdHMvZ2V0X21haW50YWluZXIucGwgcGF0Y2hlcy92My0wMDAxLW9wZW5yaXNjLVVzZS1kZXZp
Y2V0cmVlLXRvLWRldGVybWluZS1wcmVzZW50LWNwdXMucGF0Y2gKICAgIHBhdGNoZXMvdjMtMDAw
MS1vcGVucmlzYy1Vc2UtZGV2aWNldHJlZS10by1kZXRlcm1pbmUtcHJlc2VudC1jcHVzLnBhdGNo
CgotU3RhZmZvcmQKCk9uIE1vbiwgRmViIDA4LCAyMDIxIGF0IDAzOjI4OjMyUE0gKzAxMDAsIEph
biBIZW5yaWsgV2VpbnN0b2NrIHdyb3RlOgo+IFNpZ25lZC1vZmYtYnk6IEphbiBIZW5yaWsgV2Vp
bnN0b2NrIDxqYW4ud2VpbnN0b2NrQHJ3dGgtYWFjaGVuLmRlPgo+IC0tLQo+ICBhcmNoL29wZW5y
aXNjL2tlcm5lbC9zbXAuYyB8IDMxICsrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0KPiAg
MSBmaWxlIGNoYW5nZWQsIDE1IGluc2VydGlvbnMoKyksIDE2IGRlbGV0aW9ucygtKQo+IAo+IGRp
ZmYgLS1naXQgYS9hcmNoL29wZW5yaXNjL2tlcm5lbC9zbXAuYyBiL2FyY2gvb3BlbnJpc2Mva2Vy
bmVsL3NtcC5jCj4gaW5kZXggNzViZTdlMzRmLi44M2NiZjQzZDQgMTAwNjQ0Cj4gLS0tIGEvYXJj
aC9vcGVucmlzYy9rZXJuZWwvc21wLmMKPiArKysgYi9hcmNoL29wZW5yaXNjL2tlcm5lbC9zbXAu
Ywo+IEBAIC02MSwzMiArNjEsMzEgQEAgdm9pZCBfX2luaXQgc21wX3ByZXBhcmVfYm9vdF9jcHUo
dm9pZCkKPiAgCj4gIHZvaWQgX19pbml0IHNtcF9pbml0X2NwdXModm9pZCkKPiAgewo+IC0JaW50
IGk7Cj4gKwlzdHJ1Y3QgZGV2aWNlX25vZGUqIGNwdTsKPiArCXUzMiBjcHVfaWQ7Cj4gKwo+ICsJ
Zm9yX2VhY2hfb2ZfY3B1X25vZGUoY3B1KSB7Cj4gKwkJaWYgKG9mX3Byb3BlcnR5X3JlYWRfdTMy
KGNwdSwgInJlZyIsICZjcHVfaWQpKSB7Cj4gKwkJCXByX3dhcm4oIiVzIG1pc3NpbmcgcmVnIHBy
b3BlcnR5IiwgY3B1LT5mdWxsX25hbWUpOwo+ICsJCQljb250aW51ZTsKPiArCQl9Cj4gIAo+IC0J
Zm9yIChpID0gMDsgaSA8IE5SX0NQVVM7IGkrKykKPiAtCQlzZXRfY3B1X3Bvc3NpYmxlKGksIHRy
dWUpOwo+ICsJCWlmIChjcHVfaWQgPCBOUl9DUFVTKQo+ICsJCQlzZXRfY3B1X3Bvc3NpYmxlKGNw
dV9pZCwgdHJ1ZSk7Cj4gKwl9Cj4gIH0KPiAgCj4gIHZvaWQgX19pbml0IHNtcF9wcmVwYXJlX2Nw
dXModW5zaWduZWQgaW50IG1heF9jcHVzKQo+ICB7Cj4gLQl1MzIgY3B1X2lkOwo+IC0Jc3RydWN0
IGRldmljZV9ub2RlICpjcHUsICpjcHVzOwo+ICsJdW5zaWduZWQgaW50IGNwdTsKPiAgCj4gIAkv
Kgo+ICAJICogSW5pdGlhbGlzZSB0aGUgcHJlc2VudCBtYXAsIHdoaWNoIGRlc2NyaWJlcyB0aGUg
c2V0IG9mIENQVXMKPiAgCSAqIGFjdHVhbGx5IHBvcHVsYXRlZCBhdCB0aGUgcHJlc2VudCB0aW1l
Lgo+ICAJICovCj4gLQljcHVzID0gb2ZfZmluZF9ub2RlX2J5X3BhdGgoIi9jcHVzIik7Cj4gLQlm
b3JfZWFjaF9jaGlsZF9vZl9ub2RlKGNwdXMsIGNwdSkgewo+IC0JCWlmIChvZl9wcm9wZXJ0eV9y
ZWFkX3UzMihjcHUsICJyZWciLCAmY3B1X2lkKSkgewo+IC0JCQlwcl93YXJuKCIlcyBtaXNzaW5n
IHJlZyBwcm9wZXJ0eSIsIGNwdS0+ZnVsbF9uYW1lKTsKPiAtCQkJY29udGludWU7Cj4gLQkJfQo+
IC0KPiAtCQlpZiAoY3B1X2lkID49IG1heF9jcHVzKQo+IC0JCQljb250aW51ZTsKPiAtCj4gLQkJ
c2V0X2NwdV9wcmVzZW50KGNwdV9pZCwgdHJ1ZSk7Cj4gKwlmb3JfZWFjaF9wb3NzaWJsZV9jcHUo
Y3B1KSB7Cj4gKwkJaWYgKGNwdSA8IG1heF9jcHVzKQo+ICsJCQlzZXRfY3B1X3ByZXNlbnQoY3B1
LCB0cnVlKTsKPiAgCX0KPiAgfQo+ICAKPiAtLSAKPiAyLjE3LjEKPiAKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9w
ZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcv
bGlzdGluZm8vb3BlbnJpc2MK
