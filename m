Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 81E8133E701
	for <lists+openrisc@lfdr.de>; Wed, 17 Mar 2021 03:30:10 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 352482013F;
	Wed, 17 Mar 2021 03:30:09 +0100 (CET)
Received: from szxga07-in.huawei.com (szxga07-in.huawei.com [45.249.212.35])
 by mail.librecores.org (Postfix) with ESMTPS id E4ED6208C2
 for <openrisc@lists.librecores.org>; Wed, 17 Mar 2021 02:50:17 +0100 (CET)
Received: from DGGEMS414-HUB.china.huawei.com (unknown [172.30.72.58])
 by szxga07-in.huawei.com (SkyGuard) with ESMTP id 4F0Y2q0RTVz8yR6;
 Wed, 17 Mar 2021 09:48:19 +0800 (CST)
Received: from localhost.localdomain.localdomain (10.175.113.25) by
 DGGEMS414-HUB.china.huawei.com (10.3.19.214) with Microsoft SMTP Server id
 14.3.498.0; Wed, 17 Mar 2021 09:50:03 +0800
From: Kefeng Wang <wangkefeng.wang@huawei.com>
To: <linux-kernel@vger.kernel.org>, Andrew Morton <akpm@linux-foundation.org>
Date: Wed, 17 Mar 2021 09:52:10 +0800
Message-ID: <20210317015210.33641-1-wangkefeng.wang@huawei.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <4d488195-7281-9238-b30d-9f89a6100fb9@csgroup.eu>
References: <4d488195-7281-9238-b30d-9f89a6100fb9@csgroup.eu>
MIME-Version: 1.0
X-Originating-IP: [10.175.113.25]
X-CFilter-Loop: Reflected
X-Mailman-Approved-At: Wed, 17 Mar 2021 03:30:07 +0100
Subject: [OpenRISC] [PATCH v2] mm: Move mem_init_print_info() into mm_init()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Kefeng Wang <wangkefeng.wang@huawei.com>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Peter
 Zijlstra <peterz@infradead.org>, Catalin Marinas <catalin.marinas@arm.com>,
 Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
 Guo Ren <guoren@kernel.org>, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org, Jonas Bonn <jonas@southpole.se>,
 linux-s390@vger.kernel.org, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-hexagon@vger.kernel.org, Huacai Chen <chenhuacai@kernel.org>,
 Russell King <linux@armlinux.org.uk>, linux-csky@vger.kernel.org,
 Ingo Molnar <mingo@redhat.com>, linux-snps-arc@lists.infradead.org,
 linux-xtensa@linux-xtensa.org, Heiko Carstens <hca@linux.ibm.com>,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-arm-kernel@lists.infradead.org,
 linux-parisc@vger.kernel.org, linux-mips@vger.kernel.org,
 Palmer Dabbelt <palmer@dabbelt.com>, linux-alpha@vger.kernel.org,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

bWVtX2luaXRfcHJpbnRfaW5mbygpIGlzIGNhbGxlZCBpbiBtZW1faW5pdCgpIG9uIGVhY2ggYXJj
aGl0ZWN0dXJlLAphbmQgcGFzcyBOVUxMIGFyZ3VtZW50LCBzbyB1c2luZyB2b2lkIGFyZ3VtZW50
IGFuZCBtb3ZlIGl0IGludG8gbW1faW5pdCgpLgoKQWNrZWQtYnk6IERhdmUgSGFuc2VuIDxkYXZl
LmhhbnNlbkBsaW51eC5pbnRlbC5jb20+ClNpZ25lZC1vZmYtYnk6IEtlZmVuZyBXYW5nIDx3YW5n
a2VmZW5nLndhbmdAaHVhd2VpLmNvbT4KLS0tCnYyOgotIENsZWFudXAgJ3N0cicgbGluZSBzdWdn
ZXN0ZWQgYnkgQ2hyaXN0b3BoZSBhbmQgQUNLCgogYXJjaC9hbHBoYS9tbS9pbml0LmMgICAgICAg
ICAgICAgfCAgMSAtCiBhcmNoL2FyYy9tbS9pbml0LmMgICAgICAgICAgICAgICB8ICAxIC0KIGFy
Y2gvYXJtL21tL2luaXQuYyAgICAgICAgICAgICAgIHwgIDIgLS0KIGFyY2gvYXJtNjQvbW0vaW5p
dC5jICAgICAgICAgICAgIHwgIDIgLS0KIGFyY2gvY3NreS9tbS9pbml0LmMgICAgICAgICAgICAg
IHwgIDEgLQogYXJjaC9oODMwMC9tbS9pbml0LmMgICAgICAgICAgICAgfCAgMiAtLQogYXJjaC9o
ZXhhZ29uL21tL2luaXQuYyAgICAgICAgICAgfCAgMSAtCiBhcmNoL2lhNjQvbW0vaW5pdC5jICAg
ICAgICAgICAgICB8ICAxIC0KIGFyY2gvbTY4ay9tbS9pbml0LmMgICAgICAgICAgICAgIHwgIDEg
LQogYXJjaC9taWNyb2JsYXplL21tL2luaXQuYyAgICAgICAgfCAgMSAtCiBhcmNoL21pcHMvbG9v
bmdzb242NC9udW1hLmMgICAgICB8ICAxIC0KIGFyY2gvbWlwcy9tbS9pbml0LmMgICAgICAgICAg
ICAgIHwgIDEgLQogYXJjaC9taXBzL3NnaS1pcDI3L2lwMjctbWVtb3J5LmMgfCAgMSAtCiBhcmNo
L25kczMyL21tL2luaXQuYyAgICAgICAgICAgICB8ICAxIC0KIGFyY2gvbmlvczIvbW0vaW5pdC5j
ICAgICAgICAgICAgIHwgIDEgLQogYXJjaC9vcGVucmlzYy9tbS9pbml0LmMgICAgICAgICAgfCAg
MiAtLQogYXJjaC9wYXJpc2MvbW0vaW5pdC5jICAgICAgICAgICAgfCAgMiAtLQogYXJjaC9wb3dl
cnBjL21tL21lbS5jICAgICAgICAgICAgfCAgMSAtCiBhcmNoL3Jpc2N2L21tL2luaXQuYyAgICAg
ICAgICAgICB8ICAxIC0KIGFyY2gvczM5MC9tbS9pbml0LmMgICAgICAgICAgICAgIHwgIDIgLS0K
IGFyY2gvc2gvbW0vaW5pdC5jICAgICAgICAgICAgICAgIHwgIDEgLQogYXJjaC9zcGFyYy9tbS9p
bml0XzMyLmMgICAgICAgICAgfCAgMiAtLQogYXJjaC9zcGFyYy9tbS9pbml0XzY0LmMgICAgICAg
ICAgfCAgMSAtCiBhcmNoL3VtL2tlcm5lbC9tZW0uYyAgICAgICAgICAgICB8ICAxIC0KIGFyY2gv
eDg2L21tL2luaXRfMzIuYyAgICAgICAgICAgIHwgIDIgLS0KIGFyY2gveDg2L21tL2luaXRfNjQu
YyAgICAgICAgICAgIHwgIDIgLS0KIGFyY2gveHRlbnNhL21tL2luaXQuYyAgICAgICAgICAgIHwg
IDEgLQogaW5jbHVkZS9saW51eC9tbS5oICAgICAgICAgICAgICAgfCAgMiArLQogaW5pdC9tYWlu
LmMgICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiBtbS9wYWdlX2FsbG9jLmMgICAgICAgICAg
ICAgICAgICB8IDEwICsrKysrLS0tLS0KIDMwIGZpbGVzIGNoYW5nZWQsIDcgaW5zZXJ0aW9ucygr
KSwgNDIgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hbHBoYS9tbS9pbml0LmMgYi9h
cmNoL2FscGhhL21tL2luaXQuYwppbmRleCAzYzQyYjMxNDdmZDYuLmE5NzY1MGE2MThmMSAxMDA2
NDQKLS0tIGEvYXJjaC9hbHBoYS9tbS9pbml0LmMKKysrIGIvYXJjaC9hbHBoYS9tbS9pbml0LmMK
QEAgLTI4Miw1ICsyODIsNCBAQCBtZW1faW5pdCh2b2lkKQogCXNldF9tYXhfbWFwbnIobWF4X2xv
d19wZm4pOwogCWhpZ2hfbWVtb3J5ID0gKHZvaWQgKikgX192YShtYXhfbG93X3BmbiAqIFBBR0Vf
U0laRSk7CiAJbWVtYmxvY2tfZnJlZV9hbGwoKTsKLQltZW1faW5pdF9wcmludF9pbmZvKE5VTEwp
OwogfQpkaWZmIC0tZ2l0IGEvYXJjaC9hcmMvbW0vaW5pdC5jIGIvYXJjaC9hcmMvbW0vaW5pdC5j
CmluZGV4IGNlMDdlNjk3OTE2Yy4uMzM4MzJlMzZiZGI3IDEwMDY0NAotLS0gYS9hcmNoL2FyYy9t
bS9pbml0LmMKKysrIGIvYXJjaC9hcmMvbW0vaW5pdC5jCkBAIC0xOTQsNyArMTk0LDYgQEAgdm9p
ZCBfX2luaXQgbWVtX2luaXQodm9pZCkKIHsKIAltZW1ibG9ja19mcmVlX2FsbCgpOwogCWhpZ2ht
ZW1faW5pdCgpOwotCW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiB9CiAKICNpZmRlZiBDT05G
SUdfSElHSE1FTQpkaWZmIC0tZ2l0IGEvYXJjaC9hcm0vbW0vaW5pdC5jIGIvYXJjaC9hcm0vbW0v
aW5pdC5jCmluZGV4IDgyOGEyNTYxYjIyOS4uNzAyMmI3YjVjNDAwIDEwMDY0NAotLS0gYS9hcmNo
L2FybS9tbS9pbml0LmMKKysrIGIvYXJjaC9hcm0vbW0vaW5pdC5jCkBAIC0zMTYsOCArMzE2LDYg
QEAgdm9pZCBfX2luaXQgbWVtX2luaXQodm9pZCkKIAogCWZyZWVfaGlnaHBhZ2VzKCk7CiAKLQlt
ZW1faW5pdF9wcmludF9pbmZvKE5VTEwpOwotCiAJLyoKIAkgKiBDaGVjayBib3VuZGFyaWVzIHR3
aWNlOiBTb21lIGZ1bmRhbWVudGFsIGluY29uc2lzdGVuY2llcyBjYW4KIAkgKiBiZSBkZXRlY3Rl
ZCBhdCBidWlsZCB0aW1lIGFscmVhZHkuCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L21tL2luaXQu
YyBiL2FyY2gvYXJtNjQvbW0vaW5pdC5jCmluZGV4IDM2ODVlMTJhYmE5Yi4uZThmMjlhMGJiMmYx
IDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L21tL2luaXQuYworKysgYi9hcmNoL2FybTY0L21tL2lu
aXQuYwpAQCAtNDkxLDggKzQ5MSw2IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJLyog
dGhpcyB3aWxsIHB1dCBhbGwgdW51c2VkIGxvdyBtZW1vcnkgb250byB0aGUgZnJlZWxpc3RzICov
CiAJbWVtYmxvY2tfZnJlZV9hbGwoKTsKIAotCW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7Ci0K
IAkvKgogCSAqIENoZWNrIGJvdW5kYXJpZXMgdHdpY2U6IFNvbWUgZnVuZGFtZW50YWwgaW5jb25z
aXN0ZW5jaWVzIGNhbiBiZQogCSAqIGRldGVjdGVkIGF0IGJ1aWxkIHRpbWUgYWxyZWFkeS4KZGlm
ZiAtLWdpdCBhL2FyY2gvY3NreS9tbS9pbml0LmMgYi9hcmNoL2Nza3kvbW0vaW5pdC5jCmluZGV4
IDg5NDA1MGE4Y2UwOS4uYmYyMDA0YWE4MTFhIDEwMDY0NAotLS0gYS9hcmNoL2Nza3kvbW0vaW5p
dC5jCisrKyBiL2FyY2gvY3NreS9tbS9pbml0LmMKQEAgLTEwNyw3ICsxMDcsNiBAQCB2b2lkIF9f
aW5pdCBtZW1faW5pdCh2b2lkKQogCQkJZnJlZV9oaWdobWVtX3BhZ2UocGFnZSk7CiAJfQogI2Vu
ZGlmCi0JbWVtX2luaXRfcHJpbnRfaW5mbyhOVUxMKTsKIH0KIAogdm9pZCBmcmVlX2luaXRtZW0o
dm9pZCkKZGlmZiAtLWdpdCBhL2FyY2gvaDgzMDAvbW0vaW5pdC5jIGIvYXJjaC9oODMwMC9tbS9p
bml0LmMKaW5kZXggMWYzYjM0NWQ2OGI5Li5mN2JmNDY5M2UzYjIgMTAwNjQ0Ci0tLSBhL2FyY2gv
aDgzMDAvbW0vaW5pdC5jCisrKyBiL2FyY2gvaDgzMDAvbW0vaW5pdC5jCkBAIC05OCw2ICs5OCw0
IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAKIAkvKiB0aGlzIHdpbGwgcHV0IGFsbCBs
b3cgbWVtb3J5IG9udG8gdGhlIGZyZWVsaXN0cyAqLwogCW1lbWJsb2NrX2ZyZWVfYWxsKCk7Ci0K
LQltZW1faW5pdF9wcmludF9pbmZvKE5VTEwpOwogfQpkaWZmIC0tZ2l0IGEvYXJjaC9oZXhhZ29u
L21tL2luaXQuYyBiL2FyY2gvaGV4YWdvbi9tbS9pbml0LmMKaW5kZXggZjJlNmM4NjhlNDc3Li5m
MDFlOTFlMTBkOTUgMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9tbS9pbml0LmMKKysrIGIvYXJj
aC9oZXhhZ29uL21tL2luaXQuYwpAQCAtNTUsNyArNTUsNiBAQCB2b2lkIF9faW5pdCBtZW1faW5p
dCh2b2lkKQogewogCS8qICBObyBpZGVhIHdoZXJlIHRoaXMgaXMgYWN0dWFsbHkgZGVjbGFyZWQu
ICBTZWVtcyB0byBldmFkZSBMWFIuICAqLwogCW1lbWJsb2NrX2ZyZWVfYWxsKCk7Ci0JbWVtX2lu
aXRfcHJpbnRfaW5mbyhOVUxMKTsKIAogCS8qCiAJICogIFRvLURvOiAgc29tZW9uZSBzb21ld2hl
cmUgc2hvdWxkIHdpcGUgb3V0IHRoZSBib290bWVtIG1hcApkaWZmIC0tZ2l0IGEvYXJjaC9pYTY0
L21tL2luaXQuYyBiL2FyY2gvaWE2NC9tbS9pbml0LmMKaW5kZXggMTZkMGQ3ZDIyNjU3Li44MzI4
MGUyZGY4MDcgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9tbS9pbml0LmMKKysrIGIvYXJjaC9pYTY0
L21tL2luaXQuYwpAQCAtNjU5LDcgKzY1OSw2IEBAIG1lbV9pbml0ICh2b2lkKQogCXNldF9tYXhf
bWFwbnIobWF4X2xvd19wZm4pOwogCWhpZ2hfbWVtb3J5ID0gX192YShtYXhfbG93X3BmbiAqIFBB
R0VfU0laRSk7CiAJbWVtYmxvY2tfZnJlZV9hbGwoKTsKLQltZW1faW5pdF9wcmludF9pbmZvKE5V
TEwpOwogCiAJLyoKIAkgKiBGb3IgZnN5c2NhbGwgZW50cnBvaW50cyB3aXRoIG5vIGxpZ2h0LXdl
aWdodCBoYW5kbGVyLCB1c2UgdGhlIG9yZGluYXJ5CmRpZmYgLS1naXQgYS9hcmNoL202OGsvbW0v
aW5pdC5jIGIvYXJjaC9tNjhrL21tL2luaXQuYwppbmRleCAxNGMxZTU0MTQ1MWMuLjE3NTlhYjg3
NWQ0NyAxMDA2NDQKLS0tIGEvYXJjaC9tNjhrL21tL2luaXQuYworKysgYi9hcmNoL202OGsvbW0v
aW5pdC5jCkBAIC0xNTMsNSArMTUzLDQgQEAgdm9pZCBfX2luaXQgbWVtX2luaXQodm9pZCkKIAkv
KiB0aGlzIHdpbGwgcHV0IGFsbCBtZW1vcnkgb250byB0aGUgZnJlZWxpc3RzICovCiAJbWVtYmxv
Y2tfZnJlZV9hbGwoKTsKIAlpbml0X3BvaW50ZXJfdGFibGVzKCk7Ci0JbWVtX2luaXRfcHJpbnRf
aW5mbyhOVUxMKTsKIH0KZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9tbS9pbml0LmMgYi9h
cmNoL21pY3JvYmxhemUvbW0vaW5pdC5jCmluZGV4IDA1Y2YxZmIzZjVmZi4uYWI1NWM3MDM4MGE1
IDEwMDY0NAotLS0gYS9hcmNoL21pY3JvYmxhemUvbW0vaW5pdC5jCisrKyBiL2FyY2gvbWljcm9i
bGF6ZS9tbS9pbml0LmMKQEAgLTEzMSw3ICsxMzEsNiBAQCB2b2lkIF9faW5pdCBtZW1faW5pdCh2
b2lkKQogCWhpZ2htZW1fc2V0dXAoKTsKICNlbmRpZgogCi0JbWVtX2luaXRfcHJpbnRfaW5mbyhO
VUxMKTsKIAltZW1faW5pdF9kb25lID0gMTsKIH0KIApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2xv
b25nc29uNjQvbnVtYS5jIGIvYXJjaC9taXBzL2xvb25nc29uNjQvbnVtYS5jCmluZGV4IDgzMTVj
ODcxYzQzNS4uZmE5YjRhNDg3YTQ3IDEwMDY0NAotLS0gYS9hcmNoL21pcHMvbG9vbmdzb242NC9u
dW1hLmMKKysrIGIvYXJjaC9taXBzL2xvb25nc29uNjQvbnVtYS5jCkBAIC0xNzgsNyArMTc4LDYg
QEAgdm9pZCBfX2luaXQgbWVtX2luaXQodm9pZCkKIAloaWdoX21lbW9yeSA9ICh2b2lkICopIF9f
dmEoZ2V0X251bV9waHlzcGFnZXMoKSA8PCBQQUdFX1NISUZUKTsKIAltZW1ibG9ja19mcmVlX2Fs
bCgpOwogCXNldHVwX3plcm9fcGFnZXMoKTsJLyogVGhpcyBjb21lcyBmcm9tIG5vZGUgMCAqLwot
CW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiB9CiAKIC8qIEFsbCBQQ0kgZGV2aWNlIGJlbG9u
Z3MgdG8gbG9naWNhbCBOb2RlLTAgKi8KZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9tbS9pbml0LmMg
Yi9hcmNoL21pcHMvbW0vaW5pdC5jCmluZGV4IDVjYjczYmY3NGE4Yi4uYzM2MzU4NzU4OTY5IDEw
MDY0NAotLS0gYS9hcmNoL21pcHMvbW0vaW5pdC5jCisrKyBiL2FyY2gvbWlwcy9tbS9pbml0LmMK
QEAgLTQ2Nyw3ICs0NjcsNiBAQCB2b2lkIF9faW5pdCBtZW1faW5pdCh2b2lkKQogCW1lbWJsb2Nr
X2ZyZWVfYWxsKCk7CiAJc2V0dXBfemVyb19wYWdlcygpOwkvKiBTZXR1cCB6ZXJvZWQgcGFnZXMu
ICAqLwogCW1lbV9pbml0X2ZyZWVfaGlnaG1lbSgpOwotCW1lbV9pbml0X3ByaW50X2luZm8oTlVM
TCk7CiAKICNpZmRlZiBDT05GSUdfNjRCSVQKIAlpZiAoKHVuc2lnbmVkIGxvbmcpICZfdGV4dCA+
ICh1bnNpZ25lZCBsb25nKSBDS1NFRzApCmRpZmYgLS1naXQgYS9hcmNoL21pcHMvc2dpLWlwMjcv
aXAyNy1tZW1vcnkuYyBiL2FyY2gvbWlwcy9zZ2ktaXAyNy9pcDI3LW1lbW9yeS5jCmluZGV4IDg3
YmI2OTQ1ZWMyNS4uNjE3MzY4NGI1YWFhIDEwMDY0NAotLS0gYS9hcmNoL21pcHMvc2dpLWlwMjcv
aXAyNy1tZW1vcnkuYworKysgYi9hcmNoL21pcHMvc2dpLWlwMjcvaXAyNy1tZW1vcnkuYwpAQCAt
NDIwLDUgKzQyMCw0IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJaGlnaF9tZW1vcnkg
PSAodm9pZCAqKSBfX3ZhKGdldF9udW1fcGh5c3BhZ2VzKCkgPDwgUEFHRV9TSElGVCk7CiAJbWVt
YmxvY2tfZnJlZV9hbGwoKTsKIAlzZXR1cF96ZXJvX3BhZ2VzKCk7CS8qIFRoaXMgY29tZXMgZnJv
bSBub2RlIDAgKi8KLQltZW1faW5pdF9wcmludF9pbmZvKE5VTEwpOwogfQpkaWZmIC0tZ2l0IGEv
YXJjaC9uZHMzMi9tbS9pbml0LmMgYi9hcmNoL25kczMyL21tL2luaXQuYwppbmRleCBmYTg2Zjdi
MmY0MTYuLmY2M2Y4Mzk3MzhjNCAxMDA2NDQKLS0tIGEvYXJjaC9uZHMzMi9tbS9pbml0LmMKKysr
IGIvYXJjaC9uZHMzMi9tbS9pbml0LmMKQEAgLTE5MSw3ICsxOTEsNiBAQCB2b2lkIF9faW5pdCBt
ZW1faW5pdCh2b2lkKQogCiAJLyogdGhpcyB3aWxsIHB1dCBhbGwgbG93IG1lbW9yeSBvbnRvIHRo
ZSBmcmVlbGlzdHMgKi8KIAltZW1ibG9ja19mcmVlX2FsbCgpOwotCW1lbV9pbml0X3ByaW50X2lu
Zm8oTlVMTCk7CiAKIAlwcl9pbmZvKCJ2aXJ0dWFsIGtlcm5lbCBtZW1vcnkgbGF5b3V0OlxuIgog
CQkiICAgIGZpeG1hcCAgOiAweCUwOGx4IC0gMHglMDhseCAgICglNGxkIGtCKVxuIgpkaWZmIC0t
Z2l0IGEvYXJjaC9uaW9zMi9tbS9pbml0LmMgYi9hcmNoL25pb3MyL21tL2luaXQuYwppbmRleCA2
MTg2MmRiYjBlMzIuLjYxM2ZjYWE1OTg4YSAxMDA2NDQKLS0tIGEvYXJjaC9uaW9zMi9tbS9pbml0
LmMKKysrIGIvYXJjaC9uaW9zMi9tbS9pbml0LmMKQEAgLTcxLDcgKzcxLDYgQEAgdm9pZCBfX2lu
aXQgbWVtX2luaXQodm9pZCkKIAogCS8qIHRoaXMgd2lsbCBwdXQgYWxsIG1lbW9yeSBvbnRvIHRo
ZSBmcmVlbGlzdHMgKi8KIAltZW1ibG9ja19mcmVlX2FsbCgpOwotCW1lbV9pbml0X3ByaW50X2lu
Zm8oTlVMTCk7CiB9CiAKIHZvaWQgX19pbml0IG1tdV9pbml0KHZvaWQpCmRpZmYgLS1naXQgYS9h
cmNoL29wZW5yaXNjL21tL2luaXQuYyBiL2FyY2gvb3BlbnJpc2MvbW0vaW5pdC5jCmluZGV4IGJm
OWIyMzEwZmM5My4uZDU2NDExOThiOTBjIDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL21tL2lu
aXQuYworKysgYi9hcmNoL29wZW5yaXNjL21tL2luaXQuYwpAQCAtMjExLDggKzIxMSw2IEBAIHZv
aWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJLyogdGhpcyB3aWxsIHB1dCBhbGwgbG93IG1lbW9y
eSBvbnRvIHRoZSBmcmVlbGlzdHMgKi8KIAltZW1ibG9ja19mcmVlX2FsbCgpOwogCi0JbWVtX2lu
aXRfcHJpbnRfaW5mbyhOVUxMKTsKLQogCXByaW50aygibWVtX2luaXRfZG9uZSAuLi4uLi4uLi4u
Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG4iKTsKIAltZW1faW5pdF9kb25lID0g
MTsKIAlyZXR1cm47CmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9tbS9pbml0LmMgYi9hcmNoL3Bh
cmlzYy9tbS9pbml0LmMKaW5kZXggOWNhNGU0ZmY2ODk1Li41OTFhNGU5Mzk0MTUgMTAwNjQ0Ci0t
LSBhL2FyY2gvcGFyaXNjL21tL2luaXQuYworKysgYi9hcmNoL3BhcmlzYy9tbS9pbml0LmMKQEAg
LTU3Myw4ICs1NzMsNiBAQCB2b2lkIF9faW5pdCBtZW1faW5pdCh2b2lkKQogI2VuZGlmCiAJCXBh
cmlzY192bWFsbG9jX3N0YXJ0ID0gU0VUX01BUF9PRkZTRVQoTUFQX1NUQVJUKTsKIAotCW1lbV9p
bml0X3ByaW50X2luZm8oTlVMTCk7Ci0KICNpZiAwCiAJLyoKIAkgKiBEbyBub3QgZXhwb3NlIHRo
ZSB2aXJ0dWFsIGtlcm5lbCBtZW1vcnkgbGF5b3V0IHRvIHVzZXJzcGFjZS4KZGlmZiAtLWdpdCBh
L2FyY2gvcG93ZXJwYy9tbS9tZW0uYyBiL2FyY2gvcG93ZXJwYy9tbS9tZW0uYwppbmRleCA0ZThj
ZTZkODUyMzIuLjdlMTFjNGNiMDhiOCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL21tL21lbS5j
CisrKyBiL2FyY2gvcG93ZXJwYy9tbS9tZW0uYwpAQCAtMzEyLDcgKzMxMiw2IEBAIHZvaWQgX19p
bml0IG1lbV9pbml0KHZvaWQpCiAJCShtZnNwcihTUFJOX1RMQjFDRkcpICYgVExCbkNGR19OX0VO
VFJZKSAtIDE7CiAjZW5kaWYKIAotCW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiAjaWZkZWYg
Q09ORklHX1BQQzMyCiAJcHJfaW5mbygiS2VybmVsIHZpcnR1YWwgbWVtb3J5IGxheW91dDpcbiIp
OwogI2lmZGVmIENPTkZJR19LQVNBTgpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9tbS9pbml0LmMg
Yi9hcmNoL3Jpc2N2L21tL2luaXQuYwppbmRleCA3ZjUwMzZmYmVlOGMuLjNjNWVlM2I3ZDgxMSAx
MDA2NDQKLS0tIGEvYXJjaC9yaXNjdi9tbS9pbml0LmMKKysrIGIvYXJjaC9yaXNjdi9tbS9pbml0
LmMKQEAgLTEwMiw3ICsxMDIsNiBAQCB2b2lkIF9faW5pdCBtZW1faW5pdCh2b2lkKQogCWhpZ2hf
bWVtb3J5ID0gKHZvaWQgKikoX192YShQRk5fUEhZUyhtYXhfbG93X3BmbikpKTsKIAltZW1ibG9j
a19mcmVlX2FsbCgpOwogCi0JbWVtX2luaXRfcHJpbnRfaW5mbyhOVUxMKTsKIAlwcmludF92bV9s
YXlvdXQoKTsKIH0KIApkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL21tL2luaXQuYyBiL2FyY2gvczM5
MC9tbS9pbml0LmMKaW5kZXggMGU3NmIyMTI3ZGM2Li44YWM3MTBkZTFhYjEgMTAwNjQ0Ci0tLSBh
L2FyY2gvczM5MC9tbS9pbml0LmMKKysrIGIvYXJjaC9zMzkwL21tL2luaXQuYwpAQCAtMjA5LDgg
KzIwOSw2IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJc2V0dXBfemVyb19wYWdlcygp
OwkvKiBTZXR1cCB6ZXJvZWQgcGFnZXMuICovCiAKIAljbW1hX2luaXRfbm9kYXQoKTsKLQotCW1l
bV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiB9CiAKIHZvaWQgZnJlZV9pbml0bWVtKHZvaWQpCmRp
ZmYgLS1naXQgYS9hcmNoL3NoL21tL2luaXQuYyBiL2FyY2gvc2gvbW0vaW5pdC5jCmluZGV4IDBk
YjY5MTlhZjhkMy4uMTY4ZDdkNGRkNzM1IDEwMDY0NAotLS0gYS9hcmNoL3NoL21tL2luaXQuYwor
KysgYi9hcmNoL3NoL21tL2luaXQuYwpAQCAtMzU5LDcgKzM1OSw2IEBAIHZvaWQgX19pbml0IG1l
bV9pbml0KHZvaWQpCiAKIAl2c3lzY2FsbF9pbml0KCk7CiAKLQltZW1faW5pdF9wcmludF9pbmZv
KE5VTEwpOwogCXByX2luZm8oInZpcnR1YWwga2VybmVsIG1lbW9yeSBsYXlvdXQ6XG4iCiAJCSIg
ICAgZml4bWFwICA6IDB4JTA4bHggLSAweCUwOGx4ICAgKCU0bGQga0IpXG4iCiAJCSIgICAgdm1h
bGxvYyA6IDB4JTA4bHggLSAweCUwOGx4ICAgKCU0bGQgTUIpXG4iCmRpZmYgLS1naXQgYS9hcmNo
L3NwYXJjL21tL2luaXRfMzIuYyBiL2FyY2gvc3BhcmMvbW0vaW5pdF8zMi5jCmluZGV4IDYxMzlj
NTcwMGNjYy4uMWU5ZjU3N2YwODRkIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL21tL2luaXRfMzIu
YworKysgYi9hcmNoL3NwYXJjL21tL2luaXRfMzIuYwpAQCAtMjkyLDggKzI5Miw2IEBAIHZvaWQg
X19pbml0IG1lbV9pbml0KHZvaWQpCiAKIAkJbWFwX2hpZ2hfcmVnaW9uKHN0YXJ0X3BmbiwgZW5k
X3Bmbik7CiAJfQotCi0JbWVtX2luaXRfcHJpbnRfaW5mbyhOVUxMKTsKIH0KIAogdm9pZCBzcGFy
Y19mbHVzaF9wYWdlX3RvX3JhbShzdHJ1Y3QgcGFnZSAqcGFnZSkKZGlmZiAtLWdpdCBhL2FyY2gv
c3BhcmMvbW0vaW5pdF82NC5jIGIvYXJjaC9zcGFyYy9tbS9pbml0XzY0LmMKaW5kZXggMTgyYmI3
YmRhYTBhLi5lNDU0ZjE3OWNmNWQgMTAwNjQ0Ci0tLSBhL2FyY2gvc3BhcmMvbW0vaW5pdF82NC5j
CisrKyBiL2FyY2gvc3BhcmMvbW0vaW5pdF82NC5jCkBAIC0yNTIwLDcgKzI1MjAsNiBAQCB2b2lk
IF9faW5pdCBtZW1faW5pdCh2b2lkKQogCX0KIAltYXJrX3BhZ2VfcmVzZXJ2ZWQobWVtX21hcF96
ZXJvKTsKIAotCW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiAKIAlpZiAodGxiX3R5cGUgPT0g
Y2hlZXRhaCB8fCB0bGJfdHlwZSA9PSBjaGVldGFoX3BsdXMpCiAJCWNoZWV0YWhfZWNhY2hlX2Zs
dXNoX2luaXQoKTsKZGlmZiAtLWdpdCBhL2FyY2gvdW0va2VybmVsL21lbS5jIGIvYXJjaC91bS9r
ZXJuZWwvbWVtLmMKaW5kZXggOTI0MmRjOTFkNzUxLi45MDE5ZmY1OTA1YjEgMTAwNjQ0Ci0tLSBh
L2FyY2gvdW0va2VybmVsL21lbS5jCisrKyBiL2FyY2gvdW0va2VybmVsL21lbS5jCkBAIC01NCw3
ICs1NCw2IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJbWVtYmxvY2tfZnJlZV9hbGwo
KTsKIAltYXhfbG93X3BmbiA9IHRvdGFscmFtX3BhZ2VzKCk7CiAJbWF4X3BmbiA9IG1heF9sb3df
cGZuOwotCW1lbV9pbml0X3ByaW50X2luZm8oTlVMTCk7CiAJa21hbGxvY19vayA9IDE7CiB9CiAK
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L21tL2luaXRfMzIuYyBiL2FyY2gveDg2L21tL2luaXRfMzIu
YwppbmRleCBkYTMxYzI2MzVlZTQuLjIxZmZiMDNmNmM3MiAxMDA2NDQKLS0tIGEvYXJjaC94ODYv
bW0vaW5pdF8zMi5jCisrKyBiL2FyY2gveDg2L21tL2luaXRfMzIuYwpAQCAtNzU1LDggKzc1NSw2
IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJYWZ0ZXJfYm9vdG1lbSA9IDE7CiAJeDg2
X2luaXQuaHlwZXIuaW5pdF9hZnRlcl9ib290bWVtKCk7CiAKLQltZW1faW5pdF9wcmludF9pbmZv
KE5VTEwpOwotCiAJLyoKIAkgKiBDaGVjayBib3VuZGFyaWVzIHR3aWNlOiBTb21lIGZ1bmRhbWVu
dGFsIGluY29uc2lzdGVuY2llcyBjYW4KIAkgKiBiZSBkZXRlY3RlZCBhdCBidWlsZCB0aW1lIGFs
cmVhZHkuCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9tbS9pbml0XzY0LmMgYi9hcmNoL3g4Ni9tbS9p
bml0XzY0LmMKaW5kZXggNTQzMGM4MWVlZmM5Li5hYTgzODdhYWI5YzEgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L21tL2luaXRfNjQuYworKysgYi9hcmNoL3g4Ni9tbS9pbml0XzY0LmMKQEAgLTEzNTAs
OCArMTM1MCw2IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAJCWtjbGlzdF9hZGQoJmtj
b3JlX3ZzeXNjYWxsLCAodm9pZCAqKVZTWVNDQUxMX0FERFIsIFBBR0VfU0laRSwgS0NPUkVfVVNF
Uik7CiAKIAlwcmVhbGxvY2F0ZV92bWFsbG9jX3BhZ2VzKCk7Ci0KLQltZW1faW5pdF9wcmludF9p
bmZvKE5VTEwpOwogfQogCiAjaWZkZWYgQ09ORklHX0RFRkVSUkVEX1NUUlVDVF9QQUdFX0lOSVQK
ZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNhL21tL2luaXQuYyBiL2FyY2gveHRlbnNhL21tL2luaXQu
YwppbmRleCAyZGFlYmE5ZTQ1NGUuLjZhMzJiMmNmMjcxOCAxMDA2NDQKLS0tIGEvYXJjaC94dGVu
c2EvbW0vaW5pdC5jCisrKyBiL2FyY2gveHRlbnNhL21tL2luaXQuYwpAQCAtMTE5LDcgKzExOSw2
IEBAIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQpCiAKIAltZW1ibG9ja19mcmVlX2FsbCgpOwog
Ci0JbWVtX2luaXRfcHJpbnRfaW5mbyhOVUxMKTsKIAlwcl9pbmZvKCJ2aXJ0dWFsIGtlcm5lbCBt
ZW1vcnkgbGF5b3V0OlxuIgogI2lmZGVmIENPTkZJR19LQVNBTgogCQkiICAgIGthc2FuICAgOiAw
eCUwOGx4IC0gMHglMDhseCAgKCU1bHUgTUIpXG4iCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4
L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgKaW5kZXggODkzMTQ2NTFkZDYyLi5jMmUwYjM0OTVj
NWEgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbW0uaAorKysgYi9pbmNsdWRlL2xpbnV4L21t
LmgKQEAgLTIzNzMsNyArMjM3Myw3IEBAIGV4dGVybiB1bnNpZ25lZCBsb25nIGZyZWVfcmVzZXJ2
ZWRfYXJlYSh2b2lkICpzdGFydCwgdm9pZCAqZW5kLAogCQkJCQlpbnQgcG9pc29uLCBjb25zdCBj
aGFyICpzKTsKIAogZXh0ZXJuIHZvaWQgYWRqdXN0X21hbmFnZWRfcGFnZV9jb3VudChzdHJ1Y3Qg
cGFnZSAqcGFnZSwgbG9uZyBjb3VudCk7Ci1leHRlcm4gdm9pZCBtZW1faW5pdF9wcmludF9pbmZv
KGNvbnN0IGNoYXIgKnN0cik7CitleHRlcm4gdm9pZCBtZW1faW5pdF9wcmludF9pbmZvKHZvaWQp
OwogCiBleHRlcm4gdm9pZCByZXNlcnZlX2Jvb3RtZW1fcmVnaW9uKHBoeXNfYWRkcl90IHN0YXJ0
LCBwaHlzX2FkZHJfdCBlbmQpOwogCmRpZmYgLS1naXQgYS9pbml0L21haW4uYyBiL2luaXQvbWFp
bi5jCmluZGV4IDUzYjI3ODg0NWI4OC4uNTU4MWFmNWI0Y2I3IDEwMDY0NAotLS0gYS9pbml0L21h
aW4uYworKysgYi9pbml0L21haW4uYwpAQCAtODMwLDYgKzgzMCw3IEBAIHN0YXRpYyB2b2lkIF9f
aW5pdCBtbV9pbml0KHZvaWQpCiAJcmVwb3J0X21lbWluaXQoKTsKIAlzdGFja19kZXBvdF9pbml0
KCk7CiAJbWVtX2luaXQoKTsKKwltZW1faW5pdF9wcmludF9pbmZvKCk7CiAJLyogcGFnZV9vd25l
ciBtdXN0IGJlIGluaXRpYWxpemVkIGFmdGVyIGJ1ZGR5IGlzIHJlYWR5ICovCiAJcGFnZV9leHRf
aW5pdF9mbGF0bWVtX2xhdGUoKTsKIAlrbWVtX2NhY2hlX2luaXQoKTsKZGlmZiAtLWdpdCBhL21t
L3BhZ2VfYWxsb2MuYyBiL21tL3BhZ2VfYWxsb2MuYwppbmRleCA1NWQ5MzgyOTdjZTYuLmI1ZmU1
OTYyODM3YyAxMDA2NDQKLS0tIGEvbW0vcGFnZV9hbGxvYy5jCisrKyBiL21tL3BhZ2VfYWxsb2Mu
YwpAQCAtNzcyOCw3ICs3NzI4LDcgQEAgdW5zaWduZWQgbG9uZyBmcmVlX3Jlc2VydmVkX2FyZWEo
dm9pZCAqc3RhcnQsIHZvaWQgKmVuZCwgaW50IHBvaXNvbiwgY29uc3QgY2hhcgogCXJldHVybiBw
YWdlczsKIH0KIAotdm9pZCBfX2luaXQgbWVtX2luaXRfcHJpbnRfaW5mbyhjb25zdCBjaGFyICpz
dHIpCit2b2lkIF9faW5pdCBtZW1faW5pdF9wcmludF9pbmZvKHZvaWQpCiB7CiAJdW5zaWduZWQg
bG9uZyBwaHlzcGFnZXMsIGNvZGVzaXplLCBkYXRhc2l6ZSwgcm9zaXplLCBic3Nfc2l6ZTsKIAl1
bnNpZ25lZCBsb25nIGluaXRfY29kZV9zaXplLCBpbml0X2RhdGFfc2l6ZTsKQEAgLTc3NjcsMTcg
Kzc3NjcsMTcgQEAgdm9pZCBfX2luaXQgbWVtX2luaXRfcHJpbnRfaW5mbyhjb25zdCBjaGFyICpz
dHIpCiAjaWZkZWYJQ09ORklHX0hJR0hNRU0KIAkJIiwgJWx1SyBoaWdobWVtIgogI2VuZGlmCi0J
CSIlcyVzKVxuIiwKKwkJIilcbiIsCiAJCW5yX2ZyZWVfcGFnZXMoKSA8PCAoUEFHRV9TSElGVCAt
IDEwKSwKIAkJcGh5c3BhZ2VzIDw8IChQQUdFX1NISUZUIC0gMTApLAogCQljb2Rlc2l6ZSA+PiAx
MCwgZGF0YXNpemUgPj4gMTAsIHJvc2l6ZSA+PiAxMCwKIAkJKGluaXRfZGF0YV9zaXplICsgaW5p
dF9jb2RlX3NpemUpID4+IDEwLCBic3Nfc2l6ZSA+PiAxMCwKIAkJKHBoeXNwYWdlcyAtIHRvdGFs
cmFtX3BhZ2VzKCkgLSB0b3RhbGNtYV9wYWdlcykgPDwgKFBBR0VfU0hJRlQgLSAxMCksCi0JCXRv
dGFsY21hX3BhZ2VzIDw8IChQQUdFX1NISUZUIC0gMTApLAorCQl0b3RhbGNtYV9wYWdlcyA8PCAo
UEFHRV9TSElGVCAtIDEwKQogI2lmZGVmCUNPTkZJR19ISUdITUVNCi0JCXRvdGFsaGlnaF9wYWdl
cygpIDw8IChQQUdFX1NISUZUIC0gMTApLAorCQksIHRvdGFsaGlnaF9wYWdlcygpIDw8IChQQUdF
X1NISUZUIC0gMTApCiAjZW5kaWYKLQkJc3RyID8gIiwgIiA6ICIiLCBzdHIgPyBzdHIgOiAiIik7
CisJCSk7CiB9CiAKIC8qKgotLSAKMi4yNi4yCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMu
bGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVu
cmlzYwo=
