Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id B79A8502020
	for <lists+openrisc@lfdr.de>; Fri, 15 Apr 2022 03:27:26 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 6BA9324860;
	Fri, 15 Apr 2022 03:27:26 +0200 (CEST)
Received: from us-smtp-delivery-124.mimecast.com
 (us-smtp-delivery-124.mimecast.com [170.10.129.124])
 by mail.librecores.org (Postfix) with ESMTP id 6E6B62431D
 for <openrisc@lists.librecores.org>; Fri, 15 Apr 2022 03:27:24 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1649986043;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=38ilKsA+Bz5y6ZbyDlwPueFS6EFR/hQD87Mrty+58Zw=;
 b=fSW3Xw1TfvnZvq+Hdq7alob6nRjz2Fg6b1Jwc1crxxX0fTDFFZE6J3zhOIm76FCu/qsf3y
 SQ0mUXyZdP87C1FRZ7CyvrkFwYz0d+uyjv/isoK3SRgm6bBxlPymfJzMn4RhXHUfqH3zHo
 08kepDQS3/0dPrxS6MP94f69mqu/gIk=
Received: from mimecast-mx02.redhat.com (mimecast-mx02.redhat.com
 [66.187.233.88]) by relay.mimecast.com with ESMTP with STARTTLS
 (version=TLSv1.2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 us-mta-515-IFhh3HIZNkiHc7ebYSdlzA-1; Thu, 14 Apr 2022 21:27:17 -0400
X-MC-Unique: IFhh3HIZNkiHc7ebYSdlzA-1
Received: from smtp.corp.redhat.com (int-mx03.intmail.prod.int.rdu2.redhat.com
 [10.11.54.3])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx02.redhat.com (Postfix) with ESMTPS id 0A4C9800B21;
 Fri, 15 Apr 2022 01:27:16 +0000 (UTC)
Received: from [10.22.18.93] (unknown [10.22.18.93])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 43B00111D78E;
 Fri, 15 Apr 2022 01:27:12 +0000 (UTC)
Message-ID: <1e26726b-721e-7197-8834-8aff2b4c4bc3@redhat.com>
Date: Thu, 14 Apr 2022 21:27:12 -0400
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Content-Language: en-US
To: Palmer Dabbelt <palmer@rivosinc.com>, Arnd Bergmann <arnd@arndb.de>,
 heiko@sntech.de, guoren@kernel.org, shorne@gmail.com
References: <20220414220214.24556-1-palmer@rivosinc.com>
 <20220414220214.24556-2-palmer@rivosinc.com>
From: Waiman Long <longman@redhat.com>
In-Reply-To: <20220414220214.24556-2-palmer@rivosinc.com>
X-Scanned-By: MIMEDefang 2.78 on 10.11.54.3
Subject: Re: [OpenRISC] [PATCH v3 1/7] asm-generic: ticket-lock: New generic
 ticket-based spinlock
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: jonas@southpole.se, linux-arch@vger.kernel.org, wangkefeng.wang@huawei.com,
 aou@eecs.berkeley.edu, peterz@infradead.org,
 Greg KH <gregkh@linuxfoundation.org>, boqun.feng@gmail.com,
 linux-kernel@vger.kernel.org, linux-csky@vger.kernel.org, mingo@redhat.com,
 Palmer Dabbelt <palmer@dabbelt.com>, jszhang@kernel.org,
 Paul Walmsley <paul.walmsley@sifive.com>, linux-riscv@lists.infradead.org,
 Will Deacon <will@kernel.org>, sudipm.mukherjee@gmail.com,
 openrisc@lists.librecores.org, macro@orcam.me.uk
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gNC8xNC8yMiAxODowMiwgUGFsbWVyIERhYmJlbHQgd3JvdGU6Cj4gRnJvbTogUGV0ZXIgWmlq
bHN0cmEgPHBldGVyekBpbmZyYWRlYWQub3JnPgo+Cj4gVGhpcyBpcyBhIHNpbXBsZSwgZmFpciBz
cGlubG9jay4gIFNwZWNpZmljYWxseSBpdCBkb2Vzbid0IGhhdmUgYWxsIHRoZQo+IHN1YnRsZSBt
ZW1vcnkgbW9kZWwgZGVwZW5kZW5jaWVzIHRoYXQgcXNwaW5sb2NrIGhhcywgd2hpY2ggbWFrZXMg
aXQgbW9yZQo+IHN1aXRhYmxlIGZvciBzaW1wbGUgc3lzdGVtcyBhcyBpdCBpcyBtb3JlIGxpa2Vs
eSB0byBiZSBjb3JyZWN0LiAgSXQgaXMKPiBpbXBsZW1lbnRlZCBlbnRpcmVseSBpbiB0ZXJtcyBv
ZiBzdGFuZGFyZCBhdG9taWNzIGFuZCB0aHVzIHdvcmtzIGZpbmUKPiB3aXRob3V0IGFueSBhcmNo
LXNwZWNpZmljIGNvZGUuCj4KPiBUaGlzIHJlcGxhY2VzIHRoZSBleGlzdGluZyBhc20tZ2VuZXJp
Yy9zcGlubG9jay5oLCB3aGljaCBqdXN0IGVycm9yZWQKPiBvdXQgb24gU01QIHN5c3RlbXMuCj4K
PiBTaWduZWQtb2ZmLWJ5OiBQZXRlciBaaWpsc3RyYSAoSW50ZWwpIDxwZXRlcnpAaW5mcmFkZWFk
Lm9yZz4KPiBTaWduZWQtb2ZmLWJ5OiBQYWxtZXIgRGFiYmVsdCA8cGFsbWVyQHJpdm9zaW5jLmNv
bT4KPiAtLS0KPiAgIGluY2x1ZGUvYXNtLWdlbmVyaWMvc3BpbmxvY2suaCAgICAgICB8IDg1ICsr
KysrKysrKysrKysrKysrKysrKysrKystLS0KPiAgIGluY2x1ZGUvYXNtLWdlbmVyaWMvc3Bpbmxv
Y2tfdHlwZXMuaCB8IDE3ICsrKysrKwo+ICAgMiBmaWxlcyBjaGFuZ2VkLCA5NCBpbnNlcnRpb25z
KCspLCA4IGRlbGV0aW9ucygtKQo+ICAgY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvYXNtLWdl
bmVyaWMvc3BpbmxvY2tfdHlwZXMuaAo+Cj4gZGlmZiAtLWdpdCBhL2luY2x1ZGUvYXNtLWdlbmVy
aWMvc3BpbmxvY2suaCBiL2luY2x1ZGUvYXNtLWdlbmVyaWMvc3BpbmxvY2suaAo+IGluZGV4IGFk
YWY2YWNhYjE3Mi4uY2E4MjlmY2I5NjcyIDEwMDY0NAo+IC0tLSBhL2luY2x1ZGUvYXNtLWdlbmVy
aWMvc3BpbmxvY2suaAo+ICsrKyBiL2luY2x1ZGUvYXNtLWdlbmVyaWMvc3BpbmxvY2suaAo+IEBA
IC0xLDEyICsxLDgxIEBACj4gICAvKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMCAq
Lwo+IC0jaWZuZGVmIF9fQVNNX0dFTkVSSUNfU1BJTkxPQ0tfSAo+IC0jZGVmaW5lIF9fQVNNX0dF
TkVSSUNfU1BJTkxPQ0tfSAo+ICsKPiAgIC8qCj4gLSAqIFlvdSBuZWVkIHRvIGltcGxlbWVudCBh
c20vc3BpbmxvY2suaCBmb3IgU01QIHN1cHBvcnQuIFRoZSBnZW5lcmljCj4gLSAqIHZlcnNpb24g
ZG9lcyBub3QgaGFuZGxlIFNNUC4KPiArICogJ0dlbmVyaWMnIHRpY2tldC1sb2NrIGltcGxlbWVu
dGF0aW9uLgo+ICsgKgo+ICsgKiBJdCByZWxpZXMgb24gYXRvbWljX2ZldGNoX2FkZCgpIGhhdmlu
ZyB3ZWxsIGRlZmluZWQgZm9yd2FyZCBwcm9ncmVzcwo+ICsgKiBndWFyYW50ZWVzIHVuZGVyIGNv
bnRlbnRpb24uIElmIHlvdXIgYXJjaGl0ZWN0dXJlIGNhbm5vdCBwcm92aWRlIHRoaXMsIHN0aWNr
Cj4gKyAqIHRvIGEgdGVzdC1hbmQtc2V0IGxvY2suCj4gKyAqCj4gKyAqIEl0IGFsc28gcmVsaWVz
IG9uIGF0b21pY19mZXRjaF9hZGQoKSBiZWluZyBzYWZlIHZzIHNtcF9zdG9yZV9yZWxlYXNlKCkg
b24gYQo+ICsgKiBzdWItd29yZCBvZiB0aGUgdmFsdWUuIFRoaXMgaXMgZ2VuZXJhbGx5IHRydWUg
Zm9yIGFueXRoaW5nIExML1NDIGFsdGhvdWdoCj4gKyAqIHlvdSdkIGJlIGhhcmQgcHJlc3NlZCB0
byBmaW5kIGFueXRoaW5nIHVzZWZ1bCBpbiBhcmNoaXRlY3R1cmUgc3BlY2lmaWNhdGlvbnMKPiAr
ICogYWJvdXQgdGhpcy4gSWYgeW91ciBhcmNoaXRlY3R1cmUgY2Fubm90IGRvIHRoaXMgeW91IG1p
Z2h0IGJlIGJldHRlciBvZmYgd2l0aAo+ICsgKiBhIHRlc3QtYW5kLXNldC4KPiArICoKPiArICog
SXQgZnVydGhlciBhc3N1bWVzIGF0b21pY18qX3JlbGVhc2UoKSArIGF0b21pY18qX2FjcXVpcmUo
KSBpcyBSQ3BjIGFuZCBoZW5jZQo+ICsgKiB1c2VzIGF0b21pY19mZXRjaF9hZGQoKSB3aGljaCBp
cyBTQyB0byBjcmVhdGUgYW4gUkNzYyBsb2NrLgo+ICsgKgo+ICsgKiBUaGUgaW1wbGVtZW50YXRp
b24gdXNlcyBzbXBfY29uZF9sb2FkX2FjcXVpcmUoKSB0byBzcGluLCBzbyBpZiB0aGUKPiArICog
YXJjaGl0ZWN0dXJlIGhhcyBXRkUgbGlrZSBpbnN0cnVjdGlvbnMgdG8gc2xlZXAgaW5zdGVhZCBv
ZiBwb2xsIGZvciB3b3JkCj4gKyAqIG1vZGlmaWNhdGlvbnMgYmUgc3VyZSB0byBpbXBsZW1lbnQg
dGhhdCAoc2VlIEFSTTY0IGZvciBleGFtcGxlKS4KPiArICoKPiAgICAqLwo+IC0jaWZkZWYgQ09O
RklHX1NNUAo+IC0jZXJyb3IgbmVlZCBhbiBhcmNoaXRlY3R1cmUgc3BlY2lmaWMgYXNtL3NwaW5s
b2NrLmgKPiAtI2VuZGlmCj4gICAKPiAtI2VuZGlmIC8qIF9fQVNNX0dFTkVSSUNfU1BJTkxPQ0tf
SCAqLwo+ICsjaWZuZGVmIF9fQVNNX0dFTkVSSUNfVElDS0VUX0xPQ0tfSAo+ICsjZGVmaW5lIF9f
QVNNX0dFTkVSSUNfVElDS0VUX0xPQ0tfSApJdCBpcyBub3QgY29udmVudGlvbmFsIHRvIHVzZSBh
IG1hY3JvIG5hbWUgdGhhdCBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgCmhlYWRlciBmaWxlIG5hbWUu
Cj4gKwo+ICsjaW5jbHVkZSA8bGludXgvYXRvbWljLmg+Cj4gKyNpbmNsdWRlIDxhc20tZ2VuZXJp
Yy9zcGlubG9ja190eXBlcy5oPgo+ICsKPiArc3RhdGljIF9fYWx3YXlzX2lubGluZSB2b2lkIGFy
Y2hfc3Bpbl9sb2NrKGFyY2hfc3BpbmxvY2tfdCAqbG9jaykKPiArewo+ICsJdTMyIHZhbCA9IGF0
b21pY19mZXRjaF9hZGQoMTw8MTYsIGxvY2spOyAvKiBTQywgZ2l2ZXMgdXMgUkNzYyAqLwo+ICsJ
dTE2IHRpY2tldCA9IHZhbCA+PiAxNjsKPiArCj4gKwlpZiAodGlja2V0ID09ICh1MTYpdmFsKQo+
ICsJCXJldHVybjsKPiArCj4gKwlhdG9taWNfY29uZF9yZWFkX2FjcXVpcmUobG9jaywgdGlja2V0
ID09ICh1MTYpVkFMKTsKPiArfQo+ICsKPiArc3RhdGljIF9fYWx3YXlzX2lubGluZSBib29sIGFy
Y2hfc3Bpbl90cnlsb2NrKGFyY2hfc3BpbmxvY2tfdCAqbG9jaykKPiArewo+ICsJdTMyIG9sZCA9
IGF0b21pY19yZWFkKGxvY2spOwo+ICsKPiArCWlmICgob2xkID4+IDE2KSAhPSAob2xkICYgMHhm
ZmZmKSkKPiArCQlyZXR1cm4gZmFsc2U7Cj4gKwo+ICsJcmV0dXJuIGF0b21pY190cnlfY21weGNo
Zyhsb2NrLCAmb2xkLCBvbGQgKyAoMTw8MTYpKTsgLyogU0MsIGZvciBSQ3NjICovCj4gK30KPiAr
Cj4gK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCBhcmNoX3NwaW5fdW5sb2NrKGFyY2hfc3Bp
bmxvY2tfdCAqbG9jaykKPiArewo+ICsJdTE2ICpwdHIgPSAodTE2ICopbG9jayArIElTX0VOQUJM
RUQoQ09ORklHX0NQVV9CSUdfRU5ESUFOKTsKPiArCXUzMiB2YWwgPSBhdG9taWNfcmVhZChsb2Nr
KTsKPiArCj4gKwlzbXBfc3RvcmVfcmVsZWFzZShwdHIsICh1MTYpdmFsICsgMSk7Cj4gK30KPiAr
Cj4gK3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgaW50IGFyY2hfc3Bpbl9pc19sb2NrZWQoYXJjaF9z
cGlubG9ja190ICpsb2NrKQo+ICt7Cj4gKwl1MzIgdmFsID0gYXRvbWljX3JlYWQobG9jayk7Cj4g
Kwo+ICsJcmV0dXJuICgodmFsID4+IDE2KSAhPSAodmFsICYgMHhmZmZmKSk7Cj4gK30KPiArCj4g
K3N0YXRpYyBfX2Fsd2F5c19pbmxpbmUgaW50IGFyY2hfc3Bpbl9pc19jb250ZW5kZWQoYXJjaF9z
cGlubG9ja190ICpsb2NrKQo+ICt7Cj4gKwl1MzIgdmFsID0gYXRvbWljX3JlYWQobG9jayk7Cj4g
Kwo+ICsJcmV0dXJuIChzMTYpKCh2YWwgPj4gMTYpIC0gKHZhbCAmIDB4ZmZmZikpID4gMTsKPiAr
fQo+ICsKPiArc3RhdGljIF9fYWx3YXlzX2lubGluZSBpbnQgYXJjaF9zcGluX3ZhbHVlX3VubG9j
a2VkKGFyY2hfc3BpbmxvY2tfdCBsb2NrKQo+ICt7Cj4gKwlyZXR1cm4gIWFyY2hfc3Bpbl9pc19s
b2NrZWQoJmxvY2spOwo+ICt9Cj4gKwo+ICsjaW5jbHVkZSA8YXNtL3Fyd2xvY2suaD4KPiArCj4g
KyNlbmRpZiAvKiBfX0FTTV9HRU5FUklDX1RJQ0tFVF9MT0NLX0ggKi8KPiBkaWZmIC0tZ2l0IGEv
aW5jbHVkZS9hc20tZ2VuZXJpYy9zcGlubG9ja190eXBlcy5oIGIvaW5jbHVkZS9hc20tZ2VuZXJp
Yy9zcGlubG9ja190eXBlcy5oCj4gbmV3IGZpbGUgbW9kZSAxMDA2NDQKPiBpbmRleCAwMDAwMDAw
MDAwMDAuLmU1NmRkYjg0ZDAzMAo+IC0tLSAvZGV2L251bGwKPiArKysgYi9pbmNsdWRlL2FzbS1n
ZW5lcmljL3NwaW5sb2NrX3R5cGVzLmgKPiBAQCAtMCwwICsxLDE3IEBACj4gKy8qIFNQRFgtTGlj
ZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wICovCj4gKwo+ICsjaWZuZGVmIF9fQVNNX0dFTkVSSUNf
VElDS0VUX0xPQ0tfVFlQRVNfSAo+ICsjZGVmaW5lIF9fQVNNX0dFTkVSSUNfVElDS0VUX0xPQ0tf
VFlQRVNfSAo+ICsKPiArI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+Cj4gK3R5cGVkZWYgYXRvbWlj
X3QgYXJjaF9zcGlubG9ja190Owo+ICsKPiArLyoKPiArICogcXJ3bG9ja190eXBlcyBkZXBlbmRz
IG9uIGFyY2hfc3BpbmxvY2tfdCwgc28gd2UgbXVzdCB0eXBlZGVmIHRoYXQgYmVmb3JlIHRoZQo+
ICsgKiBpbmNsdWRlLgo+ICsgKi8KPiArI2luY2x1ZGUgPGFzbS9xcndsb2NrX3R5cGVzLmg+CgpJ
IGJlbGlldmUgdGhhdCBpZiB5b3UgZ3VhcmQgdGhlIGluY2x1ZGUgbGluZSBieQoKI2lmZGVmIENP
TkZJR19RVUVVRURfUldMT0NLCiNpbmNsdWRlIDxhc20vcXJ3bG9ja190eXBlcy5oPgojZW5kaWYK
CllvdSBtYXkgbm90IG5lZWQgdG8gZG8gdGhlIGhhY2sgaW4gcGF0Y2ggNS4KCllvdSBjYW4gYWxz
byBkaXJlY3RseSB1c2UgdGhlIDxhc20tZ2VuZXJpYy9xcndsb2NrX3R5cGVzLmg+IGxpbmUgd2l0
aG91dCAKaW1wb3J0aW5nIGl0IHRvIGluY2x1ZGUvYXNtLgoKQ2hlZXJzLApMb25nbWFuCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWls
aW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJy
ZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
