Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id AF3891D2010
	for <lists+openrisc@lfdr.de>; Wed, 13 May 2020 22:17:52 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 8BC2420857;
	Wed, 13 May 2020 22:17:52 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 281BD20ADA
 for <openrisc@lists.librecores.org>; Tue, 12 May 2020 20:47:26 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 8CBA52176D;
 Tue, 12 May 2020 18:47:11 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1589309244;
 bh=+fmiA99prmzg2eE+MWTNmdUWwV+Tf/EwzF8bxR39ag8=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=RbLoD1c0c1xft8ovRqkpRhPNEdQQ2gsCg4iNv0DFxfTpYshmuAbx5D62t83OCJY63
 IuV9+hoOe25IcTLBIIy9ukceQ5lrKMQjlyzK6iz3/ndQIvpZGQJiTlGiay2ebGTl22
 cf/ro7SOsa79hRnLsNt5RCeQz1bnCCUu4qF0SPEs=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Tue, 12 May 2020 21:44:21 +0300
Message-Id: <20200512184422.12418-12-rppt@kernel.org>
X-Mailer: git-send-email 2.26.1
In-Reply-To: <20200512184422.12418-1-rppt@kernel.org>
References: <20200512184422.12418-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Wed, 13 May 2020 22:17:32 +0200
Subject: [OpenRISC] [PATCH 11/12] mm: consolidate pud_index() and
 pud_offset() definitions
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Max Filippov <jcmvbkbc@gmail.com>,
 Guo Ren <guoren@kernel.org>, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Vincent Chen <deanbo422@gmail.com>,
 Will Deacon <will@kernel.org>, Greg Ungerer <gerg@linux-m68k.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-c6x-dev@linux-c6x.org, Brian Cain <bcain@codeaurora.org>,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>, Mike Rapoport <rppt@linux.ibm.com>,
 Ingo Molnar <mingo@redhat.com>, linux-parisc@vger.kernel.org,
 Mark Salter <msalter@redhat.com>, Matt Turner <mattst88@gmail.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Arnd Bergmann <arnd@arndb.de>, linux-alpha@vger.kernel.org,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 Tony Luck <tony.luck@intel.com>, Borislav Petkov <bp@alien8.de>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Chris Zankel <chris@zankel.net>, Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Thomas Gleixner <tglx@linutronix.de>, Richard Weinberger <richard@nod.at>,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKQWxsIGFyY2hpdGVjdHVy
ZXMgdGhhdCBoYXZlIGF0IGxlYXN0IGZvdXItbGV2ZWwgcGFnZSB0YWJsZXMgZGVmaW5lCnB1ZF9v
ZmZzZXQoKSBhcyBhbiBlbnRyeSBpbiB0aGUgYXJyYXkgb2YgUFVEcyBpbmRleGVkIGJ5IHRoZSBw
dWRfaW5kZXgoKSwKd2hlcmUgcHVkX2luZGV4KCkgaXMKCgkoYWRkcmVzcyA+PiBQVURfU0hJRlQp
ICYgKFBUUlNfUEVSX1BVRCAtIDEpCgpGb3IgdGhlIG1vc3QgYXJjaGl0ZWN0dXJlcyB0aGUgcHVk
X29mZnNldCgpIGltcGxlbWVudGF0aW9uIHJlbGllcyBvbgp0aGUgYXZhaWxhYmlsaXR5IG9mIHB1
ZF9wYWdlX3ZhZGRyKCkgdGhhdCBjb252ZXJ0cyBhIFBVRCBlbnRyeSB2YWx1ZSB0byB0aGUKdmly
dHVhbCBhZGRyZXNzIG9mIHRoZSBwYWdlIGNvbnRhaW5pbmcgUFVEIGFycmF5LgoKTGV0J3MgdXNl
IHN1Y2ggaW1wbGVtZW50YXRpb24gYXMgYSBnZW5lcmljIGFuZCBkcm9wIG1vc3Qgb2YgdGhlIGRl
ZmluaXRpb25zCm9mIHB1ZF9pbmRleCgpIGFuZCBwdWRfb2Zmc2V0KCkgaW4gPGFzbS9wZ3RhYmxl
Lmg+IGZpbGVzLgoKVGhlIGFyY2hpdGVjdHVyZXMgdGhhdCBkaWRuJ3QgcHJvdmlkZSBwdWRfcGFn
ZV92YWRkcigpIGFyZSB1cGRhdGVkIHRvCmhhdmUgdGhhdCBkZWZpbmVkLgoKVGhlIGdlbmVyaWMg
aW1wbGVtZW50YXRpb24gY2FuIGJlIG92ZXJyaWRkZW4gYnkgYW4gYXJjaGl0ZWN0dXJlIGFuZCB0
aGlzCmFiaWxpdHkgaXMgY3VycmVudGx5IGluIHVzZSBieSB0aGVyZSBhcmNoaXRlY3R1cmVzOgoq
IHMzOTAgaGFzIGN1c3RvbSBkZWZpbml0aW9ucyBvZiBhbGwgcGFnZSB0YWJsZSBhY2Nlc3NvcnMK
ClNpZ25lZC1vZmYtYnk6IE1pa2UgUmFwb3BvcnQgPHJwcHRAbGludXguaWJtLmNvbT4KLS0tCiBh
cmNoL2FybTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAgICAgICAgICB8ICA4ICsrKysr
LS0tCiBhcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAgICAgICAgICB8ICAy
IC0tCiBhcmNoL2lhNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAgICAgICAgICB8ICA2
IC0tLS0tLQogYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtMzIuaCAgICAgICAgICAgICAg
fCAgMSAtCiBhcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS02NC5oICAgICAgICAgICAgICB8
ICA3IC0tLS0tLS0KIGFyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5o
ICAgIHwgIDQgLS0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxl
LTRrLmggfCAgNCAtLS0tCiBhcmNoL3MzOTAvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgICAg
ICAgICAgICB8ICAxICsKIGFyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oICAgICAgICAg
ICAgICAgIHwgIDIgLS0KIGFyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oICAgICAgICAg
ICAgICAgIHwgIDIgLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oICAgICAg
ICAgICAgIHwgIDUgLS0tLS0KIGFyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGUuaCAgICAgICAg
ICAgICAgICAgIHwgMTEgLS0tLS0tLS0tLS0KIGluY2x1ZGUvYXNtLWdlbmVyaWMvcGd0YWJsZS1u
b3B1ZC5oICAgICAgICAgICAgIHwgIDEgKwogaW5jbHVkZS9saW51eC9wZ3RhYmxlLmggICAgICAg
ICAgICAgICAgICAgICAgICAgfCAxNiArKysrKysrKysrKysrKysrCiAxNCBmaWxlcyBjaGFuZ2Vk
LCAyMyBpbnNlcnRpb25zKCspLCA0NyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2Fy
bTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGd0YWJs
ZS5oCmluZGV4IGQwMTc1MzM1YTJmMi4uYzAxNTU4MTRiMzc0IDEwMDY0NAotLS0gYS9hcmNoL2Fy
bTY0L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3Bn
dGFibGUuaApAQCAtNjI2LDExICs2MjYsMTMgQEAgc3RhdGljIGlubGluZSBwaHlzX2FkZHJfdCBw
NGRfcGFnZV9wYWRkcihwNGRfdCBwNGQpCiAJcmV0dXJuIF9fcDRkX3RvX3BoeXMocDRkKTsKIH0K
IAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUgZnJzdC1sZXZlbCBwYWdlIHRhYmxlLiAqLwotI2Rl
ZmluZSBwdWRfaW5kZXgoYWRkcikJCSgoKGFkZHIpID4+IFBVRF9TSElGVCkgJiAoUFRSU19QRVJf
UFVEIC0gMSkpCitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcDRkX3BhZ2VfdmFkZHIocDRk
X3QgcDRkKQoreworCXJldHVybiAodW5zaWduZWQgbG9uZylfX3ZhKHA0ZF9wYWdlX3BhZGRyKHA0
ZCkpOworfQogCisvKiBGaW5kIGFuIGVudHJ5IGluIHRoZSBmcnN0LWxldmVsIHBhZ2UgdGFibGUu
ICovCiAjZGVmaW5lIHB1ZF9vZmZzZXRfcGh5cyhkaXIsIGFkZHIpCShwNGRfcGFnZV9wYWRkcihS
RUFEX09OQ0UoKihkaXIpKSkgKyBwdWRfaW5kZXgoYWRkcikgKiBzaXplb2YocHVkX3QpKQotI2Rl
ZmluZSBwdWRfb2Zmc2V0KGRpciwgYWRkcikJCSgocHVkX3QgKilfX3ZhKHB1ZF9vZmZzZXRfcGh5
cygoZGlyKSwgKGFkZHIpKSkpCiAKICNkZWZpbmUgcHVkX3NldF9maXhtYXAoYWRkcikJCSgocHVk
X3QgKilzZXRfZml4bWFwX29mZnNldChGSVhfUFVELCBhZGRyKSkKICNkZWZpbmUgcHVkX3NldF9m
aXhtYXBfb2Zmc2V0KHA0ZCwgYWRkcikJcHVkX3NldF9maXhtYXAocHVkX29mZnNldF9waHlzKHA0
ZCwgYWRkcikpCmRpZmYgLS1naXQgYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oIGIv
YXJjaC9jc2t5L2luY2x1ZGUvYXNtL3BndGFibGUuaAppbmRleCBkYzYxM2YyMGUyZTEuLmM1YWIy
MDk3MDg1NyAxMDA2NDQKLS0tIGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysg
Yi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vcGd0YWJsZS5oCkBAIC0yMjAsOCArMjIwLDYgQEAgc3Rh
dGljIGlubGluZSBwdGVfdCBwdGVfbWt5b3VuZyhwdGVfdCBwdGUpCiAJcmV0dXJuIHB0ZTsKIH0K
IAotI2RlZmluZSBwdWRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4gUFVEX1NISUZUKSAm
IChQVFJTX1BFUl9QVUQtMSkpCi0KIC8qIHRvIGZpbmQgYW4gZW50cnkgaW4gYSBrZXJuZWwgcGFn
ZS10YWJsZS1kaXJlY3RvcnkgKi8KICNkZWZpbmUgcGdkX29mZnNldF9rKGFkZHJlc3MpCXBnZF9v
ZmZzZXQoJmluaXRfbW0sIGFkZHJlc3MpCiAKZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9pbmNsdWRl
L2FzbS9wZ3RhYmxlLmggYi9hcmNoL2lhNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IGQ3
NWQ5ODFlNmVlMS4uNGMyNGU1ZTE4YmZmIDEwMDY0NAotLS0gYS9hcmNoL2lhNjQvaW5jbHVkZS9h
c20vcGd0YWJsZS5oCisrKyBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTM4
MywxMiArMzgzLDYgQEAgcGdkX29mZnNldCAoY29uc3Qgc3RydWN0IG1tX3N0cnVjdCAqbW0sIHVu
c2lnbmVkIGxvbmcgYWRkcmVzcykKICAgIGhlcmUuICAqLwogI2RlZmluZSBwZ2Rfb2Zmc2V0X2dh
dGUobW0sIGFkZHIpCXBnZF9vZmZzZXRfayhhZGRyKQogCi0jaWYgQ09ORklHX1BHVEFCTEVfTEVW
RUxTID09IDQKLS8qIEZpbmQgYW4gZW50cnkgaW4gdGhlIHNlY29uZC1sZXZlbCBwYWdlIHRhYmxl
Li4gKi8KLSNkZWZpbmUgcHVkX29mZnNldChkaXIsYWRkcikgXAotCSgocHVkX3QgKikgcDRkX3Bh
Z2VfdmFkZHIoKihkaXIpKSArICgoKGFkZHIpID4+IFBVRF9TSElGVCkgJiAoUFRSU19QRVJfUFVE
IC0gMSkpKQotI2VuZGlmCi0KIC8qIGF0b21pYyB2ZXJzaW9ucyBvZiB0aGUgc29tZSBQVEUgbWFu
aXB1bGF0aW9uczogKi8KIAogc3RhdGljIGlubGluZSBpbnQKZGlmZiAtLWdpdCBhL2FyY2gvbWlw
cy9pbmNsdWRlL2FzbS9wZ3RhYmxlLTMyLmggYi9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGd0YWJs
ZS0zMi5oCmluZGV4IDA1YjUxYzM0NDkzOS4uOWMwZTdhNWZmYzc1IDEwMDY0NAotLS0gYS9hcmNo
L21pcHMvaW5jbHVkZS9hc20vcGd0YWJsZS0zMi5oCisrKyBiL2FyY2gvbWlwcy9pbmNsdWRlL2Fz
bS9wZ3RhYmxlLTMyLmgKQEAgLTE5OSw3ICsxOTksNiBAQCBzdGF0aWMgaW5saW5lIHB0ZV90IHBm
bl9wdGUodW5zaWduZWQgbG9uZyBwZm4sIHBncHJvdF90IHByb3QpCiAjZGVmaW5lIHBnZF9vZmZz
ZXRfayhhZGRyZXNzKSBwZ2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyZXNzKQogCiAjZGVmaW5lIHBn
ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQR0RJUl9TSElGVCkgJiAoUFRSU19QRVJf
UEdELTEpKQotI2RlZmluZSBwdWRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4gUFVEX1NI
SUZUKSAmIChQVFJTX1BFUl9QVUQtMSkpCiAKIC8qIHRvIGZpbmQgYW4gZW50cnkgaW4gYSBwYWdl
LXRhYmxlLWRpcmVjdG9yeSAqLwogI2RlZmluZSBwZ2Rfb2Zmc2V0KG1tLCBhZGRyKQkoKG1tKS0+
cGdkICsgcGdkX2luZGV4KGFkZHIpKQpkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2luY2x1ZGUvYXNt
L3BndGFibGUtNjQuaCBiL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS9wZ3RhYmxlLTY0LmgKaW5kZXgg
MjFmYjU1NTEwZDM1Li4zODE3MGZkYWM1YmYgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9pbmNsdWRl
L2FzbS9wZ3RhYmxlLTY0LmgKKysrIGIvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BndGFibGUtNjQu
aApAQCAtMTcyLDggKzE3Miw2IEBACiAKIGV4dGVybiBwdGVfdCBpbnZhbGlkX3B0ZV90YWJsZVtQ
VFJTX1BFUl9QVEVdOwogCi0jZGVmaW5lIHB1ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+
PiBQVURfU0hJRlQpICYgKFBUUlNfUEVSX1BVRCAtIDEpKQotCiAjaWZuZGVmIF9fUEFHRVRBQkxF
X1BVRF9GT0xERUQKIC8qCiAgKiBGb3IgNC1sZXZlbCBwYWdldGFibGVzIHdlIGRlZmluZXMgdGhl
c2Ugb3Vyc2VsdmVzLCBmb3IgMy1sZXZlbCB0aGUKQEAgLTIyMiwxMSArMjIwLDYgQEAgc3RhdGlj
IGlubGluZSB1bnNpZ25lZCBsb25nIHA0ZF9wYWdlX3ZhZGRyKHA0ZF90IHA0ZCkKIAogI2RlZmlu
ZSBwNGRfaW5kZXgoYWRkcmVzcykJKCgoYWRkcmVzcykgPj4gUDREX1NISUZUKSAmIChQVFJTX1BF
Ul9QNEQgLSAxKSkKIAotc3RhdGljIGlubGluZSBwdWRfdCAqcHVkX29mZnNldChwNGRfdCAqcDRk
LCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCi17Ci0JcmV0dXJuIChwdWRfdCAqKXA0ZF9wYWdlX3Zh
ZGRyKCpwNGQpICsgcHVkX2luZGV4KGFkZHJlc3MpOwotfQotCiBzdGF0aWMgaW5saW5lIHZvaWQg
c2V0X3A0ZChwNGRfdCAqcDRkLCBwNGRfdCBwNGR2YWwpCiB7CiAJKnA0ZCA9IHA0ZHZhbDsKZGlm
ZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oIGIv
YXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL2Jvb2szcy82NC9wZ3RhYmxlLmgKaW5kZXggZmJiNWQx
MmM2MjE0Li5mZmZlMjhkNTJjMDIgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2Fz
bS9ib29rM3MvNjQvcGd0YWJsZS5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29r
M3MvNjQvcGd0YWJsZS5oCkBAIC0xMDA5LDcgKzEwMDksNiBAQCBleHRlcm4gc3RydWN0IHBhZ2Ug
KnA0ZF9wYWdlKHA0ZF90IHA0ZCk7CiAjZGVmaW5lIHA0ZF9wYWdlX3ZhZGRyKHA0ZCkJX192YShw
NGRfdmFsKHA0ZCkgJiB+UDREX01BU0tFRF9CSVRTKQogCiAjZGVmaW5lIHBnZF9pbmRleChhZGRy
ZXNzKSAoKChhZGRyZXNzKSA+PiAoUEdESVJfU0hJRlQpKSAmIChQVFJTX1BFUl9QR0QgLSAxKSkK
LSNkZWZpbmUgcHVkX2luZGV4KGFkZHJlc3MpICgoKGFkZHJlc3MpID4+IChQVURfU0hJRlQpKSAm
IChQVFJTX1BFUl9QVUQgLSAxKSkKIAogLyoKICAqIEZpbmQgYW4gZW50cnkgaW4gYSBwYWdlLXRh
YmxlLWRpcmVjdG9yeS4gIFdlIGNvbWJpbmUgdGhlIGFkZHJlc3MgcmVnaW9uCkBAIC0xMDE4LDkg
KzEwMTcsNiBAQCBleHRlcm4gc3RydWN0IHBhZ2UgKnA0ZF9wYWdlKHA0ZF90IHA0ZCk7CiAKICNk
ZWZpbmUgcGdkX29mZnNldChtbSwgYWRkcmVzcykJICgobW0pLT5wZ2QgKyBwZ2RfaW5kZXgoYWRk
cmVzcykpCiAKLSNkZWZpbmUgcHVkX29mZnNldChwNGRwLCBhZGRyKQlcCi0JKCgocHVkX3QgKikg
cDRkX3BhZ2VfdmFkZHIoKihwNGRwKSkpICsgcHVkX2luZGV4KGFkZHIpKQotCiAvKiB0byBmaW5k
IGFuIGVudHJ5IGluIGEga2VybmVsIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAvKiBUaGlzIG5v
dyBvbmx5IGNvbnRhaW5zIHRoZSB2bWFsbG9jIHBhZ2VzICovCiAjZGVmaW5lIHBnZF9vZmZzZXRf
ayhhZGRyZXNzKSBwZ2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyZXNzKQpkaWZmIC0tZ2l0IGEvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82NC9wZ3RhYmxlLTRrLmggYi9hcmNoL3Bvd2Vy
cGMvaW5jbHVkZS9hc20vbm9oYXNoLzY0L3BndGFibGUtNGsuaAppbmRleCA4MWIxYzU0ZTNjZjEu
LmZlMmY0YzlhY2Q5ZSAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFz
aC82NC9wZ3RhYmxlLTRrLmgKKysrIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL25vaGFzaC82
NC9wZ3RhYmxlLTRrLmgKQEAgLTc4LDEwICs3OCw2IEBAIGV4dGVybiBzdHJ1Y3QgcGFnZSAqcDRk
X3BhZ2UocDRkX3QgcDRkKTsKIAogI2VuZGlmIC8qICFfX0FTU0VNQkxZX18gKi8KIAotI2RlZmlu
ZSBwdWRfb2Zmc2V0KHA0ZHAsIGFkZHIpCVwKLSAgKCgocHVkX3QgKikgcDRkX3BhZ2VfdmFkZHIo
KihwNGRwKSkpICsgXAotICAgICgoKGFkZHIpID4+IFBVRF9TSElGVCkgJiAoUFRSU19QRVJfUFVE
IC0gMSkpKQotCiAjZGVmaW5lIHB1ZF9FUlJPUihlKSBcCiAJcHJfZXJyKCIlczolZDogYmFkIHB1
ZCAlMDhseC5cbiIsIF9fRklMRV9fLCBfX0xJTkVfXywgcHVkX3ZhbChlKSkKIApkaWZmIC0tZ2l0
IGEvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvczM5MC9pbmNsdWRlL2Fz
bS9wZ3RhYmxlLmgKaW5kZXggYzE2MmU1MGM3Njg5Li5lMWVlZjY3YTA4NzcgMTAwNjQ0Ci0tLSBh
L2FyY2gvczM5MC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKKysrIGIvYXJjaC9zMzkwL2luY2x1ZGUv
YXNtL3BndGFibGUuaApAQCAtMTI3NCw2ICsxMjc0LDcgQEAgc3RhdGljIGlubGluZSBwdWRfdCAq
cHVkX29mZnNldChwNGRfdCAqcDRkLCB1bnNpZ25lZCBsb25nIGFkZHJlc3MpCiAJCXJldHVybiAo
cHVkX3QgKikgcDRkX2RlcmVmKCpwNGQpICsgcHVkX2luZGV4KGFkZHJlc3MpOwogCXJldHVybiAo
cHVkX3QgKikgcDRkOwogfQorI2RlZmluZSBwdWRfb2Zmc2V0IHB1ZF9vZmZzZXQKIAogc3RhdGlj
IGlubGluZSBwbWRfdCAqcG1kX29mZnNldChwdWRfdCAqcHVkLCB1bnNpZ25lZCBsb25nIGFkZHJl
c3MpCiB7CmRpZmYgLS1naXQgYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaCBiL2Fy
Y2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV8zMi5oCmluZGV4IDMwMjM5NDNjZTczMS4uY2NjMDMy
ZTg5Zjc1IDEwMDY0NAotLS0gYS9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaAorKysg
Yi9hcmNoL3NoL2luY2x1ZGUvYXNtL3BndGFibGVfMzIuaApAQCAtNDE1LDggKzQxNSw2IEBAIHN0
YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwbWRfcGFnZV92YWRkcihwbWRfdCBwbWQpCiAvKiB0
byBmaW5kIGFuIGVudHJ5IGluIGEga2VybmVsIHBhZ2UtdGFibGUtZGlyZWN0b3J5ICovCiAjZGVm
aW5lIHBnZF9vZmZzZXRfayhhZGRyZXNzKQlwZ2Rfb2Zmc2V0KCZpbml0X21tLCBhZGRyZXNzKQog
Ci0jZGVmaW5lIHB1ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNzKSA+PiBQVURfU0hJRlQpICYg
KFBUUlNfUEVSX1BVRC0xKSkKLQogI2lmZGVmIENPTkZJR19YMlRMQgogI2RlZmluZSBwdGVfRVJS
T1IoZSkgXAogCXByaW50aygiJXM6JWQ6IGJhZCBwdGUgJXAoJTA4bHglMDhseCkuXG4iLCBfX0ZJ
TEVfXywgX19MSU5FX18sIFwKZGlmZiAtLWdpdCBhL2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJs
ZV82NC5oIGIvYXJjaC9zaC9pbmNsdWRlL2FzbS9wZ3RhYmxlXzY0LmgKaW5kZXggOGQ1OTQ4Zjky
Y2FmLi42MGFlZjExOTE3ODQgMTAwNjQ0Ci0tLSBhL2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJs
ZV82NC5oCisrKyBiL2FyY2gvc2gvaW5jbHVkZS9hc20vcGd0YWJsZV82NC5oCkBAIC01MSw4ICs1
MSw2IEBAIHN0YXRpYyBfX2lubGluZV9fIHZvaWQgc2V0X3B0ZShwdGVfdCAqcHRlcHRyLCBwdGVf
dCBwdGV2YWwpCiAvKiBUbyBmaW5kIGFuIGVudHJ5IGluIGEga2VybmVsIFBHRC4gKi8KICNkZWZp
bmUgcGdkX29mZnNldF9rKGFkZHJlc3MpIHBnZF9vZmZzZXQoJmluaXRfbW0sIGFkZHJlc3MpCiAK
LSNkZWZpbmUgcHVkX2luZGV4KGFkZHJlc3MpCSgoKGFkZHJlc3MpID4+IFBVRF9TSElGVCkgJiAo
UFRSU19QRVJfUFVELTEpKQotCiAvKgogICogUE1EIGxldmVsIGFjY2VzcyByb3V0aW5lcy4gU2Ft
ZSBub3RlcyBhcyBhYm92ZS4KICAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9zcGFyYy9pbmNsdWRlL2Fz
bS9wZ3RhYmxlXzY0LmggYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3BndGFibGVfNjQuaAppbmRl
eCAyZGExY2VjNjBmNGUuLmY1NDZlYTQ2ZDQxYiAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9pbmNs
dWRlL2FzbS9wZ3RhYmxlXzY0LmgKKysrIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wZ3RhYmxl
XzY0LmgKQEAgLTg5NiwxMSArODk2LDYgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIHB1
ZF9wZm4ocHVkX3QgcHVkKQogLyogdG8gZmluZCBhbiBlbnRyeSBpbiBhIGtlcm5lbCBwYWdlLXRh
YmxlLWRpcmVjdG9yeSAqLwogI2RlZmluZSBwZ2Rfb2Zmc2V0X2soYWRkcmVzcykgcGdkX29mZnNl
dCgmaW5pdF9tbSwgYWRkcmVzcykKIAotLyogRmluZCBhbiBlbnRyeSBpbiB0aGUgdGhpcmQtbGV2
ZWwgcGFnZSB0YWJsZS4uICovCi0jZGVmaW5lIHB1ZF9pbmRleChhZGRyZXNzKQkoKChhZGRyZXNz
KSA+PiBQVURfU0hJRlQpICYgKFBUUlNfUEVSX1BVRCAtIDEpKQotI2RlZmluZSBwdWRfb2Zmc2V0
KHA0ZHAsIGFkZHJlc3MpCVwKLQkoKHB1ZF90ICopIHA0ZF9wYWdlX3ZhZGRyKCoocDRkcCkpICsg
cHVkX2luZGV4KGFkZHJlc3MpKQotCiAvKiBXZSBjYW5ub3QgaW5jbHVkZSA8bGludXgvbW1fdHlw
ZXMuaD4gYXQgdGhpcyBwb2ludCB5ZXQ6ICovCiBleHRlcm4gc3RydWN0IG1tX3N0cnVjdCBpbml0
X21tOwogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggYi9hcmNo
L3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKaW5kZXggMzVlM2JmODZkZjIwLi45N2VmZGM2MmU3
NDAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BndGFibGUuaAorKysgYi9hcmNo
L3g4Ni9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgKQEAgLTg5NSwxMSArODk1LDYgQEAgc3RhdGljIGlu
bGluZSBpbnQgcHVkX2xhcmdlKHB1ZF90IHB1ZCkKIH0KICNlbmRpZgkvKiBDT05GSUdfUEdUQUJM
RV9MRVZFTFMgPiAyICovCiAKLXN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBwdWRfaW5kZXgo
dW5zaWduZWQgbG9uZyBhZGRyZXNzKQotewotCXJldHVybiAoYWRkcmVzcyA+PiBQVURfU0hJRlQp
ICYgKFBUUlNfUEVSX1BVRCAtIDEpOwotfQotCiAjaWYgQ09ORklHX1BHVEFCTEVfTEVWRUxTID4g
Mwogc3RhdGljIGlubGluZSBpbnQgcDRkX25vbmUocDRkX3QgcDRkKQogewpAQCAtOTIyLDEyICs5
MTcsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcDRkX3BhZ2VfdmFkZHIocDRkX3Qg
cDRkKQogICovCiAjZGVmaW5lIHA0ZF9wYWdlKHA0ZCkJcGZuX3RvX3BhZ2UocDRkX3BmbihwNGQp
KQogCi0vKiBGaW5kIGFuIGVudHJ5IGluIHRoZSB0aGlyZC1sZXZlbCBwYWdlIHRhYmxlLi4gKi8K
LXN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9vZmZzZXQocDRkX3QgKnA0ZCwgdW5zaWduZWQgbG9u
ZyBhZGRyZXNzKQotewotCXJldHVybiAocHVkX3QgKilwNGRfcGFnZV92YWRkcigqcDRkKSArIHB1
ZF9pbmRleChhZGRyZXNzKTsKLX0KLQogc3RhdGljIGlubGluZSBpbnQgcDRkX2JhZChwNGRfdCBw
NGQpCiB7CiAJdW5zaWduZWQgbG9uZyBpZ25vcmVfZmxhZ3MgPSBfS0VSTlBHX1RBQkxFIHwgX1BB
R0VfVVNFUjsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvYXNtLWdlbmVyaWMvcGd0YWJsZS1ub3B1ZC5o
IGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9wZ3RhYmxlLW5vcHVkLmgKaW5kZXggYWQwNWMxNjg0YmZj
Li5hOWQ3NTFmYmRhOWUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvYXNtLWdlbmVyaWMvcGd0YWJsZS1u
b3B1ZC5oCisrKyBiL2luY2x1ZGUvYXNtLWdlbmVyaWMvcGd0YWJsZS1ub3B1ZC5oCkBAIC00Myw2
ICs0Myw3IEBAIHN0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9vZmZzZXQocDRkX3QgKnA0ZCwgdW5z
aWduZWQgbG9uZyBhZGRyZXNzKQogewogCXJldHVybiAocHVkX3QgKilwNGQ7CiB9CisjZGVmaW5l
IHB1ZF9vZmZzZXQgcHVkX29mZnNldAogCiAjZGVmaW5lIHB1ZF92YWwoeCkJCQkJKHA0ZF92YWwo
KHgpLnA0ZCkpCiAjZGVmaW5lIF9fcHVkKHgpCQkJCSgocHVkX3QpIHsgX19wNGQoeCkgfSkKZGlm
ZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvcGd0YWJsZS5oIGIvaW5jbHVkZS9saW51eC9wZ3RhYmxl
LmgKaW5kZXggMTRjZmViMzQ0M2M1Li4zYTc4ZWYzOGVkYTYgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
bGludXgvcGd0YWJsZS5oCisrKyBiL2luY2x1ZGUvbGludXgvcGd0YWJsZS5oCkBAIC01Myw2ICs1
MywxNCBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcG1kX2luZGV4KHVuc2lnbmVkIGxv
bmcgYWRkcmVzcykKICNkZWZpbmUgcG1kX2luZGV4IHBtZF9pbmRleAogI2VuZGlmCiAKKyNpZm5k
ZWYgcHVkX2luZGV4CitzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgcHVkX2luZGV4KHVuc2ln
bmVkIGxvbmcgYWRkcmVzcykKK3sKKwlyZXR1cm4gKGFkZHJlc3MgPj4gUFVEX1NISUZUKSAmIChQ
VFJTX1BFUl9QVUQgLSAxKTsKK30KKyNkZWZpbmUgcHVkX2luZGV4IHB1ZF9pbmRleAorI2VuZGlm
CisKICNpZm5kZWYgcHRlX29mZnNldF9rZXJuZWwKIHN0YXRpYyBpbmxpbmUgcHRlX3QgKnB0ZV9v
ZmZzZXRfa2VybmVsKHBtZF90ICpwbWQsIHVuc2lnbmVkIGxvbmcgYWRkcmVzcykKIHsKQEAgLTgw
LDYgKzg4LDE0IEBAIHN0YXRpYyBpbmxpbmUgcG1kX3QgKnBtZF9vZmZzZXQocHVkX3QgKnB1ZCwg
dW5zaWduZWQgbG9uZyBhZGRyZXNzKQogI2RlZmluZSBwbWRfb2Zmc2V0IHBtZF9vZmZzZXQKICNl
bmRpZgogCisjaWZuZGVmIHB1ZF9vZmZzZXQKK3N0YXRpYyBpbmxpbmUgcHVkX3QgKnB1ZF9vZmZz
ZXQocDRkX3QgKnA0ZCwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQoreworCXJldHVybiAocHVkX3Qg
KilwNGRfcGFnZV92YWRkcigqcDRkKSArIHB1ZF9pbmRleChhZGRyZXNzKTsKK30KKyNkZWZpbmUg
cHVkX29mZnNldCBwdWRfb2Zmc2V0CisjZW5kaWYKKwogLyogRklYTUU6ICovCiBzdGF0aWMgaW5s
aW5lIHBtZF90ICpwbWRfb2ZmKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIHZh
KQogewotLSAKMi4yNi4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5v
cmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
