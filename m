Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id F0D0E44F0F5
	for <lists+openrisc@lfdr.de>; Sat, 13 Nov 2021 04:16:59 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id D4FA6242A7;
	Sat, 13 Nov 2021 04:16:59 +0100 (CET)
Received: from mail-pg1-f176.google.com (mail-pg1-f176.google.com
 [209.85.215.176])
 by mail.librecores.org (Postfix) with ESMTPS id 9528924287
 for <openrisc@lists.librecores.org>; Sat, 13 Nov 2021 04:16:57 +0100 (CET)
Received: by mail-pg1-f176.google.com with SMTP id 136so4938194pgc.0
 for <openrisc@lists.librecores.org>; Fri, 12 Nov 2021 19:16:57 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=OWA/aCHcBE9Ba8s6Suq9EtBtF64v23XK1168F6as4kU=;
 b=UdJd9SaC5/4oCDc0fkrTwsz1+qb/+abZPKJZdSEzx+5nldALVnM6RpFLZWCWuZ9Fhr
 MueRe1K0KBAYKLko8QMS57geewRUKLjPWHse1A0o16Yxh/w3CY8rDkbzUbs6XrkIKWpN
 dyKhUZiJCw/fkgNZWbypm8P8yXW7YQdtOy5WKwiTZ43b/iG0oAQjZI2mJcpG3V1xFOrI
 pShP/XitqMIzScHN6ZlZj1tFcEcqDnyll0O92ZRgJXZqxnrJg9l2MAqGk2RRt2hYT+PR
 uPsGU3EheUJlTerqTWt4jkMrXEKn7ExNXSs3FXrxpMNlHEmSSQK3Ckw30rAPo8WHrXal
 BD6g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=OWA/aCHcBE9Ba8s6Suq9EtBtF64v23XK1168F6as4kU=;
 b=XO2qJ3t/a+dsCD3+Fq/yL4JXGk2msAc9Ntt9Uh+dBDUtmxhcLqy2FhO2g/Adv0xAgh
 e+ikkLVxUSoahKRz1aOiEQBpSDfbvHK3c5ya7qthOBl3SWtiqzVhNDiu0ppAhDNOMH+l
 TjSxu7ZPNkuyg9J82J5zCxSo11WEGQ/8AYvzvQNmMwisb0uzuocg1/Rr9poSDJAoMDw2
 3rAMC4wXcpextbx6uU9LnACyGJu9e8iqtNO9G5ac+z7SGzjCbu4rMAumrq+2xPibDS/E
 9TlBuRimV/gMo9+YTQoUWOpjMcat1wFCjhV3CDfJRxiPo20D1y4d+5dtUeZiC3oI0o19
 0d9w==
X-Gm-Message-State: AOAM5319cr7DD7EAl+1UaaGlx3A+UiOD0pRytOLLBk5lVqtGIToicMa7
 L/YDRSCg6UtJ2tssWxbg+2ERGy8DmwA=
X-Google-Smtp-Source: ABdhPJxJrTELo6jv1THyII0t9MJ//WTg+CjCTUIO7kb9BnF2yszepAxA5x0jafLCByheE6Uo7xXzjg==
X-Received: by 2002:aa7:8149:0:b0:44c:916c:1fdb with SMTP id
 d9-20020aa78149000000b0044c916c1fdbmr18458828pfn.34.1636773415935; 
 Fri, 12 Nov 2021 19:16:55 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id q11sm8289615pfk.192.2021.11.12.19.16.54
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 12 Nov 2021 19:16:55 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Sat, 13 Nov 2021 12:16:30 +0900
Message-Id: <20211113031639.2402161-5-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20211113031639.2402161-1-shorne@gmail.com>
References: <20211113031639.2402161-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 04/13] or1k: startup and dynamic linking code
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Q29kZSBmb3IgQyBydW50aW1lIHN0YXJ0dXAgYW5kIGR5bmFtaWMgbG9hZGluZyBpbmNsdWRpbmcg
UExUIGxheW91dC4KLS0tCiBzeXNkZXBzL29yMWsvYml0cy9saW5rLmggICB8ICA1MCArKysrKysK
IHN5c2RlcHMvb3Ixay9kbC1tYWNoaW5lLmggIHwgMzIzICsrKysrKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysKIHN5c2RlcHMvb3Ixay9kbC1zdGFydC5TICAgIHwgIDk4ICsrKysrKysr
KysrCiBzeXNkZXBzL29yMWsvbGRzb2RlZnMuaCAgICB8ICA0MCArKysrKwogc3lzZGVwcy9vcjFr
L3NvdHJ1c3MtbGliLmMgfCAgNTEgKysrKysrCiBzeXNkZXBzL29yMWsvc3RhcnQuUyAgICAgICB8
ICA5OSArKysrKysrKysrKysKIHN5c2RlcHMvb3Ixay90c3QtYXVkaXQuaCAgIHwgIDI0ICsrKwog
NyBmaWxlcyBjaGFuZ2VkLCA2ODUgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5
c2RlcHMvb3Ixay9iaXRzL2xpbmsuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvb3Ixay9k
bC1tYWNoaW5lLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL29yMWsvZGwtc3RhcnQuUwog
Y3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvb3Ixay9sZHNvZGVmcy5oCiBjcmVhdGUgbW9kZSAx
MDA2NDQgc3lzZGVwcy9vcjFrL3NvdHJ1c3MtbGliLmMKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNk
ZXBzL29yMWsvc3RhcnQuUwogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvb3Ixay90c3QtYXVk
aXQuaAoKZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9iaXRzL2xpbmsuaCBiL3N5c2RlcHMvb3Ix
ay9iaXRzL2xpbmsuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi43NmRj
MWExYjM1Ci0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy9vcjFrL2JpdHMvbGluay5oCkBAIC0w
LDAgKzEsNTAgQEAKKy8qIENvcHlyaWdodCAoQykgMjAyMSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRp
b24sIEluYy4KKyAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5LgorCisg
ICBUaGUgR05VIEMgTGlicmFyeSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0
ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNz
ZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNv
ZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlcgorICAgdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2Us
IG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uCisKKyAgIFRoZSBHTlUgQyBM
aWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWws
CisgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3
YXJyYW50eSBvZgorICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxB
UiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUKKyAgIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNl
IGZvciBtb3JlIGRldGFpbHMuCisKKyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkg
b2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0
aGUgR05VIEMgTGlicmFyeS4gIElmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9s
aWNlbnNlcy8+LiAgKi8KKworI2lmbmRlZiBfTElOS19ICisjIGVycm9yICJOZXZlciBpbmNsdWRl
IDxiaXRzL2xpbmsuaD4gZGlyZWN0bHk7IHVzZSA8bGluay5oPiBpbnN0ZWFkLiIKKyNlbmRpZgor
CisvKiBSZWdpc3RlcnMgZm9yIGVudHJ5IGludG8gUExULiAgKi8KK3R5cGVkZWYgc3RydWN0IExh
X29yMWtfcmVncworeworICB1aW50MzJfdCBscl9yZWdbMzFdOworfSBMYV9vcjFrX3JlZ3M7CisK
Ky8qIFJldHVybiB2YWx1ZXMgZm9yIGNhbGxzIGZyb20gUExULiAgKi8KK3R5cGVkZWYgc3RydWN0
IExhX29yMWtfcmV0dmFsCit7CisgIHVpbnQzMl90IGxydl9yMzsKK30gTGFfb3Ixa19yZXR2YWw7
CisKK19fQkVHSU5fREVDTFMKKworZXh0ZXJuIEVsZlcoQWRkcikgbGFfb3Ixa19nbnVfcGx0ZW50
ZXIgKEVsZlcoU3ltKSAqX19zeW0sIHVuc2lnbmVkIGludCBfX25keCwKKwkJCQkJdWludHB0cl90
ICpfX3JlZmNvb2ssCisJCQkJCXVpbnRwdHJfdCAqX19kZWZjb29rLAorCQkJCQlMYV9vcjFrX3Jl
Z3MgKl9fcmVncywKKwkJCQkJdW5zaWduZWQgaW50ICpfX2ZsYWdzLAorCQkJCQljb25zdCBjaGFy
ICpfX3N5bW5hbWUsCisJCQkJCWxvbmcgaW50ICpfX2ZyYW1lc2l6ZXApOworZXh0ZXJuIHVuc2ln
bmVkIGludCBsYV9vcjFrX2dudV9wbHRleGl0IChFbGZXKFN5bSkgKl9fc3ltLCB1bnNpZ25lZCBp
bnQgX19uZHgsCisJCQkJCSB1aW50cHRyX3QgKl9fcmVmY29vaywKKwkJCQkJIHVpbnRwdHJfdCAq
X19kZWZjb29rLAorCQkJCQkgY29uc3QgTGFfb3Ixa19yZWdzICpfX2lucmVncywKKwkJCQkJIExh
X29yMWtfcmV0dmFsICpfX291dHJlZ3MsCisJCQkJCSBjb25zdCBjaGFyICpfX3N5bW5hbWUpOwor
CitfX0VORF9ERUNMUwpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL2RsLW1hY2hpbmUuaCBiL3N5
c2RlcHMvb3Ixay9kbC1tYWNoaW5lLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAw
MDAwMC4uZjkzYWU3NjhkNAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9kbC1tYWNo
aW5lLmgKQEAgLTAsMCArMSwzMjMgQEAKKy8qIE1hY2hpbmUtZGVwZW5kZW50IEVMRiBkeW5hbWlj
IHJlbG9jYXRpb24gaW5saW5lIGZ1bmN0aW9ucy4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5
cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZp
bGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkg
aXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2Rp
ZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisg
ICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBl
aXRoZXIKKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24p
IGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRl
ZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5Z
IFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNI
QU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUg
R05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgor
CisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdl
bmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlm
IG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2lm
bmRlZiBkbF9tYWNoaW5lX2gKKyNkZWZpbmUgZGxfbWFjaGluZV9oCisKKyNkZWZpbmUgRUxGX01B
Q0hJTkVfTkFNRSAib3IxayIKKworI2luY2x1ZGUgPHN5cy9jZGVmcy5oPgorI2luY2x1ZGUgPHN5
cy9wYXJhbS5oPgorI2luY2x1ZGUgPHRscy5oPgorI2luY2x1ZGUgPGRsLWlyZWwuaD4KKyNpbmNs
dWRlIDxkbC1zdGF0aWMtdGxzLmg+CisjaW5jbHVkZSA8ZGwtbWFjaGluZS1yZWwuaD4KKworLyog
UmV0dXJuIG5vbnplcm8gaWZmIEVMRiBoZWFkZXIgaXMgY29tcGF0aWJsZSB3aXRoIHRoZSBydW5u
aW5nIGhvc3QuICAqLworc3RhdGljIGlubGluZSBpbnQgX19hdHRyaWJ1dGVfXyAoKHVudXNlZCkp
CitlbGZfbWFjaGluZV9tYXRjaGVzX2hvc3QgKGNvbnN0IEVsZjMyX0VoZHIgKmVoZHIpCit7Cisg
IHJldHVybiBlaGRyLT5lX21hY2hpbmUgPT0gRU1fT1BFTlJJU0M7Cit9CisKK3N0YXRpYyBpbmxp
bmUgRWxmMzJfQWRkciAqCitvcjFrX2dldF9nb3QgKHZvaWQpCit7CisgIEVsZjMyX0FkZHIgKmdv
dDsKKyAgcmVnaXN0ZXIgbG9uZyBpbnQgbGlua3JlZyBhc20gKCJyOSIpOworICBhc20gKCJsLmph
bCAgICAweDhcbiIKKyAgICAgICAiIGwubW92aGkgJTAsIGdvdHBjaGkoX0dMT0JBTF9PRkZTRVRf
VEFCTEVfLTQpXG4iCisgICAgICAgImwub3JpICAgICUwLCAlMCwgZ290cGNsbyhfR0xPQkFMX09G
RlNFVF9UQUJMRV8rMClcbiIKKyAgICAgICAibC5hZGQgICAgJTAsICUwLCAlMVxuIgorICAgICAg
IDogIj1yIiAoZ290KSwgIj1yIiAobGlua3JlZykpOworCisgIHJldHVybiBnb3Q7Cit9CisKKy8q
IFJldHVybiB0aGUgbGluay10aW1lIGFkZHJlc3Mgb2YgX0RZTkFNSUMuICBDb252ZW5pZW50bHks
IHRoaXMgaXMgdGhlCisgICBmaXJzdCBlbGVtZW50IG9mIHRoZSBHT1QuICovCitzdGF0aWMgaW5s
aW5lIEVsZjMyX0FkZHIKK2VsZl9tYWNoaW5lX2R5bmFtaWMgKHZvaWQpCit7CisgIEVsZjMyX0Fk
ZHIgKmdvdCA9IG9yMWtfZ2V0X2dvdCgpOworICByZXR1cm4gKmdvdDsKK30KKworCisvKiBSZXR1
cm4gdGhlIHJ1bi10aW1lIGxvYWQgYWRkcmVzcyBvZiB0aGUgc2hhcmVkIG9iamVjdC4gICovCitz
dGF0aWMgaW5saW5lIEVsZjMyX0FkZHIKK2VsZl9tYWNoaW5lX2xvYWRfYWRkcmVzcyAodm9pZCkK
K3sKKyAgLyogQ29tcHV0ZSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBydW50aW1lIGFkZHJl
c3Mgb2YgX0RZTkFNSUMgYXMgc2VlbgorICAgICBieSBhIEdPVE9GRiByZWZlcmVuY2UsIGFuZCB0
aGUgbGluay10aW1lIGFkZHJlc3MgZm91bmQgaW4gdGhlIHNwZWNpYWwKKyAgICAgdW5yZWxvY2F0
ZWQgZmlyc3QgR09UIGVudHJ5LiAgKi8KKyAgRWxmMzJfQWRkciBkeW47CisgIEVsZjMyX0FkZHIg
KmdvdCA9IG9yMWtfZ2V0X2dvdCgpOworCisgIGFzbSAoImwubW92aGkgJTAsIGdvdG9mZmhpKF9E
WU5BTUlDKTsiCisgICAgICAgImwub3JpICAgJTAsICUwLCBnb3RvZmZsbyhfRFlOQU1JQyk7Igor
ICAgICAgICJsLmFkZCAgICUwLCAlMCwgJTE7IgorICAgICAgIDogIj0mciIoZHluKSA6ICJyIihn
b3QpKTsKKworICByZXR1cm4gZHluIC0gKmdvdDsKK30KKworLyogSW5pdGlhbCBlbnRyeSBwb2lu
dCBjb2RlIGZvciB0aGUgZHluYW1pYyBsaW5rZXIuCisgICBUaGUgQyBmdW5jdGlvbiBgX2RsX3N0
YXJ0JyBpcyB0aGUgcmVhbCBlbnRyeSBwb2ludDsKKyAgIGl0cyByZXR1cm4gdmFsdWUgaXMgdGhl
IHVzZXIgcHJvZ3JhbSdzIGVudHJ5IHBvaW50LgorCisgICBDb2RlIGlzIHJlYWxseSBsb2NhdGVk
IGluIGRsLXN0YXJ0LlMsIGp1c3QgdGVsbCB0aGUKKyAgIGxpbmtlciB0aGF0IGl0IGV4aXN0cy4g
Ki8KKyNkZWZpbmUgUlRMRF9TVEFSVCBhc20gKCIuZ2xvYmwgX2RsX3N0YXJ0Iik7CisKKy8qIEVM
Rl9SVFlQRV9DTEFTU19QTFQgaWZmIFRZUEUgZGVzY3JpYmVzIHJlbG9jYXRpb24gb2YgYSBQTFQg
ZW50cnkgb3IKKyAgIFRMUyB2YXJpYWJsZSwgc28gdW5kZWZpbmVkIHJlZmVyZW5jZXMgc2hvdWxk
IG5vdCBiZSBhbGxvd2VkIHRvCisgICBkZWZpbmUgdGhlIHZhbHVlLgorICAgRUxGX1JUWVBFX0NM
QVNTX05PQ09QWSBpZmYgVFlQRSBzaG91bGQgbm90IGJlIGFsbG93ZWQgdG8gcmVzb2x2ZSB0byBv
bmUKKyAgIG9mIHRoZSBtYWluIGV4ZWN1dGFibGUncyBzeW1ib2xzLCBhcyBmb3IgYSBDT1BZIHJl
bG9jLiAgKi8KKworI2RlZmluZSBlbGZfbWFjaGluZV90eXBlX2NsYXNzKHR5cGUpIFwKKyAgKCgo
dHlwZSkgPT0gUl9PUjFLX0pNUF9TTE9UIFwKKyAgIHx8ICh0eXBlKSA9PSBSX09SMUtfVExTX0RU
UE1PRCBcCisgICB8fCAodHlwZSkgPT0gUl9PUjFLX1RMU19EVFBPRkYgXAorICAgfHwgKHR5cGUp
ID09IFJfT1IxS19UTFNfVFBPRkYpICogRUxGX1JUWVBFX0NMQVNTX1BMVCBcCisgICB8ICgodHlw
ZSkgPT0gUl9PUjFLX0NPUFkpICogRUxGX1JUWVBFX0NMQVNTX0NPUFkpCisKKy8qIEEgcmVsb2Mg
dHlwZSB1c2VkIGZvciBsZC5zbyBjbWRsaW5lIGFyZyBsb29rdXBzIHRvIHJlamVjdCBQTFQgZW50
cmllcy4gICovCisjZGVmaW5lIEVMRl9NQUNISU5FX0pNUF9TTE9UICAgIFJfT1IxS19KTVBfU0xP
VAorCisjZGVmaW5lIEFSQ0hfTEFfUExURU5URVIgb3Ixa19nbnVfcGx0ZW50ZXIKKyNkZWZpbmUg
QVJDSF9MQV9QTFRFWElUIG9yMWtfZ251X3BsdGV4aXQKKworLyogU2V0IHVwIHRoZSBsb2FkZWQg
b2JqZWN0IGRlc2NyaWJlZCBieSBMIHNvIGl0cyB1bnJlbG9jYXRlZCBQTFQKKyAgIGVudHJpZXMg
d2lsbCBqdW1wIHRvIHRoZSBvbi1kZW1hbmQgZml4dXAgY29kZSBpbiBkbC1ydW50aW1lLmMuICAq
Lworc3RhdGljIGlubGluZSBpbnQgX19hdHRyaWJ1dGVfXyAoKHVudXNlZCwgYWx3YXlzX2lubGlu
ZSkpCitlbGZfbWFjaGluZV9ydW50aW1lX3NldHVwIChzdHJ1Y3QgbGlua19tYXAgKmwsIHN0cnVj
dCByX3Njb3BlX2VsZW0gKnNjb3BlW10sCisJCQkgICBpbnQgbGF6eSwgaW50IHByb2ZpbGUpCit7
CisgIEVsZlcoQWRkcikgKnBsdGdvdDsKKyAgZXh0ZXJuIHZvaWQgX2RsX3J1bnRpbWVfcmVzb2x2
ZSAoRWxmVyhXb3JkKSk7CisgIGV4dGVybiB2b2lkIF9kbF9ydW50aW1lX3Byb2ZpbGUgKEVsZlco
V29yZCkpOworCisgIGlmIChsLT5sX2luZm9bRFRfSk1QUkVMXSAmJiBsYXp5KQorICAgIHsKKyAg
ICAgIHBsdGdvdCA9IChFbGZXKEFkZHIpICopIERfUFRSIChsLCBsX2luZm9bRFRfUExUR09UXSk7
CisKKyAgICAgIC8qIEZpbGwgaW4gaW5pdGlhbCBlbnRyeXMgb2YgdGhlIHBsdCAqLworCisgICAg
ICAvKiBSZWdpc3RlciB0aGUgbGlua19tYXAgYWRkcmVzcyBpbiB0aGUgcGx0IGF0IHBsdGdvdFsx
XS4KKwkgVGhpcyB3aWxsIGFsc28gYmUgdXNlZCBpbiB0aGUgcmVzb2x2ZXIgZm9yIGFjY2Vzc2lu
ZyB0aGUKKwkgbGlua19tYXAgc3RydWN0dXJlLiAgKi8KKyAgICAgIHBsdGdvdFsxXSA9IChFbGZX
KEFkZHIpKSBsOworCisgICAgICAvKiBUaGUgcGx0Z290WzJdIGVudHJ5IGNvbnRhaW5zIHRoZSBh
ZGRyZXNzIG9mIGEgZnVuY3Rpb24gd2hpY2ggZ2V0cworCSBjYWxsZWQgdG8gZ2V0IHRoZSBhZGRy
ZXNzIG9mIGEgc28gZmFyIHVucmVzb2x2ZWQgZnVuY3Rpb24gYW5kCisJIGp1bXAgdG8gaXQuICBU
aGUgcHJvZmlsaW5nIGV4dGVuc2lvbiBvZiB0aGUgZHluYW1pYyBsaW5rZXIgYWxsb3dzCisJIHRv
IGludGVyY2VwdCB0aGUgY2FsbHMgdG8gY29sbGVjdCBpbmZvcm1hdGlvbi4gIEluIHRoaXMgY2Fz
ZSB3ZQorCSBkb24ndCBzdG9yZSB0aGUgYWRkcmVzcyBpbiB0aGUgR09UIHNvIHRoYXQgYWxsIGZ1
dHVyZSBjYWxscyBhbHNvCisJIGVuZCBpbiB0aGlzIGZ1bmN0aW9uLiAgKi8KKyNpZiAwIC8qIFBy
b2ZpbGluZyBub3Qgc3VwcG9ydGVkIGluIE9wZW5SSVNDIHlldCAobmVlZCB0byBpbXBsZW1lbnQK
KwkgX2RsX3J1bnRpbWVfcHJvZmlsZSkuICAqLworICAgICAgaWYgKCBwcm9maWxlKQorCXsKKwkg
ICBwbHRnb3RbMl0gPSAoRWxmVyhBZGRyKSkgJl9kbF9ydW50aW1lX3Byb2ZpbGU7CisKKwkgIGlm
IChHTFJPKGRsX3Byb2ZpbGUpICE9IE5VTEwKKwkgICAgICAmJiBfZGxfbmFtZV9tYXRjaF9wIChH
TFJPKGRsX3Byb2ZpbGUpLCBsKSkKKwkgICAgLyogU2F5IHRoYXQgd2UgcmVhbGx5IHdhbnQgcHJv
ZmlsaW5nIGFuZCB0aGUgdGltZXJzIGFyZQorCSAgICAgICBzdGFydGVkLiAgKi8KKwkgICAgR0wo
ZGxfcHJvZmlsZV9tYXApID0gbDsKKwl9CisgICAgICBlbHNlCisjZW5kaWYKKwl7CisJICAvKiBU
aGlzIGZ1bmN0aW9uIHdpbGwgZ2V0IGNhbGxlZCB0byBmaXggdXAgdGhlIEdPVCBlbnRyeQorCSAg
ICAgaW5kaWNhdGVkIGJ5IHRoZSBvZmZzZXQgb24gdGhlIHN0YWNrLCBhbmQgdGhlbiBqdW1wIHRv
CisJICAgICB0aGUgcmVzb2x2ZWQgYWRkcmVzcy4gICovCisJICBwbHRnb3RbMl0gPSAoRWxmVyhB
ZGRyKSkgJl9kbF9ydW50aW1lX3Jlc29sdmU7CisJfQorCisgICAgfQorCisgIHJldHVybiBsYXp5
OworfQorCisvKiBNYXNrIGlkZW50aWZ5aW5nIGFkZHJlc3NlcyByZXNlcnZlZCBmb3IgdGhlIHVz
ZXIgcHJvZ3JhbSwKKyAgIHdoZXJlIHRoZSBkeW5hbWljIGxpbmtlciBzaG91bGQgbm90IG1hcCBh
bnl0aGluZy4gICovCisjZGVmaW5lIEVMRl9NQUNISU5FX1VTRVJfQUREUkVTU19NQVNLICAgMHhm
ODAwMDAwMFVMCisKKy8qIFdlIGRlZmluZSBhbiBpbml0aWFsaXphdGlvbiBmdW5jdGlvbnMuICBU
aGlzIGlzIGNhbGxlZCB2ZXJ5IGVhcmx5IGluCisgICBfZGxfc3lzZGVwX3N0YXJ0LiAgKi8KKyNk
ZWZpbmUgRExfUExBVEZPUk1fSU5JVCBkbF9wbGF0Zm9ybV9pbml0ICgpCisKK3N0YXRpYyBpbmxp
bmUgdm9pZCBfX2F0dHJpYnV0ZV9fICgodW51c2VkKSkKK2RsX3BsYXRmb3JtX2luaXQgKHZvaWQp
Cit7CisgIGlmIChHTFJPKGRsX3BsYXRmb3JtKSAhPSBOVUxMICYmICpHTFJPKGRsX3BsYXRmb3Jt
KSA9PSAnXDAnKQorICAgIC8qIEF2b2lkIGFuIGVtcHR5IHN0cmluZyB3aGljaCB3b3VsZCBkaXN0
dXJiIHVzLiAgKi8KKyAgICBHTFJPKGRsX3BsYXRmb3JtKSA9IE5VTEw7Cit9CisKK3N0YXRpYyBp
bmxpbmUgRWxmVyhBZGRyKQorZWxmX21hY2hpbmVfZml4dXBfcGx0IChzdHJ1Y3QgbGlua19tYXAg
Km1hcCwgbG9va3VwX3QgdCwKKwkJICAgICAgIGNvbnN0IEVsZlcoU3ltKSAqcmVmc3ltLCBjb25z
dCBFbGZXKFN5bSkgKnN5bSwKKwkJICAgICAgIGNvbnN0IEVsZlcoUmVsYSkgKnJlbG9jLAorCQkg
ICAgICAgRWxmVyhBZGRyKSAqcmVsb2NfYWRkciwgRWxmVyhBZGRyKSB2YWx1ZSkKK3sKKyAgcmV0
dXJuICpyZWxvY19hZGRyID0gdmFsdWU7Cit9CisKKy8qIFJldHVybiB0aGUgZmluYWwgdmFsdWUg
b2YgYSBwbHQgcmVsb2NhdGlvbi4gICovCitzdGF0aWMgaW5saW5lIEVsZjMyX0FkZHIKK2VsZl9t
YWNoaW5lX3BsdF92YWx1ZSAoc3RydWN0IGxpbmtfbWFwICptYXAsIGNvbnN0IEVsZjMyX1JlbGEg
KnJlbG9jLAorCQkgICAgICAgRWxmMzJfQWRkciB2YWx1ZSkKK3sKKyAgcmV0dXJuIHZhbHVlICsg
cmVsb2MtPnJfYWRkZW5kOworfQorCisKKyNlbmRpZiAvKiAhZGxfbWFjaGluZV9oICovCisKKyNp
ZmRlZiBSRVNPTFZFX01BUAorCisvKiBQZXJmb3JtIHRoZSByZWxvY2F0aW9uIHNwZWNpZmllZCBi
eSBSRUxPQyBhbmQgU1lNICh3aGljaCBpcyBmdWxseSByZXNvbHZlZCkuCisgICBNQVAgaXMgdGhl
IG9iamVjdCBjb250YWluaW5nIHRoZSByZWxvYy4gICovCisKK3N0YXRpYyBpbmxpbmUgdm9pZAor
X19hdHRyaWJ1dGUgKChhbHdheXNfaW5saW5lKSkKK2VsZl9tYWNoaW5lX3JlbGEgKHN0cnVjdCBs
aW5rX21hcCAqbWFwLCBzdHJ1Y3Qgcl9zY29wZV9lbGVtICpzY29wZVtdLAorCQkgIGNvbnN0IEVs
ZlcoUmVsYSkgKnJlbG9jLCBjb25zdCBFbGZXKFN5bSkgKnN5bSwKKwkJICBjb25zdCBzdHJ1Y3Qg
cl9mb3VuZF92ZXJzaW9uICp2ZXJzaW9uLAorCQkgIHZvaWQgKmNvbnN0IHJlbG9jX2FkZHJfYXJn
LCBpbnQgc2tpcF9pZnVuYykKK3sKKyAgRWxmMzJfQWRkciAqY29uc3QgcmVsb2NfYWRkciA9IHJl
bG9jX2FkZHJfYXJnOworICBjb25zdCB1bnNpZ25lZCBpbnQgcl90eXBlID0gRUxGMzJfUl9UWVBF
IChyZWxvYy0+cl9pbmZvKTsKKworICBpZiAoX19nbGliY191bmxpa2VseSAocl90eXBlID09IFJf
T1IxS19OT05FKSkKKyAgICByZXR1cm47CisgIGVsc2UKKyAgICB7CisjIGlmbmRlZiBSRVNPTFZF
X0NPTkZMSUNUX0ZJTkRfTUFQCisgICAgICBjb25zdCBFbGYzMl9TeW0gKmNvbnN0IHJlZnN5bSA9
IHN5bTsKKyMgZW5kaWYKKyAgICAgIHN0cnVjdCBsaW5rX21hcCAqc3ltX21hcCA9IFJFU09MVkVf
TUFQIChtYXAsIHNjb3BlLCAmc3ltLCB2ZXJzaW9uLAorCQkJCQkgICAgICByX3R5cGUpOworICAg
ICAgRWxmMzJfQWRkciB2YWx1ZSA9IFNZTUJPTF9BRERSRVNTIChzeW1fbWFwLCBzeW0sIHRydWUp
OworCisgICAgICBpZiAoc3ltICE9IE5VTEwKKwkgICYmIF9fZ2xpYmNfdW5saWtlbHkgKEVMRlco
U1RfVFlQRSkgKHN5bS0+c3RfaW5mbykgPT0gU1RUX0dOVV9JRlVOQykKKwkgICYmIF9fZ2xpYmNf
bGlrZWx5IChzeW0tPnN0X3NobmR4ICE9IFNITl9VTkRFRikKKwkgICYmIF9fZ2xpYmNfbGlrZWx5
ICghc2tpcF9pZnVuYykpCisJdmFsdWUgPSBlbGZfaWZ1bmNfaW52b2tlICh2YWx1ZSk7CisKKyAg
ICAgIHN3aXRjaCAocl90eXBlKQorCXsKKyMgaWZuZGVmIFJFU09MVkVfQ09ORkxJQ1RfRklORF9N
QVAKKwkgIGNhc2UgUl9PUjFLX0NPUFk6CisJICAgIGlmIChzeW0gPT0gTlVMTCkKKwkgICAgICAv
KiBUaGlzIGNhbiBoYXBwZW4gaW4gdHJhY2UgbW9kZSBpZiBhbiBvYmplY3QgY291bGQgbm90IGJl
CisJCSBmb3VuZC4gICovCisJICAgICAgYnJlYWs7CisJICAgIGlmIChfX2dsaWJjX3VubGlrZWx5
IChzeW0tPnN0X3NpemUgPiByZWZzeW0tPnN0X3NpemUpCisJCXx8IChfX2dsaWJjX3VubGlrZWx5
IChzeW0tPnN0X3NpemUgPCByZWZzeW0tPnN0X3NpemUpCisJCSAgJiYgR0xSTyhkbF92ZXJib3Nl
KSkpCisJICAgIHsKKwkgICAgICBjb25zdCBjaGFyICpzdHJ0YWI7CisKKwkgICAgICBzdHJ0YWIg
PSAoY29uc3QgY2hhciAqKSBEX1BUUiAobWFwLCBsX2luZm9bRFRfU1RSVEFCXSk7CisJICAgICAg
X2RsX2Vycm9yX3ByaW50ZiAoIlwKKyVzOiBTeW1ib2wgYCVzJyBoYXMgZGlmZmVyZW50IHNpemUg
aW4gc2hhcmVkIG9iamVjdCwgY29uc2lkZXIgcmUtbGlua2luZ1xuIiwKKwkJICBydGxkX3Byb2du
YW1lID86ICI8cHJvZ3JhbSBuYW1lIHVua25vd24+IiwKKwkJICBzdHJ0YWIgKyByZWZzeW0tPnN0
X25hbWUpOworCSAgICB9CisJICAgIG1lbWNweSAocmVsb2NfYWRkcl9hcmcsICh2b2lkICopIHZh
bHVlLAorCQlNSU4gKHN5bS0+c3Rfc2l6ZSwgcmVmc3ltLT5zdF9zaXplKSk7CisJICAgIGJyZWFr
OworIyBlbmRpZiAvKiAhUkVTT0xWRV9DT05GTElDVF9GSU5EX01BUCAqLworCSAgY2FzZSBSX09S
MUtfMzI6CisJICAgIC8qIFN1cHBvcnQgcmVsb2NhdGlvbnMgb24gbWlzLWFsaWduZWQgb2Zmc2V0
cy4gICovCisJICAgIHZhbHVlICs9IHJlbG9jLT5yX2FkZGVuZDsKKwkgICAgbWVtY3B5IChyZWxv
Y19hZGRyX2FyZywgJnZhbHVlLCA0KTsKKwkgICAgYnJlYWs7CisJICBjYXNlIFJfT1IxS19HTE9C
X0RBVDoKKwkgIGNhc2UgUl9PUjFLX0pNUF9TTE9UOgorCSAgICAqcmVsb2NfYWRkciA9IHZhbHVl
ICsgcmVsb2MtPnJfYWRkZW5kOworCSAgICBicmVhazsKKwkgIGNhc2UgUl9PUjFLX1RMU19EVFBN
T0Q6CisjIGlmZGVmIFJUTERfQk9PVFNUUkFQCisJICAgIC8qIER1cmluZyBzdGFydHVwIHRoZSBk
eW5hbWljIGxpbmtlciBpcyBhbHdheXMgdGhlIG1vZHVsZQorCSAgICAgICB3aXRoIGluZGV4IDEu
ICovCisJICAgICpyZWxvY19hZGRyID0gMTsKKyMgZWxzZQorCSAgICBpZiAoc3ltX21hcCAhPSBO
VUxMKQorCSAgICAgICpyZWxvY19hZGRyID0gc3ltX21hcC0+bF90bHNfbW9kaWQ7CisjIGVuZGlm
CisJICAgIGJyZWFrOworCSAgY2FzZSBSX09SMUtfVExTX0RUUE9GRjoKKyMgaWZuZGVmIFJUTERf
Qk9PVFNUUkFQCisJICAgICpyZWxvY19hZGRyID0gKHN5bSA9PSBOVUxMID8gMCA6IHN5bS0+c3Rf
dmFsdWUpICsgcmVsb2MtPnJfYWRkZW5kOworIyBlbmRpZgorCSAgICBicmVhazsKKworCSAgY2Fz
ZSBSX09SMUtfVExTX1RQT0ZGOgorIyBpZmRlZiBSVExEX0JPT1RTVFJBUAorCSAgICAqcmVsb2Nf
YWRkciA9IHN5bS0+c3RfdmFsdWUgKyByZWxvYy0+cl9hZGRlbmQgKworCSAgICAgIG1hcC0+bF90
bHNfb2Zmc2V0IC0gVExTX1RDQl9TSVpFOworIyBlbHNlCisJICAgIGlmIChzeW1fbWFwICE9IE5V
TEwpCisJICAgICAgeworCQlDSEVDS19TVEFUSUNfVExTIChtYXAsIHN5bV9tYXApOworCQkqcmVs
b2NfYWRkciA9IHN5bS0+c3RfdmFsdWUgKyByZWxvYy0+cl9hZGRlbmQgKworCQkgIHN5bV9tYXAt
PmxfdGxzX29mZnNldCAtIFRMU19UQ0JfU0laRTsKKwkgICAgICB9CisjIGVuZGlmCisJICAgIGJy
ZWFrOworCSAgZGVmYXVsdDoKKwkgICAgX2RsX3JlbG9jX2JhZF90eXBlIChtYXAsIHJfdHlwZSwg
MCk7CisJICAgIGJyZWFrOworCX0KKyAgICB9Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorX19h
dHRyaWJ1dGVfXyAoKGFsd2F5c19pbmxpbmUpKQorZWxmX21hY2hpbmVfcmVsYV9yZWxhdGl2ZSAo
RWxmMzJfQWRkciBsX2FkZHIsIGNvbnN0IEVsZjMyX1JlbGEgKnJlbG9jLAorCQkJICAgdm9pZCAq
Y29uc3QgcmVsb2NfYWRkcl9hcmcpCit7CisgIEVsZjMyX0FkZHIgKmNvbnN0IHJlbG9jX2FkZHIg
PSByZWxvY19hZGRyX2FyZzsKKyAgKnJlbG9jX2FkZHIgPSBsX2FkZHIgKyByZWxvYy0+cl9hZGRl
bmQ7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZAorX19hdHRyaWJ1dGVfXyAoKGFsd2F5c19pbmxp
bmUpKQorZWxmX21hY2hpbmVfbGF6eV9yZWwgKHN0cnVjdCBsaW5rX21hcCAqbWFwLCBzdHJ1Y3Qg
cl9zY29wZV9lbGVtICpzY29wZVtdLAorCQkgICAgICBFbGZXKEFkZHIpIGxfYWRkciwgY29uc3Qg
RWxmVyhSZWxhKSAqcmVsb2MsCisJCSAgICAgIGludCBza2lwX2lmdW5jKQoreworICBFbGYzMl9B
ZGRyICpjb25zdCByZWxvY19hZGRyID0gKHZvaWQgKikgKGxfYWRkciArIHJlbG9jLT5yX29mZnNl
dCk7CisgIGNvbnN0IHVuc2lnbmVkIGludCByX3R5cGUgPSBFTEYzMl9SX1RZUEUgKHJlbG9jLT5y
X2luZm8pOworCisgIGlmIChfX2dsaWJjX2xpa2VseSAocl90eXBlID09IFJfT1IxS19KTVBfU0xP
VCkpCisgICAgICAqcmVsb2NfYWRkciArPSBsX2FkZHI7CisgIGVsc2UgaWYgKF9fZ2xpYmNfdW5s
aWtlbHkgKHJfdHlwZSA9PSBSX09SMUtfTk9ORSkpCisgICAgcmV0dXJuOworICBlbHNlCisgICAg
X2RsX3JlbG9jX2JhZF90eXBlIChtYXAsIHJfdHlwZSwgMSk7Cit9CisKKyNlbmRpZiAvKiBSRVNP
TFZFX01BUCAqLwpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL2RsLXN0YXJ0LlMgYi9zeXNkZXBz
L29yMWsvZGwtc3RhcnQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5j
YWZhNTEyYjdjCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy9vcjFrL2RsLXN0YXJ0LlMKQEAg
LTAsMCArMSw5OCBAQAorLyogTWFjaGluZS1kZXBlbmRlbnQgRUxGIHN0YXJ0dXAgY29kZS4gIE9w
ZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3Vu
ZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4K
KworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3Ry
aWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUg
TGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJl
ZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24gMi4xIG9mIHRoZSBMaWNl
bnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05V
IEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNl
ZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxp
ZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJ
Q1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGlj
ZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBj
b3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdp
dGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9y
Zy9saWNlbnNlcy8+LiAgKi8KKworI2luY2x1ZGUgPHN5c2RlcC5oPgorCisvKiBJbml0aWFsIGVu
dHJ5IHBvaW50IGNvZGUgZm9yIHRoZSBkeW5hbWljIGxpbmtlci4KKyAgIFRoZSBDIGZ1bmN0aW9u
IGBfZGxfc3RhcnQnIGlzIHRoZSByZWFsIGVudHJ5IHBvaW50OworICAgaXQncyByZXR1cm4gdmFs
dWUgaXMgdGhlIHVzZXIgcHJvZ3JhbSdzIGVudHJ5IHBvaW50LiAgKi8KK0VOVFJZIChfc3RhcnQp
CisJLyogQ291bnQgYXJndW1lbnRzIGluIHIxMSAqLworCWwub3JpCXIzLCByMSwgMAorCWwubW92
aGkJcjExLCAwCisxOgorCWwuYWRkaQlyMywgcjMsIDQKKwlsLmx3eglyMTIsIDAocjMpCisJbC5z
Zm5laQlyMTIsIDAKKwlsLmFkZGkJcjExLCByMTEsIDEKKwlsLmJmCTFiCisJIGwubm9wCisJbC5h
ZGRpCXIxMSwgcjExLCAtMQorCS8qIHN0b3JlIGFyZ3VtZW50IGNvdW50ZXIgdG8gc3RhY2suICAq
LworCWwuc3cJMChyMSksIHIxMQorCisJLyogTG9hZCB0aGUgUElDIHJlZ2lzdGVyLiAgKi8KKwls
LmphbAkweDgKKwkgbC5tb3ZoaSByMTYsIGdvdHBjaGkoX0dMT0JBTF9PRkZTRVRfVEFCTEVfLTQp
CisJbC5vcmkJcjE2LCByMTYsIGdvdHBjbG8oX0dMT0JBTF9PRkZTRVRfVEFCTEVfKzApCisJbC5h
ZGQJcjE2LCByMTYsIHI5CisKKwlsLm9yaQlyMywgcjEsIDAKKworCWwuamFsCV9kbF9zdGFydAor
CSBsLm5vcAorCS8qIFNhdmUgdXNlciBlbnRyeSBpbiBhIGNhbGwgc2F2ZWQgcmVnLiAgKi8KKwls
Lm9yaQlyMjIsIHIxMSwgMAorCS8qIEZhbGwgdGhyb3VnaCB0byBfZGxfc3RhcnRfdXNlci4gICov
CisKK19kbF9zdGFydF91c2VyOgorCS8qIFNldCB1cCBmb3IgX2RsX2luaXQuICovCisKKwkvKiBM
b2FkIF9ydGxkX2xvY2FsIChhLmsuYSBfZGxfbG9hZGVkKS4gICovCisJbC5sd3oJcjEyLCBnb3Qo
X3J0bGRfbG9jYWwpKHIxNikKKwlsLmx3eglyMywgMChyMTIpCisKKwkvKiBMb2FkIGFyZ2MgKi8K
KwlsLmx3eglyMTgsIGdvdChfZGxfYXJnYykocjE2KQorCWwubHd6CXI0LCAwKHIxOCkKKworCS8q
IExvYWQgYXJndiAqLworCWwubHd6CXIyMCwgZ290KF9kbF9hcmd2KShyMTYpCisJbC5sd3oJcjUs
IDAocjIwKQorCisJLyogTG9hZCBlbnZwID0gJmFyZ3ZbYXJnYyArIDFdLiAgKi8KKwlsLnNsbGkJ
cjYsIHI0LCAyCisJbC5hZGRpCXI2LCByNiwgNAorCWwuYWRkCXI2LCByNiwgcjUKKworCWwuamFs
CXBsdChfZGxfaW5pdCkKKwkgbC5ub3AKKworCS8qIE5vdyBzZXQgdXAgZm9yIHVzZXIgZW50cnku
CisJICAgVGhlIGFscmVhZHkgZGVmaW5lZCBBQkkgbG9hZHMgYXJnYyBhbmQgYXJndiBmcm9tIHRo
ZSBzdGFjay4KKworCSAgIGFyZ2MgPSAwKHIxKQorCSAgIGFyZ3YgPSByMSArIDQKKwkqLworCisJ
LyogTG9hZCBTUCBhcyBhcmd2IC0gNC4gICovCisJbC5sd3oJcjMsIDAocjIwKQorCWwuYWRkaQly
MSwgcjMsIC00CisKKwkvKiBTYXZlIGFyZ2MuICAqLworCWwubHd6CXIzLCAwKHIxOCkKKwlsLnN3
CTAocjEpLCByMworCisJLyogUGFzcyBfZGxfZmluaSBmdW5jdGlvbiBhZGRyZXNzIHRvIF9zdGFy
dC4KKwkgICBOZXh0IHN0YXJ0LlMgd2lsbCB0aGVuIHBhc3MgdGhpcyBhcyBydGxkX2ZpbmkgdG8g
X19saWJjX3N0YXJ0X21haW4uICAqLworCWwubHd6CXIzLCBnb3QoX2RsX2ZpbmkpKHIxNikKKwor
CWwuanIJcjIyCisJIGwubm9wCisKK0VORCAoX3N0YXJ0KQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9v
cjFrL2xkc29kZWZzLmggYi9zeXNkZXBzL29yMWsvbGRzb2RlZnMuaApuZXcgZmlsZSBtb2RlIDEw
MDY0NAppbmRleCAwMDAwMDAwMDAwLi44OTcxM2ZjYzcwCi0tLSAvZGV2L251bGwKKysrIGIvc3lz
ZGVwcy9vcjFrL2xkc29kZWZzLmgKQEAgLTAsMCArMSw0MCBAQAorLyogUnVuLXRpbWUgZHluYW1p
YyBsaW5rZXIgZGF0YSBzdHJ1Y3R1cmVzIGZvciBsb2FkZWQgRUxGIHNoYXJlZCBvYmplY3RzLgor
ICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLgorICAg
VGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBDIExpYnJhcnkuCisKKyAgIFRoZSBHTlUgQyBM
aWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgor
ICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1
YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRh
dGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIg
b3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlz
dHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRI
T1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisg
ICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBT
ZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0
YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExl
c3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJy
YXJ5OyBpZiBub3QsIHNlZQorICAgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi4gICov
CisKKyNpZm5kZWYJX09SMUtfTERTT0RFRlNfSAorI2RlZmluZQlfT1IxS19MRFNPREVGU19ICTEK
KworI2luY2x1ZGUgPGVsZi5oPgorCitzdHJ1Y3QgTGFfb3Ixa19yZWdzOworc3RydWN0IExhX29y
MWtfcmV0dmFsOworCisjZGVmaW5lIEFSQ0hfUExURU5URVJfTUVNQkVSUwkJCQkJCVwKKyAgICB1
aW50cHRyX3QgKCpvcjFrX2dudV9wbHRlbnRlcikgKEVsZjMyX1N5bSAqLCB1bnNpZ25lZCBpbnQs
IHVpbnRwdHJfdCAqLCBcCisJCQkJICB1aW50cHRyX3QgKiwgc3RydWN0IExhX29yMWtfcmVncyAq
LCBcCisJCQkJICB1bnNpZ25lZCBpbnQgKiwgY29uc3QgY2hhciAqbmFtZSwJXAorCQkJCSAgbG9u
ZyBpbnQgKmZyYW1lc2l6ZXApCisKKyNkZWZpbmUgQVJDSF9QTFRFWElUX01FTUJFUlMJCQkJCQlc
CisgICAgdW5zaWduZWQgaW50ICgqb3Ixa19nbnVfcGx0ZXhpdCkgKEVsZjMyX1N5bSAqLCB1bnNp
Z25lZCBpbnQsIHVpbnRwdHJfdCAqLCBcCisJCQkJICAgIHVpbnRwdHJfdCAqLCBjb25zdCBzdHJ1
Y3QgTGFfb3Ixa19yZWdzICosIFwKKwkJCQkgICAgc3RydWN0IExhX29yMWtfcmV0dmFsICosIGNv
bnN0IGNoYXIgKikKKworI2luY2x1ZGVfbmV4dCA8bGRzb2RlZnMuaD4KKworI2VuZGlmCmRpZmYg
LS1naXQgYS9zeXNkZXBzL29yMWsvc290cnVzcy1saWIuYyBiL3N5c2RlcHMvb3Ixay9zb3RydXNz
LWxpYi5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLmVlMTZmODQ0NTYK
LS0tIC9kZXYvbnVsbAorKysgYi9zeXNkZXBzL29yMWsvc290cnVzcy1saWIuYwpAQCAtMCwwICsx
LDUxIEBACisvKiBPdmVycmlkZSBnZW5lcmljIHNvdHJ1c3MtbGliLmMgdG8gZGVmaW5lIGFjdHVh
bCBmdW5jdGlvbnMgZm9yIE9wZW5SSVNDLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29m
dHdhcmUgRm91bmRhdGlvbiwgSW5jLgorICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIEdOVSBD
IExpYnJhcnkuCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGZyZWUgc29mdHdhcmU7IHlvdSBj
YW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vcgorICAgbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBv
ZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5zZSBhcyBwdWJsaXNoZWQg
YnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyCisgICB2ZXJzaW9uIDIuMSBv
ZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi4KKwor
ICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3
aWxsIGJlIHVzZWZ1bCwKKyAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVu
IHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mCisgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBG
T1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlIEdOVQorICAgTGVzc2VyIEdlbmVyYWwg
UHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KKworICAgWW91IHNob3VsZCBoYXZlIHJl
Y2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYworICAgTGljZW5z
ZSBhbG9uZyB3aXRoIHRoZSBHTlUgQyBMaWJyYXJ5LiAgSWYgbm90LCBzZWUKKyAgIDxodHRwczov
L3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uICAqLworCisjZGVmaW5lIEhBVkVfQVJDSF9QTFRFTlRF
UgorI2RlZmluZSBIQVZFX0FSQ0hfUExURVhJVAorCisjaW5jbHVkZSA8ZWxmL3NvdHJ1c3MtbGli
LmM+CisKK0VsZlcoQWRkcikKK2xhX29yMWtfZ251X3BsdGVudGVyIChFbGZXKFN5bSkgKnN5bSBf
X2F0dHJpYnV0ZV9fICgodW51c2VkKSksCisJCSAgICAgICB1bnNpZ25lZCBpbnQgbmR4IF9fYXR0
cmlidXRlX18gKCh1bnVzZWQpKSwKKwkJICAgICAgIHVpbnRwdHJfdCAqcmVmY29vaywgdWludHB0
cl90ICpkZWZjb29rLAorCQkgICAgICAgTGFfb3Ixa19yZWdzICpyZWdzLCB1bnNpZ25lZCBpbnQg
KmZsYWdzLAorCQkgICAgICAgY29uc3QgY2hhciAqc3ltbmFtZSwgbG9uZyBpbnQgKmZyYW1lc2l6
ZXApCit7CisgIHByaW50X2VudGVyIChyZWZjb29rLCBkZWZjb29rLCBzeW1uYW1lLAorCSAgICAg
ICByZWdzLT5scl9yZWdbMF0sIHJlZ3MtPmxyX3JlZ1sxXSwgcmVncy0+bHJfcmVnWzJdLAorCSAg
ICAgICAqZmxhZ3MpOworCisgIC8qIE5vIG5lZWQgdG8gY29weSBhbnl0aGluZywgd2Ugd2lsbCBu
b3QgbmVlZCB0aGUgcGFyYW1ldGVycyBpbiBhbnkgY2FzZS4gICovCisgICpmcmFtZXNpemVwID0g
MDsKKworICByZXR1cm4gc3ltLT5zdF92YWx1ZTsKK30KKwordW5zaWduZWQgaW50CitsYV9vcjFr
X2dudV9wbHRleGl0IChFbGZXKFN5bSkgKnN5bSwgdW5zaWduZWQgaW50IG5keCwgdWludHB0cl90
ICpyZWZjb29rLAorCQkgICAgICB1aW50cHRyX3QgKmRlZmNvb2ssCisJCSAgICAgIGNvbnN0IHN0
cnVjdCBMYV9vcjFrX3JlZ3MgKmlucmVncywKKwkJICAgICAgc3RydWN0IExhX29yMWtfcmV0dmFs
ICpvdXRyZWdzLAorCQkgICAgICBjb25zdCBjaGFyICpzeW1uYW1lKQoreworICBwcmludF9leGl0
IChyZWZjb29rLCBkZWZjb29rLCBzeW1uYW1lLCBvdXRyZWdzLT5scnZfcjMpOworCisgIHJldHVy
biAwOworfQpkaWZmIC0tZ2l0IGEvc3lzZGVwcy9vcjFrL3N0YXJ0LlMgYi9zeXNkZXBzL29yMWsv
c3RhcnQuUwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi4wNDI0MzU1ZjM2
Ci0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy9vcjFrL3N0YXJ0LlMKQEAgLTAsMCArMSw5OSBA
QAorLyogc3RhcnQsIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmlnaHQgKEMpIDIwMjEgRnJl
ZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUg
R05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsg
eW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRl
cm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFzIHB1Ymxp
c2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIKKyAgIHZlcnNpb24g
Mi4xIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9u
LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0
IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0
IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRO
RVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2Vu
ZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhh
dmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBM
aWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgd3JpdGUgdG8gdGhl
IEZyZWUKKyAgIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4sIDU5IFRlbXBsZSBQbGFjZSwgU3Vp
dGUgMzMwLCBCb3N0b24sIE1BCisgICAwMjExMS0xMzA3IFVTQS4gICovCisKKy8qIFRoaXMgaXMg
dGhlIGNhbm9uaWNhbCBlbnRyeSBwb2ludCwgdXN1YWxseSB0aGUgZmlyc3QgdGhpbmcgaW4gdGhl
IHRleHQKKyAgIHNlZ21lbnQuCisKKyAgIHNwICAgVGhlIHN0YWNrIGNvbnRhaW5zIHRoZSBhcmd1
bWVudHMgYW5kIGVudmlyb25tZW50OgorICAgIDAoc3ApICAgICBhcmdjCisgICAgNChzcCkgICAg
IGFyZ3ZbMF0KKyAgICAuLi4KKyAgICAoNCphcmdjKShzcCkgICAgTlVMTAorICAgICg0Kihhcmdj
KzEpKShzcCkgIGVudnBbMF0KKyAgICAuLi4KKyAgICBOVUxMCisgKi8KKworI2RlZmluZSBfX0FT
U0VNQkxZX18KKyNpbmNsdWRlIDxzeXNkZXAuaD4KKyNpbmNsdWRlIDxlbnRyeS5oPgorCitFTlRS
WSAoRU5UUllfUE9JTlQpCisKKwkvKiBTZXR1cCBBcmd1bWVudHMgdG8gdGhlIF9fbGliY19zdGFy
dF9tYWluIGZ1bmN0aW9uLiAgKi8KKworCS8qIFRha2UgdmFsdWVzIGZvciBhcmdjIGFuZCBhcmd2
IG9mZiB0aGUgc3RhY2suCisJICAgVGhlc2Ugd2lsbCBiZSBwYXNzZWQgYXMgYXJndW1lbnRzIHR3
byBhbmQgdGhyZWUgdG8gbWFpbgorCSAgIGFuZCB0aHVzIGdvIGluIHJlZ2lzdGVycyByNCBhbmQg
cjUsIHJlc3BlY3RpdmVseS4gICovCisJbC5sd3oJcjQsIDAocjEpCisJbC5hZGRpCXI1LCByMSwg
NAorCisJLyogUGFzcyBpbiBydGxkX2ZpbmkgZnJvbSBkbC1zdGFydC5TLiAgKi8KKwlsLm9yCXI4
LCByMywgcjMKKworI2lmZGVmIFBJQworCS8qIE9idGFpbiBhIHBvaW50ZXIgdG8gLmdvdCBpbiBy
MTYgKi8KKwlsLmphbAkweDgKKwkgbC5tb3ZoaSByMTYsIGdvdHBjaGkoX0dMT0JBTF9PRkZTRVRf
VEFCTEVfLTQpCisJbC5vcmkJcjE2LCByMTYsIGdvdHBjbG8oX0dMT0JBTF9PRkZTRVRfVEFCTEVf
KzApCisJbC5hZGQJcjE2LCByMTYsIHI5CisKKwkvKiBQYXNzIGluIHRoZSB0aGUgbWFpbiBzeW1i
b2wuICAqLworCWwubHd6CXIzLCBnb3QobWFpbikocjE2KQorI2Vsc2UKKwkvKiBQYXNzIGluIHRo
ZSB0aGUgbWFpbiBzeW1ib2wuICAqLworCWwubW92aGkgcjMsIGhpKG1haW4pCisJbC5vcmkJcjMs
IHIzLCBsbyhtYWluKQorI2VuZGlmCisJLyogVXNlZCB0byBiZSBpbml0IGFuZCBmaW5pLiAgKi8K
KwlsLm1vdmhpCXI2LCAweDAKKwlsLm1vdmhpCXI3LCAweDAKKworCS8qIFB1c2ggc3RhY2sgbGlt
aXQgb250byB0aGUgc3RhY2suCisJICAgVGhpcyBwcm92aWRlcyB0aGUgaGlnaGVzdCBzdGFjayBh
ZGRyZXNzIHRvIHVzZXIgY29kZSAoYXMgc3RhY2sgZ3Jvd3MKKwkgICBkb3dud2FyZHMuCisJICAg
VGhpcyBpcyB0aGUgc2V2ZW50aCBhcmd1bWVudCB0byBfX2xpYmNfc3RhcnRfbWFpbiBhbmQgdGh1
cyBuZWVkcyB0bworCSAgIGJlIHBhc3NlZCBvbiB0aGUgc3RhY2suICAqLworCWwuc3cJLTQocjEp
LCByMQorCisJLyogQWRqdXN0IHN0YWNrIHRvIGFjY291bnQgZm9yIGEgdG90YWwgb2YgNyBhcmdz
IChpLmUuIHRoZSBsYXN0IG9uZSBpcworCSAgIG9uIHRoZSBzdGFjay4gICovCisJbC5hZGRpCXIx
LCByMSwgLTQKKworCS8qIENsZWFyIHRoZSBmcmFtZSBwb2ludGVyIGFuZCBsaW5rIHJlZ2lzdGVy
IHNpbmNlIHRoaXMgaXMgdGhlCisJICAgb3V0ZXJtb3N0IGZyYW1lLiAgKi8KKwlsLm1vdmhpCXIy
LCAweDAKKwlsLm1vdmhpCXI5LCAweDAKKworCS8qIExldCB0aGUgbGliYyBjYWxsIG1haW4gYW5k
IGV4aXQgd2l0aCBpdHMgcmV0dXJuIGNvZGUuICAqLworI2lmZGVmIFBJQworCWwuaglwbHQoX19s
aWJjX3N0YXJ0X21haW4pCisjZWxzZQorCWwuaglfX2xpYmNfc3RhcnRfbWFpbgorI2VuZGlmCisJ
IGwubm9wCitFTkQgKEVOVFJZX1BPSU5UKQorCisJLyogRGVmaW5lIGEgc3ltYm9sIGZvciB0aGUg
Zmlyc3QgcGllY2Ugb2YgaW5pdGlhbGl6ZWQgZGF0YS4gICovCisJLmRhdGEKKwkuZ2xvYmwgX19k
YXRhX3N0YXJ0CitfX2RhdGFfc3RhcnQ6CisJLmxvbmcgMAorCS53ZWFrIGRhdGFfc3RhcnQKKwlk
YXRhX3N0YXJ0ID0gX19kYXRhX3N0YXJ0CmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvdHN0LWF1
ZGl0LmggYi9zeXNkZXBzL29yMWsvdHN0LWF1ZGl0LmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMDAwMC4uNzllZTFiN2IwMgotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ix
ay90c3QtYXVkaXQuaApAQCAtMCwwICsxLDI0IEBACisvKiBEZWZpbml0aW9ucyBmb3IgdGVzdGlu
ZyBQTFQgZW50cnkvZXhpdCBhdWRpdGluZy4gIE9wZW5SSVNDIHZlcnNpb24uCisgICBDb3B5cmln
aHQgKEMpIDIwMjEgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBJbmMuCisKKyAgIFRoaXMgZmls
ZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBp
cyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlm
eSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAg
IExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVp
dGhlcgorICAgdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikg
YW55IGxhdGVyIHZlcnNpb24uCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVk
IGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkg
V0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hB
TlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBH
TlUKKyAgIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisK
KyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2Vu
ZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeS4gIElm
IG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2Rl
ZmluZSBwbHRlbnRlciBsYV9vcjFrX2dudV9wbHRlbnRlcgorI2RlZmluZSBwbHRleGl0IGxhX29y
MWtfZ251X3BsdGV4aXQKKyNkZWZpbmUgTGFfcmVncyBMYV9vcjFrX3JlZ3MKKyNkZWZpbmUgTGFf
cmV0dmFsIExhX29yMWtfcmV0dmFsCisjZGVmaW5lIGludF9yZXR2YWwgbHJ2X3IzCi0tIAoyLjMx
LjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5S
SVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xp
c3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
