Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 37A5D1B20D3
	for <lists+openrisc@lfdr.de>; Tue, 21 Apr 2020 10:02:11 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 15FC220AF0;
	Tue, 21 Apr 2020 10:02:11 +0200 (CEST)
Received: from us-smtp-1.mimecast.com (us-smtp-delivery-1.mimecast.com
 [205.139.110.120])
 by mail.librecores.org (Postfix) with ESMTP id A3DD8202EF
 for <openrisc@lists.librecores.org>; Tue, 21 Apr 2020 06:23:39 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1587443018;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 in-reply-to:in-reply-to:references:references;
 bh=JaieFtrynku5iULCPSegJfHOzOMnZqOFIqChb4nr18M=;
 b=hou0/G3hjxMsovSWTbA2YtOzZvfxbmIVq++obiJzXe+JaA2w3K/YUr5pQYjTGBRZHepNFO
 K3cXQmD5K3Umt/fbiy2kZKWj1P+XnM83ArzxarOGGxKXq3e5kFhzBfiHEAZoZa+EJoNlqF
 V/X3a3hk7M0NilfngHqRKDkIz7kpHoE=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-30-7AL0EMq3NX6ay4HJGU29Lg-1; Tue, 21 Apr 2020 00:23:36 -0400
X-MC-Unique: 7AL0EMq3NX6ay4HJGU29Lg-1
Received: from smtp.corp.redhat.com (int-mx04.intmail.prod.int.phx2.redhat.com
 [10.5.11.14])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id ABAEF1005509;
 Tue, 21 Apr 2020 04:23:23 +0000 (UTC)
Received: from localhost (ovpn-12-34.pek2.redhat.com [10.72.12.34])
 by smtp.corp.redhat.com (Postfix) with ESMTPS id C21715DA76;
 Tue, 21 Apr 2020 04:23:20 +0000 (UTC)
Date: Tue, 21 Apr 2020 12:23:16 +0800
From: Baoquan He <bhe@redhat.com>
To: Mike Rapoport <rppt@kernel.org>
Message-ID: <20200421042316.GQ4247@MiWiFi-R3L-srv>
References: <20200412194859.12663-1-rppt@kernel.org>
 <20200412194859.12663-4-rppt@kernel.org>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <20200412194859.12663-4-rppt@kernel.org>
User-Agent: Mutt/1.10.1 (2018-07-13)
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.14
X-Mailman-Approved-At: Tue, 21 Apr 2020 10:01:35 +0200
Subject: Re: [OpenRISC] [PATCH 03/21] mm: remove
 CONFIG_HAVE_MEMBLOCK_NODE_MAP option
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-doc@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Michal Hocko <mhocko@kernel.org>,
 "James E.J. Bottomley" <James.Bottomley@hansenpartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Guo Ren <guoren@kernel.org>,
 linux-csky@vger.kernel.org, linux-parisc@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Greg Ungerer <gerg@linux-m68k.org>,
 linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-snps-arc@lists.infradead.org, linux-c6x-dev@linux-c6x.org,
 Brian Cain <bcain@codeaurora.org>, Jonathan Corbet <corbet@lwn.net>,
 linux-sh@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
 Helge Deller <deller@gmx.de>, x86@kernel.org,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Mike Rapoport <rppt@linux.ibm.com>, linux-arm-kernel@lists.infradead.org,
 Mark Salter <msalter@redhat.com>, Matt Turner <mattst88@gmail.com>,
 linux-mips@vger.kernel.org, uclinux-h8-devel@lists.sourceforge.jp,
 linux-xtensa@linux-xtensa.org, linux-alpha@vger.kernel.org,
 linux-um@lists.infradead.org, linux-m68k@lists.linux-m68k.org,
 Tony Luck <tony.luck@intel.com>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, Guan Xuetao <gxt@pku.edu.cn>,
 Hoan Tran <Hoan@os.amperecomputing.com>, Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Yoshinori Sato <ysato@users.sourceforge.jp>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-kernel@vger.kernel.org, openrisc@lists.librecores.org,
 Richard Weinberger <richard@nod.at>, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gMDQvMTIvMjAgYXQgMTA6NDhwbSwgTWlrZSBSYXBvcG9ydCB3cm90ZToKPiBGcm9tOiBNaWtl
IFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+Cj4gCj4gVGhlIENPTkZJR19IQVZFX01FTUJM
T0NLX05PREVfTUFQIGlzIHVzZWQgdG8gZGlmZmVyZW50aWF0ZSBpbml0aWFsaXphdGlvbgo+IG9m
IG5vZGVzIGFuZCB6b25lcyBzdHJ1Y3R1cmVzIGJldHdlZW4gdGhlIHN5c3RlbXMgdGhhdCBoYXZl
IHJlZ2lvbiB0byBub2RlCj4gbWFwcGluZyBpbiBtZW1ibG9jayBhbmQgdGhvc2UgdGhhdCBkb24n
dC4KPiAKPiBDdXJyZW50bHkgYWxsIHRoZSBOVU1BIGFyY2hpdGVjdHVyZXMgZW5hYmxlIHRoaXMg
b3B0aW9uIGFuZCBmb3IgdGhlCj4gbm9uLU5VTUEgc3lzdGVtcyB3ZSBjYW4gcHJlc3VtZSB0aGF0
IGFsbCB0aGUgbWVtb3J5IGJlbG9uZ3MgdG8gbm9kZSAwIGFuZAo+IHRoZXJlZm9yZSB0aGUgY29t
cGlsZSB0aW1lIGNvbmZpZ3VyYXRpb24gb3B0aW9uIGlzIG5vdCByZXF1aXJlZC4KPiAKPiBUaGUg
cmVtYWluaW5nIGZldyBhcmNoaXRlY3R1cmVzIHRoYXQgdXNlIERJU0NPTlRJR01FTSB3aXRob3V0
IE5VTUEgYXJlCj4gZWFzaWx5IHVwZGF0ZWQgdG8gdXNlIG1lbWJsb2NrX2FkZF9ub2RlKCkgaW5z
dGVhZCBvZiBtZW1ibG9ja19hZGQoKSBhbmQKPiB0aHVzIGhhdmUgcHJvcGVyIGNvcnJlc3BvbmRl
bmNlIG9mIG1lbWJsb2NrIHJlZ2lvbnMgdG8gTlVNQSBub2Rlcy4KPiAKPiBTdGlsbCwgZnJlZV9h
cmVhX2luaXRfbm9kZSgpIG11c3QgaGF2ZSBhIGJhY2t3YXJkIGNvbXBhdGlibGUgdmVyc2lvbgo+
IGJlY2F1c2UgaXRzIHNlbWFudGljcyB3aXRoIGFuZCB3aXRob3V0IENPTkZJR19IQVZFX01FTUJM
T0NLX05PREVfTUFQIGlzCj4gZGlmZmVyZW50LiBPbmNlIGFsbCB0aGUgYXJjaGl0ZWN0dXJlcyB3
aWxsIHVzZSB0aGUgbmV3IHNlbWFudGljcywgdGhlCj4gZW50aXJlIGNvbXBhdGliaWxpdHkgbGF5
ZXIgY2FuIGJlIGRyb3BwZWQuCj4gCj4gVG8gYXZvaWQgYWRkaXRpb24gb2YgZXh0cmEgcnVuIHRp
bWUgbWVtb3J5IHRvIHN0b3JlIG5vZGUgaWQgZm9yCj4gYXJjaGl0ZWN0dXJlcyB0aGF0IGtlZXAg
bWVtYmxvY2sgYnV0IGhhdmUgb25seSBhIHNpbmdsZSBub2RlLCB0aGUgbm9kZSBpZAo+IGZpZWxk
IG9mIHRoZSBtZW1ibG9ja19yZWdpb24gaXMgZ3VhcmRlZCBieSBDT05GSUdfTkVFRF9NVUxUSVBM
RV9OT0RFUyBhbmQKPiB0aGUgY29ycmVzcG9uZGluZyBhY2Nlc3NvcnMgcHJlc3VtZSB0aGF0IGlu
IHRob3NlIGNhc2VzIGl0IGlzIGFsd2F5cyAwLgo+IAo+IFNpZ25lZC1vZmYtYnk6IE1pa2UgUmFw
b3BvcnQgPHJwcHRAbGludXguaWJtLmNvbT4KPiAtLS0KLi4uCj4gZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbGludXgvbWVtYmxvY2suaCBiL2luY2x1ZGUvbGludXgvbWVtYmxvY2suaAo+IGluZGV4IDZi
YzM3YTczMWQyNy4uNDVhYmZjNTRkYTM3IDEwMDY0NAo+IC0tLSBhL2luY2x1ZGUvbGludXgvbWVt
YmxvY2suaAo+ICsrKyBiL2luY2x1ZGUvbGludXgvbWVtYmxvY2suaAo+IEBAIC01MCw3ICs1MCw3
IEBAIHN0cnVjdCBtZW1ibG9ja19yZWdpb24gewo+ICAJcGh5c19hZGRyX3QgYmFzZTsKPiAgCXBo
eXNfYWRkcl90IHNpemU7Cj4gIAllbnVtIG1lbWJsb2NrX2ZsYWdzIGZsYWdzOwo+IC0jaWZkZWYg
Q09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAKPiArI2lmZGVmIENPTkZJR19ORUVEX01VTFRJ
UExFX05PREVTCj4gIAlpbnQgbmlkOwo+ICAjZW5kaWYKPiAgfTsKPiBAQCAtMjE1LDcgKzIxNSw2
IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBtZW1ibG9ja19pc19ub21hcChzdHJ1Y3QgbWVtYmxvY2tf
cmVnaW9uICptKQo+ICAJcmV0dXJuIG0tPmZsYWdzICYgTUVNQkxPQ0tfTk9NQVA7Cj4gIH0KPiAg
Cj4gLSNpZmRlZiBDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01BUAo+ICBpbnQgbWVtYmxvY2tf
c2VhcmNoX3Bmbl9uaWQodW5zaWduZWQgbG9uZyBwZm4sIHVuc2lnbmVkIGxvbmcgKnN0YXJ0X3Bm
biwKPiAgCQkJICAgIHVuc2lnbmVkIGxvbmcgICplbmRfcGZuKTsKPiAgdm9pZCBfX25leHRfbWVt
X3Bmbl9yYW5nZShpbnQgKmlkeCwgaW50IG5pZCwgdW5zaWduZWQgbG9uZyAqb3V0X3N0YXJ0X3Bm
biwKPiBAQCAtMjM0LDcgKzIzMyw2IEBAIHZvaWQgX19uZXh0X21lbV9wZm5fcmFuZ2UoaW50ICpp
ZHgsIGludCBuaWQsIHVuc2lnbmVkIGxvbmcgKm91dF9zdGFydF9wZm4sCj4gICNkZWZpbmUgZm9y
X2VhY2hfbWVtX3Bmbl9yYW5nZShpLCBuaWQsIHBfc3RhcnQsIHBfZW5kLCBwX25pZCkJCVwKPiAg
CWZvciAoaSA9IC0xLCBfX25leHRfbWVtX3Bmbl9yYW5nZSgmaSwgbmlkLCBwX3N0YXJ0LCBwX2Vu
ZCwgcF9uaWQpOyBcCj4gIAkgICAgIGkgPj0gMDsgX19uZXh0X21lbV9wZm5fcmFuZ2UoJmksIG5p
ZCwgcF9zdGFydCwgcF9lbmQsIHBfbmlkKSkKPiAtI2VuZGlmIC8qIENPTkZJR19IQVZFX01FTUJM
T0NLX05PREVfTUFQICovCj4gIAo+ICAjaWZkZWYgQ09ORklHX0RFRkVSUkVEX1NUUlVDVF9QQUdF
X0lOSVQKPiAgdm9pZCBfX25leHRfbWVtX3Bmbl9yYW5nZV9pbl96b25lKHU2NCAqaWR4LCBzdHJ1
Y3Qgem9uZSAqem9uZSwKPiBAQCAtMzEwLDEwICszMDgsMTAgQEAgdm9pZCBfX25leHRfbWVtX3Bm
bl9yYW5nZV9pbl96b25lKHU2NCAqaWR4LCBzdHJ1Y3Qgem9uZSAqem9uZSwKPiAgCWZvcl9lYWNo
X21lbV9yYW5nZV9yZXYoaSwgJm1lbWJsb2NrLm1lbW9yeSwgJm1lbWJsb2NrLnJlc2VydmVkLAlc
Cj4gIAkJCSAgICAgICBuaWQsIGZsYWdzLCBwX3N0YXJ0LCBwX2VuZCwgcF9uaWQpCj4gIAo+IC0j
aWZkZWYgQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAKPiAgaW50IG1lbWJsb2NrX3NldF9u
b2RlKHBoeXNfYWRkcl90IGJhc2UsIHBoeXNfYWRkcl90IHNpemUsCj4gIAkJICAgICAgc3RydWN0
IG1lbWJsb2NrX3R5cGUgKnR5cGUsIGludCBuaWQpOwo+ICAKPiArI2lmZGVmIENPTkZJR19ORUVE
X01VTFRJUExFX05PREVTCj4gIHN0YXRpYyBpbmxpbmUgdm9pZCBtZW1ibG9ja19zZXRfcmVnaW9u
X25vZGUoc3RydWN0IG1lbWJsb2NrX3JlZ2lvbiAqciwgaW50IG5pZCkKPiAgewo+ICAJci0+bmlk
ID0gbmlkOwo+IEBAIC0zMzIsNyArMzMwLDcgQEAgc3RhdGljIGlubGluZSBpbnQgbWVtYmxvY2tf
Z2V0X3JlZ2lvbl9ub2RlKGNvbnN0IHN0cnVjdCBtZW1ibG9ja19yZWdpb24gKnIpCj4gIHsKPiAg
CXJldHVybiAwOwo+ICB9Cj4gLSNlbmRpZiAvKiBDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01B
UCAqLwo+ICsjZW5kaWYgLyogQ09ORklHX05FRURfTVVMVElQTEVfTk9ERVMgKi8KPiAgCj4gIC8q
IEZsYWdzIGZvciBtZW1ibG9jayBhbGxvY2F0aW9uIEFQSXMgKi8KPiAgI2RlZmluZSBNRU1CTE9D
S19BTExPQ19BTllXSEVSRQkofihwaHlzX2FkZHJfdCkwKQo+IGRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgKPiBpbmRleCBhNDA0MDI2ZDE0ZDQuLjU5
MDNiYmJkYjMzNiAxMDA2NDQKPiAtLS0gYS9pbmNsdWRlL2xpbnV4L21tLmgKPiArKysgYi9pbmNs
dWRlL2xpbnV4L21tLmgKPiBAQCAtMjM0NCw5ICsyMzQ0LDggQEAgc3RhdGljIGlubGluZSB1bnNp
Z25lZCBsb25nIGdldF9udW1fcGh5c3BhZ2VzKHZvaWQpCj4gIAlyZXR1cm4gcGh5c19wYWdlczsK
PiAgfQo+ICAKPiAtI2lmZGVmIENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQCj4gIC8qCj4g
LSAqIFdpdGggQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAgc2V0LCBhbiBhcmNoaXRlY3R1
cmUgbWF5IGluaXRpYWxpc2UgaXRzCj4gKyAqIFVzaW5nIG1lbWJsb2NrIG5vZGUgbWFwcGluZ3Ms
IGFuIGFyY2hpdGVjdHVyZSBtYXkgaW5pdGlhbGlzZSBpdHMKPiAgICogem9uZXMsIGFsbG9jYXRl
IHRoZSBiYWNraW5nIG1lbV9tYXAgYW5kIGFjY291bnQgZm9yIG1lbW9yeSBob2xlcyBpbiBhIG1v
cmUKPiAgICogYXJjaGl0ZWN0dXJlIGluZGVwZW5kZW50IG1hbm5lci4gVGhpcyBpcyBhIHN1YnN0
aXR1dGUgZm9yIGNyZWF0aW5nIHRoZQo+ICAgKiB6b25lX3NpemVzW10gYW5kIHpob2xlc19zaXpl
W10gYXJyYXlzIGFuZCBwYXNzaW5nIHRoZW0gdG8KPiBAQCAtMjM2Nyw5ICsyMzY2LDYgQEAgc3Rh
dGljIGlubGluZSB1bnNpZ25lZCBsb25nIGdldF9udW1fcGh5c3BhZ2VzKHZvaWQpCj4gICAqIHJl
Z2lzdGVyZWQgcGh5c2ljYWwgcGFnZSByYW5nZS4gIFNpbWlsYXJseQo+ICAgKiBzcGFyc2VfbWVt
b3J5X3ByZXNlbnRfd2l0aF9hY3RpdmVfcmVnaW9ucygpIGNhbGxzIG1lbW9yeV9wcmVzZW50KCkg
Zm9yCj4gICAqIGVhY2ggcmFuZ2Ugd2hlbiBTUEFSU0VNRU0gaXMgZW5hYmxlZC4KPiAtICoKPiAt
ICogU2VlIG1tL3BhZ2VfYWxsb2MuYyBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBlYWNoIGZ1bmN0
aW9uIGV4cG9zZWQgYnkKPiAtICogQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAuCj4gICAq
Lwo+ICBleHRlcm4gdm9pZCBmcmVlX2FyZWFfaW5pdF9ub2Rlcyh1bnNpZ25lZCBsb25nICptYXhf
em9uZV9wZm4pOwo+ICB1bnNpZ25lZCBsb25nIG5vZGVfbWFwX3Bmbl9hbGlnbm1lbnQodm9pZCk7
Cj4gQEAgLTIzODQsMTMgKzIzODAsOSBAQCBleHRlcm4gdm9pZCBmcmVlX2Jvb3RtZW1fd2l0aF9h
Y3RpdmVfcmVnaW9ucyhpbnQgbmlkLAo+ICAJCQkJCQl1bnNpZ25lZCBsb25nIG1heF9sb3dfcGZu
KTsKPiAgZXh0ZXJuIHZvaWQgc3BhcnNlX21lbW9yeV9wcmVzZW50X3dpdGhfYWN0aXZlX3JlZ2lv
bnMoaW50IG5pZCk7Cj4gIAo+IC0jZW5kaWYgLyogQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9N
QVAgKi8KPiAtCj4gLSNpZiAhZGVmaW5lZChDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01BUCkg
JiYgXAo+IC0gICAgIWRlZmluZWQoQ09ORklHX0hBVkVfQVJDSF9FQVJMWV9QRk5fVE9fTklEKQo+
ICsjaWZuZGVmIENPTkZJR19ORUVEX01VTFRJUExFX05PREVTCj4gIHN0YXRpYyBpbmxpbmUgaW50
IGVhcmx5X3Bmbl90b19uaWQodW5zaWduZWQgbG9uZyBwZm4pCj4gIHsKPiAtCUJVSUxEX0JVR19P
TihJU19FTkFCTEVEKENPTkZJR19OVU1BKSk7Cj4gIAlyZXR1cm4gMDsKPiAgfQo+ICAjZWxzZQo+
IGRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L21tem9uZS5oIGIvaW5jbHVkZS9saW51eC9tbXpv
bmUuaAo+IGluZGV4IDdiNWI2ZWJhNDAyZi4uZmZjMmEzZDYwMzZiIDEwMDY0NAo+IC0tLSBhL2lu
Y2x1ZGUvbGludXgvbW16b25lLmgKPiArKysgYi9pbmNsdWRlL2xpbnV4L21tem9uZS5oCj4gQEAg
LTg3NCw3ICs4NzQsNyBAQCBleHRlcm4gaW50IG1vdmFibGVfem9uZTsKPiAgI2lmZGVmIENPTkZJ
R19ISUdITUVNCj4gIHN0YXRpYyBpbmxpbmUgaW50IHpvbmVfbW92YWJsZV9pc19oaWdobWVtKHZv
aWQpCj4gIHsKPiAtI2lmZGVmIENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQCj4gKyNpZmRl
ZiBDT05GSUdfTkVFRF9NVUxUSVBMRV9OT0RFUwo+ICAJcmV0dXJuIG1vdmFibGVfem9uZSA9PSBa
T05FX0hJR0hNRU07Cj4gICNlbHNlCj4gIAlyZXR1cm4gKFpPTkVfTU9WQUJMRSAtIDEpID09IFpP
TkVfSElHSE1FTTsKCklmIENPTkZJR19ISUdITUVNIGlzIGVuYWJsZWQsIHRoZSBhYm92ZSBqdWRn
ZW1lbnQgaXMgYWx3YXlzIHRydWUsCndvbmRlcmluZyB3aGF0J3MgdGhlIHB1cnBvc2Ugd2UgaGF2
ZSB0byBkbyBsaWtlIHRoaXMuIEl0J3Mgbm90IHJlbGF0ZWQKdG8gdGhpcyBwYXRjaCB0aG91Z2gu
Cgo+IGRpZmYgLS1naXQgYS9tbS9LY29uZmlnIGIvbW0vS2NvbmZpZwo+IGluZGV4IGMxYWNjMzRj
MWMzNS4uYWFhNWJkYWExYzhhIDEwMDY0NAo+IC0tLSBhL21tL0tjb25maWcKPiArKysgYi9tbS9L
Y29uZmlnCj4gQEAgLTEyNiw5ICsxMjYsNiBAQCBjb25maWcgU1BBUlNFTUVNX1ZNRU1NQVAKPiAg
CSAgcGZuX3RvX3BhZ2UgYW5kIHBhZ2VfdG9fcGZuIG9wZXJhdGlvbnMuICBUaGlzIGlzIHRoZSBt
b3N0Cj4gIAkgIGVmZmljaWVudCBvcHRpb24gd2hlbiBzdWZmaWNpZW50IGtlcm5lbCByZXNvdXJj
ZXMgYXJlIGF2YWlsYWJsZS4KPiAgCj4gLWNvbmZpZyBIQVZFX01FTUJMT0NLX05PREVfTUFQCj4g
LQlib29sCj4gLQo+ICBjb25maWcgSEFWRV9NRU1CTE9DS19QSFlTX01BUAo+ICAJYm9vbAo+ICAK
PiBkaWZmIC0tZ2l0IGEvbW0vbWVtYmxvY2suYyBiL21tL21lbWJsb2NrLmMKPiBpbmRleCA0M2Uy
ZmQzMDA2YzEuLjc0MzY1OWQ4OGZjNCAxMDA2NDQKPiAtLS0gYS9tbS9tZW1ibG9jay5jCj4gKysr
IGIvbW0vbWVtYmxvY2suYwo+IEBAIC02MjAsNyArNjIwLDcgQEAgc3RhdGljIGludCBfX2luaXRf
bWVtYmxvY2sgbWVtYmxvY2tfYWRkX3JhbmdlKHN0cnVjdCBtZW1ibG9ja190eXBlICp0eXBlLAo+
ICAJCSAqIGFyZWEsIGluc2VydCB0aGF0IHBvcnRpb24uCj4gIAkJICovCj4gIAkJaWYgKHJiYXNl
ID4gYmFzZSkgewo+IC0jaWZkZWYgQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAKPiArI2lm
ZGVmIENPTkZJR19ORUVEX01VTFRJUExFX05PREVTCj4gIAkJCVdBUk5fT04obmlkICE9IG1lbWJs
b2NrX2dldF9yZWdpb25fbm9kZShyZ24pKTsKPiAgI2VuZGlmCj4gIAkJCVdBUk5fT04oZmxhZ3Mg
IT0gcmduLT5mbGFncyk7Cj4gQEAgLTExOTcsNyArMTE5Nyw2IEBAIHZvaWQgX19pbml0X21lbWJs
b2NrIF9fbmV4dF9tZW1fcmFuZ2VfcmV2KHU2NCAqaWR4LCBpbnQgbmlkLAo+ICAJKmlkeCA9IFVM
TE9OR19NQVg7Cj4gIH0KPiAgCj4gLSNpZmRlZiBDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01B
UAo+ICAvKgo+ICAgKiBDb21tb24gaXRlcmF0b3IgaW50ZXJmYWNlIHVzZWQgdG8gZGVmaW5lIGZv
cl9lYWNoX21lbV9wZm5fcmFuZ2UoKS4KPiAgICovCj4gQEAgLTEyNDcsNiArMTI0Niw3IEBAIHZv
aWQgX19pbml0X21lbWJsb2NrIF9fbmV4dF9tZW1fcGZuX3JhbmdlKGludCAqaWR4LCBpbnQgbmlk
LAo+ICBpbnQgX19pbml0X21lbWJsb2NrIG1lbWJsb2NrX3NldF9ub2RlKHBoeXNfYWRkcl90IGJh
c2UsIHBoeXNfYWRkcl90IHNpemUsCj4gIAkJCQkgICAgICBzdHJ1Y3QgbWVtYmxvY2tfdHlwZSAq
dHlwZSwgaW50IG5pZCkKPiAgewo+ICsjaWZkZWYgQ09ORklHX05FRURfTVVMVElQTEVfTk9ERVMK
PiAgCWludCBzdGFydF9yZ24sIGVuZF9yZ247Cj4gIAlpbnQgaSwgcmV0Owo+ICAKPiBAQCAtMTI1
OCw5ICsxMjU4LDEwIEBAIGludCBfX2luaXRfbWVtYmxvY2sgbWVtYmxvY2tfc2V0X25vZGUocGh5
c19hZGRyX3QgYmFzZSwgcGh5c19hZGRyX3Qgc2l6ZSwKPiAgCQltZW1ibG9ja19zZXRfcmVnaW9u
X25vZGUoJnR5cGUtPnJlZ2lvbnNbaV0sIG5pZCk7Cj4gIAo+ICAJbWVtYmxvY2tfbWVyZ2VfcmVn
aW9ucyh0eXBlKTsKPiArI2VuZGlmCj4gIAlyZXR1cm4gMDsKPiAgfQo+IC0jZW5kaWYgLyogQ09O
RklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAgKi8KPiArCj4gICNpZmRlZiBDT05GSUdfREVGRVJS
RURfU1RSVUNUX1BBR0VfSU5JVAo+ICAvKioKPiAgICogX19uZXh0X21lbV9wZm5fcmFuZ2VfaW5f
em9uZSAtIGl0ZXJhdG9yIGZvciBmb3JfZWFjaF8qX3JhbmdlX2luX3pvbmUoKQo+IEBAIC0xNzk5
LDcgKzE4MDAsNiBAQCBib29sIF9faW5pdF9tZW1ibG9jayBtZW1ibG9ja19pc19tYXBfbWVtb3J5
KHBoeXNfYWRkcl90IGFkZHIpCj4gIAlyZXR1cm4gIW1lbWJsb2NrX2lzX25vbWFwKCZtZW1ibG9j
ay5tZW1vcnkucmVnaW9uc1tpXSk7Cj4gIH0KPiAgCj4gLSNpZmRlZiBDT05GSUdfSEFWRV9NRU1C
TE9DS19OT0RFX01BUAo+ICBpbnQgX19pbml0X21lbWJsb2NrIG1lbWJsb2NrX3NlYXJjaF9wZm5f
bmlkKHVuc2lnbmVkIGxvbmcgcGZuLAo+ICAJCQkgdW5zaWduZWQgbG9uZyAqc3RhcnRfcGZuLCB1
bnNpZ25lZCBsb25nICplbmRfcGZuKQo+ICB7Cj4gQEAgLTE4MTQsNyArMTgxNCw2IEBAIGludCBf
X2luaXRfbWVtYmxvY2sgbWVtYmxvY2tfc2VhcmNoX3Bmbl9uaWQodW5zaWduZWQgbG9uZyBwZm4s
Cj4gIAo+ICAJcmV0dXJuIG1lbWJsb2NrX2dldF9yZWdpb25fbm9kZSgmdHlwZS0+cmVnaW9uc1tt
aWRdKTsKPiAgfQo+IC0jZW5kaWYKPiAgCj4gIC8qKgo+ICAgKiBtZW1ibG9ja19pc19yZWdpb25f
bWVtb3J5IC0gY2hlY2sgaWYgYSByZWdpb24gaXMgYSBzdWJzZXQgb2YgbWVtb3J5Cj4gQEAgLTE5
MDUsNyArMTkwNCw3IEBAIHN0YXRpYyB2b2lkIF9faW5pdF9tZW1ibG9jayBtZW1ibG9ja19kdW1w
KHN0cnVjdCBtZW1ibG9ja190eXBlICp0eXBlKQo+ICAJCXNpemUgPSByZ24tPnNpemU7Cj4gIAkJ
ZW5kID0gYmFzZSArIHNpemUgLSAxOwo+ICAJCWZsYWdzID0gcmduLT5mbGFnczsKPiAtI2lmZGVm
IENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQCj4gKyNpZmRlZiBDT05GSUdfTkVFRF9NVUxU
SVBMRV9OT0RFUwo+ICAJCWlmIChtZW1ibG9ja19nZXRfcmVnaW9uX25vZGUocmduKSAhPSBNQVhf
TlVNTk9ERVMpCj4gIAkJCXNucHJpbnRmKG5pZF9idWYsIHNpemVvZihuaWRfYnVmKSwgIiBvbiBu
b2RlICVkIiwKPiAgCQkJCSBtZW1ibG9ja19nZXRfcmVnaW9uX25vZGUocmduKSk7Cj4gZGlmZiAt
LWdpdCBhL21tL21lbW9yeV9ob3RwbHVnLmMgYi9tbS9tZW1vcnlfaG90cGx1Zy5jCj4gaW5kZXgg
ZmMwYWFkMGJjMWY1Li5lNjdkYzUwMTU3NmEgMTAwNjQ0Cj4gLS0tIGEvbW0vbWVtb3J5X2hvdHBs
dWcuYwo+ICsrKyBiL21tL21lbW9yeV9ob3RwbHVnLmMKPiBAQCAtMTM3MiwxMSArMTM3Miw3IEBA
IGNoZWNrX3BhZ2VzX2lzb2xhdGVkX2NiKHVuc2lnbmVkIGxvbmcgc3RhcnRfcGZuLCB1bnNpZ25l
ZCBsb25nIG5yX3BhZ2VzLAo+ICAKPiAgc3RhdGljIGludCBfX2luaXQgY21kbGluZV9wYXJzZV9t
b3ZhYmxlX25vZGUoY2hhciAqcCkKPiAgewo+IC0jaWZkZWYgQ09ORklHX0hBVkVfTUVNQkxPQ0tf
Tk9ERV9NQVAKPiAgCW1vdmFibGVfbm9kZV9lbmFibGVkID0gdHJ1ZTsKPiAtI2Vsc2UKPiAtCXBy
X3dhcm4oIm1vdmFibGVfbm9kZSBwYXJhbWV0ZXIgZGVwZW5kcyBvbiBDT05GSUdfSEFWRV9NRU1C
TE9DS19OT0RFX01BUCB0byB3b3JrIHByb3Blcmx5XG4iKTsKPiAtI2VuZGlmCgpXb25kZXJpbmcg
aWYgdGhpcyBjaGFuZ2Ugd2lsbCBpbXBhY3QgYW55dGhpbmcuIEJlZm9yZSwgdGhvc2UgQVJDSGVz
IHdpdGgKQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAgc3VwcG9ydCBtb3ZhYmxlX25vZGUu
IFdpdGggdGhpcyBwYXRjaAphcHBsaWVkLCB0aG9zZSBBUkNIZXMgd2hpY2ggZG9uJ3Qgc3VwcG9y
dCBDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01BUApjYW4gYWxzbyBoYXZlICdtb3ZhYmxlX25v
ZGUnIHNwZWNpZmllZCBpbiBrZXJuZWwgY21kbGluZS4KCj4gIAlyZXR1cm4gMDsKPiAgfQo+ICBl
YXJseV9wYXJhbSgibW92YWJsZV9ub2RlIiwgY21kbGluZV9wYXJzZV9tb3ZhYmxlX25vZGUpOwo+
IGRpZmYgLS1naXQgYS9tbS9wYWdlX2FsbG9jLmMgYi9tbS9wYWdlX2FsbG9jLmMKPiBpbmRleCAx
YWM3NzViZmM5Y2YuLjQ1MzBlOWNmZDlmNyAxMDA2NDQKPiAtLS0gYS9tbS9wYWdlX2FsbG9jLmMK
PiArKysgYi9tbS9wYWdlX2FsbG9jLmMKPiBAQCAtMzM1LDcgKzMzNSw2IEBAIHN0YXRpYyB1bnNp
Z25lZCBsb25nIG5yX2tlcm5lbF9wYWdlcyBfX2luaXRkYXRhOwo+ICBzdGF0aWMgdW5zaWduZWQg
bG9uZyBucl9hbGxfcGFnZXMgX19pbml0ZGF0YTsKPiAgc3RhdGljIHVuc2lnbmVkIGxvbmcgZG1h
X3Jlc2VydmUgX19pbml0ZGF0YTsKPiAgCj4gLSNpZmRlZiBDT05GSUdfSEFWRV9NRU1CTE9DS19O
T0RFX01BUAo+ICBzdGF0aWMgdW5zaWduZWQgbG9uZyBhcmNoX3pvbmVfbG93ZXN0X3Bvc3NpYmxl
X3BmbltNQVhfTlJfWk9ORVNdIF9faW5pdGRhdGE7Cj4gIHN0YXRpYyB1bnNpZ25lZCBsb25nIGFy
Y2hfem9uZV9oaWdoZXN0X3Bvc3NpYmxlX3BmbltNQVhfTlJfWk9ORVNdIF9faW5pdGRhdGE7Cj4g
IHN0YXRpYyB1bnNpZ25lZCBsb25nIHJlcXVpcmVkX2tlcm5lbGNvcmUgX19pbml0ZGF0YTsKCkRv
ZXMgaXQgbWVhbiB0aG9zZSBBUkNIZXMgd2hpY2ggZG9uJ3Qgc3VwcG9ydApDT05GSUdfSEFWRV9N
RU1CTE9DS19OT0RFX01BUCBiZWZvcmUsIHdpbGwgaGF2ZSAna2VybmVsY29yZT0nIGFuZAonbW92
YWJsZWNvcmU9JyBub3csIGFuZCB3aWxsIGhhdmUgTU9WQUJMRSB6b25lPwoKPiBAQCAtMzQ4LDcg
KzM0Nyw2IEBAIHN0YXRpYyBib29sIG1pcnJvcmVkX2tlcm5lbGNvcmUgX19tZW1pbml0ZGF0YTsK
PiAgLyogbW92YWJsZV96b25lIGlzIHRoZSAicmVhbCIgem9uZSBwYWdlcyBpbiBaT05FX01PVkFC
TEUgYXJlIHRha2VuIGZyb20gKi8KPiAgaW50IG1vdmFibGVfem9uZTsKPiAgRVhQT1JUX1NZTUJP
TChtb3ZhYmxlX3pvbmUpOwo+IC0jZW5kaWYgLyogQ09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9N
QVAgKi8KPiAgCj4gICNpZiBNQVhfTlVNTk9ERVMgPiAxCj4gIHVuc2lnbmVkIGludCBucl9ub2Rl
X2lkcyBfX3JlYWRfbW9zdGx5ID0gTUFYX05VTU5PREVTOwo+IEBAIC0xNDk5LDggKzE0OTcsNyBA
QCB2b2lkIF9fZnJlZV9wYWdlc19jb3JlKHN0cnVjdCBwYWdlICpwYWdlLCB1bnNpZ25lZCBpbnQg
b3JkZXIpCj4gIAlfX2ZyZWVfcGFnZXMocGFnZSwgb3JkZXIpOwo+ICB9Cj4gIAo+IC0jaWYgZGVm
aW5lZChDT05GSUdfSEFWRV9BUkNIX0VBUkxZX1BGTl9UT19OSUQpIHx8IFwKPiAtCWRlZmluZWQo
Q09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVApCj4gKyNpZmRlZiBDT05GSUdfTkVFRF9NVUxU
SVBMRV9OT0RFUwo+ICAKPiAgc3RhdGljIHN0cnVjdCBtbWluaXRfcGZubmlkX2NhY2hlIGVhcmx5
X3Bmbm5pZF9jYWNoZSBfX21lbWluaXRkYXRhOwo+ICAKPiBAQCAtMTU0Miw3ICsxNTM5LDcgQEAg
aW50IF9fbWVtaW5pdCBlYXJseV9wZm5fdG9fbmlkKHVuc2lnbmVkIGxvbmcgcGZuKQo+ICAKPiAg
CXJldHVybiBuaWQ7Cj4gIH0KPiAtI2VuZGlmCj4gKyNlbmRpZiAvKiBDT05GSUdfTkVFRF9NVUxU
SVBMRV9OT0RFUyAqLwo+ICAKPiAgI2lmZGVmIENPTkZJR19OT0RFU19TUEFOX09USEVSX05PREVT
Cj4gIC8qIE9ubHkgc2FmZSB0byB1c2UgZWFybHkgaW4gYm9vdCB3aGVuIGluaXRpYWxpc2F0aW9u
IGlzIHNpbmdsZS10aHJlYWRlZCAqLwo+IEBAIC01OTI0LDcgKzU5MjEsNiBAQCB2b2lkIF9fcmVm
IGJ1aWxkX2FsbF96b25lbGlzdHMocGdfZGF0YV90ICpwZ2RhdCkKPiAgc3RhdGljIGJvb2wgX19t
ZW1pbml0Cj4gIG92ZXJsYXBfbWVtbWFwX2luaXQodW5zaWduZWQgbG9uZyB6b25lLCB1bnNpZ25l
ZCBsb25nICpwZm4pCj4gIHsKPiAtI2lmZGVmIENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQ
Cj4gIAlzdGF0aWMgc3RydWN0IG1lbWJsb2NrX3JlZ2lvbiAqcjsKPiAgCj4gIAlpZiAobWlycm9y
ZWRfa2VybmVsY29yZSAmJiB6b25lID09IFpPTkVfTU9WQUJMRSkgewo+IEBAIC01OTQwLDcgKzU5
MzYsNiBAQCBvdmVybGFwX21lbW1hcF9pbml0KHVuc2lnbmVkIGxvbmcgem9uZSwgdW5zaWduZWQg
bG9uZyAqcGZuKQo+ICAJCQlyZXR1cm4gdHJ1ZTsKPiAgCQl9Cj4gIAl9Cj4gLSNlbmRpZgo+ICAJ
cmV0dXJuIGZhbHNlOwo+ICB9Cj4gIAo+IEBAIC02NTczLDggKzY1NjgsNyBAQCBzdGF0aWMgdW5z
aWduZWQgbG9uZyBfX2luaXQgem9uZV9hYnNlbnRfcGFnZXNfaW5fbm9kZShpbnQgbmlkLAo+ICAJ
cmV0dXJuIG5yX2Fic2VudDsKPiAgfQo+ICAKPiAtI2Vsc2UgLyogQ09ORklHX0hBVkVfTUVNQkxP
Q0tfTk9ERV9NQVAgKi8KPiAtc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9faW5pdCB6b25l
X3NwYW5uZWRfcGFnZXNfaW5fbm9kZShpbnQgbmlkLAo+ICtzdGF0aWMgaW5saW5lIHVuc2lnbmVk
IGxvbmcgX19pbml0IGNvbXBhdF96b25lX3NwYW5uZWRfcGFnZXNfaW5fbm9kZShpbnQgbmlkLAoK
SXMgaXQgY29tcGFjdCB6b25lIHdoaWNoIGhhcyBjb250aW51b3VzIG1lbW9yeSByZWdpb24sIGFu
ZCB0aGUKY29tcGF0IGhlcmUgaXMgdHlwbz8gT3IgaXQncyBjb21wYXRpYmxlIHpvbmU/IFRoZSBu
YW1lIHNlZW1zIGEgbGl0dGxlCmNvbmZ1c2luZywgb3IgSSBtaXNzIHNvbWV0aGluZy4KCj4gIAkJ
CQkJdW5zaWduZWQgbG9uZyB6b25lX3R5cGUsCj4gIAkJCQkJdW5zaWduZWQgbG9uZyBub2RlX3N0
YXJ0X3BmbiwKPiAgCQkJCQl1bnNpZ25lZCBsb25nIG5vZGVfZW5kX3BmbiwKPiBAQCAtNjU5Myw3
ICs2NTg3LDcgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9faW5pdCB6b25lX3NwYW5u
ZWRfcGFnZXNfaW5fbm9kZShpbnQgbmlkLAo+ICAJcmV0dXJuIHpvbmVzX3NpemVbem9uZV90eXBl
XTsKPiAgfQo+ICAKPiAtc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9faW5pdCB6b25lX2Fi
c2VudF9wYWdlc19pbl9ub2RlKGludCBuaWQsCj4gK3N0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9u
ZyBfX2luaXQgY29tcGF0X3pvbmVfYWJzZW50X3BhZ2VzX2luX25vZGUoaW50IG5pZCwKPiAgCQkJ
CQkJdW5zaWduZWQgbG9uZyB6b25lX3R5cGUsCj4gIAkJCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9z
dGFydF9wZm4sCj4gIAkJCQkJCXVuc2lnbmVkIGxvbmcgbm9kZV9lbmRfcGZuLAo+IEBAIC02NjA1
LDEzICs2NTk5LDEyIEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBfX2luaXQgem9uZV9h
YnNlbnRfcGFnZXNfaW5fbm9kZShpbnQgbmlkLAo+ICAJcmV0dXJuIHpob2xlc19zaXplW3pvbmVf
dHlwZV07Cj4gIH0KPiAgCj4gLSNlbmRpZiAvKiBDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RFX01B
UCAqLwo+IC0KPiAgc3RhdGljIHZvaWQgX19pbml0IGNhbGN1bGF0ZV9ub2RlX3RvdGFscGFnZXMo
c3RydWN0IHBnbGlzdF9kYXRhICpwZ2RhdCwKPiAgCQkJCQkJdW5zaWduZWQgbG9uZyBub2RlX3N0
YXJ0X3BmbiwKPiAgCQkJCQkJdW5zaWduZWQgbG9uZyBub2RlX2VuZF9wZm4sCj4gIAkJCQkJCXVu
c2lnbmVkIGxvbmcgKnpvbmVzX3NpemUsCj4gLQkJCQkJCXVuc2lnbmVkIGxvbmcgKnpob2xlc19z
aXplKQo+ICsJCQkJCQl1bnNpZ25lZCBsb25nICp6aG9sZXNfc2l6ZSwKPiArCQkJCQkJYm9vbCBj
b21wYXQpCj4gIHsKPiAgCXVuc2lnbmVkIGxvbmcgcmVhbHRvdGFscGFnZXMgPSAwLCB0b3RhbHBh
Z2VzID0gMDsKPiAgCWVudW0gem9uZV90eXBlIGk7Cj4gQEAgLTY2MTksMTcgKzY2MTIsMzggQEAg
c3RhdGljIHZvaWQgX19pbml0IGNhbGN1bGF0ZV9ub2RlX3RvdGFscGFnZXMoc3RydWN0IHBnbGlz
dF9kYXRhICpwZ2RhdCwKPiAgCWZvciAoaSA9IDA7IGkgPCBNQVhfTlJfWk9ORVM7IGkrKykgewo+
ICAJCXN0cnVjdCB6b25lICp6b25lID0gcGdkYXQtPm5vZGVfem9uZXMgKyBpOwo+ICAJCXVuc2ln
bmVkIGxvbmcgem9uZV9zdGFydF9wZm4sIHpvbmVfZW5kX3BmbjsKPiArCQl1bnNpZ25lZCBsb25n
IHNwYW5uZWQsIGFic2VudDsKPiAgCQl1bnNpZ25lZCBsb25nIHNpemUsIHJlYWxfc2l6ZTsKPiAg
Cj4gLQkJc2l6ZSA9IHpvbmVfc3Bhbm5lZF9wYWdlc19pbl9ub2RlKHBnZGF0LT5ub2RlX2lkLCBp
LAo+IC0JCQkJCQkgIG5vZGVfc3RhcnRfcGZuLAo+IC0JCQkJCQkgIG5vZGVfZW5kX3BmbiwKPiAt
CQkJCQkJICAmem9uZV9zdGFydF9wZm4sCj4gLQkJCQkJCSAgJnpvbmVfZW5kX3BmbiwKPiAtCQkJ
CQkJICB6b25lc19zaXplKTsKPiAtCQlyZWFsX3NpemUgPSBzaXplIC0gem9uZV9hYnNlbnRfcGFn
ZXNfaW5fbm9kZShwZ2RhdC0+bm9kZV9pZCwgaSwKPiAtCQkJCQkJICBub2RlX3N0YXJ0X3Bmbiwg
bm9kZV9lbmRfcGZuLAo+IC0JCQkJCQkgIHpob2xlc19zaXplKTsKPiArCQlpZiAoY29tcGF0KSB7
Cj4gKwkJCXNwYW5uZWQgPSBjb21wYXRfem9uZV9zcGFubmVkX3BhZ2VzX2luX25vZGUoCj4gKwkJ
CQkJCXBnZGF0LT5ub2RlX2lkLCBpLAo+ICsJCQkJCQlub2RlX3N0YXJ0X3BmbiwKPiArCQkJCQkJ
bm9kZV9lbmRfcGZuLAo+ICsJCQkJCQkmem9uZV9zdGFydF9wZm4sCj4gKwkJCQkJCSZ6b25lX2Vu
ZF9wZm4sCj4gKwkJCQkJCXpvbmVzX3NpemUpOwo+ICsJCQlhYnNlbnQgPSBjb21wYXRfem9uZV9h
YnNlbnRfcGFnZXNfaW5fbm9kZSgKPiArCQkJCQkJcGdkYXQtPm5vZGVfaWQsIGksCj4gKwkJCQkJ
CW5vZGVfc3RhcnRfcGZuLAo+ICsJCQkJCQlub2RlX2VuZF9wZm4sCj4gKwkJCQkJCXpob2xlc19z
aXplKTsKPiArCQl9IGVsc2Ugewo+ICsJCQlzcGFubmVkID0gem9uZV9zcGFubmVkX3BhZ2VzX2lu
X25vZGUocGdkYXQtPm5vZGVfaWQsIGksCj4gKwkJCQkJCW5vZGVfc3RhcnRfcGZuLAo+ICsJCQkJ
CQlub2RlX2VuZF9wZm4sCj4gKwkJCQkJCSZ6b25lX3N0YXJ0X3BmbiwKPiArCQkJCQkJJnpvbmVf
ZW5kX3BmbiwKPiArCQkJCQkJem9uZXNfc2l6ZSk7Cj4gKwkJCWFic2VudCA9IHpvbmVfYWJzZW50
X3BhZ2VzX2luX25vZGUocGdkYXQtPm5vZGVfaWQsIGksCj4gKwkJCQkJCW5vZGVfc3RhcnRfcGZu
LAo+ICsJCQkJCQlub2RlX2VuZF9wZm4sCj4gKwkJCQkJCXpob2xlc19zaXplKTsKPiArCQl9Cj4g
Kwo+ICsJCXNpemUgPSBzcGFubmVkOwo+ICsJCXJlYWxfc2l6ZSA9IHNpemUgLSBhYnNlbnQ7Cj4g
Kwo+ICAJCWlmIChzaXplKQo+ICAJCQl6b25lLT56b25lX3N0YXJ0X3BmbiA9IHpvbmVfc3RhcnRf
cGZuOwo+ICAJCWVsc2UKPiBAQCAtNjkyOSwxMCArNjk0Myw4IEBAIHN0YXRpYyB2b2lkIF9fcmVm
IGFsbG9jX25vZGVfbWVtX21hcChzdHJ1Y3QgcGdsaXN0X2RhdGEgKnBnZGF0KQo+ICAJICovCj4g
IAlpZiAocGdkYXQgPT0gTk9ERV9EQVRBKDApKSB7Cj4gIAkJbWVtX21hcCA9IE5PREVfREFUQSgw
KS0+bm9kZV9tZW1fbWFwOwo+IC0jaWYgZGVmaW5lZChDT05GSUdfSEFWRV9NRU1CTE9DS19OT0RF
X01BUCkgfHwgZGVmaW5lZChDT05GSUdfRkxBVE1FTSkKPiAgCQlpZiAocGFnZV90b19wZm4obWVt
X21hcCkgIT0gcGdkYXQtPm5vZGVfc3RhcnRfcGZuKQo+ICAJCQltZW1fbWFwIC09IG9mZnNldDsK
PiAtI2VuZGlmIC8qIENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQICovCj4gIAl9Cj4gICNl
bmRpZgo+ICB9Cj4gQEAgLTY5NDksOSArNjk2MSwxMCBAQCBzdGF0aWMgaW5saW5lIHZvaWQgcGdk
YXRfc2V0X2RlZmVycmVkX3JhbmdlKHBnX2RhdGFfdCAqcGdkYXQpCj4gIHN0YXRpYyBpbmxpbmUg
dm9pZCBwZ2RhdF9zZXRfZGVmZXJyZWRfcmFuZ2UocGdfZGF0YV90ICpwZ2RhdCkge30KPiAgI2Vu
ZGlmCj4gIAo+IC12b2lkIF9faW5pdCBmcmVlX2FyZWFfaW5pdF9ub2RlKGludCBuaWQsIHVuc2ln
bmVkIGxvbmcgKnpvbmVzX3NpemUsCj4gLQkJCQkgICB1bnNpZ25lZCBsb25nIG5vZGVfc3RhcnRf
cGZuLAo+IC0JCQkJICAgdW5zaWduZWQgbG9uZyAqemhvbGVzX3NpemUpCj4gK3N0YXRpYyB2b2lk
IF9faW5pdCBfX2ZyZWVfYXJlYV9pbml0X25vZGUoaW50IG5pZCwgdW5zaWduZWQgbG9uZyAqem9u
ZXNfc2l6ZSwKPiArCQkJCQkgdW5zaWduZWQgbG9uZyBub2RlX3N0YXJ0X3BmbiwKPiArCQkJCQkg
dW5zaWduZWQgbG9uZyAqemhvbGVzX3NpemUsCj4gKwkJCQkJIGJvb2wgY29tcGF0KQo+ICB7Cj4g
IAlwZ19kYXRhX3QgKnBnZGF0ID0gTk9ERV9EQVRBKG5pZCk7Cj4gIAl1bnNpZ25lZCBsb25nIHN0
YXJ0X3BmbiA9IDA7Cj4gQEAgLTY5NjMsMTYgKzY5NzYsMTYgQEAgdm9pZCBfX2luaXQgZnJlZV9h
cmVhX2luaXRfbm9kZShpbnQgbmlkLCB1bnNpZ25lZCBsb25nICp6b25lc19zaXplLAo+ICAJcGdk
YXQtPm5vZGVfaWQgPSBuaWQ7Cj4gIAlwZ2RhdC0+bm9kZV9zdGFydF9wZm4gPSBub2RlX3N0YXJ0
X3BmbjsKPiAgCXBnZGF0LT5wZXJfY3B1X25vZGVzdGF0cyA9IE5VTEw7Cj4gLSNpZmRlZiBDT05G
SUdfSEFWRV9NRU1CTE9DS19OT0RFX01BUAo+IC0JZ2V0X3Bmbl9yYW5nZV9mb3JfbmlkKG5pZCwg
JnN0YXJ0X3BmbiwgJmVuZF9wZm4pOwo+IC0JcHJfaW5mbygiSW5pdG1lbSBzZXR1cCBub2RlICVk
IFttZW0gJSMwMThMeC0lIzAxOEx4XVxuIiwgbmlkLAo+IC0JCSh1NjQpc3RhcnRfcGZuIDw8IFBB
R0VfU0hJRlQsCj4gLQkJZW5kX3BmbiA/ICgodTY0KWVuZF9wZm4gPDwgUEFHRV9TSElGVCkgLSAx
IDogMCk7Cj4gLSNlbHNlCj4gLQlzdGFydF9wZm4gPSBub2RlX3N0YXJ0X3BmbjsKPiAtI2VuZGlm
Cj4gKwlpZiAoIWNvbXBhdCkgewo+ICsJCWdldF9wZm5fcmFuZ2VfZm9yX25pZChuaWQsICZzdGFy
dF9wZm4sICZlbmRfcGZuKTsKPiArCQlwcl9pbmZvKCJJbml0bWVtIHNldHVwIG5vZGUgJWQgW21l
bSAlIzAxOEx4LSUjMDE4THhdXG4iLCBuaWQsCj4gKwkJCSh1NjQpc3RhcnRfcGZuIDw8IFBBR0Vf
U0hJRlQsCj4gKwkJCWVuZF9wZm4gPyAoKHU2NCllbmRfcGZuIDw8IFBBR0VfU0hJRlQpIC0gMSA6
IDApOwo+ICsJfSBlbHNlIHsKPiArCQlzdGFydF9wZm4gPSBub2RlX3N0YXJ0X3BmbjsKPiArCX0K
PiAgCWNhbGN1bGF0ZV9ub2RlX3RvdGFscGFnZXMocGdkYXQsIHN0YXJ0X3BmbiwgZW5kX3BmbiwK
PiAtCQkJCSAgem9uZXNfc2l6ZSwgemhvbGVzX3NpemUpOwo+ICsJCQkJICB6b25lc19zaXplLCB6
aG9sZXNfc2l6ZSwgY29tcGF0KTsKPiAgCj4gIAlhbGxvY19ub2RlX21lbV9tYXAocGdkYXQpOwo+
ICAJcGdkYXRfc2V0X2RlZmVycmVkX3JhbmdlKHBnZGF0KTsKPiBAQCAtNjk4MCw2ICs2OTkzLDE0
IEBAIHZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0X25vZGUoaW50IG5pZCwgdW5zaWduZWQgbG9u
ZyAqem9uZXNfc2l6ZSwKPiAgCWZyZWVfYXJlYV9pbml0X2NvcmUocGdkYXQpOwo+ICB9Cj4gIAo+
ICt2b2lkIF9faW5pdCBmcmVlX2FyZWFfaW5pdF9ub2RlKGludCBuaWQsIHVuc2lnbmVkIGxvbmcg
KnpvbmVzX3NpemUsCj4gKwkJCQl1bnNpZ25lZCBsb25nIG5vZGVfc3RhcnRfcGZuLAo+ICsJCQkJ
dW5zaWduZWQgbG9uZyAqemhvbGVzX3NpemUpCj4gK3sKPiArCV9fZnJlZV9hcmVhX2luaXRfbm9k
ZShuaWQsIHpvbmVzX3NpemUsIG5vZGVfc3RhcnRfcGZuLCB6aG9sZXNfc2l6ZSwKPiArCQkJICAg
ICAgdHJ1ZSk7Cj4gK30KPiArCj4gICNpZiAhZGVmaW5lZChDT05GSUdfRkxBVF9OT0RFX01FTV9N
QVApCj4gIC8qCj4gICAqIEluaXRpYWxpemUgYWxsIHZhbGlkIHN0cnVjdCBwYWdlcyBpbiB0aGUg
cmFuZ2UgW3NwZm4sIGVwZm4pIGFuZCBtYXJrIHRoZW0KPiBAQCAtNzA2Myw4ICs3MDg0LDYgQEAg
c3RhdGljIGlubGluZSB2b2lkIF9faW5pdCBpbml0X3VuYXZhaWxhYmxlX21lbSh2b2lkKQo+ICB9
Cj4gICNlbmRpZiAvKiAhQ09ORklHX0ZMQVRfTk9ERV9NRU1fTUFQICovCj4gIAo+IC0jaWZkZWYg
Q09ORklHX0hBVkVfTUVNQkxPQ0tfTk9ERV9NQVAKPiAtCj4gICNpZiBNQVhfTlVNTk9ERVMgPiAx
Cj4gIC8qCj4gICAqIEZpZ3VyZSBvdXQgdGhlIG51bWJlciBvZiBwb3NzaWJsZSBub2RlIGlkcy4K
PiBAQCAtNzQ5Myw4ICs3NTEyLDggQEAgdm9pZCBfX2luaXQgZnJlZV9hcmVhX2luaXRfbm9kZXMo
dW5zaWduZWQgbG9uZyAqbWF4X3pvbmVfcGZuKQo+ICAJaW5pdF91bmF2YWlsYWJsZV9tZW0oKTsK
PiAgCWZvcl9lYWNoX29ubGluZV9ub2RlKG5pZCkgewo+ICAJCXBnX2RhdGFfdCAqcGdkYXQgPSBO
T0RFX0RBVEEobmlkKTsKPiAtCQlmcmVlX2FyZWFfaW5pdF9ub2RlKG5pZCwgTlVMTCwKPiAtCQkJ
CWZpbmRfbWluX3Bmbl9mb3Jfbm9kZShuaWQpLCBOVUxMKTsKPiArCQlfX2ZyZWVfYXJlYV9pbml0
X25vZGUobmlkLCBOVUxMLAo+ICsJCQkJICAgICAgZmluZF9taW5fcGZuX2Zvcl9ub2RlKG5pZCks
IE5VTEwsIGZhbHNlKTsKPiAgCj4gIAkJLyogQW55IG1lbW9yeSBvbiB0aGF0IG5vZGUgKi8KPiAg
CQlpZiAocGdkYXQtPm5vZGVfcHJlc2VudF9wYWdlcykKPiBAQCAtNzU1OSw4ICs3NTc4LDYgQEAg
c3RhdGljIGludCBfX2luaXQgY21kbGluZV9wYXJzZV9tb3ZhYmxlY29yZShjaGFyICpwKQo+ICBl
YXJseV9wYXJhbSgia2VybmVsY29yZSIsIGNtZGxpbmVfcGFyc2Vfa2VybmVsY29yZSk7Cj4gIGVh
cmx5X3BhcmFtKCJtb3ZhYmxlY29yZSIsIGNtZGxpbmVfcGFyc2VfbW92YWJsZWNvcmUpOwo+ICAK
PiAtI2VuZGlmIC8qIENPTkZJR19IQVZFX01FTUJMT0NLX05PREVfTUFQICovCj4gLQo+ICB2b2lk
IGFkanVzdF9tYW5hZ2VkX3BhZ2VfY291bnQoc3RydWN0IHBhZ2UgKnBhZ2UsIGxvbmcgY291bnQp
Cj4gIHsKPiAgCWF0b21pY19sb25nX2FkZChjb3VudCwgJnBhZ2Vfem9uZShwYWdlKS0+bWFuYWdl
ZF9wYWdlcyk7Cj4gLS0gCj4gMi4yNS4xCj4gCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMu
bGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVu
cmlzYwo=
