Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 9F3FE204C16
	for <lists+openrisc@lfdr.de>; Tue, 23 Jun 2020 10:19:09 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 5DB532046F;
	Tue, 23 Jun 2020 10:19:07 +0200 (CEST)
Received: from youngberry.canonical.com (youngberry.canonical.com
 [91.189.89.112])
 by mail.librecores.org (Postfix) with ESMTPS id 1905120C54
 for <openrisc@lists.librecores.org>; Tue, 23 Jun 2020 01:47:33 +0200 (CEST)
Received: from ip5f5af08c.dynamic.kabel-deutschland.de ([95.90.240.140]
 helo=wittgenstein.fritz.box) by youngberry.canonical.com with esmtpsa
 (TLS1.2:ECDHE_RSA_AES_128_GCM_SHA256:128) (Exim 4.86_2)
 (envelope-from <christian.brauner@ubuntu.com>)
 id 1jnW8j-0005DO-ID; Mon, 22 Jun 2020 23:46:13 +0000
From: Christian Brauner <christian.brauner@ubuntu.com>
To: linux-kernel@vger.kernel.org
Date: Tue, 23 Jun 2020 01:43:25 +0200
Message-Id: <20200622234326.906346-17-christian.brauner@ubuntu.com>
X-Mailer: git-send-email 2.27.0
In-Reply-To: <20200622234326.906346-1-christian.brauner@ubuntu.com>
References: <20200622234326.906346-1-christian.brauner@ubuntu.com>
MIME-Version: 1.0
X-Mailman-Approved-At: Tue, 23 Jun 2020 10:19:04 +0200
Subject: [OpenRISC] [PATCH 16/17] arch: remove HAVE_COPY_THREAD_TLS
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-riscv@lists.infradead.org, Rich Felker <dalias@libc.org>,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>, linux-sh@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>,
 Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Guo Ren <guoren@kernel.org>, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 Christian Brauner <christian.brauner@ubuntu.com>,
 Vincent Chen <deanbo422@gmail.com>, Will Deacon <will@kernel.org>,
 Thomas Gleixner <tglx@linutronix.de>,
 Anton Ivanov <anton.ivanov@cambridgegreys.com>,
 Jonas Bonn <jonas@southpole.se>, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Brian Cain <bcain@codeaurora.org>, linux-xtensa@linux-xtensa.org,
 Michael Ellerman <mpe@ellerman.id.au>, Helge Deller <deller@gmx.de>,
 x86@kernel.org, Russell King <linux@armlinux.org.uk>,
 Ley Foon Tan <ley.foon.tan@intel.com>, Mike Rapoport <rppt@linux.ibm.com>,
 Christian Borntraeger <borntraeger@de.ibm.com>, Ingo Molnar <mingo@redhat.com>,
 linux-parisc@vger.kernel.org, Mark Salter <msalter@redhat.com>,
 Matt Turner <mattst88@gmail.com>, linux-snps-arc@lists.infradead.org,
 uclinux-h8-devel@lists.sourceforge.jp, Fenghua Yu <fenghua.yu@intel.com>,
 Albert Ou <aou@eecs.berkeley.edu>, Kees Cook <keescook@chromium.org>,
 Vasily Gorbik <gor@linux.ibm.com>, Jeff Dike <jdike@addtoit.com>,
 linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linuxppc-dev@lists.ozlabs.org, Aurelien Jacquiot <jacquiot.aurelien@gmail.com>,
 linux-m68k@lists.linux-m68k.org,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Ivan Kokshaysky <ink@jurassic.park.msu.ru>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, Guan Xuetao <gxt@pku.edu.cn>,
 linux-arm-kernel@lists.infradead.org, Michal Simek <monstr@monstr.eu>,
 Tony Luck <tony.luck@intel.com>, Yoshinori Sato <ysato@users.sourceforge.jp>,
 Nick Hu <nickhu@andestech.com>, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Palmer Dabbelt <palmer@dabbelt.com>, Richard Weinberger <richard@nod.at>,
 Paul Mackerras <paulus@samba.org>,
 Linus Torvalds <torvalds@linux-foundation.org>,
 "David S. Miller" <davem@davemloft.net>, Al Viro <viro@zeniv.linux.org.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

QWxsIGFyY2hpdGVjdHVyZXMgc3VwcG9ydCBjb3B5X3RocmVhZF90bHMoKSBub3csIHNvIHJlbW92
ZSB0aGUgbGVnYWN5CmNvcHlfdGhyZWFkKCkgZnVuY3Rpb24gYW5kIHRoZSBIQVZFX0NPUFlfVEhS
RUFEX1RMUyBjb25maWcgb3B0aW9uLiBFdmVyeW9uZQp1c2VzIHRoZSBzYW1lIHByb2Nlc3MgY3Jl
YXRpb24gY2FsbGluZyBjb252ZW50aW9uIGJhc2VkIG9uCmNvcHlfdGhyZWFkX3RscygpIGFuZCBz
dHJ1Y3Qga2VybmVsX2Nsb25lX2FyZ3MuIFRoaXMgd2lsbCBtYWtlIGl0IGVhc2llciB0bwptYWlu
dGFpbiB0aGUgY29yZSBwcm9jZXNzIGNyZWF0aW9uIGNvZGUgdW5kZXIga2VybmVsLywgc2ltcGxp
ZmllcyB0aGUKY2FsbHBhdGhzIGFuZCBtYWtlcyB0aGUgaWRlbnRpY2FsIGZvciBhbGwgYXJjaGl0
ZWN0dXJlcy4KCkNjOiBSaWNoYXJkIEhlbmRlcnNvbiA8cnRoQHR3aWRkbGUubmV0PgpDYzogSXZh
biBLb2tzaGF5c2t5IDxpbmtAanVyYXNzaWMucGFyay5tc3UucnU+CkNjOiBNYXR0IFR1cm5lciA8
bWF0dHN0ODhAZ21haWwuY29tPgpDYzogVmluZWV0IEd1cHRhIDx2Z3VwdGFAc3lub3BzeXMuY29t
PgpDYzogUnVzc2VsbCBLaW5nIDxsaW51eEBhcm1saW51eC5vcmcudWs+CkNjOiBDYXRhbGluIE1h
cmluYXMgPGNhdGFsaW4ubWFyaW5hc0Bhcm0uY29tPgpDYzogV2lsbCBEZWFjb24gPHdpbGxAa2Vy
bmVsLm9yZz4KQ2M6IE1hcmsgU2FsdGVyIDxtc2FsdGVyQHJlZGhhdC5jb20+CkNjOiBBdXJlbGll
biBKYWNxdWlvdCA8amFjcXVpb3QuYXVyZWxpZW5AZ21haWwuY29tPgpDYzogR3VvIFJlbiA8Z3Vv
cmVuQGtlcm5lbC5vcmc+CkNjOiBZb3NoaW5vcmkgU2F0byA8eXNhdG9AdXNlcnMuc291cmNlZm9y
Z2UuanA+CkNjOiBCcmlhbiBDYWluIDxiY2FpbkBjb2RlYXVyb3JhLm9yZz4KQ2M6IFRvbnkgTHVj
ayA8dG9ueS5sdWNrQGludGVsLmNvbT4KQ2M6IEZlbmdodWEgWXUgPGZlbmdodWEueXVAaW50ZWwu
Y29tPgpDYzogR2VlcnQgVXl0dGVyaG9ldmVuIDxnZWVydEBsaW51eC1tNjhrLm9yZz4KQ2M6IE1p
Y2hhbCBTaW1layA8bW9uc3RyQG1vbnN0ci5ldT4KQ2M6IFRob21hcyBCb2dlbmRvZXJmZXIgPHRz
Ym9nZW5kQGFscGhhLmZyYW5rZW4uZGU+CkNjOiBOaWNrIEh1IDxuaWNraHVAYW5kZXN0ZWNoLmNv
bT4KQ2M6IEdyZWVudGltZSBIdSA8Z3JlZW4uaHVAZ21haWwuY29tPgpDYzogVmluY2VudCBDaGVu
IDxkZWFuYm80MjJAZ21haWwuY29tPgpDYzogTGV5IEZvb24gVGFuIDxsZXkuZm9vbi50YW5AaW50
ZWwuY29tPgpDYzogSm9uYXMgQm9ubiA8am9uYXNAc291dGhwb2xlLnNlPgpDYzogU3RlZmFuIEty
aXN0aWFuc3NvbiA8c3RlZmFuLmtyaXN0aWFuc3NvbkBzYXVuYWxhaHRpLmZpPgpDYzogU3RhZmZv
cmQgSG9ybmUgPHNob3JuZUBnbWFpbC5jb20+CkNjOiAiSmFtZXMgRS5KLiBCb3R0b21sZXkiIDxK
YW1lcy5Cb3R0b21sZXlASGFuc2VuUGFydG5lcnNoaXAuY29tPgpDYzogSGVsZ2UgRGVsbGVyIDxk
ZWxsZXJAZ214LmRlPgpDYzogTWljaGFlbCBFbGxlcm1hbiA8bXBlQGVsbGVybWFuLmlkLmF1PgpD
YzogQmVuamFtaW4gSGVycmVuc2NobWlkdCA8YmVuaEBrZXJuZWwuY3Jhc2hpbmcub3JnPgpDYzog
UGF1bCBNYWNrZXJyYXMgPHBhdWx1c0BzYW1iYS5vcmc+CkNjOiBQYXVsIFdhbG1zbGV5IDxwYXVs
LndhbG1zbGV5QHNpZml2ZS5jb20+CkNjOiBQYWxtZXIgRGFiYmVsdCA8cGFsbWVyQGRhYmJlbHQu
Y29tPgpDYzogQWxiZXJ0IE91IDxhb3VAZWVjcy5iZXJrZWxleS5lZHU+CkNjOiBIZWlrbyBDYXJz
dGVucyA8aGVpa28uY2Fyc3RlbnNAZGUuaWJtLmNvbT4KQ2M6IFZhc2lseSBHb3JiaWsgPGdvckBs
aW51eC5pYm0uY29tPgpDYzogQ2hyaXN0aWFuIEJvcm50cmFlZ2VyIDxib3JudHJhZWdlckBkZS5p
Ym0uY29tPgpDYzogUmljaCBGZWxrZXIgPGRhbGlhc0BsaWJjLm9yZz4KQ2M6ICJEYXZpZCBTLiBN
aWxsZXIiIDxkYXZlbUBkYXZlbWxvZnQubmV0PgpDYzogSmVmZiBEaWtlIDxqZGlrZUBhZGR0b2l0
LmNvbT4KQ2M6IFJpY2hhcmQgV2VpbmJlcmdlciA8cmljaGFyZEBub2QuYXQ+CkNjOiBBbnRvbiBJ
dmFub3YgPGFudG9uLml2YW5vdkBjYW1icmlkZ2VncmV5cy5jb20+CkNjOiBHdWFuIFh1ZXRhbyA8
Z3h0QHBrdS5lZHUuY24+CkNjOiBUaG9tYXMgR2xlaXhuZXIgPHRnbHhAbGludXRyb25peC5kZT4K
Q2M6IEluZ28gTW9sbmFyIDxtaW5nb0ByZWRoYXQuY29tPgpDYzogeDg2QGtlcm5lbC5vcmcKQ2M6
IFBldGVyIFppamxzdHJhIDxwZXRlcnpAaW5mcmFkZWFkLm9yZz4KQ2M6IEtlZXMgQ29vayA8a2Vl
c2Nvb2tAY2hyb21pdW0ub3JnPgpDYzogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29t
PgpDYzogIk1hdHRoZXcgV2lsY294CkNjOiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51
az4KQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LWFscGhhQHZnZXIu
a2VybmVsLm9yZwpDYzogbGludXgtc25wcy1hcmNAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGlu
dXgtYXJtLWtlcm5lbEBsaXN0cy5pbmZyYWRlYWQub3JnCkNjOiBsaW51eC1jNngtZGV2QGxpbnV4
LWM2eC5vcmcKQ2M6IGxpbnV4LWNza3lAdmdlci5rZXJuZWwub3JnCkNjOiB1Y2xpbnV4LWg4LWRl
dmVsQGxpc3RzLnNvdXJjZWZvcmdlLmpwCkNjOiBsaW51eC1oZXhhZ29uQHZnZXIua2VybmVsLm9y
ZwpDYzogbGludXgtaWE2NEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LW02OGtAbGlzdHMubGlu
dXgtbTY4ay5vcmcKQ2M6IGxpbnV4LW1pcHNAdmdlci5rZXJuZWwub3JnCkNjOiBvcGVucmlzY0Bs
aXN0cy5saWJyZWNvcmVzLm9yZwpDYzogbGludXgtcGFyaXNjQHZnZXIua2VybmVsLm9yZwpDYzog
bGludXhwcGMtZGV2QGxpc3RzLm96bGFicy5vcmcKQ2M6IGxpbnV4LXJpc2N2QGxpc3RzLmluZnJh
ZGVhZC5vcmcKQ2M6IGxpbnV4LXMzOTBAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC1zaEB2Z2Vy
Lmtlcm5lbC5vcmcKQ2M6IHNwYXJjbGludXhAdmdlci5rZXJuZWwub3JnCkNjOiBsaW51eC11bUBs
aXN0cy5pbmZyYWRlYWQub3JnCkNjOiBsaW51eC14dGVuc2FAbGludXgteHRlbnNhLm9yZwpTaWdu
ZWQtb2ZmLWJ5OiBDaHJpc3RpYW4gQnJhdW5lciA8Y2hyaXN0aWFuLmJyYXVuZXJAdWJ1bnR1LmNv
bT4KLS0tCiBhcmNoL0tjb25maWcgICAgICAgICAgICAgICB8ICA3IC0tLS0tLS0KIGFyY2gvYWxw
aGEvS2NvbmZpZyAgICAgICAgIHwgIDEgLQogYXJjaC9hcmMvS2NvbmZpZyAgICAgICAgICAgfCAg
MSAtCiBhcmNoL2FybS9LY29uZmlnICAgICAgICAgICB8ICAxIC0KIGFyY2gvYXJtNjQvS2NvbmZp
ZyAgICAgICAgIHwgIDEgLQogYXJjaC9jNngvS2NvbmZpZyAgICAgICAgICAgfCAgMSAtCiBhcmNo
L2Nza3kvS2NvbmZpZyAgICAgICAgICB8ICAxIC0KIGFyY2gvaDgzMDAvS2NvbmZpZyAgICAgICAg
IHwgIDEgLQogYXJjaC9oZXhhZ29uL0tjb25maWcgICAgICAgfCAgMSAtCiBhcmNoL2lhNjQvS2Nv
bmZpZyAgICAgICAgICB8ICAxIC0KIGFyY2gvbTY4ay9LY29uZmlnICAgICAgICAgIHwgIDEgLQog
YXJjaC9taWNyb2JsYXplL0tjb25maWcgICAgfCAgMSAtCiBhcmNoL21pcHMvS2NvbmZpZyAgICAg
ICAgICB8ICAxIC0KIGFyY2gvbmRzMzIvS2NvbmZpZyAgICAgICAgIHwgIDEgLQogYXJjaC9uaW9z
Mi9LY29uZmlnICAgICAgICAgfCAgMSAtCiBhcmNoL29wZW5yaXNjL0tjb25maWcgICAgICB8ICAx
IC0KIGFyY2gvcGFyaXNjL0tjb25maWcgICAgICAgIHwgIDEgLQogYXJjaC9wb3dlcnBjL0tjb25m
aWcgICAgICAgfCAgMSAtCiBhcmNoL3Jpc2N2L0tjb25maWcgICAgICAgICB8ICAxIC0KIGFyY2gv
czM5MC9LY29uZmlnICAgICAgICAgIHwgIDEgLQogYXJjaC9zaC9LY29uZmlnICAgICAgICAgICAg
fCAgMSAtCiBhcmNoL3NwYXJjL0tjb25maWcgICAgICAgICB8ICAxIC0KIGFyY2gvdW0vS2NvbmZp
ZyAgICAgICAgICAgIHwgIDEgLQogYXJjaC91bmljb3JlMzIvS2NvbmZpZyAgICAgfCAgMSAtCiBh
cmNoL3g4Ni9LY29uZmlnICAgICAgICAgICB8ICAxIC0KIGFyY2gveHRlbnNhL0tjb25maWcgICAg
ICAgIHwgIDEgLQogaW5jbHVkZS9saW51eC9zY2hlZC90YXNrLmggfCAxNSArLS0tLS0tLS0tLS0t
LS0KIGtlcm5lbC9mb3JrLmMgICAgICAgICAgICAgIHwgIDkgLS0tLS0tLS0tCiAyOCBmaWxlcyBj
aGFuZ2VkLCAxIGluc2VydGlvbigrKSwgNTUgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJj
aC9LY29uZmlnIGIvYXJjaC9LY29uZmlnCmluZGV4IDhjYzM1ZGM1NTZjNy4uOTQzYWFjMmYzZWJl
IDEwMDY0NAotLS0gYS9hcmNoL0tjb25maWcKKysrIGIvYXJjaC9LY29uZmlnCkBAIC03NTQsMTMg
Kzc1NCw2IEBAIGNvbmZpZyBBUkNIX1dBTlRfREVGQVVMVF9UT1BET1dOX01NQVBfTEFZT1VUCiAJ
ZGVwZW5kcyBvbiBNTVUKIAlzZWxlY3QgQVJDSF9IQVNfRUxGX1JBTkRPTUlaRQogCi1jb25maWcg
SEFWRV9DT1BZX1RIUkVBRF9UTFMKLQlib29sCi0JaGVscAotCSAgQXJjaGl0ZWN0dXJlIHByb3Zp
ZGVzIGNvcHlfdGhyZWFkX3RscyB0byBhY2NlcHQgdGxzIGFyZ3VtZW50IHZpYQotCSAgbm9ybWFs
IEMgcGFyYW1ldGVyIHBhc3NpbmcsIHJhdGhlciB0aGFuIGV4dHJhY3RpbmcgdGhlIHN5c2NhbGwK
LQkgIGFyZ3VtZW50IGZyb20gcHRfcmVncy4KLQogY29uZmlnIEhBVkVfU1RBQ0tfVkFMSURBVElP
TgogCWJvb2wKIAloZWxwCmRpZmYgLS1naXQgYS9hcmNoL2FscGhhL0tjb25maWcgYi9hcmNoL2Fs
cGhhL0tjb25maWcKaW5kZXggYjAxNTE1YzZiMmVkLi4xMDg2MmM1YThjNzYgMTAwNjQ0Ci0tLSBh
L2FyY2gvYWxwaGEvS2NvbmZpZworKysgYi9hcmNoL2FscGhhL0tjb25maWcKQEAgLTM4LDcgKzM4
LDYgQEAgY29uZmlnIEFMUEhBCiAJc2VsZWN0IE9MRF9TSUdTVVNQRU5ECiAJc2VsZWN0IENQVV9O
T19FRkZJQ0lFTlRfRkZTIGlmICFBTFBIQV9FVjY3CiAJc2VsZWN0IE1NVV9HQVRIRVJfTk9fUkFO
R0UKLQlzZWxlY3QgSEFWRV9DT1BZX1RIUkVBRF9UTFMKIAloZWxwCiAJICBUaGUgQWxwaGEgaXMg
YSA2NC1iaXQgZ2VuZXJhbC1wdXJwb3NlIHByb2Nlc3NvciBkZXNpZ25lZCBhbmQKIAkgIG1hcmtl
dGVkIGJ5IHRoZSBEaWdpdGFsIEVxdWlwbWVudCBDb3Jwb3JhdGlvbiBvZiBibGVzc2VkIG1lbW9y
eSwKZGlmZiAtLWdpdCBhL2FyY2gvYXJjL0tjb25maWcgYi9hcmNoL2FyYy9LY29uZmlnCmluZGV4
IGZkZGM3MDAyOTcyNy4uMWZhMGI5OGVkOWNlIDEwMDY0NAotLS0gYS9hcmNoL2FyYy9LY29uZmln
CisrKyBiL2FyY2gvYXJjL0tjb25maWcKQEAgLTI5LDcgKzI5LDYgQEAgY29uZmlnIEFSQwogCXNl
bGVjdCBHRU5FUklDX1NNUF9JRExFX1RIUkVBRAogCXNlbGVjdCBIQVZFX0FSQ0hfS0dEQgogCXNl
bGVjdCBIQVZFX0FSQ0hfVFJBQ0VIT09LCi0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURfVExTCiAJ
c2VsZWN0IEhBVkVfREVCVUdfU1RBQ0tPVkVSRkxPVwogCXNlbGVjdCBIQVZFX0RFQlVHX0tNRU1M
RUFLCiAJc2VsZWN0IEhBVkVfRlVURVhfQ01QWENIRyBpZiBGVVRFWApkaWZmIC0tZ2l0IGEvYXJj
aC9hcm0vS2NvbmZpZyBiL2FyY2gvYXJtL0tjb25maWcKaW5kZXggMmFjNzQ5MDRhM2NlLi40NDVi
NWVkNjkzZjAgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL0tjb25maWcKKysrIGIvYXJjaC9hcm0vS2Nv
bmZpZwpAQCAtNzIsNyArNzIsNiBAQCBjb25maWcgQVJNCiAJc2VsZWN0IEhBVkVfQVJNX1NNQ0ND
IGlmIENQVV9WNwogCXNlbGVjdCBIQVZFX0VCUEZfSklUIGlmICFDUFVfRU5ESUFOX0JFMzIKIAlz
ZWxlY3QgSEFWRV9DT05URVhUX1RSQUNLSU5HCi0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURfVExT
CiAJc2VsZWN0IEhBVkVfQ19SRUNPUkRNQ09VTlQKIAlzZWxlY3QgSEFWRV9ERUJVR19LTUVNTEVB
SyBpZiAhWElQX0tFUk5FTAogCXNlbGVjdCBIQVZFX0RNQV9DT05USUdVT1VTIGlmIE1NVQpkaWZm
IC0tZ2l0IGEvYXJjaC9hcm02NC9LY29uZmlnIGIvYXJjaC9hcm02NC9LY29uZmlnCmluZGV4IGE0
YTA5NGJlZGNiMi4uZGU5M2U5NjU3MjdkIDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L0tjb25maWcK
KysrIGIvYXJjaC9hcm02NC9LY29uZmlnCkBAIC0xNDgsNyArMTQ4LDYgQEAgY29uZmlnIEFSTTY0
CiAJc2VsZWN0IEhBVkVfQ01QWENIR19ET1VCTEUKIAlzZWxlY3QgSEFWRV9DTVBYQ0hHX0xPQ0FM
CiAJc2VsZWN0IEhBVkVfQ09OVEVYVF9UUkFDS0lORwotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFE
X1RMUwogCXNlbGVjdCBIQVZFX0RFQlVHX0JVR1ZFUkJPU0UKIAlzZWxlY3QgSEFWRV9ERUJVR19L
TUVNTEVBSwogCXNlbGVjdCBIQVZFX0RNQV9DT05USUdVT1VTCmRpZmYgLS1naXQgYS9hcmNoL2M2
eC9LY29uZmlnIGIvYXJjaC9jNngvS2NvbmZpZwppbmRleCA5Y2RlNzZhNTkyOGUuLjY0NDRlYmZk
MDZhNiAxMDA2NDQKLS0tIGEvYXJjaC9jNngvS2NvbmZpZworKysgYi9hcmNoL2M2eC9LY29uZmln
CkBAIC0yMiw3ICsyMiw2IEBAIGNvbmZpZyBDNlgKIAlzZWxlY3QgR0VORVJJQ19DTE9DS0VWRU5U
UwogCXNlbGVjdCBNT0RVTEVTX1VTRV9FTEZfUkVMQQogCXNlbGVjdCBNTVVfR0FUSEVSX05PX1JB
TkdFIGlmIE1NVQotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFEX1RMUwogCiBjb25maWcgTU1VCiAJ
ZGVmX2Jvb2wgbgpkaWZmIC0tZ2l0IGEvYXJjaC9jc2t5L0tjb25maWcgYi9hcmNoL2Nza3kvS2Nv
bmZpZwppbmRleCBiZDMxYWIxMmY3N2QuLjkwMmYxMTQyZDU1MCAxMDA2NDQKLS0tIGEvYXJjaC9j
c2t5L0tjb25maWcKKysrIGIvYXJjaC9jc2t5L0tjb25maWcKQEAgLTM4LDcgKzM4LDYgQEAgY29u
ZmlnIENTS1kKIAlzZWxlY3QgR1g2NjA1U19USU1FUiBpZiBDUFVfQ0s2MTAKIAlzZWxlY3QgSEFW
RV9BUkNIX1RSQUNFSE9PSwogCXNlbGVjdCBIQVZFX0FSQ0hfQVVESVRTWVNDQUxMCi0Jc2VsZWN0
IEhBVkVfQ09QWV9USFJFQURfVExTCiAJc2VsZWN0IEhBVkVfREVCVUdfQlVHVkVSQk9TRQogCXNl
bGVjdCBIQVZFX0RZTkFNSUNfRlRSQUNFCiAJc2VsZWN0IEhBVkVfRFlOQU1JQ19GVFJBQ0VfV0lU
SF9SRUdTCmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL0tjb25maWcgYi9hcmNoL2g4MzAwL0tjb25m
aWcKaW5kZXggZGUwZWI0MTdhMGI5Li5kMTE2NjZkNTM4ZmUgMTAwNjQ0Ci0tLSBhL2FyY2gvaDgz
MDAvS2NvbmZpZworKysgYi9hcmNoL2g4MzAwL0tjb25maWcKQEAgLTI2LDcgKzI2LDYgQEAgY29u
ZmlnIEg4MzAwCiAJc2VsZWN0IEhBVkVfQVJDSF9IQVNICiAJc2VsZWN0IENQVV9OT19FRkZJQ0lF
TlRfRkZTCiAJc2VsZWN0IFVBQ0NFU1NfTUVNQ1BZCi0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURf
VExTCiAKIGNvbmZpZyBDUFVfQklHX0VORElBTgogCWRlZl9ib29sIHkKZGlmZiAtLWdpdCBhL2Fy
Y2gvaGV4YWdvbi9LY29uZmlnIGIvYXJjaC9oZXhhZ29uL0tjb25maWcKaW5kZXggMTliYzJmMmVl
MzMxLi42NjdjZmM1MTFjZjkgMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9LY29uZmlnCisrKyBi
L2FyY2gvaGV4YWdvbi9LY29uZmlnCkBAIC0zMSw3ICszMSw2IEBAIGNvbmZpZyBIRVhBR09OCiAJ
c2VsZWN0IEdFTkVSSUNfQ0xPQ0tFVkVOVFNfQlJPQURDQVNUCiAJc2VsZWN0IE1PRFVMRVNfVVNF
X0VMRl9SRUxBCiAJc2VsZWN0IEdFTkVSSUNfQ1BVX0RFVklDRVMKLQlzZWxlY3QgSEFWRV9DT1BZ
X1RIUkVBRF9UTFMKIAloZWxwCiAJICBRdWFsY29tbSBIZXhhZ29uIGlzIGEgcHJvY2Vzc29yIGFy
Y2hpdGVjdHVyZSBkZXNpZ25lZCBmb3IgaGlnaAogCSAgcGVyZm9ybWFuY2UgYW5kIGxvdyBwb3dl
ciBhY3Jvc3MgYSB3aWRlIHZhcmlldHkgb2YgYXBwbGljYXRpb25zLgpkaWZmIC0tZ2l0IGEvYXJj
aC9pYTY0L0tjb25maWcgYi9hcmNoL2lhNjQvS2NvbmZpZwppbmRleCAxYjYwMzRiODlhMDQuLjFm
YTJmZTJlZjA1MyAxMDA2NDQKLS0tIGEvYXJjaC9pYTY0L0tjb25maWcKKysrIGIvYXJjaC9pYTY0
L0tjb25maWcKQEAgLTU1LDcgKzU1LDYgQEAgY29uZmlnIElBNjQKIAlzZWxlY3QgSEFWRV9BUkNI
X0FVRElUU1lTQ0FMTAogCXNlbGVjdCBORUVEX0RNQV9NQVBfU1RBVEUKIAlzZWxlY3QgTkVFRF9T
R19ETUFfTEVOR1RICi0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURfVExTCiAJc2VsZWN0IE5VTUEg
aWYgIUZMQVRNRU0KIAlkZWZhdWx0IHkKIAloZWxwCmRpZmYgLS1naXQgYS9hcmNoL202OGsvS2Nv
bmZpZyBiL2FyY2gvbTY4ay9LY29uZmlnCmluZGV4IDZhZDZjZGFjNzRiMy4uNjY2M2YxNzQxNzk4
IDEwMDY0NAotLS0gYS9hcmNoL202OGsvS2NvbmZpZworKysgYi9hcmNoL202OGsvS2NvbmZpZwpA
QCAtMTQsNyArMTQsNiBAQCBjb25maWcgTTY4SwogCXNlbGVjdCBIQVZFX0FPVVQgaWYgTU1VCiAJ
c2VsZWN0IEhBVkVfQVNNX01PRFZFUlNJT05TCiAJc2VsZWN0IEhBVkVfREVCVUdfQlVHVkVSQk9T
RQotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFEX1RMUwogCXNlbGVjdCBHRU5FUklDX0lSUV9TSE9X
CiAJc2VsZWN0IEdFTkVSSUNfQVRPTUlDNjQKIAlzZWxlY3QgSEFWRV9VSUQxNgpkaWZmIC0tZ2l0
IGEvYXJjaC9taWNyb2JsYXplL0tjb25maWcgYi9hcmNoL21pY3JvYmxhemUvS2NvbmZpZwppbmRl
eCBlM2EyMTFhNDE4ODAuLmQyNjJhYzBjODcxNCAxMDA2NDQKLS0tIGEvYXJjaC9taWNyb2JsYXpl
L0tjb25maWcKKysrIGIvYXJjaC9taWNyb2JsYXplL0tjb25maWcKQEAgLTQ2LDcgKzQ2LDYgQEAg
Y29uZmlnIE1JQ1JPQkxBWkUKIAlzZWxlY3QgQ1BVX05PX0VGRklDSUVOVF9GRlMKIAlzZWxlY3Qg
TU1VX0dBVEhFUl9OT19SQU5HRSBpZiBNTVUKIAlzZWxlY3QgU1BBUlNFX0lSUQotCXNlbGVjdCBI
QVZFX0NPUFlfVEhSRUFEX1RMUwogCiAjIEVuZGlhbm5lc3Mgc2VsZWN0aW9uCiBjaG9pY2UKZGlm
ZiAtLWdpdCBhL2FyY2gvbWlwcy9LY29uZmlnIGIvYXJjaC9taXBzL0tjb25maWcKaW5kZXggNmZl
ZTFhMTMzZTlkLi5jYTkyYzNlZDJkYzUgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9LY29uZmlnCisr
KyBiL2FyY2gvbWlwcy9LY29uZmlnCkBAIC01MSw3ICs1MSw2IEBAIGNvbmZpZyBNSVBTCiAJc2Vs
ZWN0IEhBVkVfQ0JQRl9KSVQgaWYgITY0QklUICYmICFDUFVfTUlDUk9NSVBTCiAJc2VsZWN0IEhB
VkVfQ09OVEVYVF9UUkFDS0lORwogCXNlbGVjdCBIQVZFX1RJRl9OT0haCi0Jc2VsZWN0IEhBVkVf
Q09QWV9USFJFQURfVExTCiAJc2VsZWN0IEhBVkVfQ19SRUNPUkRNQ09VTlQKIAlzZWxlY3QgSEFW
RV9ERUJVR19LTUVNTEVBSwogCXNlbGVjdCBIQVZFX0RFQlVHX1NUQUNLT1ZFUkZMT1cKZGlmZiAt
LWdpdCBhL2FyY2gvbmRzMzIvS2NvbmZpZyBiL2FyY2gvbmRzMzIvS2NvbmZpZwppbmRleCA3YjZl
YWNhODFjY2UuLmUzMDI5OGU5OWUxYiAxMDA2NDQKLS0tIGEvYXJjaC9uZHMzMi9LY29uZmlnCisr
KyBiL2FyY2gvbmRzMzIvS2NvbmZpZwpAQCAtNDgsNyArNDgsNiBAQCBjb25maWcgTkRTMzIKIAlz
ZWxlY3QgSEFWRV9GVU5DVElPTl9HUkFQSF9UUkFDRVIKIAlzZWxlY3QgSEFWRV9GVFJBQ0VfTUNP
VU5UX1JFQ09SRAogCXNlbGVjdCBIQVZFX0RZTkFNSUNfRlRSQUNFCi0Jc2VsZWN0IEhBVkVfQ09Q
WV9USFJFQURfVExTCiAJaGVscAogCSAgQW5kZXMobmRzMzIpIExpbnV4IHN1cHBvcnQuCiAKZGlm
ZiAtLWdpdCBhL2FyY2gvbmlvczIvS2NvbmZpZyBiL2FyY2gvbmlvczIvS2NvbmZpZwppbmRleCBm
OWEwNTk1N2E4ODMuLmM2NjQ1MTQxYmIyYSAxMDA2NDQKLS0tIGEvYXJjaC9uaW9zMi9LY29uZmln
CisrKyBiL2FyY2gvbmlvczIvS2NvbmZpZwpAQCAtMjcsNyArMjcsNiBAQCBjb25maWcgTklPUzIK
IAlzZWxlY3QgVVNCX0FSQ0hfSEFTX0hDRCBpZiBVU0JfU1VQUE9SVAogCXNlbGVjdCBDUFVfTk9f
RUZGSUNJRU5UX0ZGUwogCXNlbGVjdCBNTVVfR0FUSEVSX05PX1JBTkdFIGlmIE1NVQotCXNlbGVj
dCBIQVZFX0NPUFlfVEhSRUFEX1RMUwogCiBjb25maWcgR0VORVJJQ19DU1VNCiAJZGVmX2Jvb2wg
eQpkaWZmIC0tZ2l0IGEvYXJjaC9vcGVucmlzYy9LY29uZmlnIGIvYXJjaC9vcGVucmlzYy9LY29u
ZmlnCmluZGV4IDg1ODg5OTYxNjVhZS4uN2U5NGZlMzdjYjJmIDEwMDY0NAotLS0gYS9hcmNoL29w
ZW5yaXNjL0tjb25maWcKKysrIGIvYXJjaC9vcGVucmlzYy9LY29uZmlnCkBAIC0xNiw3ICsxNiw2
IEBAIGNvbmZpZyBPUEVOUklTQwogCXNlbGVjdCBIQU5ETEVfRE9NQUlOX0lSUQogCXNlbGVjdCBH
UElPTElCCiAJc2VsZWN0IEhBVkVfQVJDSF9UUkFDRUhPT0sKLQlzZWxlY3QgSEFWRV9DT1BZX1RI
UkVBRF9UTFMKIAlzZWxlY3QgU1BBUlNFX0lSUQogCXNlbGVjdCBHRU5FUklDX0lSUV9DSElQCiAJ
c2VsZWN0IEdFTkVSSUNfSVJRX1BST0JFCmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9LY29uZmln
IGIvYXJjaC9wYXJpc2MvS2NvbmZpZwppbmRleCA4ZTRjMzcwODc3M2QuLjI2NjdlZWI2YzZmMSAx
MDA2NDQKLS0tIGEvYXJjaC9wYXJpc2MvS2NvbmZpZworKysgYi9hcmNoL3BhcmlzYy9LY29uZmln
CkBAIC02Miw3ICs2Miw2IEBAIGNvbmZpZyBQQVJJU0MKIAlzZWxlY3QgSEFWRV9GVFJBQ0VfTUNP
VU5UX1JFQ09SRCBpZiBIQVZFX0RZTkFNSUNfRlRSQUNFCiAJc2VsZWN0IEhBVkVfS1BST0JFU19P
Tl9GVFJBQ0UKIAlzZWxlY3QgSEFWRV9EWU5BTUlDX0ZUUkFDRV9XSVRIX1JFR1MKLQlzZWxlY3Qg
SEFWRV9DT1BZX1RIUkVBRF9UTFMKIAogCWhlbHAKIAkgIFRoZSBQQS1SSVNDIG1pY3JvcHJvY2Vz
c29yIGlzIGRlc2lnbmVkIGJ5IEhld2xldHQtUGFja2FyZCBhbmQgdXNlZApkaWZmIC0tZ2l0IGEv
YXJjaC9wb3dlcnBjL0tjb25maWcgYi9hcmNoL3Bvd2VycGMvS2NvbmZpZwppbmRleCA5ZmEyM2Vi
MzIwZmYuLjNiMjYyZDg3ZTljNCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL0tjb25maWcKKysr
IGIvYXJjaC9wb3dlcnBjL0tjb25maWcKQEAgLTE4Niw3ICsxODYsNiBAQCBjb25maWcgUFBDCiAJ
c2VsZWN0IEhBVkVfU1RBQ0tQUk9URUNUT1IJCWlmIFBQQzMyICYmICQoY2Mtb3B0aW9uLC1tc3Rh
Y2stcHJvdGVjdG9yLWd1YXJkPXRscyAtbXN0YWNrLXByb3RlY3Rvci1ndWFyZC1yZWc9cjIpCiAJ
c2VsZWN0IEhBVkVfQ09OVEVYVF9UUkFDS0lORwkJaWYgUFBDNjQKIAlzZWxlY3QgSEFWRV9USUZf
Tk9IWgkJCWlmIFBQQzY0Ci0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURfVExTCiAJc2VsZWN0IEhB
VkVfREVCVUdfS01FTUxFQUsKIAlzZWxlY3QgSEFWRV9ERUJVR19TVEFDS09WRVJGTE9XCiAJc2Vs
ZWN0IEhBVkVfRFlOQU1JQ19GVFJBQ0UKZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3YvS2NvbmZpZyBi
L2FyY2gvcmlzY3YvS2NvbmZpZwppbmRleCAxMjgxOTJlMTRmZjIuLmY2YTNhMmJlYTNkOCAxMDA2
NDQKLS0tIGEvYXJjaC9yaXNjdi9LY29uZmlnCisrKyBiL2FyY2gvcmlzY3YvS2NvbmZpZwpAQCAt
NTIsNyArNTIsNiBAQCBjb25maWcgUklTQ1YKIAlzZWxlY3QgSEFWRV9BUkNIX1NFQ0NPTVBfRklM
VEVSCiAJc2VsZWN0IEhBVkVfQVJDSF9UUkFDRUhPT0sKIAlzZWxlY3QgSEFWRV9BU01fTU9EVkVS
U0lPTlMKLQlzZWxlY3QgSEFWRV9DT1BZX1RIUkVBRF9UTFMKIAlzZWxlY3QgSEFWRV9ETUFfQ09O
VElHVU9VUyBpZiBNTVUKIAlzZWxlY3QgSEFWRV9FQlBGX0pJVCBpZiBNTVUKIAlzZWxlY3QgSEFW
RV9GVVRFWF9DTVBYQ0hHIGlmIEZVVEVYCmRpZmYgLS1naXQgYS9hcmNoL3MzOTAvS2NvbmZpZyBi
L2FyY2gvczM5MC9LY29uZmlnCmluZGV4IGM3ZDdlZGU2MzAwYy4uOTU5OTY5NzU5NDUzIDEwMDY0
NAotLS0gYS9hcmNoL3MzOTAvS2NvbmZpZworKysgYi9hcmNoL3MzOTAvS2NvbmZpZwpAQCAtMTM2
LDcgKzEzNiw2IEBAIGNvbmZpZyBTMzkwCiAJc2VsZWN0IEhBVkVfRUJQRl9KSVQgaWYgUEFDS19T
VEFDSyAmJiBIQVZFX01BUkNIX1oxOTZfRkVBVFVSRVMKIAlzZWxlY3QgSEFWRV9DTVBYQ0hHX0RP
VUJMRQogCXNlbGVjdCBIQVZFX0NNUFhDSEdfTE9DQUwKLQlzZWxlY3QgSEFWRV9DT1BZX1RIUkVB
RF9UTFMKIAlzZWxlY3QgSEFWRV9ERUJVR19LTUVNTEVBSwogCXNlbGVjdCBIQVZFX0RNQV9DT05U
SUdVT1VTCiAJc2VsZWN0IEhBVkVfRFlOQU1JQ19GVFJBQ0UKZGlmZiAtLWdpdCBhL2FyY2gvc2gv
S2NvbmZpZyBiL2FyY2gvc2gvS2NvbmZpZwppbmRleCBlMTAxMThkNjFjZTcuLjlmYzJiMDEwZTkz
OCAxMDA2NDQKLS0tIGEvYXJjaC9zaC9LY29uZmlnCisrKyBiL2FyY2gvc2gvS2NvbmZpZwpAQCAt
NzAsNyArNzAsNiBAQCBjb25maWcgU1VQRVJICiAJc2VsZWN0IEFSQ0hfSElCRVJOQVRJT05fUE9T
U0lCTEUgaWYgTU1VCiAJc2VsZWN0IFNQQVJTRV9JUlEKIAlzZWxlY3QgSEFWRV9TVEFDS1BST1RF
Q1RPUgotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFEX1RMUwogCWhlbHAKIAkgIFRoZSBTdXBlckgg
aXMgYSBSSVNDIHByb2Nlc3NvciB0YXJnZXRlZCBmb3IgdXNlIGluIGVtYmVkZGVkIHN5c3RlbXMK
IAkgIGFuZCBjb25zdW1lciBlbGVjdHJvbmljczsgaXQgd2FzIGFsc28gdXNlZCBpbiB0aGUgU2Vn
YSBEcmVhbWNhc3QKZGlmZiAtLWdpdCBhL2FyY2gvc3BhcmMvS2NvbmZpZyBiL2FyY2gvc3BhcmMv
S2NvbmZpZwppbmRleCA2NjIxM2MwY2I1NTcuLjViZjJkYzE2MzU0MCAxMDA2NDQKLS0tIGEvYXJj
aC9zcGFyYy9LY29uZmlnCisrKyBiL2FyY2gvc3BhcmMvS2NvbmZpZwpAQCAtNDgsNyArNDgsNiBA
QCBjb25maWcgU1BBUkMKIAlzZWxlY3QgTE9DS0RFUF9TTUFMTCBpZiBMT0NLREVQCiAJc2VsZWN0
IE5FRURfRE1BX01BUF9TVEFURQogCXNlbGVjdCBORUVEX1NHX0RNQV9MRU5HVEgKLQlzZWxlY3Qg
SEFWRV9DT1BZX1RIUkVBRF9UTFMKIAogY29uZmlnIFNQQVJDMzIKIAlkZWZfYm9vbCAhNjRCSVQK
ZGlmZiAtLWdpdCBhL2FyY2gvdW0vS2NvbmZpZyBiL2FyY2gvdW0vS2NvbmZpZwppbmRleCA5MzE4
ZGM2ZDFhMGMuLmVmNjliZTE3ZmY3MCAxMDA2NDQKLS0tIGEvYXJjaC91bS9LY29uZmlnCisrKyBi
L2FyY2gvdW0vS2NvbmZpZwpAQCAtMTQsNyArMTQsNiBAQCBjb25maWcgVU1MCiAJc2VsZWN0IEhB
VkVfRlVURVhfQ01QWENIRyBpZiBGVVRFWAogCXNlbGVjdCBIQVZFX0RFQlVHX0tNRU1MRUFLCiAJ
c2VsZWN0IEhBVkVfREVCVUdfQlVHVkVSQk9TRQotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFEX1RM
UwogCXNlbGVjdCBHRU5FUklDX0lSUV9TSE9XCiAJc2VsZWN0IEdFTkVSSUNfQ1BVX0RFVklDRVMK
IAlzZWxlY3QgR0VORVJJQ19DTE9DS0VWRU5UUwpkaWZmIC0tZ2l0IGEvYXJjaC91bmljb3JlMzIv
S2NvbmZpZyBiL2FyY2gvdW5pY29yZTMyL0tjb25maWcKaW5kZXggMDE0NTFjZjUwMGQyLi4xMWJh
MTgzOWQxOTggMTAwNjQ0Ci0tLSBhL2FyY2gvdW5pY29yZTMyL0tjb25maWcKKysrIGIvYXJjaC91
bmljb3JlMzIvS2NvbmZpZwpAQCAtMjIsNyArMjIsNiBAQCBjb25maWcgVU5JQ09SRTMyCiAJc2Vs
ZWN0IE1PRFVMRVNfVVNFX0VMRl9SRUwKIAlzZWxlY3QgTkVFRF9ETUFfTUFQX1NUQVRFCiAJc2Vs
ZWN0IE1NVV9HQVRIRVJfTk9fUkFOR0UgaWYgTU1VCi0Jc2VsZWN0IEhBVkVfQ09QWV9USFJFQURf
VExTCiAJaGVscAogCSAgVW5pQ29yZS0zMiBpcyAzMi1iaXQgSW5zdHJ1Y3Rpb24gU2V0IEFyY2hp
dGVjdHVyZSwKIAkgIGluY2x1ZGluZyBhIHNlcmllcyBvZiBsb3ctcG93ZXItY29uc3VtcHRpb24g
UklTQyBjaGlwCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9LY29uZmlnIGIvYXJjaC94ODYvS2NvbmZp
ZwppbmRleCA2YTBjYzUyNDg4MmQuLjIxNGI4YmYzOWJiZSAxMDA2NDQKLS0tIGEvYXJjaC94ODYv
S2NvbmZpZworKysgYi9hcmNoL3g4Ni9LY29uZmlnCkBAIC0xNjEsNyArMTYxLDYgQEAgY29uZmln
IFg4NgogCXNlbGVjdCBIQVZFX0NNUFhDSEdfRE9VQkxFCiAJc2VsZWN0IEhBVkVfQ01QWENIR19M
T0NBTAogCXNlbGVjdCBIQVZFX0NPTlRFWFRfVFJBQ0tJTkcJCWlmIFg4Nl82NAotCXNlbGVjdCBI
QVZFX0NPUFlfVEhSRUFEX1RMUwogCXNlbGVjdCBIQVZFX0NfUkVDT1JETUNPVU5UCiAJc2VsZWN0
IEhBVkVfREVCVUdfS01FTUxFQUsKIAlzZWxlY3QgSEFWRV9ETUFfQ09OVElHVU9VUwpkaWZmIC0t
Z2l0IGEvYXJjaC94dGVuc2EvS2NvbmZpZyBiL2FyY2gveHRlbnNhL0tjb25maWcKaW5kZXggM2E5
ZjFlODAzOTRhLi5iNzFiYTkxMGQ5MmYgMTAwNjQ0Ci0tLSBhL2FyY2gveHRlbnNhL0tjb25maWcK
KysrIGIvYXJjaC94dGVuc2EvS2NvbmZpZwpAQCAtMjQsNyArMjQsNiBAQCBjb25maWcgWFRFTlNB
CiAJc2VsZWN0IEhBVkVfQVJDSF9KVU1QX0xBQkVMIGlmICFYSVBfS0VSTkVMCiAJc2VsZWN0IEhB
VkVfQVJDSF9LQVNBTiBpZiBNTVUgJiYgIVhJUF9LRVJORUwKIAlzZWxlY3QgSEFWRV9BUkNIX1RS
QUNFSE9PSwotCXNlbGVjdCBIQVZFX0NPUFlfVEhSRUFEX1RMUwogCXNlbGVjdCBIQVZFX0RFQlVH
X0tNRU1MRUFLCiAJc2VsZWN0IEhBVkVfRE1BX0NPTlRJR1VPVVMKIAlzZWxlY3QgSEFWRV9FWElU
X1RIUkVBRApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9zY2hlZC90YXNrLmggYi9pbmNsdWRl
L2xpbnV4L3NjaGVkL3Rhc2suaAppbmRleCA5ZjAzYzQ0OTQxZmIuLjc3Y2JlMTRjMzAzNCAxMDA2
NDQKLS0tIGEvaW5jbHVkZS9saW51eC9zY2hlZC90YXNrLmgKKysrIGIvaW5jbHVkZS9saW51eC9z
Y2hlZC90YXNrLmgKQEAgLTY1LDIyICs2NSw5IEBAIGV4dGVybiB2b2lkIGZvcmtfaW5pdCh2b2lk
KTsKIAogZXh0ZXJuIHZvaWQgcmVsZWFzZV90YXNrKHN0cnVjdCB0YXNrX3N0cnVjdCAqIHApOwog
Ci0jaWZkZWYgQ09ORklHX0hBVkVfQ09QWV9USFJFQURfVExTCiBleHRlcm4gaW50IGNvcHlfdGhy
ZWFkX3Rscyh1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLCB1bnNpZ25lZCBsb25nLAogCQkJ
c3RydWN0IHRhc2tfc3RydWN0ICosIHVuc2lnbmVkIGxvbmcpOwotI2Vsc2UKLWV4dGVybiBpbnQg
Y29weV90aHJlYWQodW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywgdW5zaWduZWQgbG9uZywK
LQkJCXN0cnVjdCB0YXNrX3N0cnVjdCAqKTsKLQotLyogQXJjaGl0ZWN0dXJlcyB0aGF0IGhhdmVu
J3Qgb3B0ZWQgaW50byBjb3B5X3RocmVhZF90bHMgZ2V0IHRoZSB0bHMgYXJndW1lbnQKLSAqIHZp
YSBwdF9yZWdzLCBzbyBpZ25vcmUgdGhlIHRscyBhcmd1bWVudCBwYXNzZWQgdmlhIEMuICovCi1z
dGF0aWMgaW5saW5lIGludCBjb3B5X3RocmVhZF90bHMoCi0JCXVuc2lnbmVkIGxvbmcgY2xvbmVf
ZmxhZ3MsIHVuc2lnbmVkIGxvbmcgc3AsIHVuc2lnbmVkIGxvbmcgYXJnLAotCQlzdHJ1Y3QgdGFz
a19zdHJ1Y3QgKnAsIHVuc2lnbmVkIGxvbmcgdGxzKQotewotCXJldHVybiBjb3B5X3RocmVhZChj
bG9uZV9mbGFncywgc3AsIGFyZywgcCk7Ci19Ci0jZW5kaWYKKwogZXh0ZXJuIHZvaWQgZmx1c2hf
dGhyZWFkKHZvaWQpOwogCiAjaWZkZWYgQ09ORklHX0hBVkVfRVhJVF9USFJFQUQKZGlmZiAtLWdp
dCBhL2tlcm5lbC9mb3JrLmMgYi9rZXJuZWwvZm9yay5jCmluZGV4IDBmZDdlYjFiMzhmOS4uOGU1
MmUxNmExYjVlIDEwMDY0NAotLS0gYS9rZXJuZWwvZm9yay5jCisrKyBiL2tlcm5lbC9mb3JrLmMK
QEAgLTI1NzcsMTUgKzI1NzcsNiBAQCBTWVNDQUxMX0RFRklORTUoY2xvbmUsIHVuc2lnbmVkIGxv
bmcsIGNsb25lX2ZsYWdzLCB1bnNpZ25lZCBsb25nLCBuZXdzcCwKIAogI2lmZGVmIF9fQVJDSF9X
QU5UX1NZU19DTE9ORTMKIAotLyoKLSAqIGNvcHlfdGhyZWFkIGltcGxlbWVudGF0aW9ucyBoYW5k
bGUgQ0xPTkVfU0VUVExTIGJ5IHJlYWRpbmcgdGhlIFRMUyB2YWx1ZSBmcm9tCi0gKiB0aGUgcmVn
aXN0ZXJzIGNvbnRhaW5pbmcgdGhlIHN5c2NhbGwgYXJndW1lbnRzIGZvciBjbG9uZS4gVGhpcyBk
b2Vzbid0IHdvcmsKLSAqIHdpdGggY2xvbmUzIHNpbmNlIHRoZSBUTFMgdmFsdWUgaXMgcGFzc2Vk
IGluIGNsb25lX2FyZ3MgaW5zdGVhZC4KLSAqLwotI2lmbmRlZiBDT05GSUdfSEFWRV9DT1BZX1RI
UkVBRF9UTFMKLSNlcnJvciBjbG9uZTMgcmVxdWlyZXMgY29weV90aHJlYWRfdGxzIHN1cHBvcnQg
aW4gYXJjaAotI2VuZGlmCi0KIG5vaW5saW5lIHN0YXRpYyBpbnQgY29weV9jbG9uZV9hcmdzX2Zy
b21fdXNlcihzdHJ1Y3Qga2VybmVsX2Nsb25lX2FyZ3MgKmthcmdzLAogCQkJCQkgICAgICBzdHJ1
Y3QgY2xvbmVfYXJncyBfX3VzZXIgKnVhcmdzLAogCQkJCQkgICAgICBzaXplX3QgdXNpemUpCi0t
IAoyLjI3LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
Ck9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRw
czovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
