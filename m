Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 52E6C34B0DB
	for <lists+openrisc@lfdr.de>; Fri, 26 Mar 2021 21:52:15 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id F1A8F21298;
	Fri, 26 Mar 2021 21:52:14 +0100 (CET)
Received: from pegase1.c-s.fr (pegase1.c-s.fr [93.17.236.30])
 by mail.librecores.org (Postfix) with ESMTPS id 311E52129C
 for <openrisc@lists.librecores.org>; Fri, 26 Mar 2021 14:45:06 +0100 (CET)
Received: from localhost (mailhub1-int [192.168.12.234])
 by localhost (Postfix) with ESMTP id 4F6NWg6MzGz9v03T;
 Fri, 26 Mar 2021 14:45:03 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at c-s.fr
Received: from pegase1.c-s.fr ([192.168.12.234])
 by localhost (pegase1.c-s.fr [192.168.12.234]) (amavisd-new, port 10024)
 with ESMTP id 0qyljEPHuFJn; Fri, 26 Mar 2021 14:45:03 +0100 (CET)
Received: from messagerie.si.c-s.fr (messagerie.si.c-s.fr [192.168.25.192])
 by pegase1.c-s.fr (Postfix) with ESMTP id 4F6NWf6MZ6z9v03P;
 Fri, 26 Mar 2021 14:45:02 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
 by messagerie.si.c-s.fr (Postfix) with ESMTP id AFA6E8B8D1;
 Fri, 26 Mar 2021 14:45:03 +0100 (CET)
X-Virus-Scanned: amavisd-new at c-s.fr
Received: from messagerie.si.c-s.fr ([127.0.0.1])
 by localhost (messagerie.si.c-s.fr [127.0.0.1]) (amavisd-new, port 10023)
 with ESMTP id c6KWcbGdcZc0; Fri, 26 Mar 2021 14:45:03 +0100 (CET)
Received: from po16121vm.idsi0.si.c-s.fr (unknown [192.168.4.90])
 by messagerie.si.c-s.fr (Postfix) with ESMTP id D72458B8C7;
 Fri, 26 Mar 2021 14:45:02 +0100 (CET)
Received: by po16121vm.idsi0.si.c-s.fr (Postfix, from userid 0)
 id 3BC2C67611; Fri, 26 Mar 2021 13:45:02 +0000 (UTC)
Message-Id: <db9de18cca2fb0cbc0ffd75082d2d110fe8034d2.1616765870.git.christophe.leroy@csgroup.eu>
In-Reply-To: <cover.1616765869.git.christophe.leroy@csgroup.eu>
References: <cover.1616765869.git.christophe.leroy@csgroup.eu>
From: Christophe Leroy <christophe.leroy@csgroup.eu>
To: will@kernel.org, danielwa@cisco.com, robh@kernel.org,
 daniel@gimpelevich.san-francisco.ca.us
Date: Fri, 26 Mar 2021 13:45:02 +0000 (UTC)
X-Mailman-Approved-At: Fri, 26 Mar 2021 21:51:57 +0100
Subject: [OpenRISC] [PATCH v3 15/17] x86: Convert to GENERIC_CMDLINE
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, devicetree@vger.kernel.org,
 microblaze <monstr@monstr.eu>, linux-xtensa@linux-xtensa.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org, x86@kernel.org,
 linux-kernel@vger.kernel.org, nios2 <ley.foon.tan@intel.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linuxppc-dev@lists.ozlabs.org, linux-arm-kernel@lists.infradead.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhpcyBjb252ZXJ0cyB0aGUgYXJjaGl0ZWN0dXJlIHRvIEdFTkVSSUNfQ01ETElORS4KClNpZ25l
ZC1vZmYtYnk6IENocmlzdG9waGUgTGVyb3kgPGNocmlzdG9waGUubGVyb3lAY3Nncm91cC5ldT4K
LS0tCiBhcmNoL3g4Ni9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgfCA0NSArKy0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCiBhcmNoL3g4Ni9rZXJuZWwvc2V0dXAuYyAgICAgICAgICAgICAg
ICAgfCAxNyArKy0tLS0tLS0tCiBkcml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHViL3g4Ni1zdHVi
LmMgfCAyNiArKysrKysrLS0tLS0tLQogMyBmaWxlcyBjaGFuZ2VkLCAxOCBpbnNlcnRpb25zKCsp
LCA3MCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9LY29uZmlnIGIvYXJjaC94
ODYvS2NvbmZpZwppbmRleCAyNzkyODc5ZDM5OGUuLjY2YjM4NDIyOGNhMyAxMDA2NDQKLS0tIGEv
YXJjaC94ODYvS2NvbmZpZworKysgYi9hcmNoL3g4Ni9LY29uZmlnCkBAIC0xMDQsNiArMTA0LDcg
QEAgY29uZmlnIFg4NgogCXNlbGVjdCBBUkNIX1VTRV9RVUVVRURfU1BJTkxPQ0tTCiAJc2VsZWN0
IEFSQ0hfVVNFX1NZTV9BTk5PVEFUSU9OUwogCXNlbGVjdCBBUkNIX1dBTlRfQkFUQ0hFRF9VTk1B
UF9UTEJfRkxVU0gKKwlzZWxlY3QgQVJDSF9XQU5UX0NNRExJTkVfUFJFUEVORF9CWV9ERUZBVUxU
CiAJc2VsZWN0IEFSQ0hfV0FOVF9ERUZBVUxUX0JQRl9KSVQJaWYgWDg2XzY0CiAJc2VsZWN0IEFS
Q0hfV0FOVFNfRFlOQU1JQ19UQVNLX1NUUlVDVAogCXNlbGVjdCBBUkNIX1dBTlRfSFVHRV9QTURf
U0hBUkUKQEAgLTExOCw2ICsxMTksNyBAQCBjb25maWcgWDg2CiAJc2VsZWN0IEVEQUNfU1VQUE9S
VAogCXNlbGVjdCBHRU5FUklDX0NMT0NLRVZFTlRTX0JST0FEQ0FTVAlpZiBYODZfNjQgfHwgKFg4
Nl8zMiAmJiBYODZfTE9DQUxfQVBJQykKIAlzZWxlY3QgR0VORVJJQ19DTE9DS0VWRU5UU19NSU5f
QURKVVNUCisJc2VsZWN0IEdFTkVSSUNfQ01ETElORQogCXNlbGVjdCBHRU5FUklDX0NNT1NfVVBE
QVRFCiAJc2VsZWN0IEdFTkVSSUNfQ1BVX0FVVE9QUk9CRQogCXNlbGVjdCBHRU5FUklDX0NQVV9W
VUxORVJBQklMSVRJRVMKQEAgLTIzNTgsNDkgKzIzNjAsNiBAQCBjaG9pY2UKIAogZW5kY2hvaWNl
CiAKLWNvbmZpZyBDTURMSU5FX0JPT0wKLQlib29sICJCdWlsdC1pbiBrZXJuZWwgY29tbWFuZCBs
aW5lIgotCWhlbHAKLQkgIEFsbG93IGZvciBzcGVjaWZ5aW5nIGJvb3QgYXJndW1lbnRzIHRvIHRo
ZSBrZXJuZWwgYXQKLQkgIGJ1aWxkIHRpbWUuICBPbiBzb21lIHN5c3RlbXMgKGUuZy4gZW1iZWRk
ZWQgb25lcyksIGl0IGlzCi0JICBuZWNlc3Nhcnkgb3IgY29udmVuaWVudCB0byBwcm92aWRlIHNv
bWUgb3IgYWxsIG9mIHRoZQotCSAga2VybmVsIGJvb3QgYXJndW1lbnRzIHdpdGggdGhlIGtlcm5l
bCBpdHNlbGYgKHRoYXQgaXMsCi0JICB0byBub3QgcmVseSBvbiB0aGUgYm9vdCBsb2FkZXIgdG8g
cHJvdmlkZSB0aGVtLikKLQotCSAgVG8gY29tcGlsZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzIGlu
dG8gdGhlIGtlcm5lbCwKLQkgIHNldCB0aGlzIG9wdGlvbiB0byAnWScsIHRoZW4gZmlsbCBpbiB0
aGUKLQkgIGJvb3QgYXJndW1lbnRzIGluIENPTkZJR19DTURMSU5FLgotCi0JICBTeXN0ZW1zIHdp
dGggZnVsbHkgZnVuY3Rpb25hbCBib290IGxvYWRlcnMgKGkuZS4gbm9uLWVtYmVkZGVkKQotCSAg
c2hvdWxkIGxlYXZlIHRoaXMgb3B0aW9uIHNldCB0byAnTicuCi0KLWNvbmZpZyBDTURMSU5FCi0J
c3RyaW5nICJCdWlsdC1pbiBrZXJuZWwgY29tbWFuZCBzdHJpbmciCi0JZGVwZW5kcyBvbiBDTURM
SU5FX0JPT0wKLQlkZWZhdWx0ICIiCi0JaGVscAotCSAgRW50ZXIgYXJndW1lbnRzIGhlcmUgdGhh
dCBzaG91bGQgYmUgY29tcGlsZWQgaW50byB0aGUga2VybmVsCi0JICBpbWFnZSBhbmQgdXNlZCBh
dCBib290IHRpbWUuICBJZiB0aGUgYm9vdCBsb2FkZXIgcHJvdmlkZXMgYQotCSAgY29tbWFuZCBs
aW5lIGF0IGJvb3QgdGltZSwgaXQgaXMgYXBwZW5kZWQgdG8gdGhpcyBzdHJpbmcgdG8KLQkgIGZv
cm0gdGhlIGZ1bGwga2VybmVsIGNvbW1hbmQgbGluZSwgd2hlbiB0aGUgc3lzdGVtIGJvb3RzLgot
Ci0JICBIb3dldmVyLCB5b3UgY2FuIHVzZSB0aGUgQ09ORklHX0NNRExJTkVfT1ZFUlJJREUgb3B0
aW9uIHRvCi0JICBjaGFuZ2UgdGhpcyBiZWhhdmlvci4KLQotCSAgSW4gbW9zdCBjYXNlcywgdGhl
IGNvbW1hbmQgbGluZSAod2hldGhlciBidWlsdC1pbiBvciBwcm92aWRlZAotCSAgYnkgdGhlIGJv
b3QgbG9hZGVyKSBzaG91bGQgc3BlY2lmeSB0aGUgZGV2aWNlIGZvciB0aGUgcm9vdAotCSAgZmls
ZSBzeXN0ZW0uCi0KLWNvbmZpZyBDTURMSU5FX09WRVJSSURFCi0JYm9vbCAiQnVpbHQtaW4gY29t
bWFuZCBsaW5lIG92ZXJyaWRlcyBib290IGxvYWRlciBhcmd1bWVudHMiCi0JZGVwZW5kcyBvbiBD
TURMSU5FX0JPT0wgJiYgQ01ETElORSAhPSAiIgotCWhlbHAKLQkgIFNldCB0aGlzIG9wdGlvbiB0
byAnWScgdG8gaGF2ZSB0aGUga2VybmVsIGlnbm9yZSB0aGUgYm9vdCBsb2FkZXIKLQkgIGNvbW1h
bmQgbGluZSwgYW5kIHVzZSBPTkxZIHRoZSBidWlsdC1pbiBjb21tYW5kIGxpbmUuCi0KLQkgIFRo
aXMgaXMgdXNlZCB0byB3b3JrIGFyb3VuZCBicm9rZW4gYm9vdCBsb2FkZXJzLiAgVGhpcyBzaG91
bGQKLQkgIGJlIHNldCB0byAnTicgdW5kZXIgbm9ybWFsIGNvbmRpdGlvbnMuCi0KIGNvbmZpZyBN
T0RJRllfTERUX1NZU0NBTEwKIAlib29sICJFbmFibGUgdGhlIExEVCAobG9jYWwgZGVzY3JpcHRv
ciB0YWJsZSkiIGlmIEVYUEVSVAogCWRlZmF1bHQgeQpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva2Vy
bmVsL3NldHVwLmMgYi9hcmNoL3g4Ni9rZXJuZWwvc2V0dXAuYwppbmRleCBkODgzMTc2ZWYyY2Uu
LjkzYWM1N2VhM2U2NCAxMDA2NDQKLS0tIGEvYXJjaC94ODYva2VybmVsL3NldHVwLmMKKysrIGIv
YXJjaC94ODYva2VybmVsL3NldHVwLmMKQEAgLTUsNiArNSw3IEBACiAgKiBUaGlzIGZpbGUgY29u
dGFpbnMgdGhlIHNldHVwX2FyY2goKSBjb2RlLCB3aGljaCBoYW5kbGVzIHRoZSBhcmNoaXRlY3R1
cmUtZGVwZW5kZW50CiAgKiBwYXJ0cyBvZiBlYXJseSBrZXJuZWwgaW5pdGlhbGl6YXRpb24uCiAg
Ki8KKyNpbmNsdWRlIDxsaW51eC9jbWRsaW5lLmg+CiAjaW5jbHVkZSA8bGludXgvY29uc29sZS5o
PgogI2luY2x1ZGUgPGxpbnV4L2NyYXNoX2R1bXAuaD4KICNpbmNsdWRlIDxsaW51eC9kbWEtbWFw
LW9wcy5oPgpAQCAtMTYxLDkgKzE2Miw2IEBAIHVuc2lnbmVkIGxvbmcgc2F2ZWRfdmlkZW9fbW9k
ZTsKICNkZWZpbmUgUkFNRElTS19MT0FEX0ZMQUcJCTB4NDAwMAogCiBzdGF0aWMgY2hhciBfX2lu
aXRkYXRhIGNvbW1hbmRfbGluZVtDT01NQU5EX0xJTkVfU0laRV07Ci0jaWZkZWYgQ09ORklHX0NN
RExJTkVfQk9PTAotc3RhdGljIGNoYXIgX19pbml0ZGF0YSBidWlsdGluX2NtZGxpbmVbQ09NTUFO
RF9MSU5FX1NJWkVdID0gQ09ORklHX0NNRExJTkU7Ci0jZW5kaWYKIAogI2lmIGRlZmluZWQoQ09O
RklHX0VERCkgfHwgZGVmaW5lZChDT05GSUdfRUREX01PRFVMRSkKIHN0cnVjdCBlZGQgZWRkOwpA
QCAtODgzLDE4ICs4ODEsNyBAQCB2b2lkIF9faW5pdCBzZXR1cF9hcmNoKGNoYXIgKipjbWRsaW5l
X3ApCiAJYnNzX3Jlc291cmNlLnN0YXJ0ID0gX19wYV9zeW1ib2woX19ic3Nfc3RhcnQpOwogCWJz
c19yZXNvdXJjZS5lbmQgPSBfX3BhX3N5bWJvbChfX2Jzc19zdG9wKS0xOwogCi0jaWZkZWYgQ09O
RklHX0NNRExJTkVfQk9PTAotI2lmZGVmIENPTkZJR19DTURMSU5FX09WRVJSSURFCi0Jc3RybGNw
eShib290X2NvbW1hbmRfbGluZSwgYnVpbHRpbl9jbWRsaW5lLCBDT01NQU5EX0xJTkVfU0laRSk7
Ci0jZWxzZQotCWlmIChidWlsdGluX2NtZGxpbmVbMF0pIHsKLQkJLyogYXBwZW5kIGJvb3QgbG9h
ZGVyIGNtZGxpbmUgdG8gYnVpbHRpbiAqLwotCQlzdHJsY2F0KGJ1aWx0aW5fY21kbGluZSwgIiAi
LCBDT01NQU5EX0xJTkVfU0laRSk7Ci0JCXN0cmxjYXQoYnVpbHRpbl9jbWRsaW5lLCBib290X2Nv
bW1hbmRfbGluZSwgQ09NTUFORF9MSU5FX1NJWkUpOwotCQlzdHJsY3B5KGJvb3RfY29tbWFuZF9s
aW5lLCBidWlsdGluX2NtZGxpbmUsIENPTU1BTkRfTElORV9TSVpFKTsKLQl9Ci0jZW5kaWYKLSNl
bmRpZgorCWNtZGxpbmVfYnVpbGQoYm9vdF9jb21tYW5kX2xpbmUsIGJvb3RfY29tbWFuZF9saW5l
LCBDT01NQU5EX0xJTkVfU0laRSk7CiAKIAlzdHJsY3B5KGNvbW1hbmRfbGluZSwgYm9vdF9jb21t
YW5kX2xpbmUsIENPTU1BTkRfTElORV9TSVpFKTsKIAkqY21kbGluZV9wID0gY29tbWFuZF9saW5l
OwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi94ODYtc3R1Yi5jIGIv
ZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi94ODYtc3R1Yi5jCmluZGV4IGYxNGM0ZmY1ODM5
Zi4uNTQxM2FmZjAxMGVjIDEwMDY0NAotLS0gYS9kcml2ZXJzL2Zpcm13YXJlL2VmaS9saWJzdHVi
L3g4Ni1zdHViLmMKKysrIGIvZHJpdmVycy9maXJtd2FyZS9lZmkvbGlic3R1Yi94ODYtc3R1Yi5j
CkBAIC02LDYgKzYsNyBAQAogICoKICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCiAKKyNpbmNsdWRlIDxs
aW51eC9jbWRsaW5lLmg+CiAjaW5jbHVkZSA8bGludXgvZWZpLmg+CiAjaW5jbHVkZSA8bGludXgv
cGNpLmg+CiAjaW5jbHVkZSA8bGludXgvc3RkZGVmLmg+CkBAIC02NzQsNiArNjc1LDcgQEAgdW5z
aWduZWQgbG9uZyBlZmlfbWFpbihlZmlfaGFuZGxlX3QgaGFuZGxlLAogCXVuc2lnbmVkIGxvbmcg
YnVmZmVyX3N0YXJ0LCBidWZmZXJfZW5kOwogCXN0cnVjdCBzZXR1cF9oZWFkZXIgKmhkciA9ICZi
b290X3BhcmFtcy0+aGRyOwogCWVmaV9zdGF0dXNfdCBzdGF0dXM7CisJY2hhciAqY21kbGluZTsK
IAogCWVmaV9zeXN0ZW1fdGFibGUgPSBzeXNfdGFibGVfYXJnOwogCkBAIC03MzUsMjIgKzczNywy
MiBAQCB1bnNpZ25lZCBsb25nIGVmaV9tYWluKGVmaV9oYW5kbGVfdCBoYW5kbGUsCiAJCWltYWdl
X29mZnNldCA9IDA7CiAJfQogCi0jaWZkZWYgQ09ORklHX0NNRExJTkVfQk9PTAotCXN0YXR1cyA9
IGVmaV9wYXJzZV9vcHRpb25zKENPTkZJR19DTURMSU5FKTsKKwljbWRsaW5lID0ga3phbGxvYyhD
T01NQU5EX0xJTkVfU0laRSwgR0ZQX0tFUk5FTCk7CisJaWYgKGNtZGxpbmUpIHsKKwkJdW5zaWdu
ZWQgbG9uZyBjbWRsaW5lX3BhZGRyID0gKCh1NjQpaGRyLT5jbWRfbGluZV9wdHIgfAorCQkJCQkg
ICAgICAgKCh1NjQpYm9vdF9wYXJhbXMtPmV4dF9jbWRfbGluZV9wdHIgPDwgMzIpKTsKKworCQlj
bWRsaW5lX2J1aWxkKGNtZGxpbmUsIChjaGFyICopY21kbGluZV9wYWRkciwgQ09NTUFORF9MSU5F
X1NJWkUpOworCQlzdGF0dXMgPSBlZmlfcGFyc2Vfb3B0aW9ucyhjbWRsaW5lKTsKKwkJa2ZyZWUo
Y21kbGluZSk7CisJfSBlbHNlIHsKKwkJZWZpX2VycigiRmFpbGVkIHRvIGFsbG9jYXRlIG1lbW9y
eVxuIik7CisJCWdvdG8gZmFpbDsKKwl9CiAJaWYgKHN0YXR1cyAhPSBFRklfU1VDQ0VTUykgewog
CQllZmlfZXJyKCJGYWlsZWQgdG8gcGFyc2Ugb3B0aW9uc1xuIik7CiAJCWdvdG8gZmFpbDsKIAl9
Ci0jZW5kaWYKLQlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0NNRExJTkVfT1ZFUlJJREUpKSB7Ci0J
CXVuc2lnbmVkIGxvbmcgY21kbGluZV9wYWRkciA9ICgodTY0KWhkci0+Y21kX2xpbmVfcHRyIHwK
LQkJCQkJICAgICAgICgodTY0KWJvb3RfcGFyYW1zLT5leHRfY21kX2xpbmVfcHRyIDw8IDMyKSk7
Ci0JCXN0YXR1cyA9IGVmaV9wYXJzZV9vcHRpb25zKChjaGFyICopY21kbGluZV9wYWRkcik7Ci0J
CWlmIChzdGF0dXMgIT0gRUZJX1NVQ0NFU1MpIHsKLQkJCWVmaV9lcnIoIkZhaWxlZCB0byBwYXJz
ZSBvcHRpb25zXG4iKTsKLQkJCWdvdG8gZmFpbDsKLQkJfQotCX0KIAogCS8qCiAJICogQXQgdGhp
cyBwb2ludCwgYW4gaW5pdHJkIG1heSBhbHJlYWR5IGhhdmUgYmVlbiBsb2FkZWQgYnkgdGhlCi0t
IAoyLjI1LjAKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
Ck9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRw
czovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
