Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id CF6D35DD07
	for <lists+openrisc@lfdr.de>; Wed,  3 Jul 2019 05:34:09 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id ADC0A2030A;
	Wed,  3 Jul 2019 05:34:09 +0200 (CEST)
Received: from mail-pl1-f178.google.com (mail-pl1-f178.google.com
 [209.85.214.178])
 by mail.librecores.org (Postfix) with ESMTPS id 3564620156
 for <openrisc@lists.librecores.org>; Wed,  3 Jul 2019 05:34:07 +0200 (CEST)
Received: by mail-pl1-f178.google.com with SMTP id m7so407212pls.8
 for <openrisc@lists.librecores.org>; Tue, 02 Jul 2019 20:34:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=l2i6w6zvTuJiDQUvgJSAzrj7k+pLRsy0FIOccOj7CXY=;
 b=K4MC61gi/d3Aa3NMntAkWy0NT1x1aEeQUkGEiKXMSHm55PNMDR0Zyntpm3wYjHDIh/
 dUsL/YCG7/3tIy0DABtk8YuSrjqZE/HStk5ORgdYjbr8J2s1fMdrA6GNK0L/PYKwQH7U
 0Xkzo2wkz6jiMn151CWrT7KI4OChPga41h/SYKisHlrIKLB6tIGZoydUprflIzMuX5Ss
 Ql1xVO6mHzfDuhLZD1OO5S0ZezrHY8in8nO/tpBUU19Zb16n238AMLMJseUxnazYYCD+
 LaJz+xQTlA11vX5g1spEPhP4fdVR8VsKJEQbbz3dF/EI1qNQPDVCtfaqJLQR6GBumxBi
 6IdA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=l2i6w6zvTuJiDQUvgJSAzrj7k+pLRsy0FIOccOj7CXY=;
 b=WpVX/mp5TFl4JzD9oLKygF38ABBtoUvYZ5Eb7EqeWq4yGCltvT+QfrNb7RfKQhFkH3
 EkVNTIRHSPTxIyAGHLovQDNnkEXLjdN9T7EQGuTxuhW3nv1Tc3L7yityznc9lMWUPBfl
 ayJg4Ibk4E3+hMYZ+le3CRv88BqVJSuFWN+L6wpLooIOcx4cBWg8tFqv0XDDLPPgghXF
 KoHTXo3bvLcBO+xrabvMpspQR5NTCVk58wnj2m9H8WpnkafD84VumzBRUFqxsSnIbHNS
 UnSjt2Msmtb8iByi9ELiKYajwYHEZjUUoNvInmRC7OHep3n0lLS5UkaZrt6f0eRxACDx
 prWw==
X-Gm-Message-State: APjAAAUDfep0gg7vn8a51cEqtSFM1SpZg7LGhEO4kiGBjhNAyuU9x5C1
 LGWwTGhS5Fu6ATwzGsJUU6I=
X-Google-Smtp-Source: APXvYqzXiHKyeX7j3Q0wdIvK/Zq1aAvM9CHdzZ44dBkCdNEKZQeU8r10lIpLfQqmx4Zf0nEygBJgGw==
X-Received: by 2002:a17:902:708c:: with SMTP id
 z12mr39432315plk.205.1562124845788; 
 Tue, 02 Jul 2019 20:34:05 -0700 (PDT)
Received: from localhost (g223.61-115-60.ppp.wakwak.ne.jp. [61.115.60.223])
 by smtp.gmail.com with ESMTPSA id w22sm527972pfi.175.2019.07.02.20.34.04
 (version=TLS1_3 cipher=AEAD-AES256-GCM-SHA384 bits=256/256);
 Tue, 02 Jul 2019 20:34:05 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GCC patches <gcc-patches@gcc.gnu.org>
Date: Wed,  3 Jul 2019 12:33:47 +0900
Message-Id: <20190703033351.11924-2-shorne@gmail.com>
X-Mailer: git-send-email 2.21.0
In-Reply-To: <20190703033351.11924-1-shorne@gmail.com>
References: <20190703033351.11924-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 1/5] or1k: Fix code quality for volatile
 memory loads
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>,
 Openrisc <openrisc@lists.librecores.org>, Jeff Law <law@redhat.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

Vm9sYXRpbGUgbWVtb3J5IGRvZXMgbm90IG1hdGNoIHRoZSBtZW1vcnlfb3BlcmFuZCBwcmVkaWNh
dGUuICBUaGlzCmNhdXNlcyBleHRyYSBleHRlbmQvbWFzayBpbnN0cnVjdGlvbnMgaW5zdHJ1Y3Rp
b25zIHdoZW4gcmVhZGluZwpmcm9tIHZvbGF0aWxlIG1lbW9yeS4gIE9uIE9wZW5SSVNDIGxvYWRp
bmcgdm9sYXRpbGUgbWVtb3J5IGNhbiBiZQp0cmVhdGVkIHRoZSBzYW1lIGFzIHJlZ3VsYXIgbWVt
b3J5IGxvYWRzIHdoaWNoIHN1cHBvcnRzIGNvbWJpbmVkCnNpZ24vemVybyBleHRlbmRzLiAgRml4
aW5nIHRoaXMgZWxpbWluYXRlcyB0aGUgbmVlZCBmb3IgZXh0cmEKZXh0ZW5kL21hc2sgaW5zdHJ1
Y3Rpb25zLgoKVGhpcyBhbHNvIGFkZHMgYSB0ZXN0IHByb3ZpZGVkIGJ5IFJpY2hhcmQgU2VsdmFn
Z2kgd2hpY2ggdW5jb3ZlcmVkIHRoZQppc3N1ZSB3aGlsZSB3ZSB3ZXJlIGxvb2tpbmcgaW50byBh
bm90aGVyIGlzc3VlLgoKZ2NjL0NoYW5nZUxvZzoKCglQUiB0YXJnZXQvOTAzNjMKCSogY29uZmln
L29yMWsvb3Ixay5tZCAoemVyb19leHRlbmQ8bW9kZT5zaTIpOiBVcGRhdGUgcHJlZGljYXRlLgoJ
KGV4dGVuZDxtb2RlPnNpMik6IFVwZGF0ZSBwcmVkaWNhdGUuCgkqIGdjYy9jb25maWcvb3Ixay9w
cmVkaWNhdGVzLm1kICh2b2xhdGlsZV9tZW1fb3BlcmFuZCk6IE5ldy4KCShyZWdfb3JfbWVtX29w
ZXJhbmQpOiBOZXcuCgpnY2MvdGVzdHN1aXRlL0NoYW5nZUxvZzoKCglQUiB0YXJnZXQvOTAzNjMK
CSogZ2NjLnRhcmdldC9vcjFrL3N3YXAtMS5jOiBOZXcgdGVzdC4KCSogZ2NjLnRhcmdldC9vcjFr
L3N3YXAtMi5jOiBOZXcgdGVzdC4KLS0tClNpbmNlIHYxOgogLSBGaXhlZCB0eXBvcyB3aXRoIHZv
bGF0aWxlCgogZ2NjL2NvbmZpZy9vcjFrL29yMWsubWQgICAgICAgICAgICAgICAgfCAgNiArLS0K
IGdjYy9jb25maWcvb3Ixay9wcmVkaWNhdGVzLm1kICAgICAgICAgIHwgMTggKysrKysrKwogZ2Nj
L3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0xLmMgfCA3MCArKysrKysrKysrKysrKysr
KysrKysrKysrKwogZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0yLmMgfCA0NyAr
KysrKysrKysrKysrKysrKwogNCBmaWxlcyBjaGFuZ2VkLCAxMzggaW5zZXJ0aW9ucygrKSwgMyBk
ZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBnY2MvdGVzdHN1aXRlL2djYy50YXJnZXQv
b3Ixay9zd2FwLTEuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGdjYy90ZXN0c3VpdGUvZ2NjLnRhcmdl
dC9vcjFrL3N3YXAtMi5jCgpkaWZmIC0tZ2l0IGEvZ2NjL2NvbmZpZy9vcjFrL29yMWsubWQgYi9n
Y2MvY29uZmlnL29yMWsvb3Ixay5tZAppbmRleCAyZGFkNTFjZDQ2Yi4uNzU3ZDg5OWM0NDIgMTAw
NjQ0Ci0tLSBhL2djYy9jb25maWcvb3Ixay9vcjFrLm1kCisrKyBiL2djYy9jb25maWcvb3Ixay9v
cjFrLm1kCkBAIC0zMjgsMTEgKzMyOCwxMSBAQAogOzsgU2lnbiBFeHRlbmRpbmcKIDs7IC0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0KIAotOzsgWmVybyBleHRlbnNpb24gY2FuIGFsd2F5cyBiZSBkb25lIHdpdGgg
QU5EIGFuZCBhbiBleHRlbmRpbmcgbG9hZC4KKzs7IFplcm8gZXh0ZW5zaW9uIGNhbiBhbHdheXMg
YmUgZG9uZSB3aXRoIEFORCBvciBhbiBleHRlbmRpbmcgbG9hZC4KIAogKGRlZmluZV9pbnNuICJ6
ZXJvX2V4dGVuZDxtb2RlPnNpMiIKICAgWyhzZXQgKG1hdGNoX29wZXJhbmQ6U0kgMCAicmVnaXN0
ZXJfb3BlcmFuZCIgICAgICAgICAgICAgICAgICAgICAiPXIsciIpCi0JKHplcm9fZXh0ZW5kOlNJ
IChtYXRjaF9vcGVyYW5kOkkxMiAxICJub25pbW1lZGlhdGVfb3BlcmFuZCIgInIsbSIpKSldCisJ
KHplcm9fZXh0ZW5kOlNJIChtYXRjaF9vcGVyYW5kOkkxMiAxICJyZWdfb3JfbWVtX29wZXJhbmQi
ICJyLG0iKSkpXQogICAiIgogICAiQAogICAgbC5hbmRpXHQlMCwgJTEsIDx6ZXh0X2FuZGk+CkBA
IC0zNDQsNyArMzQ0LDcgQEAKIAogKGRlZmluZV9pbnNuICJleHRlbmQ8bW9kZT5zaTIiCiAgIFso
c2V0IChtYXRjaF9vcGVyYW5kOlNJIDAgInJlZ2lzdGVyX29wZXJhbmQiICAgICAgICAgICAgICAg
ICAgICAgICI9cixyIikKLQkoc2lnbl9leHRlbmQ6U0kgKG1hdGNoX29wZXJhbmQ6STEyIDEgIm5v
bmltbWVkaWF0ZV9vcGVyYW5kIiAgInIsbSIpKSldCisJKHNpZ25fZXh0ZW5kOlNJIChtYXRjaF9v
cGVyYW5kOkkxMiAxICJyZWdfb3JfbWVtX29wZXJhbmQiICAicixtIikpKV0KICAgIlRBUkdFVF9T
RVhUIgogICAiQAogICAgbC5leHQ8bGRzdD5zXHQlMCwgJTEKZGlmZiAtLWdpdCBhL2djYy9jb25m
aWcvb3Ixay9wcmVkaWNhdGVzLm1kIGIvZ2NjL2NvbmZpZy9vcjFrL3ByZWRpY2F0ZXMubWQKaW5k
ZXggODc5MjM2YmNhNDkuLmI4OTVmMWI0MjI4IDEwMDY0NAotLS0gYS9nY2MvY29uZmlnL29yMWsv
cHJlZGljYXRlcy5tZAorKysgYi9nY2MvY29uZmlnL29yMWsvcHJlZGljYXRlcy5tZApAQCAtODIs
MyArODIsMjEgQEAKIAogKGRlZmluZV9wcmVkaWNhdGUgImVxdWFsaXR5X2NvbXBhcmlzb25fb3Bl
cmF0b3IiCiAgIChtYXRjaF9jb2RlICJuZSxlcSIpKQorCis7OyBCb3Jyb3dlZCBmcm9tIHJzNjAw
MAorOyAgUmV0dXJuIHRydWUgaWYgdGhlIG9wZXJhbmQgaXMgaW4gdm9sYXRpbGUgbWVtb3J5LiAg
Tm90ZSB0aGF0IGR1cmluZyB0aGUKKzs7IFJUTCBnZW5lcmF0aW9uIHBoYXNlLCBtZW1vcnlfb3Bl
cmFuZCBkb2VzIG5vdCByZXR1cm4gVFJVRSBmb3Igdm9sYXRpbGUKKzs7IG1lbW9yeSByZWZlcmVu
Y2VzLiAgU28gdGhpcyBmdW5jdGlvbiBhbGxvd3MgdXMgdG8gcmVjb2duaXplIHZvbGF0aWxlCis7
OyByZWZlcmVuY2VzIHdoZXJlIGl0J3Mgc2FmZS4KKyhkZWZpbmVfcHJlZGljYXRlICJ2b2xhdGls
ZV9tZW1fb3BlcmFuZCIKKyAgKGFuZCAobWF0Y2hfY29kZSAibWVtIikKKyAgICAgICAobWF0Y2hf
dGVzdCAiTUVNX1ZPTEFUSUxFX1AgKG9wKSIpCisgICAgICAgKGlmX3RoZW5fZWxzZSAobWF0Y2hf
dGVzdCAicmVsb2FkX2NvbXBsZXRlZCIpCisJIChtYXRjaF9vcGVyYW5kIDAgIm1lbW9yeV9vcGVy
YW5kIikKKwkgKG1hdGNoX3Rlc3QgIm1lbW9yeV9hZGRyZXNzX3AgKG1vZGUsIFhFWFAgKG9wLCAw
KSkiKSkpKQorCis7OyBSZXR1cm4gdHJ1ZSBpZiB0aGUgb3BlcmFuZCBpcyBhIHJlZ2lzdGVyIG9y
IG1lbW9yeTsgaW5jbHVkaW5nIHZvbGF0aWxlCis7OyBtZW1vcnkuCisoZGVmaW5lX3ByZWRpY2F0
ZSAicmVnX29yX21lbV9vcGVyYW5kIgorICAoaW9yIChtYXRjaF9vcGVyYW5kIDAgIm5vbmltbWVk
aWF0ZV9vcGVyYW5kIikKKyAgICAgICAobWF0Y2hfb3BlcmFuZCAwICJ2b2xhdGlsZV9tZW1fb3Bl
cmFuZCIpKSkKZGlmZiAtLWdpdCBhL2djYy90ZXN0c3VpdGUvZ2NjLnRhcmdldC9vcjFrL3N3YXAt
MS5jIGIvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0xLmMKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAuLjRjMTc5ZDFlNDMwCi0tLSAvZGV2L251bGwKKysr
IGIvZ2NjL3Rlc3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0xLmMKQEAgLTAsMCArMSw3MCBA
QAorLyogeyBkZy1kbyBydW4gfSAqLworLyogeyBkZy1vcHRpb25zICItT3MgLW1oYXJkLW11bCAt
bXNvZnQtZGl2IC1tc29mdC1mbG9hdCIgfSAqLworCisvKiBOb3RlczoKKworICAgVGhpcyB0ZXN0
IGZhaWxlZCBvbiBvcjFrIEdDQyA3LjIuMCwgYW5kIHBhc3NlcyBvbiBvcjFrIEdDQyA1LjMuMAor
ICAgYXMgd2VsbCBhcyB0aGUgb3IxayBwb3J0IHJlbGVhc2VkIGluIEdDQyA5LjEuCisKKyAgIFRo
ZSBtYWluIHByb2dyYW0gaXMgb3JnYW5pemVkIGFzIGEgbG9vcCBzdHJ1Y3R1cmUgc28gZ2NjIGRv
ZXMgbm90CisgICBvcHRpbWl6ZS1hd2F5IHRoZSBjYWxscyB0byBzd2FwXzEoKS4gIENvbXBpbGlu
ZyB3aXRoIC1PMiBpcyBzdGlsbCBzbWFydAorICAgZW5vdWdoIHRvIG9wdGltaXplLWF3YXkgdGhl
IGNhbGxzLCBidXQgdXNpbmcgLU9zIGRvZXMgbm90LgorICAgVGhlIGJhZCBjb2RlIGlzIG9ubHkg
Z2VuZXJhdGVkIHdoZW4gY29tcGlsZWQgd2l0aCAtT3MuCisKKyAgIFdoZW4gdGhlIGJhZCBjb2Rl
IGlzIGdlbmVyYXRlZCBhbGwgY29kZSBpcyBva2F5IGV4Y2VwdCBmb3IgdGhlIHZlcnkgbGFzdAor
ICAgaW5zdHJ1Y3Rpb24gKGEgJ2wuYWRkYycgaW4gdGhlIGwuanIgZGVsYXkgc2xvdCkuCisgICBV
cCB0byB0aGF0IHBvaW50IGluIGV4ZWN1dGlvbiwgcjExIGFuZCByMTIgY29udGFpbiB0aGUgY29y
cmVjdCAoZXhwZWN0ZWQpCisgICB2YWx1ZXMsIGJ1dCB0aGUgZXhlY3V0aW9uIG9mIHRoZSBmaW5h
bCAibC5hZGRjIiBjb3JydXB0cyByMTEuCisKKyAgIFRoaXMgdGVzdCBpcyBhZGRlZCB0byBlbnN1
cmUgdGhpcyBkb2VzIG5vdCBjb21lIGJhY2suICAqLworCisjaW5jbHVkZSA8c3RkaW50Lmg+CisK
K3ZvbGF0aWxlIHN0YXRpYyB1aW50OF90IGdfZG9zd2FwID0gMTsKKwordWludDY0X3Qgc3dhcF8x
ICh1aW50NjRfdCB1NjQpIHsKKyAgdWludDMyX3QgdTY0X2xvLCB1NjRfaGksIHU2NF90bXA7CisK
KyAgdTY0X2xvID0gdTY0ICYgMHhGRkZGRkZGRjsKKyAgdTY0X2hpID0gdTY0ID4+IDMyOworCisg
IGlmIChnX2Rvc3dhcCkKKyAgICB7CisgICAgICB1NjRfdG1wID0gdTY0X2xvOworICAgICAgdTY0
X2xvICA9IHU2NF9oaTsKKyAgICAgIHU2NF9oaSAgPSB1NjRfdG1wOworICAgIH0KKworICB1NjQg
PSB1NjRfbG87CisgIHU2NCArPSAoKHVpbnQ2NF90KSB1NjRfaGkgPDwgMzIpOworCisgIHJldHVy
biB1NjQ7Cit9CisKK2ludCBtYWluICgpIHsKKyAgaW50IHJldDsKKyAgaW50IGl0ZXI7CisgIHVp
bnQ2NF90ICBhYVsyXTsgICAvLyBpbnB1dHMgdG8gc3dhcCBmdW5jdGlvbgorICB1aW50NjRfdCAg
ZWVbMl07ICAgLy8gZXhwZWN0ZWQgb3V0cHV0cyBvZiBzd2FwIGZ1bmN0aW9uCisgIHVpbnQ2NF90
ICByclsyXTsgICAvLyBhY3R1YWwgcmVzdWx0cyBvZiBzd2FwIGZ1bmN0aW9uCisKKyAgZ19kb3N3
YXAgPSAxOworCisgIC8vIHBvcHVsYXRlIGlucHV0cywgYW5kIGV4cGVjdGVkIG91dHB1dHM6Cisg
IGFhWzBdID0gMHgxMjM0NTY3ODlhYmNkZWYwOworICBhYVsxXSA9IDB4MDEyMzQ1Njc4OWFiY2Rl
ZjsKKworICBlZVswXSA9IDB4OUFCQ0RFRjAxMjM0NTY3ODsKKyAgZWVbMV0gPSAweDg5QUJDREVG
MDEyMzQ1Njc7CisKKyAgcmV0ID0gMDsKKyAgZm9yIChpdGVyID0gMDsgaXRlciA8IDI7IGl0ZXIr
KykKKyAgICB7CisgICAgICBycltpdGVyXSA9IHN3YXBfMShhYVtpdGVyXSk7CisgICAgICAvLyBl
YXJseS1vdXQgaWYgdGhlcmUncyBhIG1pcy1tYXRjaDoKKyAgICAgIGlmIChlZVtpdGVyXSAhPSBy
cltpdGVyXSkKKyAgICAgICAgcmV0ID0gMTsKKyAgICB9CisKKyAgcmV0dXJuIHJldDsKK30KZGlm
ZiAtLWdpdCBhL2djYy90ZXN0c3VpdGUvZ2NjLnRhcmdldC9vcjFrL3N3YXAtMi5jIGIvZ2NjL3Rl
c3RzdWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0yLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5k
ZXggMDAwMDAwMDAwMDAuLjM3MzBiNGVlMmUzCi0tLSAvZGV2L251bGwKKysrIGIvZ2NjL3Rlc3Rz
dWl0ZS9nY2MudGFyZ2V0L29yMWsvc3dhcC0yLmMKQEAgLTAsMCArMSw0NyBAQAorLyogeyBkZy1k
byBjb21waWxlIH0gKi8KKy8qIHsgZGctb3B0aW9ucyAiLU9zIC1taGFyZC1tdWwgLW1zb2Z0LWRp
diAtbXNvZnQtZmxvYXQiIH0gKi8KKworLyogTm90ZXM6CisKKyAgIFRoaXMgdGVzdCBmYWlsZWQg
b24gb3IxayBHQ0MgNy4yLjAsIGFuZCBwYXNzZXMgb24gb3IxayBHQ0MgNS4zLjAKKyAgIGFzIHdl
bGwgYXMgdGhlIG9yMWsgcG9ydCByZWxlYXNlZCBpbiBHQ0MgOS4xLgorCisgICBUaGUgbWFpbiBw
cm9ncmFtIGlzIG9yZ2FuaXplZCBhcyBhIGxvb3Agc3RydWN0dXJlIHNvIGdjYyBkb2VzIG5vdAor
ICAgb3B0aW1pemUtYXdheSB0aGUgY2FsbHMgdG8gc3dhcF8xKCkuICBDb21waWxpbmcgd2l0aCAt
TzIgaXMgc3RpbGwgc21hcnQKKyAgIGVub3VnaCB0byBvcHRpbWl6ZS1hd2F5IHRoZSBjYWxscywg
YnV0IHVzaW5nIC1PcyBkb2VzIG5vdC4KKyAgIFRoZSBiYWQgY29kZSBpcyBvbmx5IGdlbmVyYXRl
ZCB3aGVuIGNvbXBpbGVkIHdpdGggLU9zLgorCisgICBXaGVuIHRoZSBiYWQgY29kZSBpcyBnZW5l
cmF0ZWQgYWxsIGNvZGUgaXMgb2theSBleGNlcHQgZm9yIHRoZSB2ZXJ5IGxhc3QKKyAgIGluc3Ry
dWN0aW9uIChhICdsLmFkZGMnIGluIHRoZSBsLmpyIGRlbGF5IHNsb3QpLgorICAgVXAgdG8gdGhh
dCBwb2ludCBpbiBleGVjdXRpb24sIHIxMSBhbmQgcjEyIGNvbnRhaW4gdGhlIGNvcnJlY3QgKGV4
cGVjdGVkKQorICAgdmFsdWVzLCBidXQgdGhlIGV4ZWN1dGlvbiBvZiB0aGUgZmluYWwgImwuYWRk
YyIgY29ycnVwdHMgcjExLgorCisgICBUaGlzIHRlc3QgZW5zdXJlcyBhbiBsLmFkZGMgaXMgbm90
IGluIHRoZSBvdXRwdXQuICBBbHNvLCB3aGlsZSBjb25maXJtaW5nCisgICB0aGlzIHRlc3Qgd2Ug
dW5jb3ZlcmVkIFBSLzkwMzYzLCB3ZSB1c2UgaXQgdG8gY2hlY2sgZm9yIHRoYXQgYXMgd2VsbC4g
ICovCisKKyNpbmNsdWRlIDxzdGRpbnQuaD4KKwordm9sYXRpbGUgc3RhdGljIHVpbnQ4X3QgZ19k
b3N3YXAgPSAxOworCit1aW50NjRfdCBzd2FwXzEgKHVpbnQ2NF90IHU2NCkgeworICB1aW50MzJf
dCB1NjRfbG8sIHU2NF9oaSwgdTY0X3RtcDsKKworICB1NjRfbG8gPSB1NjQgJiAweEZGRkZGRkZG
OworICB1NjRfaGkgPSB1NjQgPj4gMzI7CisKKyAgaWYgKGdfZG9zd2FwKQorICAgIHsKKyAgICAg
IHU2NF90bXAgPSB1NjRfbG87CisgICAgICB1NjRfbG8gID0gdTY0X2hpOworICAgICAgdTY0X2hp
ICA9IHU2NF90bXA7CisgICAgfQorCisgIHU2NCA9IHU2NF9sbzsKKyAgdTY0ICs9ICgodWludDY0
X3QpIHU2NF9oaSA8PCAzMik7CisKKyAgcmV0dXJuIHU2NDsKK30KKworLyogQ2hlY2sgdG8gZW5z
dXJlIHRoZSB2b2xhdGlsZSBsb2FkIGRvZXMgbm90IGdldCB6ZXJvIGV4dGVuZGVkLiAgKi8KKy8q
IHsgZGctZmluYWwgeyBzY2FuLWFzc2VtYmxlci1ub3QgIjB4ZmYiIH0gfSAqLworLyogeyBkZy1m
aW5hbCB7IHNjYW4tYXNzZW1ibGVyLW5vdCAibC5hZGRjIiB9IH0gKi8KLS0gCjIuMjEuMAoKX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFp
bGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGli
cmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
