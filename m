Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 1B2B24B88EB
	for <lists+openrisc@lfdr.de>; Wed, 16 Feb 2022 14:17:09 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id F381624825;
	Wed, 16 Feb 2022 14:17:08 +0100 (CET)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mail.librecores.org (Postfix) with ESMTPS id 45A552481B
 for <openrisc@lists.librecores.org>; Wed, 16 Feb 2022 14:17:07 +0100 (CET)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id 0A5A961690;
 Wed, 16 Feb 2022 13:17:06 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 3F41CC36AE7;
 Wed, 16 Feb 2022 13:16:54 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1645017423;
 bh=pd6u0mwO6yaQL1MmpebN+vLJ9fcdTZbWD3IkgwNoG4w=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=BQ937DYwV8BLGIXiUT7ewgRsUzlZXbBFcc5tZQuFi5oSqEnLHg4ZG/oIqsS0t0LPn
 k3uWcitFq/JTyrEKv9+o5KhwSEpAgMjmkLQ6mpPtQnpZcBGHa40kAOdvVZ/MUw6/yA
 MoQSQPgx3iQtzXxtjcWdkwa15KodqGLLsoU7pkU5CG3LhVBIO+9zYAW+hUlWPX9vfK
 m9NGdaVmmZMYmnOxKymJENlG2sEzMQEqL6kPQjQO2auZZZtvrvbNOb6B9hp2OP8e0N
 VgQRkXk27WtZmhyQF3QMsSDv/zGf6COsHfnV8BeoxLaL7lpdWEzZKvNb6PPvnT5ojI
 ZUpcS+QXXCSIA==
From: Arnd Bergmann <arnd@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>,
 Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
 linux-mm@kvack.org, linux-api@vger.kernel.org, arnd@arndb.de,
 linux-kernel@vger.kernel.org, viro@zeniv.linux.org.uk
Date: Wed, 16 Feb 2022 14:13:22 +0100
Message-Id: <20220216131332.1489939-9-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
In-Reply-To: <20220216131332.1489939-1-arnd@kernel.org>
References: <20220216131332.1489939-1-arnd@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v2 08/18] uaccess: add generic __{get,
 put}_kernel_nofault
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: mark.rutland@arm.com, dalias@libc.org, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, peterz@infradead.org, jcmvbkbc@gmail.com,
 guoren@kernel.org, sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, will@kernel.org, ardb@kernel.org,
 linux-s390@vger.kernel.org, bcain@codeaurora.org, mpe@ellerman.id.au,
 deller@gmx.de, x86@kernel.org, linux@armlinux.org.uk,
 linux-csky@vger.kernel.org, mingo@redhat.com,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 hca@linux.ibm.com, linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 green.hu@gmail.com, monstr@monstr.eu, tsbogend@alpha.franken.de,
 linux-parisc@vger.kernel.org, nickhu@andestech.com, linux-mips@vger.kernel.org,
 dinguyen@kernel.org, ebiederm@xmission.com, richard@nod.at,
 akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org, davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KCk5pbmUgYXJjaGl0ZWN0dXJlcyBh
cmUgc3RpbGwgbWlzc2luZyBfX3tnZXQscHV0fV9rZXJuZWxfbm9mYXVsdDoKYWxwaGEsIGlhNjQs
IG1pY3JvYmxhemUsIG5kczMyLCBuaW9zMiwgb3BlbnJpc2MsIHNoLCBzcGFyYzMyLCB4dGVuc2Eu
CgpBZGQgYSBnZW5lcmljIHZlcnNpb24gdGhhdCBsZXRzIGV2ZXJ5dGhpbmcgdXNlIHRoZSBub3Jt
YWwKY29weV97ZnJvbSx0b31fa2VybmVsX25vZmF1bHQoKSBjb2RlIGJhc2VkIG9uIHRoZXNlLCBy
ZW1vdmluZyB0aGUgbGFzdAp1c2Ugb2YgZ2V0X2ZzKCkvc2V0X2ZzKCkgZnJvbSBhcmNoaXRlY3R1
cmUtaW5kZXBlbmRlbnQgY29kZS4KClJldmlld2VkLWJ5OiBDaHJpc3RvcGggSGVsbHdpZyA8aGNo
QGxzdC5kZT4KU2lnbmVkLW9mZi1ieTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KLS0t
CiBhcmNoL2FybS9pbmNsdWRlL2FzbS91YWNjZXNzLmggICAgICB8ICAgMiAtCiBhcmNoL2FybTY0
L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCAgICB8ICAgMiAtCiBhcmNoL202OGsvaW5jbHVkZS9hc20v
dWFjY2Vzcy5oICAgICB8ICAgMiAtCiBhcmNoL21pcHMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oICAg
ICB8ICAgMiAtCiBhcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS91YWNjZXNzLmggICB8ICAgMSAtCiBh
cmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oICB8ICAgMiAtCiBhcmNoL3Jpc2N2L2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaCAgICB8ICAgMiAtCiBhcmNoL3MzOTAvaW5jbHVkZS9hc20vdWFj
Y2Vzcy5oICAgICB8ICAgMiAtCiBhcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3VhY2Nlc3NfNjQuaCB8
ICAgMiAtCiBhcmNoL3VtL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCAgICAgICB8ICAgMiAtCiBhcmNo
L3g4Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmggICAgICB8ICAgMiAtCiBpbmNsdWRlL2FzbS1nZW5l
cmljL3VhY2Nlc3MuaCAgICAgICB8ICAgMiAtCiBpbmNsdWRlL2xpbnV4L3VhY2Nlc3MuaCAgICAg
ICAgICAgICB8ICAxOSArKysrKwogbW0vbWFjY2Vzcy5jICAgICAgICAgICAgICAgICAgICAgICAg
fCAxMDggLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogMTQgZmlsZXMgY2hhbmdlZCwgMTkg
aW5zZXJ0aW9ucygrKSwgMTMxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvYXJtL2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRl
eCAzMmRiZmQ4MWY0MmEuLmQyMGQ3OGMzNGI5NCAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAt
NDc2LDggKzQ3Niw2IEBAIGRvIHsJCQkJCQkJCQlcCiAJOiAiciIgKHgpLCAiaSIgKC1FRkFVTFQp
CQkJCVwKIAk6ICJjYyIpCiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQogI2Rl
ZmluZSBfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwK
IGRvIHsJCQkJCQkJCQlcCiAJY29uc3QgdHlwZSAqX19wa19wdHIgPSAoc3JjKTsJCQkJCVwKZGlm
ZiAtLWdpdCBhL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vdWFjY2Vzcy5oIGIvYXJjaC9hcm02NC9p
bmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXggM2E1ZmY1ZTIwNTg2Li4yZTIwODc5ZmUzY2YgMTAw
NjQ0Ci0tLSBhL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvYXJt
NjQvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC0yNiw4ICsyNiw2IEBACiAjaW5jbHVkZSA8YXNt
L21lbW9yeS5oPgogI2luY2x1ZGUgPGFzbS9leHRhYmxlLmg+CiAKLSNkZWZpbmUgSEFWRV9HRVRf
S0VSTkVMX05PRkFVTFQKLQogLyoKICAqIFRlc3Qgd2hldGhlciBhIGJsb2NrIG9mIG1lbW9yeSBp
cyBhIHZhbGlkIHVzZXIgc3BhY2UgYWRkcmVzcy4KICAqIFJldHVybnMgMSBpZiB0aGUgcmFuZ2Ug
aXMgdmFsaWQsIDAgb3RoZXJ3aXNlLgpkaWZmIC0tZ2l0IGEvYXJjaC9tNjhrL2luY2x1ZGUvYXNt
L3VhY2Nlc3MuaCBiL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXggYmE2NzA1
MjM4ODVjLi43OTYxN2MwYjJmOTEgMTAwNjQ0Ci0tLSBhL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS91
YWNjZXNzLmgKKysrIGIvYXJjaC9tNjhrL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAtMzkwLDgg
KzM5MCw2IEBAIHJhd19jb3B5X3RvX3VzZXIodm9pZCBfX3VzZXIgKnRvLCBjb25zdCB2b2lkICpm
cm9tLCB1bnNpZ25lZCBsb25nIG4pCiAjZGVmaW5lIElOTElORV9DT1BZX0ZST01fVVNFUgogI2Rl
ZmluZSBJTkxJTkVfQ09QWV9UT19VU0VSCiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFV
TFQKLQogI2RlZmluZSBfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xh
YmVsKQkJCVwKIGRvIHsJCQkJCQkJCQlcCiAJdHlwZSAqX19na19kc3QgPSAodHlwZSAqKShkc3Qp
OwkJCQkJXApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2Fy
Y2gvbWlwcy9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXggZjhmNzRmOWY1ODgzLi5kYjlhOGUw
MDJiNjIgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS91YWNjZXNzLmgKKysrIGIv
YXJjaC9taXBzL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAtMjk2LDggKzI5Niw2IEBAIHN0cnVj
dCBfX2xhcmdlX3N0cnVjdCB7IHVuc2lnbmVkIGxvbmcgYnVmWzEwMF07IH07CiAJKHZhbCkgPSBf
X2d1X3RtcC50OwkJCQkJCVwKIH0KIAotI2RlZmluZSBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVAot
CiAjZGVmaW5lIF9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0eXBlLCBlcnJfbGFiZWwp
CQkJXAogZG8gewkJCQkJCQkJCVwKIAlpbnQgX19ndV9lcnI7CQkJCQkJCVwKZGlmZiAtLWdpdCBh
L2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gvcGFyaXNjL2luY2x1ZGUv
YXNtL3VhY2Nlc3MuaAppbmRleCBlYmY4YTg0NWIwMTcuLjA5MjViYmQ2ZGI2NyAxMDA2NDQKLS0t
IGEvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvcGFyaXNjL2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAtOTUsNyArOTUsNiBAQCBzdHJ1Y3QgZXhjZXB0aW9uX3Rh
YmxlX2VudHJ5IHsKIAkodmFsKSA9IChfX2ZvcmNlIF9fdHlwZW9mX18oKihwdHIpKSkgX19ndV92
YWw7CVwKIH0KIAotI2RlZmluZSBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVAogI2RlZmluZSBfX2dl
dF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQlcCiB7CQkJCQkJCVwK
IAl0eXBlIF9fejsJCQkJCVwKZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS91
YWNjZXNzLmggYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCmluZGV4IDYzMzE2
MTAwMDgwYy4uYTAwMzJjMmU3NTUwIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9h
c20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAg
LTQ2Nyw4ICs0NjcsNiBAQCBkbyB7CQkJCQkJCQkJXAogCQl1bnNhZmVfcHV0X3VzZXIoKih1OCop
KF9zcmMgKyBfaSksICh1OCBfX3VzZXIgKikoX2RzdCArIF9pKSwgZSk7IFwKIH0gd2hpbGUgKDAp
CiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQogI2RlZmluZSBfX2dldF9rZXJu
ZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwKIAlfX2dldF91c2VyX3Np
emVfZ290bygqKCh0eXBlICopKGRzdCkpLAkJCQlcCiAJCShfX2ZvcmNlIHR5cGUgX191c2VyICop
KHNyYyksIHNpemVvZih0eXBlKSwgZXJyX2xhYmVsKQpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9p
bmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL3Jpc2N2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApp
bmRleCBjNzAxYTVlNTdhMmIuLjQ0MDdiOWU0OGQyYyAxMDA2NDQKLS0tIGEvYXJjaC9yaXNjdi9p
bmNsdWRlL2FzbS91YWNjZXNzLmgKKysrIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS91YWNjZXNz
LmgKQEAgLTM0Niw4ICszNDYsNiBAQCB1bnNpZ25lZCBsb25nIF9fbXVzdF9jaGVjayBjbGVhcl91
c2VyKHZvaWQgX191c2VyICp0bywgdW5zaWduZWQgbG9uZyBuKQogCQlfX2NsZWFyX3VzZXIodG8s
IG4pIDogbjsKIH0KIAotI2RlZmluZSBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVAotCiAjZGVmaW5l
IF9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0eXBlLCBlcnJfbGFiZWwpCQkJXAogZG8g
ewkJCQkJCQkJCVwKIAlsb25nIF9fa3JfZXJyOwkJCQkJCQlcCmRpZmYgLS1naXQgYS9hcmNoL3Mz
OTAvaW5jbHVkZS9hc20vdWFjY2Vzcy5oIGIvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3VhY2Nlc3Mu
aAppbmRleCBkNzRlMjZiNDg2MDQuLjI5MzMyZWRmNDZmMCAxMDA2NDQKLS0tIGEvYXJjaC9zMzkw
L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAorKysgYi9hcmNoL3MzOTAvaW5jbHVkZS9hc20vdWFjY2Vz
cy5oCkBAIC0yODIsOCArMjgyLDYgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIF9fbXVz
dF9jaGVjayBjbGVhcl91c2VyKHZvaWQgX191c2VyICp0bywgdW5zaWduZWQgbG8KIGludCBjb3B5
X3RvX3VzZXJfcmVhbCh2b2lkIF9fdXNlciAqZGVzdCwgdm9pZCAqc3JjLCB1bnNpZ25lZCBsb25n
IGNvdW50KTsKIHZvaWQgKnMzOTBfa2VybmVsX3dyaXRlKHZvaWQgKmRzdCwgY29uc3Qgdm9pZCAq
c3JjLCBzaXplX3Qgc2l6ZSk7CiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQog
aW50IF9fbm9yZXR1cm4gX19wdXRfa2VybmVsX2JhZCh2b2lkKTsKIAogI2RlZmluZSBfX3B1dF9r
ZXJuZWxfYXNtKHZhbCwgdG8sIGluc24pCQkJCQlcCmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL2lu
Y2x1ZGUvYXNtL3VhY2Nlc3NfNjQuaCBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vdWFjY2Vzc182
NC5oCmluZGV4IGIyODM3OTgzMTViMS4uNWMxMmZiNDZiYzYxIDEwMDY0NAotLS0gYS9hcmNoL3Nw
YXJjL2luY2x1ZGUvYXNtL3VhY2Nlc3NfNjQuaAorKysgYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNt
L3VhY2Nlc3NfNjQuaApAQCAtMjEwLDggKzIxMCw2IEBAIF9fYXNtX18gX192b2xhdGlsZV9fKAkJ
CQkJCQlcCiAJICAgICAgIDogIj1yIiAocmV0KSwgIj1yIiAoeCkgOiAiciIgKF9fbShhZGRyKSks
CQlcCiAJCSAiaSIgKC1FRkFVTFQpKQogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxU
Ci0KICNkZWZpbmUgX19nZXRfdXNlcl9ub2NoZWNrKGRhdGEsIGFkZHIsIHNpemUsIHR5cGUpICh7
CQkJICAgICBcCiAJcmVnaXN0ZXIgaW50IF9fZ3VfcmV0OwkJCQkJCSAgICAgXAogCXJlZ2lzdGVy
IHVuc2lnbmVkIGxvbmcgX19ndV92YWw7CQkJCSAgICAgXApkaWZmIC0tZ2l0IGEvYXJjaC91bS9p
bmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL3VtL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRl
eCAxN2QxOGNmZDgyYTUuLjFlY2ZjOTZiY2M1MCAxMDA2NDQKLS0tIGEvYXJjaC91bS9pbmNsdWRl
L2FzbS91YWNjZXNzLmgKKysrIGIvYXJjaC91bS9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAgLTQ0
LDggKzQ0LDYgQEAgc3RhdGljIGlubGluZSBpbnQgX19hY2Nlc3Nfb2sodW5zaWduZWQgbG9uZyBh
ZGRyLCB1bnNpZ25lZCBsb25nIHNpemUpCiB9CiAKIC8qIG5vIHBhZ2VmYXVsdHMgZm9yIGtlcm5l
bCBhZGRyZXNzZXMgaW4gdW0gKi8KLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQgMQot
CiAjZGVmaW5lIF9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0eXBlLCBlcnJfbGFiZWwp
CQkJXAogZG8gewkJCQkJCQkJCVwKIAkqKCh0eXBlICopZHN0KSA9IGdldF91bmFsaWduZWQoKHR5
cGUgKikoc3JjKSk7CQkJXApkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdWFjY2Vz
cy5oIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCmluZGV4IGE1OWJhMjU3OGU2NC4u
MjAxZWZjZWM2NmI3IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS91YWNjZXNzLmgK
KysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC01MDcsOCArNTA3LDYgQEAg
ZG8gewkJCQkJCQkJCVwKIAl1bnNhZmVfY29weV9sb29wKF9fdWN1X2RzdCwgX191Y3Vfc3JjLCBf
X3VjdV9sZW4sIHU4LCBsYWJlbCk7CVwKIH0gd2hpbGUgKDApCiAKLSNkZWZpbmUgSEFWRV9HRVRf
S0VSTkVMX05PRkFVTFQKLQogI2lmZGVmIENPTkZJR19DQ19IQVNfQVNNX0dPVE9fT1VUUFVUCiAj
ZGVmaW5lIF9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0eXBlLCBlcnJfbGFiZWwpCQkJ
XAogCV9fZ2V0X3VzZXJfc2l6ZSgqKCh0eXBlICopKGRzdCkpLCAoX19mb3JjZSB0eXBlIF9fdXNl
ciAqKShzcmMpLAlcCmRpZmYgLS1naXQgYS9pbmNsdWRlL2FzbS1nZW5lcmljL3VhY2Nlc3MuaCBi
L2luY2x1ZGUvYXNtLWdlbmVyaWMvdWFjY2Vzcy5oCmluZGV4IDEwZmZhOGI1YzExNy4uMDg3MGZh
MTFhN2M1IDEwMDY0NAotLS0gYS9pbmNsdWRlL2FzbS1nZW5lcmljL3VhY2Nlc3MuaAorKysgYi9p
bmNsdWRlL2FzbS1nZW5lcmljL3VhY2Nlc3MuaApAQCAtNzcsOCArNzcsNiBAQCBkbyB7CQkJCQkJ
CQkJXAogCQlnb3RvIGVycl9sYWJlbDsJCQkJCQlcCiB9IHdoaWxlICgwKQogCi0jZGVmaW5lIEhB
VkVfR0VUX0tFUk5FTF9OT0ZBVUxUIDEKLQogc3RhdGljIGlubGluZSBfX211c3RfY2hlY2sgdW5z
aWduZWQgbG9uZwogcmF3X2NvcHlfZnJvbV91c2VyKHZvaWQgKnRvLCBjb25zdCB2b2lkIF9fdXNl
ciAqIGZyb20sIHVuc2lnbmVkIGxvbmcgbikKIHsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgv
dWFjY2Vzcy5oIGIvaW5jbHVkZS9saW51eC91YWNjZXNzLmgKaW5kZXggYWMwMzk0MDg3ZjdkLi42
N2U5YmM5NGRjNDAgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvdWFjY2Vzcy5oCisrKyBiL2lu
Y2x1ZGUvbGludXgvdWFjY2Vzcy5oCkBAIC0zNjgsNiArMzY4LDI1IEBAIGxvbmcgc3RybmNweV9m
cm9tX3VzZXJfbm9mYXVsdChjaGFyICpkc3QsIGNvbnN0IHZvaWQgX191c2VyICp1bnNhZmVfYWRk
ciwKIAkJbG9uZyBjb3VudCk7CiBsb25nIHN0cm5sZW5fdXNlcl9ub2ZhdWx0KGNvbnN0IHZvaWQg
X191c2VyICp1bnNhZmVfYWRkciwgbG9uZyBjb3VudCk7CiAKKyNpZm5kZWYgX19nZXRfa2VybmVs
X25vZmF1bHQKKyNkZWZpbmUgX19nZXRfa2VybmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGxh
YmVsKQlcCitkbyB7CQkJCQkJCVwKKwl0eXBlIF9fdXNlciAqcCA9ICh0eXBlIF9fZm9yY2UgX191
c2VyICopKHNyYyk7CVwKKwl0eXBlIGRhdGE7CQkJCQlcCisJaWYgKF9fZ2V0X3VzZXIoZGF0YSwg
cCkpCQkJXAorCQlnb3RvIGxhYmVsOwkJCQlcCisJKih0eXBlICopZHN0ID0gZGF0YTsJCQkJXAor
fSB3aGlsZSAoMCkKKworI2RlZmluZSBfX3B1dF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlw
ZSwgbGFiZWwpCVwKK2RvIHsJCQkJCQkJXAorCXR5cGUgX191c2VyICpwID0gKHR5cGUgX19mb3Jj
ZSBfX3VzZXIgKikoZHN0KTsJXAorCXR5cGUgZGF0YSA9ICoodHlwZSAqKXNyYzsJCQlcCisJaWYg
KF9fcHV0X3VzZXIoZGF0YSwgcCkpCQkJXAorCQlnb3RvIGxhYmVsOwkJCQlcCit9IHdoaWxlICgw
KQorI2VuZGlmCisKIC8qKgogICogZ2V0X2tlcm5lbF9ub2ZhdWx0KCk6IHNhZmVseSBhdHRlbXB0
IHRvIHJlYWQgZnJvbSBhIGxvY2F0aW9uCiAgKiBAdmFsOiByZWFkIGludG8gdGhpcyB2YXJpYWJs
ZQpkaWZmIC0tZ2l0IGEvbW0vbWFjY2Vzcy5jIGIvbW0vbWFjY2Vzcy5jCmluZGV4IGQzZjFhMWYw
YjFjMS4uY2JkMWIzOTU5YWYyIDEwMDY0NAotLS0gYS9tbS9tYWNjZXNzLmMKKysrIGIvbW0vbWFj
Y2Vzcy5jCkBAIC0xMiw4ICsxMiw2IEBAIGJvb2wgX193ZWFrIGNvcHlfZnJvbV9rZXJuZWxfbm9m
YXVsdF9hbGxvd2VkKGNvbnN0IHZvaWQgKnVuc2FmZV9zcmMsCiAJcmV0dXJuIHRydWU7CiB9CiAK
LSNpZmRlZiBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVAotCiAjZGVmaW5lIGNvcHlfZnJvbV9rZXJu
ZWxfbm9mYXVsdF9sb29wKGRzdCwgc3JjLCBsZW4sIHR5cGUsIGVycl9sYWJlbCkJXAogCXdoaWxl
IChsZW4gPj0gc2l6ZW9mKHR5cGUpKSB7CQkJCQlcCiAJCV9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRz
dCwgc3JjLCB0eXBlLCBlcnJfbGFiZWwpOwkJXApAQCAtMTAyLDExMiArMTAwLDYgQEAgbG9uZyBz
dHJuY3B5X2Zyb21fa2VybmVsX25vZmF1bHQoY2hhciAqZHN0LCBjb25zdCB2b2lkICp1bnNhZmVf
YWRkciwgbG9uZyBjb3VudCkKIAlkc3RbLTFdID0gJ1wwJzsKIAlyZXR1cm4gLUVGQVVMVDsKIH0K
LSNlbHNlIC8qIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUICovCi0vKioKLSAqIGNvcHlfZnJvbV9r
ZXJuZWxfbm9mYXVsdCgpOiBzYWZlbHkgYXR0ZW1wdCB0byByZWFkIGZyb20ga2VybmVsLXNwYWNl
Ci0gKiBAZHN0OiBwb2ludGVyIHRvIHRoZSBidWZmZXIgdGhhdCBzaGFsbCB0YWtlIHRoZSBkYXRh
Ci0gKiBAc3JjOiBhZGRyZXNzIHRvIHJlYWQgZnJvbQotICogQHNpemU6IHNpemUgb2YgdGhlIGRh
dGEgY2h1bmsKLSAqCi0gKiBTYWZlbHkgcmVhZCBmcm9tIGtlcm5lbCBhZGRyZXNzIEBzcmMgdG8g
dGhlIGJ1ZmZlciBhdCBAZHN0LiAgSWYgYSBrZXJuZWwKLSAqIGZhdWx0IGhhcHBlbnMsIGhhbmRs
ZSB0aGF0IGFuZCByZXR1cm4gLUVGQVVMVC4gIElmIEBzcmMgaXMgbm90IGEgdmFsaWQga2VybmVs
Ci0gKiBhZGRyZXNzLCByZXR1cm4gLUVSQU5HRS4KLSAqCi0gKiBXZSBlbnN1cmUgdGhhdCB0aGUg
Y29weV9mcm9tX3VzZXIgaXMgZXhlY3V0ZWQgaW4gYXRvbWljIGNvbnRleHQgc28gdGhhdAotICog
ZG9fcGFnZV9mYXVsdCgpIGRvZXNuJ3QgYXR0ZW1wdCB0byB0YWtlIG1tYXBfbG9jay4gIFRoaXMg
bWFrZXMKLSAqIGNvcHlfZnJvbV9rZXJuZWxfbm9mYXVsdCgpIHN1aXRhYmxlIGZvciB1c2Ugd2l0
aGluIHJlZ2lvbnMgd2hlcmUgdGhlIGNhbGxlcgotICogYWxyZWFkeSBob2xkcyBtbWFwX2xvY2ss
IG9yIG90aGVyIGxvY2tzIHdoaWNoIG5lc3QgaW5zaWRlIG1tYXBfbG9jay4KLSAqLwotbG9uZyBj
b3B5X2Zyb21fa2VybmVsX25vZmF1bHQodm9pZCAqZHN0LCBjb25zdCB2b2lkICpzcmMsIHNpemVf
dCBzaXplKQotewotCWxvbmcgcmV0OwotCW1tX3NlZ21lbnRfdCBvbGRfZnMgPSBnZXRfZnMoKTsK
LQotCWlmICghY29weV9mcm9tX2tlcm5lbF9ub2ZhdWx0X2FsbG93ZWQoc3JjLCBzaXplKSkKLQkJ
cmV0dXJuIC1FUkFOR0U7Ci0KLQlzZXRfZnMoS0VSTkVMX0RTKTsKLQlwYWdlZmF1bHRfZGlzYWJs
ZSgpOwotCXJldCA9IF9fY29weV9mcm9tX3VzZXJfaW5hdG9taWMoZHN0LCAoX19mb3JjZSBjb25z
dCB2b2lkIF9fdXNlciAqKXNyYywKLQkJCXNpemUpOwotCXBhZ2VmYXVsdF9lbmFibGUoKTsKLQlz
ZXRfZnMob2xkX2ZzKTsKLQotCWlmIChyZXQpCi0JCXJldHVybiAtRUZBVUxUOwotCXJldHVybiAw
OwotfQotRVhQT1JUX1NZTUJPTF9HUEwoY29weV9mcm9tX2tlcm5lbF9ub2ZhdWx0KTsKLQotLyoq
Ci0gKiBjb3B5X3RvX2tlcm5lbF9ub2ZhdWx0KCk6IHNhZmVseSBhdHRlbXB0IHRvIHdyaXRlIHRv
IGEgbG9jYXRpb24KLSAqIEBkc3Q6IGFkZHJlc3MgdG8gd3JpdGUgdG8KLSAqIEBzcmM6IHBvaW50
ZXIgdG8gdGhlIGRhdGEgdGhhdCBzaGFsbCBiZSB3cml0dGVuCi0gKiBAc2l6ZTogc2l6ZSBvZiB0
aGUgZGF0YSBjaHVuawotICoKLSAqIFNhZmVseSB3cml0ZSB0byBhZGRyZXNzIEBkc3QgZnJvbSB0
aGUgYnVmZmVyIGF0IEBzcmMuICBJZiBhIGtlcm5lbCBmYXVsdAotICogaGFwcGVucywgaGFuZGxl
IHRoYXQgYW5kIHJldHVybiAtRUZBVUxULgotICovCi1sb25nIGNvcHlfdG9fa2VybmVsX25vZmF1
bHQodm9pZCAqZHN0LCBjb25zdCB2b2lkICpzcmMsIHNpemVfdCBzaXplKQotewotCWxvbmcgcmV0
OwotCW1tX3NlZ21lbnRfdCBvbGRfZnMgPSBnZXRfZnMoKTsKLQotCXNldF9mcyhLRVJORUxfRFMp
OwotCXBhZ2VmYXVsdF9kaXNhYmxlKCk7Ci0JcmV0ID0gX19jb3B5X3RvX3VzZXJfaW5hdG9taWMo
KF9fZm9yY2Ugdm9pZCBfX3VzZXIgKilkc3QsIHNyYywgc2l6ZSk7Ci0JcGFnZWZhdWx0X2VuYWJs
ZSgpOwotCXNldF9mcyhvbGRfZnMpOwotCi0JaWYgKHJldCkKLQkJcmV0dXJuIC1FRkFVTFQ7Ci0J
cmV0dXJuIDA7Ci19Ci0KLS8qKgotICogc3RybmNweV9mcm9tX2tlcm5lbF9ub2ZhdWx0OiAtIENv
cHkgYSBOVUwgdGVybWluYXRlZCBzdHJpbmcgZnJvbSB1bnNhZmUKLSAqCQkJCSBhZGRyZXNzLgot
ICogQGRzdDogICBEZXN0aW5hdGlvbiBhZGRyZXNzLCBpbiBrZXJuZWwgc3BhY2UuICBUaGlzIGJ1
ZmZlciBtdXN0IGJlIGF0Ci0gKiAgICAgICAgIGxlYXN0IEBjb3VudCBieXRlcyBsb25nLgotICog
QHVuc2FmZV9hZGRyOiBVbnNhZmUgYWRkcmVzcy4KLSAqIEBjb3VudDogTWF4aW11bSBudW1iZXIg
b2YgYnl0ZXMgdG8gY29weSwgaW5jbHVkaW5nIHRoZSB0cmFpbGluZyBOVUwuCi0gKgotICogQ29w
aWVzIGEgTlVMLXRlcm1pbmF0ZWQgc3RyaW5nIGZyb20gdW5zYWZlIGFkZHJlc3MgdG8ga2VybmVs
IGJ1ZmZlci4KLSAqCi0gKiBPbiBzdWNjZXNzLCByZXR1cm5zIHRoZSBsZW5ndGggb2YgdGhlIHN0
cmluZyBJTkNMVURJTkcgdGhlIHRyYWlsaW5nIE5VTC4KLSAqCi0gKiBJZiBhY2Nlc3MgZmFpbHMs
IHJldHVybnMgLUVGQVVMVCAoc29tZSBkYXRhIG1heSBoYXZlIGJlZW4gY29waWVkIGFuZCB0aGUK
LSAqIHRyYWlsaW5nIE5VTCBhZGRlZCkuICBJZiBAdW5zYWZlX2FkZHIgaXMgbm90IGEgdmFsaWQg
a2VybmVsIGFkZHJlc3MsIHJldHVybgotICogLUVSQU5HRS4KLSAqCi0gKiBJZiBAY291bnQgaXMg
c21hbGxlciB0aGFuIHRoZSBsZW5ndGggb2YgdGhlIHN0cmluZywgY29waWVzIEBjb3VudC0xIGJ5
dGVzLAotICogc2V0cyB0aGUgbGFzdCBieXRlIG9mIEBkc3QgYnVmZmVyIHRvIE5VTCBhbmQgcmV0
dXJucyBAY291bnQuCi0gKi8KLWxvbmcgc3RybmNweV9mcm9tX2tlcm5lbF9ub2ZhdWx0KGNoYXIg
KmRzdCwgY29uc3Qgdm9pZCAqdW5zYWZlX2FkZHIsIGxvbmcgY291bnQpCi17Ci0JbW1fc2VnbWVu
dF90IG9sZF9mcyA9IGdldF9mcygpOwotCWNvbnN0IHZvaWQgKnNyYyA9IHVuc2FmZV9hZGRyOwot
CWxvbmcgcmV0OwotCi0JaWYgKHVubGlrZWx5KGNvdW50IDw9IDApKQotCQlyZXR1cm4gMDsKLQlp
ZiAoIWNvcHlfZnJvbV9rZXJuZWxfbm9mYXVsdF9hbGxvd2VkKHVuc2FmZV9hZGRyLCBjb3VudCkp
Ci0JCXJldHVybiAtRVJBTkdFOwotCi0Jc2V0X2ZzKEtFUk5FTF9EUyk7Ci0JcGFnZWZhdWx0X2Rp
c2FibGUoKTsKLQotCWRvIHsKLQkJcmV0ID0gX19nZXRfdXNlcigqZHN0KyssIChjb25zdCBjaGFy
IF9fdXNlciBfX2ZvcmNlICopc3JjKyspOwotCX0gd2hpbGUgKGRzdFstMV0gJiYgcmV0ID09IDAg
JiYgc3JjIC0gdW5zYWZlX2FkZHIgPCBjb3VudCk7Ci0KLQlkc3RbLTFdID0gJ1wwJzsKLQlwYWdl
ZmF1bHRfZW5hYmxlKCk7Ci0Jc2V0X2ZzKG9sZF9mcyk7Ci0KLQlyZXR1cm4gcmV0ID8gLUVGQVVM
VCA6IHNyYyAtIHVuc2FmZV9hZGRyOwotfQotI2VuZGlmIC8qIEhBVkVfR0VUX0tFUk5FTF9OT0ZB
VUxUICovCiAKIC8qKgogICogY29weV9mcm9tX3VzZXJfbm9mYXVsdCgpOiBzYWZlbHkgYXR0ZW1w
dCB0byByZWFkIGZyb20gYSB1c2VyLXNwYWNlIGxvY2F0aW9uCi0tIAoyLjI5LjIKCl9fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcg
bGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29y
ZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
