Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 77742EAEB8
	for <lists+openrisc@lfdr.de>; Thu, 31 Oct 2019 12:21:30 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 4F47120781;
	Thu, 31 Oct 2019 12:21:30 +0100 (CET)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 7090C20733
 for <openrisc@lists.librecores.org>; Tue, 29 Oct 2019 07:49:54 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=OvKg/OPqIo+Osl4KgP2NzX8KtYLRyV9CozTxrvyOpIs=; b=JtzfR2l+vD/KoNGRdmWUmtPka2
 CdHjWBtPWgcNmYo5RM1ve8aNB2HX5T2V2lW5his0HYLjfF5E7Su6wPerOsO3oxMlNJi+ckSV5BqQC
 nnQzcD90g13DLpNk0FI+ha/g2j71vrL/C1nfq1Boov2ooxuDvlDWg3UuRDftGZ8Crr3jQERsllQza
 lwyuiXx50cIO0piSaWiZw69LlT1uiskct0l40NuAyhiSI8lKlVSXa7Donw6+J3SiqPsdq2w7h1pqB
 eWUkzIijeB3eu0ZHnThdGP7cRh/JVMYv3BknwDUxIMqhbK8bFRuO16v9ZlX9vJzE3J7Q6de9NA+5F
 Yu3zfVNg==;
Received: from [2001:4bb8:18c:c7d:c70:4a89:bc61:2] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iPLJw-0004D0-K2; Tue, 29 Oct 2019 06:49:37 +0000
From: Christoph Hellwig <hch@lst.de>
To: Arnd Bergmann <arnd@arndb.de>, Guo Ren <guoren@kernel.org>,
 Michal Simek <monstr@monstr.eu>, Greentime Hu <green.hu@gmail.com>,
 Vincent Chen <deanbo422@gmail.com>, Guan Xuetao <gxt@pku.edu.cn>,
 x86@kernel.org
Date: Tue, 29 Oct 2019 07:48:32 +0100
Message-Id: <20191029064834.23438-20-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20191029064834.23438-1-hch@lst.de>
References: <20191029064834.23438-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Thu, 31 Oct 2019 12:21:19 +0100
Subject: [OpenRISC] [PATCH 19/21] nds32: use generic ioremap
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-s390@vger.kernel.org,
 linux-ia64@vger.kernel.org, linux-parisc@vger.kernel.org,
 linux-sh@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-xtensa@linux-xtensa.org, linux-mips@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-m68k@lists.linux-m68k.org,
 openrisc@lists.librecores.org, linux-mtd@lists.infradead.org,
 linux-alpha@vger.kernel.org, sparclinux@vger.kernel.org,
 nios2-dev@lists.rocketboards.org, linux-riscv@lists.infradead.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VXNlIHRoZSBnZW5lcmljIGlvcmVtYXBfcHJvdCBhbmQgaW91bm1hcCBoZWxwZXJzLgoKTm90ZSB0
aGF0IHRoZSBpby5oIGluY2x1ZGUgaW4gcGd0YWJsZS5oIGhhZCB0byBiZSByZW1vdmVkIHRvIG5v
dCBjcmVhdGUKYW4gaW5jbHVkZSBsb29wLiAgQXMgZmFyIGFzIEkgY2FuIHRlbGwgdGhlcmUgd2Fz
IG5vIG5lZWQgZm9yIGl0IHRvCnN0YXJ0IHdpdGguCgpTaWduZWQtb2ZmLWJ5OiBDaHJpc3RvcGgg
SGVsbHdpZyA8aGNoQGxzdC5kZT4KLS0tCiBhcmNoL25kczMyL0tjb25maWcgICAgICAgICAgICAg
ICB8ICAxICsKIGFyY2gvbmRzMzIvaW5jbHVkZS9hc20vaW8uaCAgICAgIHwgIDMgKy0KIGFyY2gv
bmRzMzIvaW5jbHVkZS9hc20vcGd0YWJsZS5oIHwgIDQgKystCiBhcmNoL25kczMyL21tL01ha2Vm
aWxlICAgICAgICAgICB8ICAzICstCiBhcmNoL25kczMyL21tL2lvcmVtYXAuYyAgICAgICAgICB8
IDYyIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiA1IGZpbGVzIGNoYW5nZWQsIDYg
aW5zZXJ0aW9ucygrKSwgNjcgZGVsZXRpb25zKC0pCiBkZWxldGUgbW9kZSAxMDA2NDQgYXJjaC9u
ZHMzMi9tbS9pb3JlbWFwLmMKCmRpZmYgLS1naXQgYS9hcmNoL25kczMyL0tjb25maWcgYi9hcmNo
L25kczMyL0tjb25maWcKaW5kZXggZmJkNjgzMjk3MzdmLi4xMmMwNmE4MzNiN2MgMTAwNjQ0Ci0t
LSBhL2FyY2gvbmRzMzIvS2NvbmZpZworKysgYi9hcmNoL25kczMyL0tjb25maWcKQEAgLTIwLDYg
KzIwLDcgQEAgY29uZmlnIE5EUzMyCiAJc2VsZWN0IEdFTkVSSUNfQ0xPQ0tFVkVOVFMKIAlzZWxl
Y3QgR0VORVJJQ19JUlFfQ0hJUAogCXNlbGVjdCBHRU5FUklDX0lSUV9TSE9XCisJc2VsZWN0IEdF
TkVSSUNfSU9SRU1BUAogCXNlbGVjdCBHRU5FUklDX0xJQl9BU0hMREkzCiAJc2VsZWN0IEdFTkVS
SUNfTElCX0FTSFJESTMKIAlzZWxlY3QgR0VORVJJQ19MSUJfQ01QREkyCmRpZmYgLS1naXQgYS9h
cmNoL25kczMyL2luY2x1ZGUvYXNtL2lvLmggYi9hcmNoL25kczMyL2luY2x1ZGUvYXNtL2lvLmgK
aW5kZXggZmIwZThhMjRjN2FmLi5lNTczNzhkMDQwMDYgMTAwNjQ0Ci0tLSBhL2FyY2gvbmRzMzIv
aW5jbHVkZS9hc20vaW8uaAorKysgYi9hcmNoL25kczMyL2luY2x1ZGUvYXNtL2lvLmgKQEAgLTYs
OCArNiw2IEBACiAKICNpbmNsdWRlIDxsaW51eC90eXBlcy5oPgogCi12b2lkIF9faW9tZW0gKmlv
cmVtYXAocGh5c19hZGRyX3QgcGh5c19hZGRyLCBzaXplX3Qgc2l6ZSk7Ci1leHRlcm4gdm9pZCBp
b3VubWFwKHZvbGF0aWxlIHZvaWQgX19pb21lbSAqYWRkcik7CiAjZGVmaW5lIF9fcmF3X3dyaXRl
YiBfX3Jhd193cml0ZWIKIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3Jhd193cml0ZWIodTggdmFsLCB2
b2xhdGlsZSB2b2lkIF9faW9tZW0gKmFkZHIpCiB7CkBAIC04MCw2ICs3OCw3IEBAIHN0YXRpYyBp
bmxpbmUgdTMyIF9fcmF3X3JlYWRsKGNvbnN0IHZvbGF0aWxlIHZvaWQgX19pb21lbSAqYWRkcikK
ICNkZWZpbmUgd3JpdGViKHYsYykJKHsgX19pb3dtYigpOyB3cml0ZWJfcmVsYXhlZCgodiksKGMp
KTsgfSkKICNkZWZpbmUgd3JpdGV3KHYsYykJKHsgX19pb3dtYigpOyB3cml0ZXdfcmVsYXhlZCgo
diksKGMpKTsgfSkKICNkZWZpbmUgd3JpdGVsKHYsYykJKHsgX19pb3dtYigpOyB3cml0ZWxfcmVs
YXhlZCgodiksKGMpKTsgfSkKKwogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2lvLmg+CiAKICNlbmRp
ZiAvKiBfX0FTTV9ORFMzMl9JT19IICovCmRpZmYgLS1naXQgYS9hcmNoL25kczMyL2luY2x1ZGUv
YXNtL3BndGFibGUuaCBiL2FyY2gvbmRzMzIvaW5jbHVkZS9hc20vcGd0YWJsZS5oCmluZGV4IDA1
ODhlYzk5NzI1Yy4uNmZiZjI1MWNmYzI2IDEwMDY0NAotLS0gYS9hcmNoL25kczMyL2luY2x1ZGUv
YXNtL3BndGFibGUuaAorKysgYi9hcmNoL25kczMyL2luY2x1ZGUvYXNtL3BndGFibGUuaApAQCAt
MTIsNyArMTIsNiBAQAogI2luY2x1ZGUgPGFzbS9uZHMzMi5oPgogI2lmbmRlZiBfX0FTU0VNQkxZ
X18KICNpbmNsdWRlIDxhc20vZml4bWFwLmg+Ci0jaW5jbHVkZSA8YXNtL2lvLmg+CiAjaW5jbHVk
ZSA8bmRzMzJfaW50cmluc2ljLmg+CiAjZW5kaWYKIApAQCAtMTMwLDYgKzEyOSw5IEBAIGV4dGVy
biB2b2lkIF9fcGdkX2Vycm9yKGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5lLCB1bnNpZ25lZCBs
b25nIHZhbCk7CiAjZGVmaW5lIF9QQUdFX0NBQ0hFCQlfUEFHRV9DX01FTV9XQgogI2VuZGlmCiAK
KyNkZWZpbmUgX1BBR0VfSU9SRU1BUCBcCisJKF9QQUdFX1YgfCBfUEFHRV9NX0tSVyB8IF9QQUdF
X0QgfCBfUEFHRV9HIHwgX1BBR0VfQ19ERVYpCisKIC8qCiAgKiArIExldmVsIDEgZGVzY3JpcHRv
ciAoUE1EKQogICovCmRpZmYgLS1naXQgYS9hcmNoL25kczMyL21tL01ha2VmaWxlIGIvYXJjaC9u
ZHMzMi9tbS9NYWtlZmlsZQppbmRleCBiZDM2MGU0NTgzYjUuLjg5N2VjYWY1Y2Y1NCAxMDA2NDQK
LS0tIGEvYXJjaC9uZHMzMi9tbS9NYWtlZmlsZQorKysgYi9hcmNoL25kczMyL21tL01ha2VmaWxl
CkBAIC0xLDYgKzEsNSBAQAogIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMC1vbmx5
Ci1vYmoteQkJCQk6PSBleHRhYmxlLm8gdGxiLm8gXAotCQkJCSAgIGZhdWx0Lm8gaW5pdC5vIGlv
cmVtYXAubyBtbWFwLm8gXAorb2JqLXkJCQkJOj0gZXh0YWJsZS5vIHRsYi5vIGZhdWx0Lm8gaW5p
dC5vIG1tYXAubyBcCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1tLW5kczMy
Lm8gY2FjaGVmbHVzaC5vIHByb2MubwogCiBvYmotJChDT05GSUdfQUxJR05NRU5UX1RSQVApCSs9
IGFsaWdubWVudC5vCmRpZmYgLS1naXQgYS9hcmNoL25kczMyL21tL2lvcmVtYXAuYyBiL2FyY2gv
bmRzMzIvbW0vaW9yZW1hcC5jCmRlbGV0ZWQgZmlsZSBtb2RlIDEwMDY0NAppbmRleCA2OTAxNDBi
YjIzYTIuLjAwMDAwMDAwMDAwMAotLS0gYS9hcmNoL25kczMyL21tL2lvcmVtYXAuYworKysgL2Rl
di9udWxsCkBAIC0xLDYyICswLDAgQEAKLS8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwt
Mi4wCi0vLyBDb3B5cmlnaHQgKEMpIDIwMDUtMjAxNyBBbmRlcyBUZWNobm9sb2d5IENvcnBvcmF0
aW9uCi0KLSNpbmNsdWRlIDxsaW51eC92bWFsbG9jLmg+Ci0jaW5jbHVkZSA8bGludXgvaW8uaD4K
LSNpbmNsdWRlIDxsaW51eC9tbS5oPgotI2luY2x1ZGUgPGFzbS9wZ3RhYmxlLmg+Ci0KLXZvaWQg
X19pb21lbSAqaW9yZW1hcChwaHlzX2FkZHJfdCBwaHlzX2FkZHIsIHNpemVfdCBzaXplKTsKLQot
c3RhdGljIHZvaWQgX19pb21lbSAqX19pb3JlbWFwX2NhbGxlcihwaHlzX2FkZHJfdCBwaHlzX2Fk
ZHIsIHNpemVfdCBzaXplLAotCQkJCSAgICAgIHZvaWQgKmNhbGxlcikKLXsKLQlzdHJ1Y3Qgdm1f
c3RydWN0ICphcmVhOwotCXVuc2lnbmVkIGxvbmcgYWRkciwgb2Zmc2V0LCBsYXN0X2FkZHI7Ci0J
cGdwcm90X3QgcHJvdDsKLQotCS8qIERvbid0IGFsbG93IHdyYXBhcm91bmQgb3IgemVybyBzaXpl
ICovCi0JbGFzdF9hZGRyID0gcGh5c19hZGRyICsgc2l6ZSAtIDE7Ci0JaWYgKCFzaXplIHx8IGxh
c3RfYWRkciA8IHBoeXNfYWRkcikKLQkJcmV0dXJuIE5VTEw7Ci0KLQkvKgotCSAqIE1hcHBpbmdz
IGhhdmUgdG8gYmUgcGFnZS1hbGlnbmVkCi0JICovCi0Jb2Zmc2V0ID0gcGh5c19hZGRyICYgflBB
R0VfTUFTSzsKLQlwaHlzX2FkZHIgJj0gUEFHRV9NQVNLOwotCXNpemUgPSBQQUdFX0FMSUdOKGxh
c3RfYWRkciArIDEpIC0gcGh5c19hZGRyOwotCi0JLyoKLQkgKiBPaywgZ28gZm9yIGl0Li4KLQkg
Ki8KLQlhcmVhID0gZ2V0X3ZtX2FyZWFfY2FsbGVyKHNpemUsIFZNX0lPUkVNQVAsIGNhbGxlcik7
Ci0JaWYgKCFhcmVhKQotCQlyZXR1cm4gTlVMTDsKLQotCWFyZWEtPnBoeXNfYWRkciA9IHBoeXNf
YWRkcjsKLQlhZGRyID0gKHVuc2lnbmVkIGxvbmcpYXJlYS0+YWRkcjsKLQlwcm90ID0gX19wZ3By
b3QoX1BBR0VfViB8IF9QQUdFX01fS1JXIHwgX1BBR0VfRCB8Ci0JCQlfUEFHRV9HIHwgX1BBR0Vf
Q19ERVYpOwotCWlmIChpb3JlbWFwX3BhZ2VfcmFuZ2UoYWRkciwgYWRkciArIHNpemUsIHBoeXNf
YWRkciwgcHJvdCkpIHsKLQkJdnVubWFwKCh2b2lkICopYWRkcik7Ci0JCXJldHVybiBOVUxMOwot
CX0KLQlyZXR1cm4gKF9fZm9yY2Ugdm9pZCBfX2lvbWVtICopKG9mZnNldCArIChjaGFyICopYWRk
cik7Ci0KLX0KLQotdm9pZCBfX2lvbWVtICppb3JlbWFwKHBoeXNfYWRkcl90IHBoeXNfYWRkciwg
c2l6ZV90IHNpemUpCi17Ci0JcmV0dXJuIF9faW9yZW1hcF9jYWxsZXIocGh5c19hZGRyLCBzaXpl
LAotCQkJCV9fYnVpbHRpbl9yZXR1cm5fYWRkcmVzcygwKSk7Ci19Ci0KLUVYUE9SVF9TWU1CT0wo
aW9yZW1hcCk7Ci0KLXZvaWQgaW91bm1hcCh2b2xhdGlsZSB2b2lkIF9faW9tZW0gKiBhZGRyKQot
ewotCXZ1bm1hcCgodm9pZCAqKShQQUdFX01BU0sgJiAodW5zaWduZWQgbG9uZylhZGRyKSk7Ci19
Ci0KLUVYUE9SVF9TWU1CT0woaW91bm1hcCk7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApPcGVu
UklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3JnL2xp
c3RpbmZvL29wZW5yaXNjCg==
