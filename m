Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 154CF171760
	for <lists+openrisc@lfdr.de>; Thu, 27 Feb 2020 13:35:34 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id A3F8620483;
	Thu, 27 Feb 2020 13:35:31 +0100 (CET)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id E08CA20551
 for <openrisc@lists.librecores.org>; Mon, 24 Feb 2020 20:45:03 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description;
 bh=ehuEnMa40tVXLpF/glmGVXLJpTa9E2IWiFFmlUlfLg0=; b=ku0MraN/rswEKoLi7Z3VUhdezm
 dWszo1vN0N4b9PlU97AKsjSLgmEuF5S5NptUZEKWkFbuEULgisaEg31ThaW8p09mVitqfxCQeALtz
 7+cjqwpHhKtKAIH5pJrcO0WHHlWx9xGpUqKIWieckkVAbEVA2svWffALvHr4klOIiso1ys4NvdWnz
 nZj1AGw3knw5t6SI+iMaAIAPtm8oF/q1RSZEezIjenxTs8NtKIx/6pYt3hTWQjqqlAK2fxOwIwUDi
 6AuR0KYQAEs/xsBFRiWg0hXLDVtAHQ1k4+6ZDtOUH5Ln8+50l6sYoc3sXrmQX23lJnFiSVhqzx5so
 hu6jSdpw==;
Received: from [4.28.11.157] (helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92.3 #3 (Red Hat Linux))
 id 1j6Jes-0006XH-JW; Mon, 24 Feb 2020 19:44:50 +0000
From: Christoph Hellwig <hch@lst.de>
To: Jonas Bonn <jonas@southpole.se>,
 Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>,
 Stafford Horne <shorne@gmail.com>
Date: Mon, 24 Feb 2020 11:44:43 -0800
Message-Id: <20200224194446.690816-4-hch@lst.de>
X-Mailer: git-send-email 2.24.1
In-Reply-To: <20200224194446.690816-1-hch@lst.de>
References: <20200224194446.690816-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Thu, 27 Feb 2020 13:35:25 +0100
Subject: [OpenRISC] [PATCH 3/5] dma-direct: make uncached_kernel_address
 more general
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Mark Rutland <mark.rutland@arm.com>, linux-arch@vger.kernel.org,
 Robin Murphy <robin.murphy@arm.com>, linux-kernel@vger.kernel.org,
 iommu@lists.linux-foundation.org, openrisc@lists.librecores.org,
 Will Deacon <will@kernel.org>, linux-arm-kernel@lists.infradead.org,
 Marek Szyprowski <m.szyprowski@samsung.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

UmVuYW1lIHRoZSBzeW1ib2wgdG8gYXJjaF9kbWFfc2V0X3VuY2FjaGVkLCBhbmQgcGFzcyBhIHNp
emUgdG8gaXQgYXMKd2VsbCBhcyBhbGxvdyBhbiBlcnJvciByZXR1cm4uICBUaGF0IHdpbGwgYWxs
b3cgcmV1c2luZyB0aGlzIGhvb2sgZm9yCmluLXBsYWNlIHBhZ2V0YWJsZSByZW1hcHBpbmcuCgpB
cyB0aGUgaW4tcGxhY2UgcmVtYXAgZG9lc24ndCBhbHdheXMgcmVxdWlyZSBhbiBleHBsaWNpdCBj
YWNoZSBmbHVzaCwKYWxzbyBkZXRhbmdsZSBBUkNIX0hBU19ETUFfUFJFUF9DT0hFUkVOVCBmcm9t
IEFSQ0hfSEFTX0RNQV9TRVRfVU5DQUNIRUQuCgpTaWduZWQtb2ZmLWJ5OiBDaHJpc3RvcGggSGVs
bHdpZyA8aGNoQGxzdC5kZT4KLS0tCiBhcmNoL0tjb25maWcgICAgICAgICAgICAgICAgICAgIHwg
IDggKysrKy0tLS0KIGFyY2gvbWljcm9ibGF6ZS9LY29uZmlnICAgICAgICAgfCAgMiArLQogYXJj
aC9taWNyb2JsYXplL21tL2NvbnNpc3RlbnQuYyB8ICAyICstCiBhcmNoL21pcHMvS2NvbmZpZyAg
ICAgICAgICAgICAgIHwgIDMgKystCiBhcmNoL21pcHMvbW0vZG1hLW5vbmNvaGVyZW50LmMgIHwg
IDIgKy0KIGFyY2gvbmlvczIvS2NvbmZpZyAgICAgICAgICAgICAgfCAgMyArKy0KIGFyY2gvbmlv
czIvbW0vZG1hLW1hcHBpbmcuYyAgICAgfCAgMiArLQogYXJjaC94dGVuc2EvS2NvbmZpZyAgICAg
ICAgICAgICB8ICAyICstCiBhcmNoL3h0ZW5zYS9rZXJuZWwvcGNpLWRtYS5jICAgIHwgIDIgKy0K
IGluY2x1ZGUvbGludXgvZG1hLW5vbmNvaGVyZW50LmggfCAgMiArLQoga2VybmVsL2RtYS9kaXJl
Y3QuYyAgICAgICAgICAgICB8IDEwICsrKysrKy0tLS0KIDExIGZpbGVzIGNoYW5nZWQsIDIxIGlu
c2VydGlvbnMoKyksIDE3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvS2NvbmZpZyBi
L2FyY2gvS2NvbmZpZwppbmRleCA3OTk0YjIzOWYxNTUuLjA5MGNmZTBjODJhNyAxMDA2NDQKLS0t
IGEvYXJjaC9LY29uZmlnCisrKyBiL2FyY2gvS2NvbmZpZwpAQCAtMjQ4LDExICsyNDgsMTEgQEAg
Y29uZmlnIEFSQ0hfSEFTX1NFVF9ESVJFQ1RfTUFQCiAJYm9vbAogCiAjCi0jIFNlbGVjdCBpZiBh
cmNoIGhhcyBhbiB1bmNhY2hlZCBrZXJuZWwgc2VnbWVudCBhbmQgcHJvdmlkZXMgdGhlCi0jIHVu
Y2FjaGVkX2tlcm5lbF9hZGRyZXNzIHN5bWJvbCB0byB1c2UgaXQKKyMgU2VsZWN0IGlmIHRoZSBh
cmNoaXRlY3R1cmUgcHJvdmlkZXMgdGhlIGFyY2hfZG1hX3NldF91bmNhY2hlZCBzeW1ib2wgdG8K
KyMgZWl0aGVyIHByb3ZpZGUgYW4gdW5jYWNoZWQgc2VnZW1lbnQgYWxpYXMgZm9yIGEgRE1BIGFs
bG9jYXRpb24sIG9yCisjIHRvIHJlbWFwIHRoZSBwYWdlIHRhYmxlcyBpbiBwbGFjZS4KICMKLWNv
bmZpZyBBUkNIX0hBU19VTkNBQ0hFRF9TRUdNRU5UCi0Jc2VsZWN0IEFSQ0hfSEFTX0RNQV9QUkVQ
X0NPSEVSRU5UCitjb25maWcgQVJDSF9IQVNfRE1BX1NFVF9VTkNBQ0hFRAogCWJvb2wKIAogIyBT
ZWxlY3QgaWYgYXJjaCBpbml0X3Rhc2sgbXVzdCBnbyBpbiB0aGUgX19pbml0X3Rhc2tfZGF0YSBz
ZWN0aW9uCmRpZmYgLS1naXQgYS9hcmNoL21pY3JvYmxhemUvS2NvbmZpZyBiL2FyY2gvbWljcm9i
bGF6ZS9LY29uZmlnCmluZGV4IDZhMzMxYmQ1N2VhOC4uOTYwNmMyNDRiNWI4IDEwMDY0NAotLS0g
YS9hcmNoL21pY3JvYmxhemUvS2NvbmZpZworKysgYi9hcmNoL21pY3JvYmxhemUvS2NvbmZpZwpA
QCAtOCw3ICs4LDcgQEAgY29uZmlnIE1JQ1JPQkxBWkUKIAlzZWxlY3QgQVJDSF9IQVNfR0NPVl9Q
Uk9GSUxFX0FMTAogCXNlbGVjdCBBUkNIX0hBU19TWU5DX0RNQV9GT1JfQ1BVCiAJc2VsZWN0IEFS
Q0hfSEFTX1NZTkNfRE1BX0ZPUl9ERVZJQ0UKLQlzZWxlY3QgQVJDSF9IQVNfVU5DQUNIRURfU0VH
TUVOVCBpZiAhTU1VCisJc2VsZWN0IEFSQ0hfSEFTX0RNQV9TRVRfVU5DQUNIRUQgaWYgIU1NVQog
CXNlbGVjdCBBUkNIX01JR0hUX0hBVkVfUENfUEFSUE9SVAogCXNlbGVjdCBBUkNIX1dBTlRfSVBD
X1BBUlNFX1ZFUlNJT04KIAlzZWxlY3QgQlVJTERUSU1FX1RBQkxFX1NPUlQKZGlmZiAtLWdpdCBh
L2FyY2gvbWljcm9ibGF6ZS9tbS9jb25zaXN0ZW50LmMgYi9hcmNoL21pY3JvYmxhemUvbW0vY29u
c2lzdGVudC5jCmluZGV4IGNlZGU3YzVlODEzNS4uZTA5YjY2ZTQzY2I2IDEwMDY0NAotLS0gYS9h
cmNoL21pY3JvYmxhemUvbW0vY29uc2lzdGVudC5jCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9tbS9j
b25zaXN0ZW50LmMKQEAgLTQwLDcgKzQwLDcgQEAgdm9pZCBhcmNoX2RtYV9wcmVwX2NvaGVyZW50
KHN0cnVjdCBwYWdlICpwYWdlLCBzaXplX3Qgc2l6ZSkKICNkZWZpbmUgVU5DQUNIRURfU0hBRE9X
X01BU0sgMAogI2VuZGlmIC8qIENPTkZJR19YSUxJTlhfVU5DQUNIRURfU0hBRE9XICovCiAKLXZv
aWQgKnVuY2FjaGVkX2tlcm5lbF9hZGRyZXNzKHZvaWQgKnB0cikKK3ZvaWQgKmFyY2hfZG1hX3Nl
dF91bmNhY2hlZCh2b2lkICpwdHIsIHNpemVfdCBzaXplKQogewogCXVuc2lnbmVkIGxvbmcgYWRk
ciA9ICh1bnNpZ25lZCBsb25nKXB0cjsKIApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL0tjb25maWcg
Yi9hcmNoL21pcHMvS2NvbmZpZwppbmRleCA3OTdkN2YxYWQ1ZmUuLjQ4OTE4NWRiNTAxZSAxMDA2
NDQKLS0tIGEvYXJjaC9taXBzL0tjb25maWcKKysrIGIvYXJjaC9taXBzL0tjb25maWcKQEAgLTEx
ODcsOCArMTE4Nyw5IEBAIGNvbmZpZyBETUFfTk9OQ09IRVJFTlQKIAkjIHNpZ25pZmljYW50IGFk
dmFudGFnZXMuCiAJIwogCXNlbGVjdCBBUkNIX0hBU19ETUFfV1JJVEVfQ09NQklORQorCXNlbGVj
dCBBUkNIX0hBU19ETUFfUFJFUF9DT0hFUkVOVAogCXNlbGVjdCBBUkNIX0hBU19TWU5DX0RNQV9G
T1JfREVWSUNFCi0Jc2VsZWN0IEFSQ0hfSEFTX1VOQ0FDSEVEX1NFR01FTlQKKwlzZWxlY3QgQVJD
SF9IQVNfRE1BX1NFVF9VTkNBQ0hFRAogCXNlbGVjdCBETUFfTk9OQ09IRVJFTlRfTU1BUAogCXNl
bGVjdCBETUFfTk9OQ09IRVJFTlRfQ0FDSEVfU1lOQwogCXNlbGVjdCBORUVEX0RNQV9NQVBfU1RB
VEUKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9tbS9kbWEtbm9uY29oZXJlbnQuYyBiL2FyY2gvbWlw
cy9tbS9kbWEtbm9uY29oZXJlbnQuYwppbmRleCA3N2RjZTI4YWQwYTAuLmZjZWE5MmQ5NWQ4NiAx
MDA2NDQKLS0tIGEvYXJjaC9taXBzL21tL2RtYS1ub25jb2hlcmVudC5jCisrKyBiL2FyY2gvbWlw
cy9tbS9kbWEtbm9uY29oZXJlbnQuYwpAQCAtNDksNyArNDksNyBAQCB2b2lkIGFyY2hfZG1hX3By
ZXBfY29oZXJlbnQoc3RydWN0IHBhZ2UgKnBhZ2UsIHNpemVfdCBzaXplKQogCWRtYV9jYWNoZV93
YmFja19pbnYoKHVuc2lnbmVkIGxvbmcpcGFnZV9hZGRyZXNzKHBhZ2UpLCBzaXplKTsKIH0KIAot
dm9pZCAqdW5jYWNoZWRfa2VybmVsX2FkZHJlc3Modm9pZCAqYWRkcikKK3ZvaWQgKmFyY2hfZG1h
X3NldF91bmNhY2hlZCh2b2lkICphZGRyLCBzaXplX3Qgc2l6ZSkKIHsKIAlyZXR1cm4gKHZvaWQg
KikoX19wYShhZGRyKSArIFVOQ0FDX0JBU0UpOwogfQpkaWZmIC0tZ2l0IGEvYXJjaC9uaW9zMi9L
Y29uZmlnIGIvYXJjaC9uaW9zMi9LY29uZmlnCmluZGV4IDQ0YjVkYTM3ZThiZC4uMmZjNGVkMjEw
YjVmIDEwMDY0NAotLS0gYS9hcmNoL25pb3MyL0tjb25maWcKKysrIGIvYXJjaC9uaW9zMi9LY29u
ZmlnCkBAIC0yLDkgKzIsMTAgQEAKIGNvbmZpZyBOSU9TMgogCWRlZl9ib29sIHkKIAlzZWxlY3Qg
QVJDSF8zMkJJVF9PRkZfVAorCXNlbGVjdCBBUkNIX0hBU19ETUFfUFJFUF9DT0hFUkVOVAogCXNl
bGVjdCBBUkNIX0hBU19TWU5DX0RNQV9GT1JfQ1BVCiAJc2VsZWN0IEFSQ0hfSEFTX1NZTkNfRE1B
X0ZPUl9ERVZJQ0UKLQlzZWxlY3QgQVJDSF9IQVNfVU5DQUNIRURfU0VHTUVOVAorCXNlbGVjdCBB
UkNIX0hBU19ETUFfU0VUX1VOQ0FDSEVECiAJc2VsZWN0IEFSQ0hfTk9fU1dBUAogCXNlbGVjdCBU
SU1FUl9PRgogCXNlbGVjdCBHRU5FUklDX0FUT01JQzY0CmRpZmYgLS1naXQgYS9hcmNoL25pb3My
L21tL2RtYS1tYXBwaW5nLmMgYi9hcmNoL25pb3MyL21tL2RtYS1tYXBwaW5nLmMKaW5kZXggZjMw
ZjI3NDkyNTdjLi5mZDg4N2Q1ZjNmOWEgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIvbW0vZG1hLW1h
cHBpbmcuYworKysgYi9hcmNoL25pb3MyL21tL2RtYS1tYXBwaW5nLmMKQEAgLTY3LDcgKzY3LDcg
QEAgdm9pZCBhcmNoX2RtYV9wcmVwX2NvaGVyZW50KHN0cnVjdCBwYWdlICpwYWdlLCBzaXplX3Qg
c2l6ZSkKIAlmbHVzaF9kY2FjaGVfcmFuZ2Uoc3RhcnQsIHN0YXJ0ICsgc2l6ZSk7CiB9CiAKLXZv
aWQgKnVuY2FjaGVkX2tlcm5lbF9hZGRyZXNzKHZvaWQgKnB0cikKK3ZvaWQgKmFyY2hfZG1hX3Nl
dF91bmNhY2hlZCh2b2lkICpwdHIsIHNpemVfdCBzaXplKQogewogCXVuc2lnbmVkIGxvbmcgYWRk
ciA9ICh1bnNpZ25lZCBsb25nKXB0cjsKIApkaWZmIC0tZ2l0IGEvYXJjaC94dGVuc2EvS2NvbmZp
ZyBiL2FyY2gveHRlbnNhL0tjb25maWcKaW5kZXggMzJlZTc1OWEzZmRhLi5kZTIyOTQyNGI2NTkg
MTAwNjQ0Ci0tLSBhL2FyY2gveHRlbnNhL0tjb25maWcKKysrIGIvYXJjaC94dGVuc2EvS2NvbmZp
ZwpAQCAtNiw3ICs2LDcgQEAgY29uZmlnIFhURU5TQQogCXNlbGVjdCBBUkNIX0hBU19ETUFfUFJF
UF9DT0hFUkVOVCBpZiBNTVUKIAlzZWxlY3QgQVJDSF9IQVNfU1lOQ19ETUFfRk9SX0NQVSBpZiBN
TVUKIAlzZWxlY3QgQVJDSF9IQVNfU1lOQ19ETUFfRk9SX0RFVklDRSBpZiBNTVUKLQlzZWxlY3Qg
QVJDSF9IQVNfVU5DQUNIRURfU0VHTUVOVCBpZiBNTVUKKwlzZWxlY3QgQVJDSF9IQVNfRE1BX1NF
VF9VTkNBQ0hFRCBpZiBNTVUKIAlzZWxlY3QgQVJDSF9VU0VfUVVFVUVEX1JXTE9DS1MKIAlzZWxl
Y3QgQVJDSF9VU0VfUVVFVUVEX1NQSU5MT0NLUwogCXNlbGVjdCBBUkNIX1dBTlRfRlJBTUVfUE9J
TlRFUlMKZGlmZiAtLWdpdCBhL2FyY2gveHRlbnNhL2tlcm5lbC9wY2ktZG1hLmMgYi9hcmNoL3h0
ZW5zYS9rZXJuZWwvcGNpLWRtYS5jCmluZGV4IDZhNjg1NTQ1ZDVjOS4uMTdjNDM4NGY4NDk1IDEw
MDY0NAotLS0gYS9hcmNoL3h0ZW5zYS9rZXJuZWwvcGNpLWRtYS5jCisrKyBiL2FyY2gveHRlbnNh
L2tlcm5lbC9wY2ktZG1hLmMKQEAgLTkyLDcgKzkyLDcgQEAgdm9pZCBhcmNoX2RtYV9wcmVwX2Nv
aGVyZW50KHN0cnVjdCBwYWdlICpwYWdlLCBzaXplX3Qgc2l6ZSkKICAqIGNvaGVyZW50IERNQSBt
ZW1vcnkgb3BlcmF0aW9ucyB3aGVuIENPTkZJR19NTVUgaXMgbm90IGVuYWJsZWQuCiAgKi8KICNp
ZmRlZiBDT05GSUdfTU1VCi12b2lkICp1bmNhY2hlZF9rZXJuZWxfYWRkcmVzcyh2b2lkICpwKQor
dm9pZCAqYXJjaF9kbWFfc2V0X3VuY2FjaGVkKHZvaWQgKnAsIHNpemVfdCBzaXplKQogewogCXJl
dHVybiBwICsgWENIQUxfS1NFR19CWVBBU1NfVkFERFIgLSBYQ0hBTF9LU0VHX0NBQ0hFRF9WQURE
UjsKIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgvZG1hLW5vbmNvaGVyZW50LmggYi9pbmNs
dWRlL2xpbnV4L2RtYS1ub25jb2hlcmVudC5oCmluZGV4IGI2YjcyZTE5YjBjZC4uMWE0MDM5NTA2
NjczIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2RtYS1ub25jb2hlcmVudC5oCisrKyBiL2lu
Y2x1ZGUvbGludXgvZG1hLW5vbmNvaGVyZW50LmgKQEAgLTEwOCw2ICsxMDgsNiBAQCBzdGF0aWMg
aW5saW5lIHZvaWQgYXJjaF9kbWFfcHJlcF9jb2hlcmVudChzdHJ1Y3QgcGFnZSAqcGFnZSwgc2l6
ZV90IHNpemUpCiB9CiAjZW5kaWYgLyogQ09ORklHX0FSQ0hfSEFTX0RNQV9QUkVQX0NPSEVSRU5U
ICovCiAKLXZvaWQgKnVuY2FjaGVkX2tlcm5lbF9hZGRyZXNzKHZvaWQgKmFkZHIpOwordm9pZCAq
YXJjaF9kbWFfc2V0X3VuY2FjaGVkKHZvaWQgKmFkZHIsIHNpemVfdCBzaXplKTsKIAogI2VuZGlm
IC8qIF9MSU5VWF9ETUFfTk9OQ09IRVJFTlRfSCAqLwpkaWZmIC0tZ2l0IGEva2VybmVsL2RtYS9k
aXJlY3QuYyBiL2tlcm5lbC9kbWEvZGlyZWN0LmMKaW5kZXggOWRmY2M3YmU0OTAzLi5mMDFhODE5
MWZkNTkgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9kbWEvZGlyZWN0LmMKKysrIGIva2VybmVsL2RtYS9k
aXJlY3QuYwpAQCAtMTgwLDEwICsxODAsMTIgQEAgdm9pZCAqZG1hX2RpcmVjdF9hbGxvY19wYWdl
cyhzdHJ1Y3QgZGV2aWNlICpkZXYsIHNpemVfdCBzaXplLAogCiAJbWVtc2V0KHJldCwgMCwgc2l6
ZSk7CiAKLQlpZiAoSVNfRU5BQkxFRChDT05GSUdfQVJDSF9IQVNfVU5DQUNIRURfU0VHTUVOVCkg
JiYKKwlpZiAoSVNfRU5BQkxFRChDT05GSUdfQVJDSF9IQVNfRE1BX1NFVF9VTkNBQ0hFRCkgJiYK
IAkgICAgZG1hX2FsbG9jX25lZWRfdW5jYWNoZWQoZGV2LCBhdHRycykpIHsKIAkJYXJjaF9kbWFf
cHJlcF9jb2hlcmVudChwYWdlLCBzaXplKTsKLQkJcmV0ID0gdW5jYWNoZWRfa2VybmVsX2FkZHJl
c3MocmV0KTsKKwkJcmV0ID0gYXJjaF9kbWFfc2V0X3VuY2FjaGVkKHJldCwgc2l6ZSk7CisJCWlm
IChJU19FUlIocmV0KSkKKwkJCWdvdG8gb3V0X2ZyZWVfcGFnZXM7CiAJfQogZG9uZToKIAlpZiAo
Zm9yY2VfZG1hX3VuZW5jcnlwdGVkKGRldikpCkBAIC0yMjQsNyArMjI2LDcgQEAgdm9pZCBkbWFf
ZGlyZWN0X2ZyZWVfcGFnZXMoc3RydWN0IGRldmljZSAqZGV2LCBzaXplX3Qgc2l6ZSwgdm9pZCAq
Y3B1X2FkZHIsCiB2b2lkICpkbWFfZGlyZWN0X2FsbG9jKHN0cnVjdCBkZXZpY2UgKmRldiwgc2l6
ZV90IHNpemUsCiAJCWRtYV9hZGRyX3QgKmRtYV9oYW5kbGUsIGdmcF90IGdmcCwgdW5zaWduZWQg
bG9uZyBhdHRycykKIHsKLQlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0FSQ0hfSEFTX1VOQ0FDSEVE
X1NFR01FTlQpICYmCisJaWYgKCFJU19FTkFCTEVEKENPTkZJR19BUkNIX0hBU19ETUFfU0VUX1VO
Q0FDSEVEKSAmJgogCSAgICAhSVNfRU5BQkxFRChDT05GSUdfRE1BX0RJUkVDVF9SRU1BUCkgJiYK
IAkgICAgZG1hX2FsbG9jX25lZWRfdW5jYWNoZWQoZGV2LCBhdHRycykpCiAJCXJldHVybiBhcmNo
X2RtYV9hbGxvYyhkZXYsIHNpemUsIGRtYV9oYW5kbGUsIGdmcCwgYXR0cnMpOwpAQCAtMjM0LDcg
KzIzNiw3IEBAIHZvaWQgKmRtYV9kaXJlY3RfYWxsb2Moc3RydWN0IGRldmljZSAqZGV2LCBzaXpl
X3Qgc2l6ZSwKIHZvaWQgZG1hX2RpcmVjdF9mcmVlKHN0cnVjdCBkZXZpY2UgKmRldiwgc2l6ZV90
IHNpemUsCiAJCXZvaWQgKmNwdV9hZGRyLCBkbWFfYWRkcl90IGRtYV9hZGRyLCB1bnNpZ25lZCBs
b25nIGF0dHJzKQogewotCWlmICghSVNfRU5BQkxFRChDT05GSUdfQVJDSF9IQVNfVU5DQUNIRURf
U0VHTUVOVCkgJiYKKwlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0FSQ0hfSEFTX0RNQV9TRVRfVU5D
QUNIRUQpICYmCiAJICAgICFJU19FTkFCTEVEKENPTkZJR19ETUFfRElSRUNUX1JFTUFQKSAmJgog
CSAgICBkbWFfYWxsb2NfbmVlZF91bmNhY2hlZChkZXYsIGF0dHJzKSkKIAkJYXJjaF9kbWFfZnJl
ZShkZXYsIHNpemUsIGNwdV9hZGRyLCBkbWFfYWRkciwgYXR0cnMpOwotLSAKMi4yNC4xCgpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWls
aW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJy
ZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
