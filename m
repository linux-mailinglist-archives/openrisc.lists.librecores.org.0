Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 3D5984B5678
	for <lists+openrisc@lfdr.de>; Mon, 14 Feb 2022 17:36:46 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 21B9824807;
	Mon, 14 Feb 2022 17:36:46 +0100 (CET)
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
 by mail.librecores.org (Postfix) with ESMTPS id DD0C324800
 for <openrisc@lists.librecores.org>; Mon, 14 Feb 2022 17:36:43 +0100 (CET)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by dfw.source.kernel.org (Postfix) with ESMTPS id C0FC4614E8;
 Mon, 14 Feb 2022 16:36:42 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 6BC36C340EF;
 Mon, 14 Feb 2022 16:36:32 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1644856602;
 bh=reX3vVg+fu1kjAfrF+7GPz/swHfDQzZQ+k3OND5IY/w=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=uHdbggh11BS3osb40rsaIx+cXAkHVb2R0IuywaHPk8G/3hyIBrFrNboxJqken5wPd
 tuy1saO+tDqDe2v8W9Kr1/Y65+KLtFoiEO1CIQJH7HqQSTRqwZDHIUU87Df0TDMYAh
 fmpJGSxKQW2ffoxbQW5MEi6rF5DLBeke/TtNycsBXDRAAeIYwg6XaCmWRuaMiY+xCg
 EkVms+SYJhAhI0w8CnMZNsH4zhsm9cvQ6wjLyFiHRdEvM6xrye5arI+O8NM+hfceJA
 1KW7cdAANdnxQ+1Ff9Mi1pkGeTrHHSTQTPe0iKq5znH+H6pJJcAzmWw1/TDhlgeSrb
 eikdMJEUKLknA==
From: Arnd Bergmann <arnd@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>,
 Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
 linux-mm@kvack.org, linux-api@vger.kernel.org, arnd@arndb.de,
 linux-kernel@vger.kernel.org
Date: Mon, 14 Feb 2022 17:34:43 +0100
Message-Id: <20220214163452.1568807-6-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
In-Reply-To: <20220214163452.1568807-1-arnd@kernel.org>
References: <20220214163452.1568807-1-arnd@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 05/14] uaccess: add generic __{get,
 put}_kernel_nofault
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: mark.rutland@arm.com, dalias@libc.org, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, peterz@infradead.org, jcmvbkbc@gmail.com,
 guoren@kernel.org, sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, will@kernel.org, ardb@kernel.org,
 linux-s390@vger.kernel.org, bcain@codeaurora.org, mpe@ellerman.id.au,
 deller@gmx.de, x86@kernel.org, linux@armlinux.org.uk,
 linux-csky@vger.kernel.org, mingo@redhat.com,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 hca@linux.ibm.com, linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 green.hu@gmail.com, linux-arm-kernel@lists.infradead.org, monstr@monstr.eu,
 tsbogend@alpha.franken.de, linux-parisc@vger.kernel.org, nickhu@andestech.com,
 linux-mips@vger.kernel.org, dinguyen@kernel.org, ebiederm@xmission.com,
 richard@nod.at, akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org,
 davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KCkFsbCBhcmNoaXRlY3R1cmVzIHRo
YXQgZG9uJ3QgcHJvdmlkZSBfX3tnZXQscHV0fV9rZXJuZWxfbm9mYXVsdCgpIHlldApjYW4gaW1w
bGVtZW50IHRoaXMgb24gdG9wIG9mIF9fe2dldCxwdXR9X3VzZXIuCgpBZGQgYSBnZW5lcmljIHZl
cnNpb24gdGhhdCBsZXRzIGV2ZXJ5dGhpbmcgdXNlIHRoZSBub3JtYWwKY29weV97ZnJvbSx0b31f
a2VybmVsX25vZmF1bHQoKSBjb2RlIGJhc2VkIG9uIHRoZXNlLCByZW1vdmluZyB0aGUgbGFzdAp1
c2Ugb2YgZ2V0X2ZzKCkvc2V0X2ZzKCkgZnJvbSBhcmNoaXRlY3R1cmUtaW5kZXBlbmRlbnQgY29k
ZS4KClNpZ25lZC1vZmYtYnk6IEFybmQgQmVyZ21hbm4gPGFybmRAYXJuZGIuZGU+Ci0tLQogYXJj
aC9hcm0vaW5jbHVkZS9hc20vdWFjY2Vzcy5oICAgICAgfCAgIDIgLQogYXJjaC9hcm02NC9pbmNs
dWRlL2FzbS91YWNjZXNzLmggICAgfCAgIDIgLQogYXJjaC9tNjhrL2luY2x1ZGUvYXNtL3VhY2Nl
c3MuaCAgICAgfCAgIDIgLQogYXJjaC9taXBzL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCAgICAgfCAg
IDIgLQogYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vdWFjY2Vzcy5oICAgfCAgIDEgLQogYXJjaC9w
b3dlcnBjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCAgfCAgIDIgLQogYXJjaC9yaXNjdi9pbmNsdWRl
L2FzbS91YWNjZXNzLmggICAgfCAgIDIgLQogYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3VhY2Nlc3Mu
aCAgICAgfCAgIDIgLQogYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91YWNjZXNzXzY0LmggfCAgIDIg
LQogYXJjaC91bS9pbmNsdWRlL2FzbS91YWNjZXNzLmggICAgICAgfCAgIDIgLQogYXJjaC94ODYv
aW5jbHVkZS9hc20vdWFjY2Vzcy5oICAgICAgfCAgIDIgLQogaW5jbHVkZS9hc20tZ2VuZXJpYy91
YWNjZXNzLmggICAgICAgfCAgIDIgLQogaW5jbHVkZS9saW51eC91YWNjZXNzLmggICAgICAgICAg
ICAgfCAgMTkgKysrKysKIG1tL21hY2Nlc3MuYyAgICAgICAgICAgICAgICAgICAgICAgIHwgMTA4
IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIDE0IGZpbGVzIGNoYW5nZWQsIDE5IGluc2Vy
dGlvbnMoKyksIDEzMSBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL2FybS9pbmNsdWRl
L2FzbS91YWNjZXNzLmggYi9hcmNoL2FybS9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXggMzJk
YmZkODFmNDJhLi5kMjBkNzhjMzRiOTQgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtL2luY2x1ZGUvYXNt
L3VhY2Nlc3MuaAorKysgYi9hcmNoL2FybS9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAgLTQ3Niw4
ICs0NzYsNiBAQCBkbyB7CQkJCQkJCQkJXAogCTogInIiICh4KSwgImkiICgtRUZBVUxUKQkJCQlc
CiAJOiAiY2MiKQogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUCi0KICNkZWZpbmUg
X19nZXRfa2VybmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGVycl9sYWJlbCkJCQlcCiBkbyB7
CQkJCQkJCQkJXAogCWNvbnN0IHR5cGUgKl9fcGtfcHRyID0gKHNyYyk7CQkJCQlcCmRpZmYgLS1n
aXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gvYXJtNjQvaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oCmluZGV4IDNhNWZmNWUyMDU4Ni4uMmUyMDg3OWZlM2NmIDEwMDY0NAot
LS0gYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAorKysgYi9hcmNoL2FybTY0L2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAtMjYsOCArMjYsNiBAQAogI2luY2x1ZGUgPGFzbS9tZW1v
cnkuaD4KICNpbmNsdWRlIDxhc20vZXh0YWJsZS5oPgogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5F
TF9OT0ZBVUxUCi0KIC8qCiAgKiBUZXN0IHdoZXRoZXIgYSBibG9jayBvZiBtZW1vcnkgaXMgYSB2
YWxpZCB1c2VyIHNwYWNlIGFkZHJlc3MuCiAgKiBSZXR1cm5zIDEgaWYgdGhlIHJhbmdlIGlzIHZh
bGlkLCAwIG90aGVyd2lzZS4KZGlmZiAtLWdpdCBhL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS91YWNj
ZXNzLmggYi9hcmNoL202OGsvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCmluZGV4IGJhNjcwNTIzODg1
Yy4uNzk2MTdjMGIyZjkxIDEwMDY0NAotLS0gYS9hcmNoL202OGsvaW5jbHVkZS9hc20vdWFjY2Vz
cy5oCisrKyBiL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAgLTM5MCw4ICszOTAs
NiBAQCByYXdfY29weV90b191c2VyKHZvaWQgX191c2VyICp0bywgY29uc3Qgdm9pZCAqZnJvbSwg
dW5zaWduZWQgbG9uZyBuKQogI2RlZmluZSBJTkxJTkVfQ09QWV9GUk9NX1VTRVIKICNkZWZpbmUg
SU5MSU5FX0NPUFlfVE9fVVNFUgogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUCi0K
ICNkZWZpbmUgX19nZXRfa2VybmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGVycl9sYWJlbCkJ
CQlcCiBkbyB7CQkJCQkJCQkJXAogCXR5cGUgKl9fZ2tfZHN0ID0gKHR5cGUgKikoZHN0KTsJCQkJ
CVwKZGlmZiAtLWdpdCBhL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL21p
cHMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCmluZGV4IGY4Zjc0ZjlmNTg4My4uZGI5YThlMDAyYjYy
IDEwMDY0NAotLS0gYS9hcmNoL21pcHMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gv
bWlwcy9pbmNsdWRlL2FzbS91YWNjZXNzLmgKQEAgLTI5Niw4ICsyOTYsNiBAQCBzdHJ1Y3QgX19s
YXJnZV9zdHJ1Y3QgeyB1bnNpZ25lZCBsb25nIGJ1ZlsxMDBdOyB9OwogCSh2YWwpID0gX19ndV90
bXAudDsJCQkJCQlcCiB9CiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQogI2Rl
ZmluZSBfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwK
IGRvIHsJCQkJCQkJCQlcCiAJaW50IF9fZ3VfZXJyOwkJCQkJCQlcCmRpZmYgLS1naXQgYS9hcmNo
L3BhcmlzYy9pbmNsdWRlL2FzbS91YWNjZXNzLmggYi9hcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS91
YWNjZXNzLmgKaW5kZXggZWJmOGE4NDViMDE3Li4wOTI1YmJkNmRiNjcgMTAwNjQ0Ci0tLSBhL2Fy
Y2gvcGFyaXNjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAorKysgYi9hcmNoL3BhcmlzYy9pbmNsdWRl
L2FzbS91YWNjZXNzLmgKQEAgLTk1LDcgKzk1LDYgQEAgc3RydWN0IGV4Y2VwdGlvbl90YWJsZV9l
bnRyeSB7CiAJKHZhbCkgPSAoX19mb3JjZSBfX3R5cGVvZl9fKCoocHRyKSkpIF9fZ3VfdmFsOwlc
CiB9CiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKICNkZWZpbmUgX19nZXRfa2Vy
bmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGVycl9sYWJlbCkJXAogewkJCQkJCQlcCiAJdHlw
ZSBfX3o7CQkJCQlcCmRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vdWFjY2Vz
cy5oIGIvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRleCA2MzMxNjEwMDA4
MGMuLmEwMDMyYzJlNzU1MCAxMDA2NDQKLS0tIGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3Vh
Y2Nlc3MuaAorKysgYi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC00Njcs
OCArNDY3LDYgQEAgZG8gewkJCQkJCQkJCVwKIAkJdW5zYWZlX3B1dF91c2VyKCoodTgqKShfc3Jj
ICsgX2kpLCAodTggX191c2VyICopKF9kc3QgKyBfaSksIGUpOyBcCiB9IHdoaWxlICgwKQogCi0j
ZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUCi0KICNkZWZpbmUgX19nZXRfa2VybmVsX25v
ZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGVycl9sYWJlbCkJCQlcCiAJX19nZXRfdXNlcl9zaXplX2dv
dG8oKigodHlwZSAqKShkc3QpKSwJCQkJXAogCQkoX19mb3JjZSB0eXBlIF9fdXNlciAqKShzcmMp
LCBzaXplb2YodHlwZSksIGVycl9sYWJlbCkKZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3YvaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXgg
YzcwMWE1ZTU3YTJiLi40NDA3YjllNDhkMmMgMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3YvaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oCisrKyBiL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBA
IC0zNDYsOCArMzQ2LDYgQEAgdW5zaWduZWQgbG9uZyBfX211c3RfY2hlY2sgY2xlYXJfdXNlcih2
b2lkIF9fdXNlciAqdG8sIHVuc2lnbmVkIGxvbmcgbikKIAkJX19jbGVhcl91c2VyKHRvLCBuKSA6
IG47CiB9CiAKLSNkZWZpbmUgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQogI2RlZmluZSBfX2dl
dF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwKIGRvIHsJCQkJ
CQkJCQlcCiAJbG9uZyBfX2tyX2VycjsJCQkJCQkJXApkaWZmIC0tZ2l0IGEvYXJjaC9zMzkwL2lu
Y2x1ZGUvYXNtL3VhY2Nlc3MuaCBiL2FyY2gvczM5MC9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5k
ZXggZDc0ZTI2YjQ4NjA0Li4yOTMzMmVkZjQ2ZjAgMTAwNjQ0Ci0tLSBhL2FyY2gvczM5MC9pbmNs
dWRlL2FzbS91YWNjZXNzLmgKKysrIGIvYXJjaC9zMzkwL2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApA
QCAtMjgyLDggKzI4Miw2IEBAIHN0YXRpYyBpbmxpbmUgdW5zaWduZWQgbG9uZyBfX211c3RfY2hl
Y2sgY2xlYXJfdXNlcih2b2lkIF9fdXNlciAqdG8sIHVuc2lnbmVkIGxvCiBpbnQgY29weV90b191
c2VyX3JlYWwodm9pZCBfX3VzZXIgKmRlc3QsIHZvaWQgKnNyYywgdW5zaWduZWQgbG9uZyBjb3Vu
dCk7CiB2b2lkICpzMzkwX2tlcm5lbF93cml0ZSh2b2lkICpkc3QsIGNvbnN0IHZvaWQgKnNyYywg
c2l6ZV90IHNpemUpOwogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUCi0KIGludCBf
X25vcmV0dXJuIF9fcHV0X2tlcm5lbF9iYWQodm9pZCk7CiAKICNkZWZpbmUgX19wdXRfa2VybmVs
X2FzbSh2YWwsIHRvLCBpbnNuKQkJCQkJXApkaWZmIC0tZ2l0IGEvYXJjaC9zcGFyYy9pbmNsdWRl
L2FzbS91YWNjZXNzXzY0LmggYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3VhY2Nlc3NfNjQuaApp
bmRleCBiMjgzNzk4MzE1YjEuLjVjMTJmYjQ2YmM2MSAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9p
bmNsdWRlL2FzbS91YWNjZXNzXzY0LmgKKysrIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91YWNj
ZXNzXzY0LmgKQEAgLTIxMCw4ICsyMTAsNiBAQCBfX2FzbV9fIF9fdm9sYXRpbGVfXygJCQkJCQkJ
XAogCSAgICAgICA6ICI9ciIgKHJldCksICI9ciIgKHgpIDogInIiIChfX20oYWRkcikpLAkJXAog
CQkgImkiICgtRUZBVUxUKSkKIAotI2RlZmluZSBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVAotCiAj
ZGVmaW5lIF9fZ2V0X3VzZXJfbm9jaGVjayhkYXRhLCBhZGRyLCBzaXplLCB0eXBlKSAoewkJCSAg
ICAgXAogCXJlZ2lzdGVyIGludCBfX2d1X3JldDsJCQkJCQkgICAgIFwKIAlyZWdpc3RlciB1bnNp
Z25lZCBsb25nIF9fZ3VfdmFsOwkJCQkgICAgIFwKZGlmZiAtLWdpdCBhL2FyY2gvdW0vaW5jbHVk
ZS9hc20vdWFjY2Vzcy5oIGIvYXJjaC91bS9pbmNsdWRlL2FzbS91YWNjZXNzLmgKaW5kZXggMTdk
MThjZmQ4MmE1Li4xZWNmYzk2YmNjNTAgMTAwNjQ0Ci0tLSBhL2FyY2gvdW0vaW5jbHVkZS9hc20v
dWFjY2Vzcy5oCisrKyBiL2FyY2gvdW0vaW5jbHVkZS9hc20vdWFjY2Vzcy5oCkBAIC00NCw4ICs0
NCw2IEBAIHN0YXRpYyBpbmxpbmUgaW50IF9fYWNjZXNzX29rKHVuc2lnbmVkIGxvbmcgYWRkciwg
dW5zaWduZWQgbG9uZyBzaXplKQogfQogCiAvKiBubyBwYWdlZmF1bHRzIGZvciBrZXJuZWwgYWRk
cmVzc2VzIGluIHVtICovCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5FTF9OT0ZBVUxUIDEKLQogI2Rl
ZmluZSBfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwK
IGRvIHsJCQkJCQkJCQlcCiAJKigodHlwZSAqKWRzdCkgPSBnZXRfdW5hbGlnbmVkKCh0eXBlICop
KHNyYykpOwkJCVwKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaCBi
L2FyY2gveDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaAppbmRleCA2OTU2YTYzMjkxYjYuLmM2ZDlk
YzQyNzI0ZCAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20vdWFjY2Vzcy5oCisrKyBi
L2FyY2gveDg2L2luY2x1ZGUvYXNtL3VhY2Nlc3MuaApAQCAtNTEwLDggKzUxMCw2IEBAIGRvIHsJ
CQkJCQkJCQlcCiAJdW5zYWZlX2NvcHlfbG9vcChfX3VjdV9kc3QsIF9fdWN1X3NyYywgX191Y3Vf
bGVuLCB1OCwgbGFiZWwpOwlcCiB9IHdoaWxlICgwKQogCi0jZGVmaW5lIEhBVkVfR0VUX0tFUk5F
TF9OT0ZBVUxUCi0KICNpZmRlZiBDT05GSUdfQ0NfSEFTX0FTTV9HT1RPX09VVFBVVAogI2RlZmlu
ZSBfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNyYywgdHlwZSwgZXJyX2xhYmVsKQkJCVwKIAlf
X2dldF91c2VyX3NpemUoKigodHlwZSAqKShkc3QpKSwgKF9fZm9yY2UgdHlwZSBfX3VzZXIgKiko
c3JjKSwJXApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9hc20tZ2VuZXJpYy91YWNjZXNzLmggYi9pbmNs
dWRlL2FzbS1nZW5lcmljL3VhY2Nlc3MuaAppbmRleCAxMGZmYThiNWMxMTcuLjA4NzBmYTExYTdj
NSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9hc20tZ2VuZXJpYy91YWNjZXNzLmgKKysrIGIvaW5jbHVk
ZS9hc20tZ2VuZXJpYy91YWNjZXNzLmgKQEAgLTc3LDggKzc3LDYgQEAgZG8gewkJCQkJCQkJCVwK
IAkJZ290byBlcnJfbGFiZWw7CQkJCQkJXAogfSB3aGlsZSAoMCkKIAotI2RlZmluZSBIQVZFX0dF
VF9LRVJORUxfTk9GQVVMVCAxCi0KIHN0YXRpYyBpbmxpbmUgX19tdXN0X2NoZWNrIHVuc2lnbmVk
IGxvbmcKIHJhd19jb3B5X2Zyb21fdXNlcih2b2lkICp0bywgY29uc3Qgdm9pZCBfX3VzZXIgKiBm
cm9tLCB1bnNpZ25lZCBsb25nIG4pCiB7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3VhY2Nl
c3MuaCBiL2luY2x1ZGUvbGludXgvdWFjY2Vzcy5oCmluZGV4IGFjMDM5NDA4N2Y3ZC4uNjdlOWJj
OTRkYzQwIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3VhY2Nlc3MuaAorKysgYi9pbmNsdWRl
L2xpbnV4L3VhY2Nlc3MuaApAQCAtMzY4LDYgKzM2OCwyNSBAQCBsb25nIHN0cm5jcHlfZnJvbV91
c2VyX25vZmF1bHQoY2hhciAqZHN0LCBjb25zdCB2b2lkIF9fdXNlciAqdW5zYWZlX2FkZHIsCiAJ
CWxvbmcgY291bnQpOwogbG9uZyBzdHJubGVuX3VzZXJfbm9mYXVsdChjb25zdCB2b2lkIF9fdXNl
ciAqdW5zYWZlX2FkZHIsIGxvbmcgY291bnQpOwogCisjaWZuZGVmIF9fZ2V0X2tlcm5lbF9ub2Zh
dWx0CisjZGVmaW5lIF9fZ2V0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0eXBlLCBsYWJlbCkJ
XAorZG8gewkJCQkJCQlcCisJdHlwZSBfX3VzZXIgKnAgPSAodHlwZSBfX2ZvcmNlIF9fdXNlciAq
KShzcmMpOwlcCisJdHlwZSBkYXRhOwkJCQkJXAorCWlmIChfX2dldF91c2VyKGRhdGEsIHApKQkJ
CVwKKwkJZ290byBsYWJlbDsJCQkJXAorCSoodHlwZSAqKWRzdCA9IGRhdGE7CQkJCVwKK30gd2hp
bGUgKDApCisKKyNkZWZpbmUgX19wdXRfa2VybmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGxh
YmVsKQlcCitkbyB7CQkJCQkJCVwKKwl0eXBlIF9fdXNlciAqcCA9ICh0eXBlIF9fZm9yY2UgX191
c2VyICopKGRzdCk7CVwKKwl0eXBlIGRhdGEgPSAqKHR5cGUgKilzcmM7CQkJXAorCWlmIChfX3B1
dF91c2VyKGRhdGEsIHApKQkJCVwKKwkJZ290byBsYWJlbDsJCQkJXAorfSB3aGlsZSAoMCkKKyNl
bmRpZgorCiAvKioKICAqIGdldF9rZXJuZWxfbm9mYXVsdCgpOiBzYWZlbHkgYXR0ZW1wdCB0byBy
ZWFkIGZyb20gYSBsb2NhdGlvbgogICogQHZhbDogcmVhZCBpbnRvIHRoaXMgdmFyaWFibGUKZGlm
ZiAtLWdpdCBhL21tL21hY2Nlc3MuYyBiL21tL21hY2Nlc3MuYwppbmRleCBkM2YxYTFmMGIxYzEu
LmNiZDFiMzk1OWFmMiAxMDA2NDQKLS0tIGEvbW0vbWFjY2Vzcy5jCisrKyBiL21tL21hY2Nlc3Mu
YwpAQCAtMTIsOCArMTIsNiBAQCBib29sIF9fd2VhayBjb3B5X2Zyb21fa2VybmVsX25vZmF1bHRf
YWxsb3dlZChjb25zdCB2b2lkICp1bnNhZmVfc3JjLAogCXJldHVybiB0cnVlOwogfQogCi0jaWZk
ZWYgSEFWRV9HRVRfS0VSTkVMX05PRkFVTFQKLQogI2RlZmluZSBjb3B5X2Zyb21fa2VybmVsX25v
ZmF1bHRfbG9vcChkc3QsIHNyYywgbGVuLCB0eXBlLCBlcnJfbGFiZWwpCVwKIAl3aGlsZSAobGVu
ID49IHNpemVvZih0eXBlKSkgewkJCQkJXAogCQlfX2dldF9rZXJuZWxfbm9mYXVsdChkc3QsIHNy
YywgdHlwZSwgZXJyX2xhYmVsKTsJCVwKQEAgLTEwMiwxMTIgKzEwMCw2IEBAIGxvbmcgc3RybmNw
eV9mcm9tX2tlcm5lbF9ub2ZhdWx0KGNoYXIgKmRzdCwgY29uc3Qgdm9pZCAqdW5zYWZlX2FkZHIs
IGxvbmcgY291bnQpCiAJZHN0Wy0xXSA9ICdcMCc7CiAJcmV0dXJuIC1FRkFVTFQ7CiB9Ci0jZWxz
ZSAvKiBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVCAqLwotLyoqCi0gKiBjb3B5X2Zyb21fa2VybmVs
X25vZmF1bHQoKTogc2FmZWx5IGF0dGVtcHQgdG8gcmVhZCBmcm9tIGtlcm5lbC1zcGFjZQotICog
QGRzdDogcG9pbnRlciB0byB0aGUgYnVmZmVyIHRoYXQgc2hhbGwgdGFrZSB0aGUgZGF0YQotICog
QHNyYzogYWRkcmVzcyB0byByZWFkIGZyb20KLSAqIEBzaXplOiBzaXplIG9mIHRoZSBkYXRhIGNo
dW5rCi0gKgotICogU2FmZWx5IHJlYWQgZnJvbSBrZXJuZWwgYWRkcmVzcyBAc3JjIHRvIHRoZSBi
dWZmZXIgYXQgQGRzdC4gIElmIGEga2VybmVsCi0gKiBmYXVsdCBoYXBwZW5zLCBoYW5kbGUgdGhh
dCBhbmQgcmV0dXJuIC1FRkFVTFQuICBJZiBAc3JjIGlzIG5vdCBhIHZhbGlkIGtlcm5lbAotICog
YWRkcmVzcywgcmV0dXJuIC1FUkFOR0UuCi0gKgotICogV2UgZW5zdXJlIHRoYXQgdGhlIGNvcHlf
ZnJvbV91c2VyIGlzIGV4ZWN1dGVkIGluIGF0b21pYyBjb250ZXh0IHNvIHRoYXQKLSAqIGRvX3Bh
Z2VfZmF1bHQoKSBkb2Vzbid0IGF0dGVtcHQgdG8gdGFrZSBtbWFwX2xvY2suICBUaGlzIG1ha2Vz
Ci0gKiBjb3B5X2Zyb21fa2VybmVsX25vZmF1bHQoKSBzdWl0YWJsZSBmb3IgdXNlIHdpdGhpbiBy
ZWdpb25zIHdoZXJlIHRoZSBjYWxsZXIKLSAqIGFscmVhZHkgaG9sZHMgbW1hcF9sb2NrLCBvciBv
dGhlciBsb2NrcyB3aGljaCBuZXN0IGluc2lkZSBtbWFwX2xvY2suCi0gKi8KLWxvbmcgY29weV9m
cm9tX2tlcm5lbF9ub2ZhdWx0KHZvaWQgKmRzdCwgY29uc3Qgdm9pZCAqc3JjLCBzaXplX3Qgc2l6
ZSkKLXsKLQlsb25nIHJldDsKLQltbV9zZWdtZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7Ci0KLQlp
ZiAoIWNvcHlfZnJvbV9rZXJuZWxfbm9mYXVsdF9hbGxvd2VkKHNyYywgc2l6ZSkpCi0JCXJldHVy
biAtRVJBTkdFOwotCi0Jc2V0X2ZzKEtFUk5FTF9EUyk7Ci0JcGFnZWZhdWx0X2Rpc2FibGUoKTsK
LQlyZXQgPSBfX2NvcHlfZnJvbV91c2VyX2luYXRvbWljKGRzdCwgKF9fZm9yY2UgY29uc3Qgdm9p
ZCBfX3VzZXIgKilzcmMsCi0JCQlzaXplKTsKLQlwYWdlZmF1bHRfZW5hYmxlKCk7Ci0Jc2V0X2Zz
KG9sZF9mcyk7Ci0KLQlpZiAocmV0KQotCQlyZXR1cm4gLUVGQVVMVDsKLQlyZXR1cm4gMDsKLX0K
LUVYUE9SVF9TWU1CT0xfR1BMKGNvcHlfZnJvbV9rZXJuZWxfbm9mYXVsdCk7Ci0KLS8qKgotICog
Y29weV90b19rZXJuZWxfbm9mYXVsdCgpOiBzYWZlbHkgYXR0ZW1wdCB0byB3cml0ZSB0byBhIGxv
Y2F0aW9uCi0gKiBAZHN0OiBhZGRyZXNzIHRvIHdyaXRlIHRvCi0gKiBAc3JjOiBwb2ludGVyIHRv
IHRoZSBkYXRhIHRoYXQgc2hhbGwgYmUgd3JpdHRlbgotICogQHNpemU6IHNpemUgb2YgdGhlIGRh
dGEgY2h1bmsKLSAqCi0gKiBTYWZlbHkgd3JpdGUgdG8gYWRkcmVzcyBAZHN0IGZyb20gdGhlIGJ1
ZmZlciBhdCBAc3JjLiAgSWYgYSBrZXJuZWwgZmF1bHQKLSAqIGhhcHBlbnMsIGhhbmRsZSB0aGF0
IGFuZCByZXR1cm4gLUVGQVVMVC4KLSAqLwotbG9uZyBjb3B5X3RvX2tlcm5lbF9ub2ZhdWx0KHZv
aWQgKmRzdCwgY29uc3Qgdm9pZCAqc3JjLCBzaXplX3Qgc2l6ZSkKLXsKLQlsb25nIHJldDsKLQlt
bV9zZWdtZW50X3Qgb2xkX2ZzID0gZ2V0X2ZzKCk7Ci0KLQlzZXRfZnMoS0VSTkVMX0RTKTsKLQlw
YWdlZmF1bHRfZGlzYWJsZSgpOwotCXJldCA9IF9fY29weV90b191c2VyX2luYXRvbWljKChfX2Zv
cmNlIHZvaWQgX191c2VyICopZHN0LCBzcmMsIHNpemUpOwotCXBhZ2VmYXVsdF9lbmFibGUoKTsK
LQlzZXRfZnMob2xkX2ZzKTsKLQotCWlmIChyZXQpCi0JCXJldHVybiAtRUZBVUxUOwotCXJldHVy
biAwOwotfQotCi0vKioKLSAqIHN0cm5jcHlfZnJvbV9rZXJuZWxfbm9mYXVsdDogLSBDb3B5IGEg
TlVMIHRlcm1pbmF0ZWQgc3RyaW5nIGZyb20gdW5zYWZlCi0gKgkJCQkgYWRkcmVzcy4KLSAqIEBk
c3Q6ICAgRGVzdGluYXRpb24gYWRkcmVzcywgaW4ga2VybmVsIHNwYWNlLiAgVGhpcyBidWZmZXIg
bXVzdCBiZSBhdAotICogICAgICAgICBsZWFzdCBAY291bnQgYnl0ZXMgbG9uZy4KLSAqIEB1bnNh
ZmVfYWRkcjogVW5zYWZlIGFkZHJlc3MuCi0gKiBAY291bnQ6IE1heGltdW0gbnVtYmVyIG9mIGJ5
dGVzIHRvIGNvcHksIGluY2x1ZGluZyB0aGUgdHJhaWxpbmcgTlVMLgotICoKLSAqIENvcGllcyBh
IE5VTC10ZXJtaW5hdGVkIHN0cmluZyBmcm9tIHVuc2FmZSBhZGRyZXNzIHRvIGtlcm5lbCBidWZm
ZXIuCi0gKgotICogT24gc3VjY2VzcywgcmV0dXJucyB0aGUgbGVuZ3RoIG9mIHRoZSBzdHJpbmcg
SU5DTFVESU5HIHRoZSB0cmFpbGluZyBOVUwuCi0gKgotICogSWYgYWNjZXNzIGZhaWxzLCByZXR1
cm5zIC1FRkFVTFQgKHNvbWUgZGF0YSBtYXkgaGF2ZSBiZWVuIGNvcGllZCBhbmQgdGhlCi0gKiB0
cmFpbGluZyBOVUwgYWRkZWQpLiAgSWYgQHVuc2FmZV9hZGRyIGlzIG5vdCBhIHZhbGlkIGtlcm5l
bCBhZGRyZXNzLCByZXR1cm4KLSAqIC1FUkFOR0UuCi0gKgotICogSWYgQGNvdW50IGlzIHNtYWxs
ZXIgdGhhbiB0aGUgbGVuZ3RoIG9mIHRoZSBzdHJpbmcsIGNvcGllcyBAY291bnQtMSBieXRlcywK
LSAqIHNldHMgdGhlIGxhc3QgYnl0ZSBvZiBAZHN0IGJ1ZmZlciB0byBOVUwgYW5kIHJldHVybnMg
QGNvdW50LgotICovCi1sb25nIHN0cm5jcHlfZnJvbV9rZXJuZWxfbm9mYXVsdChjaGFyICpkc3Qs
IGNvbnN0IHZvaWQgKnVuc2FmZV9hZGRyLCBsb25nIGNvdW50KQotewotCW1tX3NlZ21lbnRfdCBv
bGRfZnMgPSBnZXRfZnMoKTsKLQljb25zdCB2b2lkICpzcmMgPSB1bnNhZmVfYWRkcjsKLQlsb25n
IHJldDsKLQotCWlmICh1bmxpa2VseShjb3VudCA8PSAwKSkKLQkJcmV0dXJuIDA7Ci0JaWYgKCFj
b3B5X2Zyb21fa2VybmVsX25vZmF1bHRfYWxsb3dlZCh1bnNhZmVfYWRkciwgY291bnQpKQotCQly
ZXR1cm4gLUVSQU5HRTsKLQotCXNldF9mcyhLRVJORUxfRFMpOwotCXBhZ2VmYXVsdF9kaXNhYmxl
KCk7Ci0KLQlkbyB7Ci0JCXJldCA9IF9fZ2V0X3VzZXIoKmRzdCsrLCAoY29uc3QgY2hhciBfX3Vz
ZXIgX19mb3JjZSAqKXNyYysrKTsKLQl9IHdoaWxlIChkc3RbLTFdICYmIHJldCA9PSAwICYmIHNy
YyAtIHVuc2FmZV9hZGRyIDwgY291bnQpOwotCi0JZHN0Wy0xXSA9ICdcMCc7Ci0JcGFnZWZhdWx0
X2VuYWJsZSgpOwotCXNldF9mcyhvbGRfZnMpOwotCi0JcmV0dXJuIHJldCA/IC1FRkFVTFQgOiBz
cmMgLSB1bnNhZmVfYWRkcjsKLX0KLSNlbmRpZiAvKiBIQVZFX0dFVF9LRVJORUxfTk9GQVVMVCAq
LwogCiAvKioKICAqIGNvcHlfZnJvbV91c2VyX25vZmF1bHQoKTogc2FmZWx5IGF0dGVtcHQgdG8g
cmVhZCBmcm9tIGEgdXNlci1zcGFjZSBsb2NhdGlvbgotLSAKMi4yOS4yCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QK
T3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9y
Zy9saXN0aW5mby9vcGVucmlzYwo=
