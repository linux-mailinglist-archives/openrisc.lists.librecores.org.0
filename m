Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 33E934C6780
	for <lists+openrisc@lfdr.de>; Mon, 28 Feb 2022 11:49:30 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 18A5924839;
	Mon, 28 Feb 2022 11:49:30 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id 7F81824825
 for <openrisc@lists.librecores.org>; Mon, 28 Feb 2022 11:49:28 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id F0200106F;
 Mon, 28 Feb 2022 02:49:27 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.47.185])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 712DF3F73D;
 Mon, 28 Feb 2022 02:49:19 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org,
	akpm@linux-foundation.org
Date: Mon, 28 Feb 2022 16:17:28 +0530
Message-Id: <1646045273-9343-6-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
References: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
Subject: [OpenRISC] [PATCH V3 05/30] arm64/mm: Enable
 ARCH_HAS_VM_GET_PAGE_PROT
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 Catalin Marinas <catalin.marinas@arm.com>, linux-mips@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 Will Deacon <will@kernel.org>, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-csky@vger.kernel.org, Christoph Hellwig <hch@infradead.org>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Anshuman Khandual <anshuman.khandual@arm.com>, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 linux-arm-kernel@lists.infradead.org, linux-parisc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-alpha@vger.kernel.org,
 linuxppc-dev@lists.ozlabs.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhpcyBkZWZpbmVzIGFuZCBleHBvcnRzIGEgcGxhdGZvcm0gc3BlY2lmaWMgY3VzdG9tIHZtX2dl
dF9wYWdlX3Byb3QoKSB2aWEKc3Vic2NyaWJpbmcgQVJDSF9IQVNfVk1fR0VUX1BBR0VfUFJPVC4g
U3Vic2VxdWVudGx5IGFsbCBfX1NYWFggYW5kIF9fUFhYWAptYWNyb3MgY2FuIGJlIGRyb3BwZWQg
d2hpY2ggYXJlIG5vIGxvbmdlciBuZWVkZWQuIFRoaXMgYWxzbyBsb2NhbGl6ZXMgYm90aAphcmNo
X2ZpbHRlcl9wZ3Byb3QgYW5kIGFyY2hfdm1fZ2V0X3BhZ2VfcHJvdCgpIGhlbHBlcnMsIHVuc3Vi
c2NyaWJpbmcgZnJvbQpBUkNIX0hBU19GSUxURVJfUEdQUk9UIGFzIHdlbGwuIE1vdmVkIGJvdGgg
dGhlc2UgbG9jYWxpemVkIGZ1bmN0aW9ucyBuZWFyCnZtX2dldF9wYWdlX3Byb3QoKS4KCkNjOiBD
YXRhbGluIE1hcmluYXMgPGNhdGFsaW4ubWFyaW5hc0Bhcm0uY29tPgpDYzogV2lsbCBEZWFjb24g
PHdpbGxAa2VybmVsLm9yZz4KQ2M6IGxpbnV4LWFybS1rZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9y
ZwpDYzogbGludXgta2VybmVsQHZnZXIua2VybmVsLm9yZwpTaWduZWQtb2ZmLWJ5OiBBbnNodW1h
biBLaGFuZHVhbCA8YW5zaHVtYW4ua2hhbmR1YWxAYXJtLmNvbT4KLS0tCiBhcmNoL2FybTY0L0tj
b25maWcgICAgICAgICAgICAgICAgICAgIHwgIDIgKy0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20v
bWVtb3J5LmggICAgICAgfCAgMyArLQogYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9tbWFuLmggICAg
ICAgICB8IDI0IC0tLS0tLS0tLQogYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLXByb3Qu
aCB8IDE4IC0tLS0tLS0KIGFyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGd0YWJsZS5oICAgICAgfCAx
MSAtLS0tCiBhcmNoL2FybTY0L21tL21tYXAuYyAgICAgICAgICAgICAgICAgIHwgNzggKysrKysr
KysrKysrKysrKysrKysrKysrKysrCiA2IGZpbGVzIGNoYW5nZWQsIDgwIGluc2VydGlvbnMoKyks
IDU2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQvS2NvbmZpZyBiL2FyY2gv
YXJtNjQvS2NvbmZpZwppbmRleCAyZTVkMmVhYzZmYzYuLjcxNTNkNWZmZjYwMyAxMDA2NDQKLS0t
IGEvYXJjaC9hcm02NC9LY29uZmlnCisrKyBiL2FyY2gvYXJtNjQvS2NvbmZpZwpAQCAtMjMsNyAr
MjMsNiBAQCBjb25maWcgQVJNNjQKIAlzZWxlY3QgQVJDSF9IQVNfRE1BX1BSRVBfQ09IRVJFTlQK
IAlzZWxlY3QgQVJDSF9IQVNfQUNQSV9UQUJMRV9VUEdSQURFIGlmIEFDUEkKIAlzZWxlY3QgQVJD
SF9IQVNfRkFTVF9NVUxUSVBMSUVSCi0Jc2VsZWN0IEFSQ0hfSEFTX0ZJTFRFUl9QR1BST1QKIAlz
ZWxlY3QgQVJDSF9IQVNfRk9SVElGWV9TT1VSQ0UKIAlzZWxlY3QgQVJDSF9IQVNfR0NPVl9QUk9G
SUxFX0FMTAogCXNlbGVjdCBBUkNIX0hBU19HSUdBTlRJQ19QQUdFCkBAIC00NCw2ICs0Myw3IEBA
IGNvbmZpZyBBUk02NAogCXNlbGVjdCBBUkNIX0hBU19TWVNDQUxMX1dSQVBQRVIKIAlzZWxlY3Qg
QVJDSF9IQVNfVEVBUkRPV05fRE1BX09QUyBpZiBJT01NVV9TVVBQT1JUCiAJc2VsZWN0IEFSQ0hf
SEFTX1RJQ0tfQlJPQURDQVNUIGlmIEdFTkVSSUNfQ0xPQ0tFVkVOVFNfQlJPQURDQVNUCisJc2Vs
ZWN0IEFSQ0hfSEFTX1ZNX0dFVF9QQUdFX1BST1QKIAlzZWxlY3QgQVJDSF9IQVNfWk9ORV9ETUFf
U0VUIGlmIEVYUEVSVAogCXNlbGVjdCBBUkNIX0hBVkVfRUxGX1BST1QKIAlzZWxlY3QgQVJDSF9I
QVZFX05NSV9TQUZFX0NNUFhDSEcKZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20v
bWVtb3J5LmggYi9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL21lbW9yeS5oCmluZGV4IDBhZjcwZDlh
YmVkZS4uNjRhNjEzYTAzNDliIDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL21l
bW9yeS5oCisrKyBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vbWVtb3J5LmgKQEAgLTEyNiw4ICsx
MjYsNyBAQAogICogTWVtb3J5IHR5cGVzIGF2YWlsYWJsZS4KICAqCiAgKiBJTVBPUlRBTlQ6IE1U
X05PUk1BTCBtdXN0IGJlIGluZGV4IDAgc2luY2Ugdm1fZ2V0X3BhZ2VfcHJvdCgpIG1heSAnb3In
IGluCi0gKgkgICAgICB0aGUgTVRfTk9STUFMX1RBR0dFRCBtZW1vcnkgdHlwZSBmb3IgUFJPVF9N
VEUgbWFwcGluZ3MuIE5vdGUKLSAqCSAgICAgIHRoYXQgcHJvdGVjdGlvbl9tYXBbXSBvbmx5IGNv
bnRhaW5zIE1UX05PUk1BTCBhdHRyaWJ1dGVzLgorICoJICAgICAgdGhlIE1UX05PUk1BTF9UQUdH
RUQgbWVtb3J5IHR5cGUgZm9yIFBST1RfTVRFIG1hcHBpbmdzLgogICovCiAjZGVmaW5lIE1UX05P
Uk1BTAkJMAogI2RlZmluZSBNVF9OT1JNQUxfVEFHR0VECTEKZGlmZiAtLWdpdCBhL2FyY2gvYXJt
NjQvaW5jbHVkZS9hc20vbW1hbi5oIGIvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9tbWFuLmgKaW5k
ZXggZTNlMjhmN2RhZjYyLi41OTY2ZWU0YTYxNTQgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQvaW5j
bHVkZS9hc20vbW1hbi5oCisrKyBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vbW1hbi5oCkBAIC0z
NSwzMCArMzUsNiBAQCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgYXJjaF9jYWxjX3ZtX2Zs
YWdfYml0cyh1bnNpZ25lZCBsb25nIGZsYWdzKQogfQogI2RlZmluZSBhcmNoX2NhbGNfdm1fZmxh
Z19iaXRzKGZsYWdzKSBhcmNoX2NhbGNfdm1fZmxhZ19iaXRzKGZsYWdzKQogCi1zdGF0aWMgaW5s
aW5lIHBncHJvdF90IGFyY2hfdm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2ZsYWdz
KQotewotCXB0ZXZhbF90IHByb3QgPSAwOwotCi0JaWYgKHZtX2ZsYWdzICYgVk1fQVJNNjRfQlRJ
KQotCQlwcm90IHw9IFBURV9HUDsKLQotCS8qCi0JICogVGhlcmUgYXJlIHR3byBjb25kaXRpb25z
IHJlcXVpcmVkIGZvciByZXR1cm5pbmcgYSBOb3JtYWwgVGFnZ2VkCi0JICogbWVtb3J5IHR5cGU6
ICgxKSB0aGUgdXNlciByZXF1ZXN0ZWQgaXQgdmlhIFBST1RfTVRFIHBhc3NlZCB0bwotCSAqIG1t
YXAoKSBvciBtcHJvdGVjdCgpIGFuZCAoMikgdGhlIGNvcnJlc3BvbmRpbmcgdm1hIHN1cHBvcnRz
IE1URS4gV2UKLQkgKiByZWdpc3RlciAoMSkgYXMgVk1fTVRFIGluIHRoZSB2bWEtPnZtX2ZsYWdz
IGFuZCAoMikgYXMKLQkgKiBWTV9NVEVfQUxMT1dFRC4gTm90ZSB0aGF0IHRoZSBsYXR0ZXIgY2Fu
IG9ubHkgYmUgc2V0IGR1cmluZyB0aGUKLQkgKiBtbWFwKCkgY2FsbCBzaW5jZSBtcHJvdGVjdCgp
IGRvZXMgbm90IGFjY2VwdCBNQVBfKiBmbGFncy4KLQkgKiBDaGVja2luZyBmb3IgVk1fTVRFIG9u
bHkgaXMgc3VmZmljaWVudCBzaW5jZSBhcmNoX3ZhbGlkYXRlX2ZsYWdzKCkKLQkgKiBkb2VzIG5v
dCBwZXJtaXQgKFZNX01URSAmICFWTV9NVEVfQUxMT1dFRCkuCi0JICovCi0JaWYgKHZtX2ZsYWdz
ICYgVk1fTVRFKQotCQlwcm90IHw9IFBURV9BVFRSSU5EWChNVF9OT1JNQUxfVEFHR0VEKTsKLQot
CXJldHVybiBfX3BncHJvdChwcm90KTsKLX0KLSNkZWZpbmUgYXJjaF92bV9nZXRfcGFnZV9wcm90
KHZtX2ZsYWdzKSBhcmNoX3ZtX2dldF9wYWdlX3Byb3Qodm1fZmxhZ3MpCi0KIHN0YXRpYyBpbmxp
bmUgYm9vbCBhcmNoX3ZhbGlkYXRlX3Byb3QodW5zaWduZWQgbG9uZyBwcm90LAogCXVuc2lnbmVk
IGxvbmcgYWRkciBfX2Fsd2F5c191bnVzZWQpCiB7CmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2lu
Y2x1ZGUvYXNtL3BndGFibGUtcHJvdC5oIGIvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxl
LXByb3QuaAppbmRleCA3MDMyZjA0YzhhYzYuLmQ4ZWUwYWE3ODg2ZCAxMDA2NDQKLS0tIGEvYXJj
aC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLXByb3QuaAorKysgYi9hcmNoL2FybTY0L2luY2x1
ZGUvYXNtL3BndGFibGUtcHJvdC5oCkBAIC04OCwyNCArODgsNiBAQCBleHRlcm4gYm9vbCBhcm02
NF91c2VfbmdfbWFwcGluZ3M7CiAjZGVmaW5lIFBBR0VfUkVBRE9OTFlfRVhFQwlfX3BncHJvdChf
UEFHRV9ERUZBVUxUIHwgUFRFX1VTRVIgfCBQVEVfUkRPTkxZIHwgUFRFX05HIHwgUFRFX1BYTikK
ICNkZWZpbmUgUEFHRV9FWEVDT05MWQkJX19wZ3Byb3QoX1BBR0VfREVGQVVMVCB8IFBURV9SRE9O
TFkgfCBQVEVfTkcgfCBQVEVfUFhOKQogCi0jZGVmaW5lIF9fUDAwMCAgUEFHRV9OT05FCi0jZGVm
aW5lIF9fUDAwMSAgUEFHRV9SRUFET05MWQotI2RlZmluZSBfX1AwMTAgIFBBR0VfUkVBRE9OTFkK
LSNkZWZpbmUgX19QMDExICBQQUdFX1JFQURPTkxZCi0jZGVmaW5lIF9fUDEwMCAgUEFHRV9FWEVD
T05MWQotI2RlZmluZSBfX1AxMDEgIFBBR0VfUkVBRE9OTFlfRVhFQwotI2RlZmluZSBfX1AxMTAg
IFBBR0VfUkVBRE9OTFlfRVhFQwotI2RlZmluZSBfX1AxMTEgIFBBR0VfUkVBRE9OTFlfRVhFQwot
Ci0jZGVmaW5lIF9fUzAwMCAgUEFHRV9OT05FCi0jZGVmaW5lIF9fUzAwMSAgUEFHRV9SRUFET05M
WQotI2RlZmluZSBfX1MwMTAgIFBBR0VfU0hBUkVECi0jZGVmaW5lIF9fUzAxMSAgUEFHRV9TSEFS
RUQKLSNkZWZpbmUgX19TMTAwICBQQUdFX0VYRUNPTkxZCi0jZGVmaW5lIF9fUzEwMSAgUEFHRV9S
RUFET05MWV9FWEVDCi0jZGVmaW5lIF9fUzExMCAgUEFHRV9TSEFSRURfRVhFQwotI2RlZmluZSBf
X1MxMTEgIFBBR0VfU0hBUkVEX0VYRUMKLQogI2VuZGlmIC8qIF9fQVNTRU1CTFlfXyAqLwogCiAj
ZW5kaWYgLyogX19BU01fUEdUQUJMRV9QUk9UX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gvYXJtNjQv
aW5jbHVkZS9hc20vcGd0YWJsZS5oIGIvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ3RhYmxlLmgK
aW5kZXggYzRiYTA0N2E4MmQyLi45NGUxNDdlNTQ1NmMgMTAwNjQ0Ci0tLSBhL2FyY2gvYXJtNjQv
aW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvYXJtNjQvaW5jbHVkZS9hc20vcGd0YWJs
ZS5oCkBAIC0xMDE3LDE3ICsxMDE3LDYgQEAgc3RhdGljIGlubGluZSBib29sIGFyY2hfd2FudHNf
b2xkX3ByZWZhdWx0ZWRfcHRlKHZvaWQpCiB9CiAjZGVmaW5lIGFyY2hfd2FudHNfb2xkX3ByZWZh
dWx0ZWRfcHRlCWFyY2hfd2FudHNfb2xkX3ByZWZhdWx0ZWRfcHRlCiAKLXN0YXRpYyBpbmxpbmUg
cGdwcm90X3QgYXJjaF9maWx0ZXJfcGdwcm90KHBncHJvdF90IHByb3QpCi17Ci0JaWYgKGNwdXNf
aGF2ZV9jb25zdF9jYXAoQVJNNjRfSEFTX0VQQU4pKQotCQlyZXR1cm4gcHJvdDsKLQotCWlmIChw
Z3Byb3RfdmFsKHByb3QpICE9IHBncHJvdF92YWwoUEFHRV9FWEVDT05MWSkpCi0JCXJldHVybiBw
cm90OwotCi0JcmV0dXJuIFBBR0VfUkVBRE9OTFlfRVhFQzsKLX0KLQogc3RhdGljIGlubGluZSBi
b29sIHB1ZF9zZWN0X3N1cHBvcnRlZCh2b2lkKQogewogCXJldHVybiBQQUdFX1NJWkUgPT0gU1pf
NEs7CmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L21tL21tYXAuYyBiL2FyY2gvYXJtNjQvbW0vbW1h
cC5jCmluZGV4IGEzOGY1NGNkNjM4Yy4uYmQwMjMzZDM3NmEyIDEwMDY0NAotLS0gYS9hcmNoL2Fy
bTY0L21tL21tYXAuYworKysgYi9hcmNoL2FybTY0L21tL21tYXAuYwpAQCAtMTAsNiArMTAsNyBA
QAogI2luY2x1ZGUgPGxpbnV4L3R5cGVzLmg+CiAKICNpbmNsdWRlIDxhc20vcGFnZS5oPgorI2lu
Y2x1ZGUgPGFzbS9tbWFuLmg+CiAKIC8qCiAgKiBZb3UgcmVhbGx5IHNob3VsZG4ndCBiZSB1c2lu
ZyByZWFkKCkgb3Igd3JpdGUoKSBvbiAvZGV2L21lbS4gIFRoaXMgbWlnaHQgZ28KQEAgLTM4LDMg
KzM5LDgwIEBAIGludCB2YWxpZF9tbWFwX3BoeXNfYWRkcl9yYW5nZSh1bnNpZ25lZCBsb25nIHBm
biwgc2l6ZV90IHNpemUpCiB7CiAJcmV0dXJuICEoKChwZm4gPDwgUEFHRV9TSElGVCkgKyBzaXpl
KSAmIH5QSFlTX01BU0spOwogfQorCitzdGF0aWMgaW5saW5lIHBncHJvdF90IF9fdm1fZ2V0X3Bh
Z2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2ZsYWdzKQoreworCXN3aXRjaCAodm1fZmxhZ3MgJiAo
Vk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFZNX1NIQVJFRCkpIHsKKwljYXNlIFZNX05P
TkU6CisJCXJldHVybiBQQUdFX05PTkU7CisJY2FzZSBWTV9SRUFEOgorCWNhc2UgVk1fV1JJVEU6
CisJY2FzZSBWTV9XUklURSB8IFZNX1JFQUQ6CisJCXJldHVybiBQQUdFX1JFQURPTkxZOworCWNh
c2UgVk1fRVhFQzoKKwkJcmV0dXJuIFBBR0VfRVhFQ09OTFk7CisJY2FzZSBWTV9FWEVDIHwgVk1f
UkVBRDoKKwljYXNlIFZNX0VYRUMgfCBWTV9XUklURToKKwljYXNlIFZNX0VYRUMgfCBWTV9XUklU
RSB8IFZNX1JFQUQ6CisJCXJldHVybiBQQUdFX1JFQURPTkxZX0VYRUM7CisJY2FzZSBWTV9TSEFS
RUQ6CisJCXJldHVybiBQQUdFX05PTkU7CisJY2FzZSBWTV9TSEFSRUQgfCBWTV9SRUFEOgorCQly
ZXR1cm4gUEFHRV9SRUFET05MWTsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX1dSSVRFOgorCWNhc2Ug
Vk1fU0hBUkVEIHwgVk1fV1JJVEUgfCBWTV9SRUFEOgorCQlyZXR1cm4gUEFHRV9TSEFSRUQ7CisJ
Y2FzZSBWTV9TSEFSRUQgfCBWTV9FWEVDOgorCQlyZXR1cm4gUEFHRV9FWEVDT05MWTsKKwljYXNl
IFZNX1NIQVJFRCB8IFZNX0VYRUMgfCBWTV9SRUFEOgorCQlyZXR1cm4gUEFHRV9SRUFET05MWV9F
WEVDOworCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQyB8IFZNX1dSSVRFOgorCWNhc2UgVk1fU0hB
UkVEIHwgVk1fRVhFQyB8IFZNX1dSSVRFIHwgVk1fUkVBRDoKKwkJcmV0dXJuIFBBR0VfU0hBUkVE
X0VYRUM7CisJZGVmYXVsdDoKKwkJQlVJTERfQlVHKCk7CisJfQorfQorCitzdGF0aWMgcGdwcm90
X3QgYXJtNjRfYXJjaF9maWx0ZXJfcGdwcm90KHBncHJvdF90IHByb3QpCit7CisJaWYgKGNwdXNf
aGF2ZV9jb25zdF9jYXAoQVJNNjRfSEFTX0VQQU4pKQorCQlyZXR1cm4gcHJvdDsKKworCWlmIChw
Z3Byb3RfdmFsKHByb3QpICE9IHBncHJvdF92YWwoUEFHRV9FWEVDT05MWSkpCisJCXJldHVybiBw
cm90OworCisJcmV0dXJuIFBBR0VfUkVBRE9OTFlfRVhFQzsKK30KKworc3RhdGljIHBncHJvdF90
IGFybTY0X2FyY2hfdm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25lZCBsb25nIHZtX2ZsYWdzKQorewor
CXB0ZXZhbF90IHByb3QgPSAwOworCisJaWYgKHZtX2ZsYWdzICYgVk1fQVJNNjRfQlRJKQorCQlw
cm90IHw9IFBURV9HUDsKKworCS8qCisJICogVGhlcmUgYXJlIHR3byBjb25kaXRpb25zIHJlcXVp
cmVkIGZvciByZXR1cm5pbmcgYSBOb3JtYWwgVGFnZ2VkCisJICogbWVtb3J5IHR5cGU6ICgxKSB0
aGUgdXNlciByZXF1ZXN0ZWQgaXQgdmlhIFBST1RfTVRFIHBhc3NlZCB0bworCSAqIG1tYXAoKSBv
ciBtcHJvdGVjdCgpIGFuZCAoMikgdGhlIGNvcnJlc3BvbmRpbmcgdm1hIHN1cHBvcnRzIE1URS4g
V2UKKwkgKiByZWdpc3RlciAoMSkgYXMgVk1fTVRFIGluIHRoZSB2bWEtPnZtX2ZsYWdzIGFuZCAo
MikgYXMKKwkgKiBWTV9NVEVfQUxMT1dFRC4gTm90ZSB0aGF0IHRoZSBsYXR0ZXIgY2FuIG9ubHkg
YmUgc2V0IGR1cmluZyB0aGUKKwkgKiBtbWFwKCkgY2FsbCBzaW5jZSBtcHJvdGVjdCgpIGRvZXMg
bm90IGFjY2VwdCBNQVBfKiBmbGFncy4KKwkgKiBDaGVja2luZyBmb3IgVk1fTVRFIG9ubHkgaXMg
c3VmZmljaWVudCBzaW5jZSBhcmNoX3ZhbGlkYXRlX2ZsYWdzKCkKKwkgKiBkb2VzIG5vdCBwZXJt
aXQgKFZNX01URSAmICFWTV9NVEVfQUxMT1dFRCkuCisJICovCisJaWYgKHZtX2ZsYWdzICYgVk1f
TVRFKQorCQlwcm90IHw9IFBURV9BVFRSSU5EWChNVF9OT1JNQUxfVEFHR0VEKTsKKworCXJldHVy
biBfX3BncHJvdChwcm90KTsKK30KKworcGdwcm90X3Qgdm1fZ2V0X3BhZ2VfcHJvdCh1bnNpZ25l
ZCBsb25nIHZtX2ZsYWdzKQoreworCXBncHJvdF90IHJldCA9IF9fcGdwcm90KHBncHJvdF92YWwo
X192bV9nZXRfcGFnZV9wcm90KHZtX2ZsYWdzKSkgfAorCQkJcGdwcm90X3ZhbChhcm02NF9hcmNo
X3ZtX2dldF9wYWdlX3Byb3Qodm1fZmxhZ3MpKSk7CisKKwlyZXR1cm4gYXJtNjRfYXJjaF9maWx0
ZXJfcGdwcm90KHJldCk7Cit9CitFWFBPUlRfU1lNQk9MKHZtX2dldF9wYWdlX3Byb3QpOwotLSAK
Mi4yNS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpP
cGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6
Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
