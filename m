Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 092634C67B2
	for <lists+openrisc@lfdr.de>; Mon, 28 Feb 2022 11:50:04 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id E218524849;
	Mon, 28 Feb 2022 11:50:03 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id AC42B24825
 for <openrisc@lists.librecores.org>; Mon, 28 Feb 2022 11:50:02 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id 2CB0012FC;
 Mon, 28 Feb 2022 02:50:02 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.47.185])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 417303F73D;
 Mon, 28 Feb 2022 02:49:53 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org,
	akpm@linux-foundation.org
Date: Mon, 28 Feb 2022 16:17:32 +0530
Message-Id: <1646045273-9343-10-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
References: <1646045273-9343-1-git-send-email-anshuman.khandual@arm.com>
Subject: [OpenRISC] [PATCH V3 09/30] arm/mm: Enable ARCH_HAS_VM_GET_PAGE_PROT
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 linux-mips@vger.kernel.org, sparclinux@vger.kernel.org,
 linux-riscv@lists.infradead.org, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-hexagon@vger.kernel.org,
 Russell King <linux@armlinux.org.uk>, linux-csky@vger.kernel.org,
 Christoph Hellwig <hch@infradead.org>, linux-snps-arc@lists.infradead.org,
 linux-xtensa@linux-xtensa.org, Arnd Bergmann <arnd@arndb.de>,
 Anshuman Khandual <anshuman.khandual@arm.com>, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 linux-arm-kernel@lists.infradead.org, linux-parisc@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-alpha@vger.kernel.org,
 linuxppc-dev@lists.ozlabs.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhpcyBkZWZpbmVzIGFuZCBleHBvcnRzIGEgcGxhdGZvcm0gc3BlY2lmaWMgY3VzdG9tIHZtX2dl
dF9wYWdlX3Byb3QoKSB2aWEKc3Vic2NyaWJpbmcgQVJDSF9IQVNfVk1fR0VUX1BBR0VfUFJPVC4g
U3Vic2VxdWVudGx5IGFsbCBfX1NYWFggYW5kIF9fUFhYWAptYWNyb3MgY2FuIGJlIGRyb3BwZWQg
d2hpY2ggYXJlIG5vIGxvbmdlciBuZWVkZWQuCgpDYzogUnVzc2VsbCBLaW5nIDxsaW51eEBhcm1s
aW51eC5vcmcudWs+CkNjOiBBcm5kIEJlcmdtYW5uIDxhcm5kQGFybmRiLmRlPgpDYzogbGludXgt
YXJtLWtlcm5lbEBsaXN0cy5pbmZyYWRlYWQub3JnCkNjOiBsaW51eC1rZXJuZWxAdmdlci5rZXJu
ZWwub3JnClNpZ25lZC1vZmYtYnk6IEFuc2h1bWFuIEtoYW5kdWFsIDxhbnNodW1hbi5raGFuZHVh
bEBhcm0uY29tPgotLS0KIGFyY2gvYXJtL0tjb25maWcgICAgICAgICAgICAgICAgICAgfCAgMSAr
CiBhcmNoL2FybS9pbmNsdWRlL2FzbS9wZ3RhYmxlLmggICAgIHwgMjAgKy0tLS0tLS0tLS0tLS0K
IGFyY2gvYXJtL2xpYi91YWNjZXNzX3dpdGhfbWVtY3B5LmMgfCAgMiArLQogYXJjaC9hcm0vbW0v
bW11LmMgICAgICAgICAgICAgICAgICB8IDQ0ICsrKysrKysrKysrKysrKysrKysrKysrKysrLS0t
LQogNCBmaWxlcyBjaGFuZ2VkLCA0MSBpbnNlcnRpb25zKCspLCAyNiBkZWxldGlvbnMoLSkKCmRp
ZmYgLS1naXQgYS9hcmNoL2FybS9LY29uZmlnIGIvYXJjaC9hcm0vS2NvbmZpZwppbmRleCA0Yzk3
Y2I0MGVlYmIuLjg3YjJlODllZjNkNiAxMDA2NDQKLS0tIGEvYXJjaC9hcm0vS2NvbmZpZworKysg
Yi9hcmNoL2FybS9LY29uZmlnCkBAIC0yMyw2ICsyMyw3IEBAIGNvbmZpZyBBUk0KIAlzZWxlY3Qg
QVJDSF9IQVNfU1lOQ19ETUFfRk9SX0NQVSBpZiBTV0lPVExCIHx8ICFNTVUKIAlzZWxlY3QgQVJD
SF9IQVNfVEVBUkRPV05fRE1BX09QUyBpZiBNTVUKIAlzZWxlY3QgQVJDSF9IQVNfVElDS19CUk9B
RENBU1QgaWYgR0VORVJJQ19DTE9DS0VWRU5UU19CUk9BRENBU1QKKwlzZWxlY3QgQVJDSF9IQVNf
Vk1fR0VUX1BBR0VfUFJPVAogCXNlbGVjdCBBUkNIX0hBVkVfQ1VTVE9NX0dQSU9fSAogCXNlbGVj
dCBBUkNIX0hBVkVfTk1JX1NBRkVfQ01QWENIRyBpZiBDUFVfVjcgfHwgQ1BVX1Y3TSB8fCBDUFVf
VjZLCiAJc2VsZWN0IEFSQ0hfSEFTX0dDT1ZfUFJPRklMRV9BTEwKZGlmZiAtLWdpdCBhL2FyY2gv
YXJtL2luY2x1ZGUvYXNtL3BndGFibGUuaCBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUu
aAppbmRleCBjZDFmODRiYjQwYWUuLjY0NzExNzE2Y2Q4NCAxMDA2NDQKLS0tIGEvYXJjaC9hcm0v
aW5jbHVkZS9hc20vcGd0YWJsZS5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BndGFibGUu
aApAQCAtNzAsNyArNzAsNyBAQCBleHRlcm4gdm9pZCBfX3BnZF9lcnJvcihjb25zdCBjaGFyICpm
aWxlLCBpbnQgbGluZSwgcGdkX3QpOwogI2VuZGlmCiAKIC8qCi0gKiBUaGUgcGdwcm90XyogYW5k
IHByb3RlY3Rpb25fbWFwIGVudHJpZXMgd2lsbCBiZSBmaXhlZCB1cCBpbiBydW50aW1lCisgKiBU
aGUgcGdwcm90XyogZW50cmllcyB3aWxsIGJlIGZpeGVkIHVwIGluIHJ1bnRpbWUgaW4gdm1fZ2V0
X3BhZ2VfcHJvdCgpCiAgKiB0byBpbmNsdWRlIHRoZSBjYWNoYWJsZSBhbmQgYnVmZmVyYWJsZSBi
aXRzIGJhc2VkIG9uIG1lbW9yeSBwb2xpY3ksCiAgKiBhcyB3ZWxsIGFzIGFueSBhcmNoaXRlY3R1
cmUgZGVwZW5kZW50IGJpdHMgbGlrZSBnbG9iYWwvQVNJRCBhbmQgU01QCiAgKiBzaGFyZWQgbWFw
cGluZyBiaXRzLgpAQCAtMTM3LDI0ICsxMzcsNiBAQCBleHRlcm4gcGdwcm90X3QgcGh5c19tZW1f
YWNjZXNzX3Byb3Qoc3RydWN0IGZpbGUgKmZpbGUsIHVuc2lnbmVkIGxvbmcgcGZuLAogICogIDIp
IElmIHdlIGNvdWxkIGRvIGV4ZWN1dGUgcHJvdGVjdGlvbiwgdGhlbiByZWFkIGlzIGltcGxpZWQK
ICAqICAzKSB3cml0ZSBpbXBsaWVzIHJlYWQgcGVybWlzc2lvbnMKICAqLwotI2RlZmluZSBfX1Aw
MDAgIF9fUEFHRV9OT05FCi0jZGVmaW5lIF9fUDAwMSAgX19QQUdFX1JFQURPTkxZCi0jZGVmaW5l
IF9fUDAxMCAgX19QQUdFX0NPUFkKLSNkZWZpbmUgX19QMDExICBfX1BBR0VfQ09QWQotI2RlZmlu
ZSBfX1AxMDAgIF9fUEFHRV9SRUFET05MWV9FWEVDCi0jZGVmaW5lIF9fUDEwMSAgX19QQUdFX1JF
QURPTkxZX0VYRUMKLSNkZWZpbmUgX19QMTEwICBfX1BBR0VfQ09QWV9FWEVDCi0jZGVmaW5lIF9f
UDExMSAgX19QQUdFX0NPUFlfRVhFQwotCi0jZGVmaW5lIF9fUzAwMCAgX19QQUdFX05PTkUKLSNk
ZWZpbmUgX19TMDAxICBfX1BBR0VfUkVBRE9OTFkKLSNkZWZpbmUgX19TMDEwICBfX1BBR0VfU0hB
UkVECi0jZGVmaW5lIF9fUzAxMSAgX19QQUdFX1NIQVJFRAotI2RlZmluZSBfX1MxMDAgIF9fUEFH
RV9SRUFET05MWV9FWEVDCi0jZGVmaW5lIF9fUzEwMSAgX19QQUdFX1JFQURPTkxZX0VYRUMKLSNk
ZWZpbmUgX19TMTEwICBfX1BBR0VfU0hBUkVEX0VYRUMKLSNkZWZpbmUgX19TMTExICBfX1BBR0Vf
U0hBUkVEX0VYRUMKLQogI2lmbmRlZiBfX0FTU0VNQkxZX18KIC8qCiAgKiBaRVJPX1BBR0UgaXMg
YSBnbG9iYWwgc2hhcmVkIHBhZ2UgdGhhdCBpcyBhbHdheXMgemVybzogdXNlZApkaWZmIC0tZ2l0
IGEvYXJjaC9hcm0vbGliL3VhY2Nlc3Nfd2l0aF9tZW1jcHkuYyBiL2FyY2gvYXJtL2xpYi91YWNj
ZXNzX3dpdGhfbWVtY3B5LmMKaW5kZXggMTA2ZjgzYTVlYTZkLi4xMmQ4ZDk3OTRhMjggMTAwNjQ0
Ci0tLSBhL2FyY2gvYXJtL2xpYi91YWNjZXNzX3dpdGhfbWVtY3B5LmMKKysrIGIvYXJjaC9hcm0v
bGliL3VhY2Nlc3Nfd2l0aF9tZW1jcHkuYwpAQCAtMjQ3LDcgKzI0Nyw3IEBAIHN0YXRpYyBpbnQg
X19pbml0IHRlc3Rfc2l6ZV90cmVzaG9sZCh2b2lkKQogCWlmICghZHN0X3BhZ2UpCiAJCWdvdG8g
bm9fZHN0OwogCWtlcm5lbF9wdHIgPSBwYWdlX2FkZHJlc3Moc3JjX3BhZ2UpOwotCXVzZXJfcHRy
ID0gdm1hcCgmZHN0X3BhZ2UsIDEsIFZNX0lPUkVNQVAsIF9fcGdwcm90KF9fUDAxMCkpOworCXVz
ZXJfcHRyID0gdm1hcCgmZHN0X3BhZ2UsIDEsIFZNX0lPUkVNQVAsIF9fcGdwcm90KF9fUEFHRV9D
T1BZKSk7CiAJaWYgKCF1c2VyX3B0cikKIAkJZ290byBub192bWFwOwogCmRpZmYgLS1naXQgYS9h
cmNoL2FybS9tbS9tbXUuYyBiL2FyY2gvYXJtL21tL21tdS5jCmluZGV4IDI3NGU0ZjczZmQzMy4u
OWNkZjQ1ZGE1N2RlIDEwMDY0NAotLS0gYS9hcmNoL2FybS9tbS9tbXUuYworKysgYi9hcmNoL2Fy
bS9tbS9tbXUuYwpAQCAtNDAzLDYgKzQwMyw4IEBAIHZvaWQgX19zZXRfZml4bWFwKGVudW0gZml4
ZWRfYWRkcmVzc2VzIGlkeCwgcGh5c19hZGRyX3QgcGh5cywgcGdwcm90X3QgcHJvdCkKIAlsb2Nh
bF9mbHVzaF90bGJfa2VybmVsX3JhbmdlKHZhZGRyLCB2YWRkciArIFBBR0VfU0laRSk7CiB9CiAK
K3N0YXRpYyBwdGV2YWxfdCB1c2VyX3BncHJvdDsKKwogLyoKICAqIEFkanVzdCB0aGUgUE1EIHNl
Y3Rpb24gZW50cmllcyBhY2NvcmRpbmcgdG8gdGhlIENQVSBpbiB1c2UuCiAgKi8KQEAgLTQxMCw3
ICs0MTIsNyBAQCBzdGF0aWMgdm9pZCBfX2luaXQgYnVpbGRfbWVtX3R5cGVfdGFibGUodm9pZCkK
IHsKIAlzdHJ1Y3QgY2FjaGVwb2xpY3kgKmNwOwogCXVuc2lnbmVkIGludCBjciA9IGdldF9jcigp
OwotCXB0ZXZhbF90IHVzZXJfcGdwcm90LCBrZXJuX3BncHJvdCwgdmVjc19wZ3Byb3Q7CisJcHRl
dmFsX3Qga2Vybl9wZ3Byb3QsIHZlY3NfcGdwcm90OwogCWludCBjcHVfYXJjaCA9IGNwdV9hcmNo
aXRlY3R1cmUoKTsKIAlpbnQgaTsKIApAQCAtNjI3LDExICs2MjksNiBAQCBzdGF0aWMgdm9pZCBf
X2luaXQgYnVpbGRfbWVtX3R5cGVfdGFibGUodm9pZCkKIAl1c2VyX3BncHJvdCB8PSBQVEVfRVhU
X1BYTjsKICNlbmRpZgogCi0JZm9yIChpID0gMDsgaSA8IDE2OyBpKyspIHsKLQkJcHRldmFsX3Qg
diA9IHBncHJvdF92YWwocHJvdGVjdGlvbl9tYXBbaV0pOwotCQlwcm90ZWN0aW9uX21hcFtpXSA9
IF9fcGdwcm90KHYgfCB1c2VyX3BncHJvdCk7Ci0JfQotCiAJbWVtX3R5cGVzW01UX0xPV19WRUNU
T1JTXS5wcm90X3B0ZSB8PSB2ZWNzX3BncHJvdDsKIAltZW1fdHlwZXNbTVRfSElHSF9WRUNUT1JT
XS5wcm90X3B0ZSB8PSB2ZWNzX3BncHJvdDsKIApAQCAtNjcwLDYgKzY2Nyw0MSBAQCBzdGF0aWMg
dm9pZCBfX2luaXQgYnVpbGRfbWVtX3R5cGVfdGFibGUodm9pZCkKIAl9CiB9CiAKK3BncHJvdF90
IHZtX2dldF9wYWdlX3Byb3QodW5zaWduZWQgbG9uZyB2bV9mbGFncykKK3sKKwlzd2l0Y2ggKHZt
X2ZsYWdzICYgKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBWTV9TSEFSRUQpKSB7CisJ
Y2FzZSBWTV9OT05FOgorCQlyZXR1cm4gX19wZ3Byb3QocGdwcm90X3ZhbChfX1BBR0VfTk9ORSkg
fCB1c2VyX3BncHJvdCk7CisJY2FzZSBWTV9SRUFEOgorCQlyZXR1cm4gX19wZ3Byb3QocGdwcm90
X3ZhbChfX1BBR0VfUkVBRE9OTFkpIHwgdXNlcl9wZ3Byb3QpOworCWNhc2UgVk1fV1JJVEU6CisJ
Y2FzZSBWTV9XUklURSB8IFZNX1JFQUQ6CisJCXJldHVybiBfX3BncHJvdChwZ3Byb3RfdmFsKF9f
UEFHRV9DT1BZKSB8IHVzZXJfcGdwcm90KTsKKwljYXNlIFZNX0VYRUM6CisJY2FzZSBWTV9FWEVD
IHwgVk1fUkVBRDoKKwkJcmV0dXJuIF9fcGdwcm90KHBncHJvdF92YWwoX19QQUdFX1JFQURPTkxZ
X0VYRUMpIHwgdXNlcl9wZ3Byb3QpOworCWNhc2UgVk1fRVhFQyB8IFZNX1dSSVRFOgorCWNhc2Ug
Vk1fRVhFQyB8IFZNX1dSSVRFIHwgVk1fUkVBRDoKKwkJcmV0dXJuIF9fcGdwcm90KHBncHJvdF92
YWwoX19QQUdFX0NPUFlfRVhFQykgfCB1c2VyX3BncHJvdCk7CisJY2FzZSBWTV9TSEFSRUQ6CisJ
CXJldHVybiBfX3BncHJvdChwZ3Byb3RfdmFsKF9fUEFHRV9OT05FKSB8IHVzZXJfcGdwcm90KTsK
KwljYXNlIFZNX1NIQVJFRCB8IFZNX1JFQUQ6CisJCXJldHVybiBfX3BncHJvdChwZ3Byb3RfdmFs
KF9fUEFHRV9SRUFET05MWSkgfCB1c2VyX3BncHJvdCk7CisJY2FzZSBWTV9TSEFSRUQgfCBWTV9X
UklURToKKwljYXNlIFZNX1NIQVJFRCB8IFZNX1dSSVRFIHwgVk1fUkVBRDoKKwkJcmV0dXJuIF9f
cGdwcm90KHBncHJvdF92YWwoX19QQUdFX1NIQVJFRCkgfCB1c2VyX3BncHJvdCk7CisJY2FzZSBW
TV9TSEFSRUQgfCBWTV9FWEVDOgorCWNhc2UgVk1fU0hBUkVEIHwgVk1fRVhFQyB8IFZNX1JFQUQ6
CisJCXJldHVybiBfX3BncHJvdChwZ3Byb3RfdmFsKF9fUEFHRV9SRUFET05MWV9FWEVDKSB8IHVz
ZXJfcGdwcm90KTsKKwljYXNlIFZNX1NIQVJFRCB8IFZNX0VYRUMgfCBWTV9XUklURToKKwljYXNl
IFZNX1NIQVJFRCB8IFZNX0VYRUMgfCBWTV9XUklURSB8IFZNX1JFQUQ6CisJCXJldHVybiBfX3Bn
cHJvdChwZ3Byb3RfdmFsKF9fUEFHRV9TSEFSRURfRVhFQykgfCB1c2VyX3BncHJvdCk7CisJZGVm
YXVsdDoKKwkJQlVJTERfQlVHKCk7CisJfQorfQorRVhQT1JUX1NZTUJPTCh2bV9nZXRfcGFnZV9w
cm90KTsKKwogI2lmZGVmIENPTkZJR19BUk1fRE1BX01FTV9CVUZGRVJBQkxFCiBwZ3Byb3RfdCBw
aHlzX21lbV9hY2Nlc3NfcHJvdChzdHJ1Y3QgZmlsZSAqZmlsZSwgdW5zaWduZWQgbG9uZyBwZm4s
CiAJCQkgICAgICB1bnNpZ25lZCBsb25nIHNpemUsIHBncHJvdF90IHZtYV9wcm90KQotLSAKMi4y
NS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVu
UklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9s
aXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
