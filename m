Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id BF90E55923
	for <lists+openrisc@lfdr.de>; Tue, 25 Jun 2019 22:41:49 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id E533220289;
	Tue, 25 Jun 2019 22:41:48 +0200 (CEST)
Received: from bombadil.infradead.org (bombadil.infradead.org
 [198.137.202.133])
 by mail.librecores.org (Postfix) with ESMTPS id 173082028C
 for <openrisc@lists.librecores.org>; Fri, 14 Jun 2019 16:45:14 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=Lp33G95RApad4OoMPVhEWxnG6rpybHpD3SmPhWNxiyc=; b=ETUqURUesR5zD6ELh/wNIIKjv/
 6avWd3olLEls5PRA/XeUZq+rfXb701fy1eY/VqmCJ3rwBg3u8CIi6aHCeY3bbvikSI/ybU/pNZxiR
 Poa6PE+HDfEMp4erQSfQUg1Nh9A3JjjOsypgdapdFpa42UTOS5o5TCZvKRs+MJ65+zc3jTMNmOHaQ
 jW77A5VVn5KQascF3t6u/EiCrbYbwoeEh2IvTnvFyoob7By7HnICyqr5x80scX8QKT4TdAbnFqzo6
 /L2qluB6/ItKJmHa7IJQFD6c+NBiaBXr0s3eCNIKgXDiWCXwWukbv+s4YY1sRUdR+K35QMc03AxjV
 mlLJh2vA==;
Received: from 213-225-9-13.nat.highway.a1.net ([213.225.9.13] helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hbnRm-00061n-3l; Fri, 14 Jun 2019 14:44:54 +0000
From: Christoph Hellwig <hch@lst.de>
To: Vineet Gupta <vgupta@synopsys.com>
Date: Fri, 14 Jun 2019 16:44:29 +0200
Message-Id: <20190614144431.21760-6-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190614144431.21760-1-hch@lst.de>
References: <20190614144431.21760-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Approved-At: Tue, 25 Jun 2019 22:41:44 +0200
Subject: [OpenRISC] [PATCH 5/7] dma-direct: handle DMA_ATTR_NON_CONSISTENT
 in common code
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Jonas Bonn <jonas@southpole.se>, linux-xtensa@linux-xtensa.org,
 Vladimir Murzin <vladimir.murzin@arm.com>, linux-parisc@vger.kernel.org,
 Helge Deller <deller@gmx.de>, linux-kernel@vger.kernel.org,
 iommu@lists.linux-foundation.org, openrisc@lists.librecores.org,
 linux-snps-arc@lists.infradead.org, linux-arm-kernel@lists.infradead.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T25seSBjYWxsIGludG8gYXJjaF9kbWFfYWxsb2MgaWYgd2UgcmVxdWlyZSBhbiB1bmNhY2hlZCBt
YXBwaW5nLAphbmQgcmVtb3ZlIHRoZSBwYXJpc2MgY29kZSBtYW51YWxseSBkb2luZyBub3JtYWwg
Y2FjaGVkCkRNQV9BVFRSX05PTl9DT05TSVNURU5UIGFsbG9jYXRpb25zLgoKU2lnbmVkLW9mZi1i
eTogQ2hyaXN0b3BoIEhlbGx3aWcgPGhjaEBsc3QuZGU+Ci0tLQogYXJjaC9wYXJpc2Mva2VybmVs
L3BjaS1kbWEuYyB8IDQ4ICsrKysrKysrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoga2Vy
bmVsL2RtYS9kaXJlY3QuYyAgICAgICAgICB8ICA0ICstLQogMiBmaWxlcyBjaGFuZ2VkLCAxNSBp
bnNlcnRpb25zKCspLCAzNyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9r
ZXJuZWwvcGNpLWRtYS5jIGIvYXJjaC9wYXJpc2Mva2VybmVsL3BjaS1kbWEuYwppbmRleCAyMzkx
NjIzNTViNTguLmNhMzVkOWE3NmU1MCAxMDA2NDQKLS0tIGEvYXJjaC9wYXJpc2Mva2VybmVsL3Bj
aS1kbWEuYworKysgYi9hcmNoL3BhcmlzYy9rZXJuZWwvcGNpLWRtYS5jCkBAIC0zOTQsMTcgKzM5
NCwyMCBAQCBwY3hsX2RtYV9pbml0KHZvaWQpCiAKIF9faW5pdGNhbGwocGN4bF9kbWFfaW5pdCk7
CiAKLXN0YXRpYyB2b2lkICpwY3hsX2RtYV9hbGxvYyhzdHJ1Y3QgZGV2aWNlICpkZXYsIHNpemVf
dCBzaXplLAotCQlkbWFfYWRkcl90ICpkbWFfaGFuZGxlLCBnZnBfdCBmbGFnLCB1bnNpZ25lZCBs
b25nIGF0dHJzKQordm9pZCAqYXJjaF9kbWFfYWxsb2Moc3RydWN0IGRldmljZSAqZGV2LCBzaXpl
X3Qgc2l6ZSwKKwkJZG1hX2FkZHJfdCAqZG1hX2hhbmRsZSwgZ2ZwX3QgZ2ZwLCB1bnNpZ25lZCBs
b25nIGF0dHJzKQogewogCXVuc2lnbmVkIGxvbmcgdmFkZHI7CiAJdW5zaWduZWQgbG9uZyBwYWRk
cjsKIAlpbnQgb3JkZXI7CiAKKwlpZiAoYm9vdF9jcHVfZGF0YS5jcHVfdHlwZSAhPSBwY3hsMiAm
JiBib290X2NwdV9kYXRhLmNwdV90eXBlICE9IHBjeGwpCisJCXJldHVybiBOVUxMOworCiAJb3Jk
ZXIgPSBnZXRfb3JkZXIoc2l6ZSk7CiAJc2l6ZSA9IDEgPDwgKG9yZGVyICsgUEFHRV9TSElGVCk7
CiAJdmFkZHIgPSBwY3hsX2FsbG9jX3JhbmdlKHNpemUpOwotCXBhZGRyID0gX19nZXRfZnJlZV9w
YWdlcyhmbGFnIHwgX19HRlBfWkVSTywgb3JkZXIpOworCXBhZGRyID0gX19nZXRfZnJlZV9wYWdl
cyhnZnAgfCBfX0dGUF9aRVJPLCBvcmRlcik7CiAJZmx1c2hfa2VybmVsX2RjYWNoZV9yYW5nZShw
YWRkciwgc2l6ZSk7CiAJcGFkZHIgPSBfX3BhKHBhZGRyKTsKIAltYXBfdW5jYWNoZWRfcGFnZXMo
dmFkZHIsIHNpemUsIHBhZGRyKTsKQEAgLTQyMSw0NCArNDI0LDE5IEBAIHN0YXRpYyB2b2lkICpw
Y3hsX2RtYV9hbGxvYyhzdHJ1Y3QgZGV2aWNlICpkZXYsIHNpemVfdCBzaXplLAogCXJldHVybiAo
dm9pZCAqKXZhZGRyOwogfQogCi1zdGF0aWMgdm9pZCAqcGN4X2RtYV9hbGxvYyhzdHJ1Y3QgZGV2
aWNlICpkZXYsIHNpemVfdCBzaXplLAotCQlkbWFfYWRkcl90ICpkbWFfaGFuZGxlLCBnZnBfdCBm
bGFnLCB1bnNpZ25lZCBsb25nIGF0dHJzKQotewotCXZvaWQgKmFkZHI7Ci0KLQlpZiAoKGF0dHJz
ICYgRE1BX0FUVFJfTk9OX0NPTlNJU1RFTlQpID09IDApCi0JCXJldHVybiBOVUxMOwotCi0JYWRk
ciA9ICh2b2lkICopX19nZXRfZnJlZV9wYWdlcyhmbGFnIHwgX19HRlBfWkVSTywgZ2V0X29yZGVy
KHNpemUpKTsKLQlpZiAoYWRkcikKLQkJKmRtYV9oYW5kbGUgPSAoZG1hX2FkZHJfdCl2aXJ0X3Rv
X3BoeXMoYWRkcik7Ci0KLQlyZXR1cm4gYWRkcjsKLX0KLQotdm9pZCAqYXJjaF9kbWFfYWxsb2Mo
c3RydWN0IGRldmljZSAqZGV2LCBzaXplX3Qgc2l6ZSwKLQkJZG1hX2FkZHJfdCAqZG1hX2hhbmRs
ZSwgZ2ZwX3QgZ2ZwLCB1bnNpZ25lZCBsb25nIGF0dHJzKQotewotCi0JaWYgKGJvb3RfY3B1X2Rh
dGEuY3B1X3R5cGUgPT0gcGN4bDIgfHwgYm9vdF9jcHVfZGF0YS5jcHVfdHlwZSA9PSBwY3hsKQot
CQlyZXR1cm4gcGN4bF9kbWFfYWxsb2MoZGV2LCBzaXplLCBkbWFfaGFuZGxlLCBnZnAsIGF0dHJz
KTsKLQllbHNlCi0JCXJldHVybiBwY3hfZG1hX2FsbG9jKGRldiwgc2l6ZSwgZG1hX2hhbmRsZSwg
Z2ZwLCBhdHRycyk7Ci19Ci0KIHZvaWQgYXJjaF9kbWFfZnJlZShzdHJ1Y3QgZGV2aWNlICpkZXYs
IHNpemVfdCBzaXplLCB2b2lkICp2YWRkciwKIAkJZG1hX2FkZHJfdCBkbWFfaGFuZGxlLCB1bnNp
Z25lZCBsb25nIGF0dHJzKQogewogCWludCBvcmRlciA9IGdldF9vcmRlcihzaXplKTsKIAotCWlm
IChib290X2NwdV9kYXRhLmNwdV90eXBlID09IHBjeGwyIHx8IGJvb3RfY3B1X2RhdGEuY3B1X3R5
cGUgPT0gcGN4bCkgewotCQlzaXplID0gMSA8PCAob3JkZXIgKyBQQUdFX1NISUZUKTsKLQkJdW5t
YXBfdW5jYWNoZWRfcGFnZXMoKHVuc2lnbmVkIGxvbmcpdmFkZHIsIHNpemUpOwotCQlwY3hsX2Zy
ZWVfcmFuZ2UoKHVuc2lnbmVkIGxvbmcpdmFkZHIsIHNpemUpOworCVdBUk5fT05fT05DRShib290
X2NwdV9kYXRhLmNwdV90eXBlICE9IHBjeGwyICYmCisJCSAgICAgYm9vdF9jcHVfZGF0YS5jcHVf
dHlwZSAhPSBwY3hsKTsKIAotCQl2YWRkciA9IF9fdmEoZG1hX2hhbmRsZSk7Ci0JfQotCWZyZWVf
cGFnZXMoKHVuc2lnbmVkIGxvbmcpdmFkZHIsIGdldF9vcmRlcihzaXplKSk7CisJc2l6ZSA9IDEg
PDwgKG9yZGVyICsgUEFHRV9TSElGVCk7CisJdW5tYXBfdW5jYWNoZWRfcGFnZXMoKHVuc2lnbmVk
IGxvbmcpdmFkZHIsIHNpemUpOworCXBjeGxfZnJlZV9yYW5nZSgodW5zaWduZWQgbG9uZyl2YWRk
ciwgc2l6ZSk7CisKKwlmcmVlX3BhZ2VzKCh1bnNpZ25lZCBsb25nKV9fdmEoZG1hX2hhbmRsZSks
IG9yZGVyKTsKIH0KIAogdm9pZCBhcmNoX3N5bmNfZG1hX2Zvcl9kZXZpY2Uoc3RydWN0IGRldmlj
ZSAqZGV2LCBwaHlzX2FkZHJfdCBwYWRkciwKZGlmZiAtLWdpdCBhL2tlcm5lbC9kbWEvZGlyZWN0
LmMgYi9rZXJuZWwvZG1hL2RpcmVjdC5jCmluZGV4IGMyODkzNzEzYmY4MC4uZmMzNTRmNGY0OTBi
IDEwMDY0NAotLS0gYS9rZXJuZWwvZG1hL2RpcmVjdC5jCisrKyBiL2tlcm5lbC9kbWEvZGlyZWN0
LmMKQEAgLTE5MSw3ICsxOTEsNyBAQCB2b2lkICpkbWFfZGlyZWN0X2FsbG9jKHN0cnVjdCBkZXZp
Y2UgKmRldiwgc2l6ZV90IHNpemUsCiAJCWRtYV9hZGRyX3QgKmRtYV9oYW5kbGUsIGdmcF90IGdm
cCwgdW5zaWduZWQgbG9uZyBhdHRycykKIHsKIAlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX0FSQ0hf
SEFTX1VOQ0FDSEVEX1NFR01FTlQpICYmCi0JICAgICFkZXZfaXNfZG1hX2NvaGVyZW50KGRldikp
CisJICAgIGRtYV9hbGxvY19uZWVkX3VuY2FjaGVkKGRldiwgYXR0cnMpKQogCQlyZXR1cm4gYXJj
aF9kbWFfYWxsb2MoZGV2LCBzaXplLCBkbWFfaGFuZGxlLCBnZnAsIGF0dHJzKTsKIAlyZXR1cm4g
ZG1hX2RpcmVjdF9hbGxvY19wYWdlcyhkZXYsIHNpemUsIGRtYV9oYW5kbGUsIGdmcCwgYXR0cnMp
OwogfQpAQCAtMjAwLDcgKzIwMCw3IEBAIHZvaWQgZG1hX2RpcmVjdF9mcmVlKHN0cnVjdCBkZXZp
Y2UgKmRldiwgc2l6ZV90IHNpemUsCiAJCXZvaWQgKmNwdV9hZGRyLCBkbWFfYWRkcl90IGRtYV9h
ZGRyLCB1bnNpZ25lZCBsb25nIGF0dHJzKQogewogCWlmICghSVNfRU5BQkxFRChDT05GSUdfQVJD
SF9IQVNfVU5DQUNIRURfU0VHTUVOVCkgJiYKLQkgICAgIWRldl9pc19kbWFfY29oZXJlbnQoZGV2
KSkKKwkgICAgZG1hX2FsbG9jX25lZWRfdW5jYWNoZWQoZGV2LCBhdHRycykpCiAJCWFyY2hfZG1h
X2ZyZWUoZGV2LCBzaXplLCBjcHVfYWRkciwgZG1hX2FkZHIsIGF0dHJzKTsKIAllbHNlCiAJCWRt
YV9kaXJlY3RfZnJlZV9wYWdlcyhkZXYsIHNpemUsIGNwdV9hZGRyLCBkbWFfYWRkciwgYXR0cnMp
OwotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcK
aHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
