Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id D72B820DCE0
	for <lists+openrisc@lfdr.de>; Mon, 29 Jun 2020 22:45:04 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 9788020D1A;
	Mon, 29 Jun 2020 22:45:04 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 7667420CB6
 for <openrisc@lists.librecores.org>; Sat, 27 Jun 2020 16:35:49 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 5B21421924;
 Sat, 27 Jun 2020 14:35:40 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1593268548;
 bh=4zLQnkDzVvl7CnPz5Ef9F0uViqB2xn6tl67WrwnG42E=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=NVVvqNa90ykWnheABq+B8c38h67OG6nTbzT8Z2XO4RabHV8O2TdYOOrgDgGYtd0Ez
 zFB95kCYiPhfqCMwza00ZFzoy7xr5PgKgYcg3noOCo7XJkYtZX3nzb2fFOINd5+iVr
 gj5C4cluc45jk88vfVH2liEtwnGvhSYuGYcE0Pzo=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Sat, 27 Jun 2020 17:34:50 +0300
Message-Id: <20200627143453.31835-6-rppt@kernel.org>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200627143453.31835-1-rppt@kernel.org>
References: <20200627143453.31835-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Mon, 29 Jun 2020 22:44:54 +0200
Subject: [OpenRISC] [PATCH 5/8] asm-generic: pgalloc: provide generic
 pud_alloc_one() and pud_free_one()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-ia64@vger.kernel.org, linux-sh@vger.kernel.org,
 Peter Zijlstra <peterz@infradead.org>, Max Filippov <jcmvbkbc@gmail.com>,
 Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>, linux-csky@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-riscv@lists.infradead.org,
 linux-arch@vger.kernel.org, Stephen Rothwell <sfr@canb.auug.org.au>,
 linux-hexagon@vger.kernel.org, Joerg Roedel <joro@8bytes.org>,
 Christophe Leroy <christophe.leroy@csgroup.eu>,
 Mike Rapoport <rppt@linux.ibm.com>, Abdul Haleem <abdhalee@linux.vnet.ibm.com>,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 Arnd Bergmann <arnd@arndb.de>, linux-s390@vger.kernel.org,
 linux-um@lists.infradead.org, Steven Rostedt <rostedt@goodmis.org>,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Andy Lutomirski <luto@kernel.org>, linux-arm-kernel@lists.infradead.org,
 linux-parisc@vger.kernel.org, linux-mm@kvack.org, linux-mips@vger.kernel.org,
 linux-alpha@vger.kernel.org, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKU2V2ZXJhbCBhcmNoaXRl
Y3R1cmVzIGRlZmluZSBwdWRfYWxsb2Nfb25lKCkgYXMgYSB3cmFwcGVyIGZvcgpfX2dldF9mcmVl
X3BhZ2UoKSBhbmQgcHVkX2ZyZWUoKSBhcyBhIHdyYXBwZXIgZm9yIGZyZWVfcGFnZSgpLgoKUHJv
dmlkZSBhIGdlbmVyaWMgaW1wbGVtZW50YXRpb24gaW4gYXNtLWdlbmVyaWMvcGdhbGxvYy5oIGFu
ZCB1c2UgaXQgd2hlcmUKYXBwcm9wcmlhdGUuCgpTaWduZWQtb2ZmLWJ5OiBNaWtlIFJhcG9wb3J0
IDxycHB0QGxpbnV4LmlibS5jb20+Ci0tLQogYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ2FsbG9j
LmggfCAxMSAtLS0tLS0tLS0tLQogYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BnYWxsb2MuaCAgfCAg
OSAtLS0tLS0tLS0KIGFyY2gvbWlwcy9pbmNsdWRlL2FzbS9wZ2FsbG9jLmggIHwgIDYgKy0tLS0t
CiBhcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ2FsbG9jLmggICB8IDE1IC0tLS0tLS0tLS0tLS0tLQog
aW5jbHVkZS9hc20tZ2VuZXJpYy9wZ2FsbG9jLmggICAgfCAzMCArKysrKysrKysrKysrKysrKysr
KysrKysrKysrKysKIDUgZmlsZXMgY2hhbmdlZCwgMzEgaW5zZXJ0aW9ucygrKSwgNDAgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ2FsbG9jLmggYi9h
cmNoL2FybTY0L2luY2x1ZGUvYXNtL3BnYWxsb2MuaAppbmRleCA3MjQ2ZDBhNjYyZTEuLjA5NjU5
NDViNTk1ZCAxMDA2NDQKLS0tIGEvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ2FsbG9jLmgKKysr
IGIvYXJjaC9hcm02NC9pbmNsdWRlL2FzbS9wZ2FsbG9jLmgKQEAgLTM3LDE3ICszNyw2IEBAIHN0
YXRpYyBpbmxpbmUgdm9pZCBfX3B1ZF9wb3B1bGF0ZShwdWRfdCAqcHVkcCwgcGh5c19hZGRyX3Qg
cG1kcCwgcHVkdmFsX3QgcHJvdCkKIAogI2lmIENPTkZJR19QR1RBQkxFX0xFVkVMUyA+IDMKIAot
c3RhdGljIGlubGluZSBwdWRfdCAqcHVkX2FsbG9jX29uZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwg
dW5zaWduZWQgbG9uZyBhZGRyKQotewotCXJldHVybiAocHVkX3QgKilfX2dldF9mcmVlX3BhZ2Uo
R0ZQX1BHVEFCTEVfVVNFUik7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgdm9pZCBwdWRfZnJlZShzdHJ1
Y3QgbW1fc3RydWN0ICptbSwgcHVkX3QgKnB1ZHApCi17Ci0JQlVHX09OKCh1bnNpZ25lZCBsb25n
KXB1ZHAgJiAoUEFHRV9TSVpFLTEpKTsKLQlmcmVlX3BhZ2UoKHVuc2lnbmVkIGxvbmcpcHVkcCk7
Ci19Ci0KIHN0YXRpYyBpbmxpbmUgdm9pZCBfX3A0ZF9wb3B1bGF0ZShwNGRfdCAqcDRkcCwgcGh5
c19hZGRyX3QgcHVkcCwgcDRkdmFsX3QgcHJvdCkKIHsKIAlzZXRfcDRkKHA0ZHAsIF9fcDRkKF9f
cGh5c190b19wNGRfdmFsKHB1ZHApIHwgcHJvdCkpOwpkaWZmIC0tZ2l0IGEvYXJjaC9pYTY0L2lu
Y2x1ZGUvYXNtL3BnYWxsb2MuaCBiL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wZ2FsbG9jLmgKaW5k
ZXggNWRhMWZjNzY0NzdiLi4wNmY4MDM1OGUyMGYgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9pbmNs
dWRlL2FzbS9wZ2FsbG9jLmgKKysrIGIvYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BnYWxsb2MuaApA
QCAtNDEsMTUgKzQxLDYgQEAgcDRkX3BvcHVsYXRlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwNGRf
dCAqIHA0ZF9lbnRyeSwgcHVkX3QgKiBwdWQpCiAJcDRkX3ZhbCgqcDRkX2VudHJ5KSA9IF9fcGEo
cHVkKTsKIH0KIAotc3RhdGljIGlubGluZSBwdWRfdCAqcHVkX2FsbG9jX29uZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyKQotewotCXJldHVybiAocHVkX3QgKilfX2dl
dF9mcmVlX3BhZ2UoR0ZQX0tFUk5FTCB8IF9fR0ZQX1pFUk8pOwotfQotCi1zdGF0aWMgaW5saW5l
IHZvaWQgcHVkX2ZyZWUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1ZF90ICpwdWQpCi17Ci0JZnJl
ZV9wYWdlKCh1bnNpZ25lZCBsb25nKXB1ZCk7Ci19CiAjZGVmaW5lIF9fcHVkX2ZyZWVfdGxiKHRs
YiwgcHVkLCBhZGRyZXNzKQlwdWRfZnJlZSgodGxiKS0+bW0sIHB1ZCkKICNlbmRpZiAvKiBDT05G
SUdfUEdUQUJMRV9MRVZFTFMgPT0gNCAqLwogCmRpZmYgLS1naXQgYS9hcmNoL21pcHMvaW5jbHVk
ZS9hc20vcGdhbGxvYy5oIGIvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BnYWxsb2MuaAppbmRleCBl
ZWQxYjNlOGM2NDIuLmU1YTg0MDkxMGNlMCAxMDA2NDQKLS0tIGEvYXJjaC9taXBzL2luY2x1ZGUv
YXNtL3BnYWxsb2MuaAorKysgYi9hcmNoL21pcHMvaW5jbHVkZS9hc20vcGdhbGxvYy5oCkBAIC0x
NCw2ICsxNCw3IEBACiAjaW5jbHVkZSA8bGludXgvc2NoZWQuaD4KIAogI2RlZmluZSBfX0hBVkVf
QVJDSF9QTURfQUxMT0NfT05FCisjZGVmaW5lIF9fSEFWRV9BUkNIX1BVRF9BTExPQ19PTkUKICNp
bmNsdWRlIDxhc20tZ2VuZXJpYy9wZ2FsbG9jLmg+CiAKIHN0YXRpYyBpbmxpbmUgdm9pZCBwbWRf
cG9wdWxhdGVfa2VybmVsKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwbWRfdCAqcG1kLApAQCAtODcs
MTEgKzg4LDYgQEAgc3RhdGljIGlubGluZSBwdWRfdCAqcHVkX2FsbG9jX29uZShzdHJ1Y3QgbW1f
c3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBhZGRyZXNzKQogCXJldHVybiBwdWQ7CiB9CiAKLXN0
YXRpYyBpbmxpbmUgdm9pZCBwdWRfZnJlZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwgcHVkX3QgKnB1
ZCkKLXsKLQlmcmVlX3BhZ2VzKCh1bnNpZ25lZCBsb25nKXB1ZCwgUFVEX09SREVSKTsKLX0KLQog
c3RhdGljIGlubGluZSB2b2lkIHA0ZF9wb3B1bGF0ZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwgcDRk
X3QgKnA0ZCwgcHVkX3QgKnB1ZCkKIHsKIAlzZXRfcDRkKHA0ZCwgX19wNGQoKHVuc2lnbmVkIGxv
bmcpcHVkKSk7CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ2FsbG9jLmggYi9h
cmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ2FsbG9jLmgKaW5kZXggMjVmZWFhMTE3YzQwLi4zZDEwODVh
MTQzNDcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BnYWxsb2MuaAorKysgYi9h
cmNoL3g4Ni9pbmNsdWRlL2FzbS9wZ2FsbG9jLmgKQEAgLTEyMywyMSArMTIzLDYgQEAgc3RhdGlj
IGlubGluZSB2b2lkIHA0ZF9wb3B1bGF0ZV9zYWZlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwNGRf
dCAqcDRkLCBwdWRfdCAqcHUKIAlzZXRfcDRkX3NhZmUocDRkLCBfX3A0ZChfUEFHRV9UQUJMRSB8
IF9fcGEocHVkKSkpOwogfQogCi1zdGF0aWMgaW5saW5lIHB1ZF90ICpwdWRfYWxsb2Nfb25lKHN0
cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNpZ25lZCBsb25nIGFkZHIpCi17Ci0JZ2ZwX3QgZ2ZwID0g
R0ZQX0tFUk5FTF9BQ0NPVU5UOwotCi0JaWYgKG1tID09ICZpbml0X21tKQotCQlnZnAgJj0gfl9f
R0ZQX0FDQ09VTlQ7Ci0JcmV0dXJuIChwdWRfdCAqKWdldF96ZXJvZWRfcGFnZShnZnApOwotfQot
Ci1zdGF0aWMgaW5saW5lIHZvaWQgcHVkX2ZyZWUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1ZF90
ICpwdWQpCi17Ci0JQlVHX09OKCh1bnNpZ25lZCBsb25nKXB1ZCAmIChQQUdFX1NJWkUtMSkpOwot
CWZyZWVfcGFnZSgodW5zaWduZWQgbG9uZylwdWQpOwotfQotCiBleHRlcm4gdm9pZCBfX19wdWRf
ZnJlZV90bGIoc3RydWN0IG1tdV9nYXRoZXIgKnRsYiwgcHVkX3QgKnB1ZCk7CiAKIHN0YXRpYyBp
bmxpbmUgdm9pZCBfX3B1ZF9mcmVlX3RsYihzdHJ1Y3QgbW11X2dhdGhlciAqdGxiLCBwdWRfdCAq
cHVkLApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9hc20tZ2VuZXJpYy9wZ2FsbG9jLmggYi9pbmNsdWRl
L2FzbS1nZW5lcmljL3BnYWxsb2MuaAppbmRleCAxYmMwMjc4OTFhMDAuLmQzNjE1NzRhYWFkZiAx
MDA2NDQKLS0tIGEvaW5jbHVkZS9hc20tZ2VuZXJpYy9wZ2FsbG9jLmgKKysrIGIvaW5jbHVkZS9h
c20tZ2VuZXJpYy9wZ2FsbG9jLmgKQEAgLTE0NSw2ICsxNDUsMzYgQEAgc3RhdGljIGlubGluZSB2
b2lkIHBtZF9mcmVlKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCBwbWRfdCAqcG1kKQogCiAjZW5kaWYg
LyogQ09ORklHX1BHVEFCTEVfTEVWRUxTID4gMiAqLwogCisjaWYgQ09ORklHX1BHVEFCTEVfTEVW
RUxTID4gMworCisjaWZuZGVmIF9fSEFWRV9BUkNIX1BVRF9GUkVFCisvKioKKyAqIHB1ZF9hbGxv
Y19vbmUgLSBhbGxvY2F0ZSBhIHBhZ2UgZm9yIFBVRC1sZXZlbCBwYWdlIHRhYmxlCisgKiBAbW06
IHRoZSBtbV9zdHJ1Y3Qgb2YgdGhlIGN1cnJlbnQgY29udGV4dAorICoKKyAqIEFsbG9jYXRlcyBh
IHBhZ2UgdXNpbmcgJUdGUF9QR1RBQkxFX1VTRVIgZm9yIHVzZXIgY29udGV4dCBhbmQKKyAqICVH
RlBfUEdUQUJMRV9LRVJORUwgZm9yIGtlcm5lbCBjb250ZXh0LgorICoKKyAqIFJldHVybjogcG9p
bnRlciB0byB0aGUgYWxsb2NhdGVkIG1lbW9yeSBvciAlTlVMTCBvbiBlcnJvcgorICovCitzdGF0
aWMgaW5saW5lIHB1ZF90ICpwdWRfYWxsb2Nfb25lKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNp
Z25lZCBsb25nIGFkZHIpCit7CisJZ2ZwX3QgZ2ZwID0gR0ZQX1BHVEFCTEVfVVNFUjsKKworCWlm
IChtbSA9PSAmaW5pdF9tbSkKKwkJZ2ZwID0gR0ZQX1BHVEFCTEVfS0VSTkVMOworCXJldHVybiAo
cHVkX3QgKilnZXRfemVyb2VkX3BhZ2UoZ2ZwKTsKK30KKyNlbmRpZgorCitzdGF0aWMgaW5saW5l
IHZvaWQgcHVkX2ZyZWUoc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1ZF90ICpwdWQpCit7CisJQlVH
X09OKCh1bnNpZ25lZCBsb25nKXB1ZCAmIChQQUdFX1NJWkUtMSkpOworCWZyZWVfcGFnZSgodW5z
aWduZWQgbG9uZylwdWQpOworfQorCisjZW5kaWYgLyogQ09ORklHX1BHVEFCTEVfTEVWRUxTID4g
MyAqLworCiAjZW5kaWYgLyogQ09ORklHX01NVSAqLwogCiAjZW5kaWYgLyogX19BU01fR0VORVJJ
Q19QR0FMTE9DX0ggKi8KLS0gCjIuMjYuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxp
YnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJp
c2MK
