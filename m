Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id E2BC116313A
	for <lists+openrisc@lfdr.de>; Tue, 18 Feb 2020 21:00:37 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id A520020689;
	Tue, 18 Feb 2020 21:00:37 +0100 (CET)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 3EBD120974
 for <openrisc@lists.librecores.org>; Tue, 18 Feb 2020 11:54:54 +0100 (CET)
Received: from hump (unknown [109.236.136.226])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 58260207FD;
 Tue, 18 Feb 2020 10:54:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1582023292;
 bh=CMlZZWS7PO9lkPnhA08fc6Islr+OQCEeZuheLiBfVmU=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=nQZIkGPAmBAW2q8NANsj3kry2FjoyJoV6/tOeR6LNswBfh2J3GwBoJflFT5WH0M0E
 dfZCuTZ+znP94xdsEPbHpuBFhjabZfi5XCWgerZeTyyA+r8h1bx3I9KPRweYB3ciYM
 WYq+qWxM8vgm+Ut2efYgnUJmpLpvYONcSRjzEgV4=
Date: Tue, 18 Feb 2020 12:54:40 +0200
From: Mike Rapoport <rppt@kernel.org>
To: Christophe Leroy <christophe.leroy@c-s.fr>
Message-ID: <20200218105440.GA1698@hump>
References: <20200216081843.28670-1-rppt@kernel.org>
 <20200216081843.28670-8-rppt@kernel.org>
 <c79b363c-a111-389a-5752-51cf85fa8c44@c-s.fr>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <c79b363c-a111-389a-5752-51cf85fa8c44@c-s.fr>
X-Mailman-Approved-At: Tue, 18 Feb 2020 21:00:15 +0100
Subject: Re: [OpenRISC] [PATCH v2 07/13] powerpc: add support for folded p4d
 page tables
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 Geert Uytterhoeven <geert+renesas@glider.be>, linux-sh@vger.kernel.org,
 Benjamin Herrenschmidt <benh@kernel.crashing.org>, linux-mm@kvack.org,
 Paul Mackerras <paulus@samba.org>, linux-hexagon@vger.kernel.org,
 Will Deacon <will@kernel.org>, kvmarm@lists.cs.columbia.edu,
 Jonas Bonn <jonas@southpole.se>, linux-arch@vger.kernel.org,
 Brian Cain <bcain@codeaurora.org>, Marc Zyngier <maz@kernel.org>,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Mike Rapoport <rppt@linux.ibm.com>, Catalin Marinas <catalin.marinas@arm.com>,
 Julien Thierry <julien.thierry.kdev@gmail.com>,
 uclinux-h8-devel@lists.sourceforge.jp, Fenghua Yu <fenghua.yu@intel.com>,
 Arnd Bergmann <arnd@arndb.de>, Suzuki K Poulose <suzuki.poulose@arm.com>,
 kvm-ppc@vger.kernel.org, openrisc@lists.librecores.org,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Tony Luck <tony.luck@intel.com>, Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-kernel@vger.kernel.org, James Morse <james.morse@arm.com>,
 Michael Ellerman <mpe@ellerman.id.au>, nios2-dev@lists.rocketboards.org,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T24gU3VuLCBGZWIgMTYsIDIwMjAgYXQgMTE6NDE6MDdBTSArMDEwMCwgQ2hyaXN0b3BoZSBMZXJv
eSB3cm90ZToKPiAKPiAKPiBMZSAxNi8wMi8yMDIwIMOgIDA5OjE4LCBNaWtlIFJhcG9wb3J0IGEg
w6ljcml0wqA6Cj4gPiBGcm9tOiBNaWtlIFJhcG9wb3J0IDxycHB0QGxpbnV4LmlibS5jb20+Cj4g
PiAKPiA+IEltcGxlbWVudCBwcmltaXRpdmVzIG5lY2Vzc2FyeSBmb3IgdGhlIDR0aCBsZXZlbCBm
b2xkaW5nLCBhZGQgd2Fsa3Mgb2YgcDRkCj4gPiBsZXZlbCB3aGVyZSBhcHByb3ByaWF0ZSBhbmQg
cmVwbGFjZSA1bGV2ZWwtZml4dXAuaCB3aXRoIHBndGFibGUtbm9wNGQuaC4KPiAKPiBJIGRvbid0
IHRoaW5rIGl0IGlzIHdvcnRoIGFkZGluZyBhbGwgdGhpcyBhZGRpdGlvbm5hbHMgd2Fsa3Mgb2Yg
cDRkLCB0aGlzCj4gcGF0Y2ggY291bGQgYmUgbGltaXRlZCB0byBjaGFuZ2VzIGxpa2U6Cj4gCj4g
LQkJcHVkID0gcHVkX29mZnNldChwZ2QsIGdwYSk7Cj4gKwkJcHVkID0gcHVkX29mZnNldChwNGRf
b2Zmc2V0KHBnZCwgZ3BhKSwgZ3BhKTsKPiAKPiBUaGUgYWRkaXRpb25uYWwgd2Fsa3Mgc2hvdWxk
IGJlIGFkZGVkIHRocm91Z2ggYW5vdGhlciBwYXRjaCB0aGUgZGF5IHBvd2VycGMKPiBuZWVkIHRo
ZW0uCgpPaywgSSdsbCB1cGRhdGUgdGhlIHBhdGNoIHRvIHJlZHVjZSB3YWxraW5nIHRoZSBwNGQu
CiAKPiBTZWUgYmVsb3cgZm9yIG1vcmUgY29tbWVudHMuCj4gCj4gPiAKPiA+IFNpZ25lZC1vZmYt
Ynk6IE1pa2UgUmFwb3BvcnQgPHJwcHRAbGludXguaWJtLmNvbT4KPiA+IFRlc3RlZC1ieTogQ2hy
aXN0b3BoZSBMZXJveSA8Y2hyaXN0b3BoZS5sZXJveUBjLXMuZnI+ICMgOHh4IGFuZCA4M3h4Cj4g
PiAtLS0KCi4uLgoKPiA+IGRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9v
azNzLzY0L3BndGFibGUuaCBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0
YWJsZS5oCj4gPiBpbmRleCAyMDFhNjllNmEzNTUuLmRkZGRiYWZmZjBhYiAxMDA2NDQKPiA+IC0t
LSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9ib29rM3MvNjQvcGd0YWJsZS5oCj4gPiArKysg
Yi9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vYm9vazNzLzY0L3BndGFibGUuaAo+ID4gQEAgLTIs
NyArMiw3IEBACj4gPiAgICNpZm5kZWYgX0FTTV9QT1dFUlBDX0JPT0szU182NF9QR1RBQkxFX0hf
Cj4gPiAgICNkZWZpbmUgX0FTTV9QT1dFUlBDX0JPT0szU182NF9QR1RBQkxFX0hfCj4gPiAtI2lu
Y2x1ZGUgPGFzbS1nZW5lcmljLzVsZXZlbC1maXh1cC5oPgo+ID4gKyNpbmNsdWRlIDxhc20tZ2Vu
ZXJpYy9wZ3RhYmxlLW5vcDRkLmg+Cj4gPiAgICNpZm5kZWYgX19BU1NFTUJMWV9fCj4gPiAgICNp
bmNsdWRlIDxsaW51eC9tbWRlYnVnLmg+Cj4gPiBAQCAtMjUxLDcgKzI1MSw3IEBAIGV4dGVybiB1
bnNpZ25lZCBsb25nIF9fcG1kX2ZyYWdfc2l6ZV9zaGlmdDsKPiA+ICAgLyogQml0cyB0byBtYXNr
IG91dCBmcm9tIGEgUFVEIHRvIGdldCB0byB0aGUgUE1EIHBhZ2UgKi8KPiA+ICAgI2RlZmluZSBQ
VURfTUFTS0VEX0JJVFMJCTB4YzAwMDAwMDAwMDAwMDBmZlVMCj4gPiAgIC8qIEJpdHMgdG8gbWFz
ayBvdXQgZnJvbSBhIFBHRCB0byBnZXQgdG8gdGhlIFBVRCBwYWdlICovCj4gPiAtI2RlZmluZSBQ
R0RfTUFTS0VEX0JJVFMJCTB4YzAwMDAwMDAwMDAwMDBmZlVMCj4gPiArI2RlZmluZSBQNERfTUFT
S0VEX0JJVFMJCTB4YzAwMDAwMDAwMDAwMDBmZlVMCj4gPiAgIC8qCj4gPiAgICAqIFVzZWQgYXMg
YW4gaW5kaWNhdG9yIGZvciByY3UgY2FsbGJhY2sgZnVuY3Rpb25zCj4gPiBAQCAtOTQ5LDU0ICs5
NDksNjAgQEAgc3RhdGljIGlubGluZSBib29sIHB1ZF9hY2Nlc3NfcGVybWl0dGVkKHB1ZF90IHB1
ZCwgYm9vbCB3cml0ZSkKPiA+ICAgCXJldHVybiBwdGVfYWNjZXNzX3Blcm1pdHRlZChwdWRfcHRl
KHB1ZCksIHdyaXRlKTsKPiA+ICAgfQo+ID4gLSNkZWZpbmUgcGdkX3dyaXRlKHBnZCkJCXB0ZV93
cml0ZShwZ2RfcHRlKHBnZCkpCj4gPiArI2RlZmluZSBfX3A0ZF9yYXcoeCkJKChwNGRfdCkgeyBf
X3BnZF9yYXcoeCkgfSkKPiA+ICtzdGF0aWMgaW5saW5lIF9fYmU2NCBwNGRfcmF3KHA0ZF90IHgp
Cj4gPiArewo+ID4gKwlyZXR1cm4gcGdkX3Jhdyh4LnBnZCk7Cj4gPiArfQo+ID4gKwo+IAo+IFNo
b3VsZG4ndCB0aGlzIGJlIGRlZmluZWQgaW4gYXNtL3BndGFibGUtYmUtdHlwZXMuaCwganVzdCBs
aWtlIG90aGVyCj4gX19weHhfcmF3KCkgPwoKSWRlYWxseSB5ZXMsIGJ1dCB0aGlzIGNyZWF0ZXMg
d2VpcmQgaGVhZGVyIGZpbGUgZGVwZW5kZW5jaWVzIGFuZCB1bnRhbmdsaW5nCnRoZW0gd291bGQg
Z2VuZXJhdGUgd2F5IHRvbyBtdWNoIGNodXJuLgogCj4gPiArI2RlZmluZSBwNGRfd3JpdGUocDRk
KQkJcHRlX3dyaXRlKHA0ZF9wdGUocDRkKSkKPiA+IC1zdGF0aWMgaW5saW5lIHZvaWQgcGdkX2Ns
ZWFyKHBnZF90ICpwZ2RwKQo+ID4gK3N0YXRpYyBpbmxpbmUgdm9pZCBwNGRfY2xlYXIocDRkX3Qg
KnA0ZHApCj4gPiAgIHsKPiA+IC0JKnBnZHAgPSBfX3BnZCgwKTsKPiA+ICsJKnA0ZHAgPSBfX3A0
ZCgwKTsKPiA+ICAgfQoKLi4uCgo+ID4gQEAgLTU3Myw5ICs1OTYsMTUgQEAgaW50IGt2bXBwY19j
cmVhdGVfcHRlKHN0cnVjdCBrdm0gKmt2bSwgcGdkX3QgKnBndGFibGUsIHB0ZV90IHB0ZSwKPiA+
ICAgCS8qIFRyYXZlcnNlIHRoZSBndWVzdCdzIDJuZC1sZXZlbCB0cmVlLCBhbGxvY2F0ZSBuZXcg
bGV2ZWxzIG5lZWRlZCAqLwo+ID4gICAJcGdkID0gcGd0YWJsZSArIHBnZF9pbmRleChncGEpOwo+
ID4gLQlwdWQgPSBOVUxMOwo+ID4gKwlwNGQgPSBOVUxMOwo+ID4gICAJaWYgKHBnZF9wcmVzZW50
KCpwZ2QpKQo+ID4gLQkJcHVkID0gcHVkX29mZnNldChwZ2QsIGdwYSk7Cj4gPiArCQlwNGQgPSBw
NGRfb2Zmc2V0KHBnZCwgZ3BhKTsKPiA+ICsJZWxzZQo+ID4gKwkJbmV3X3A0ZCA9IHA0ZF9hbGxv
Y19vbmUoa3ZtLT5tbSwgZ3BhKTsKPiA+ICsKPiA+ICsJcHVkID0gTlVMTDsKPiA+ICsJaWYgKHA0
ZF9wcmVzZW50KCpwNGQpKQo+ID4gKwkJcHVkID0gcHVkX29mZnNldChwNGQsIGdwYSk7Cj4gCj4g
SXMgaXQgd29ydGggYWRkaW5nIGFsbCB0aGlzIG5ldyBjb2RlID8KPiAKPiBNeSB1bmRlcnN0YW5k
aW5nIGlzIHRoYXQgdGhlIHNlcmllcyBvYmplY3RpdmUgaXMgdG8gZ2V0IHJpZCBvZgo+IF9fQVJD
SF9IQVNfNUxFVkVMX0hBQ0ssIHRvIHRvIGFkZCBzdXBwb3J0IGZvciA1IGxldmVscyB0byBhbiBh
cmNoaXRlY3R1cmUKPiB0aGF0IG5vdCBuZWVkIGl0IChhdCBsZWFzdCBmb3Igbm93KS4KPiBJZiB3
ZSB3YW50IHRvIGFkZCBzdXBwb3J0IGZvciA1IGxldmVscywgaXQgY2FuIGJlIGRvbmUgbGF0ZXIg
aW4gYW5vdGhlcgo+IHBhdGNoLgo+IAo+IEhlcmUgSSB0aGluayB5b3VyIGNoYW5nZSBjb3VsZCBi
ZSBsaW1pdGVkIHRvOgo+IAo+IC0JCXB1ZCA9IHB1ZF9vZmZzZXQocGdkLCBncGEpOwo+ICsJCXB1
ZCA9IHB1ZF9vZmZzZXQocDRkX29mZnNldChwZ2QsIGdwYSksIGdwYSk7CgpUaGlzIHdvbid0IHdv
cmsuIFdpdGhvdXQgX19BUkNIX1VTRV81TEVWRUxfSEFDSyBkZWZpbmVkIHBnZF9wcmVzZW50KCkg
aXMKaGFyZHdpcmVkIHRvIDEgYW5kIHRoZSBhY3R1YWwgY2hlY2sgZm9yIHRoZSB0b3AgbGV2ZWwg
aXMgcGVyZm9ybWVkIHdpdGgKcDRkX3ByZXNlbnQoKS4gVGhlICdlbHNlJyBjbGF1c2UgdGhhdCBh
bGxvY2F0ZXMgcDRkIHdpbGwgbmV2ZXIgYmUgdGFrZW4gYW5kCml0IGNvdWxkIGJlIHJlbW92ZWQs
IGJ1dCBJIHByZWZlciB0byBrZWVwIGl0IGZvciBjb25zaXN0ZW5jeS4KIAo+ID4gICAJZWxzZQo+
ID4gICAJCW5ld19wdWQgPSBwdWRfYWxsb2Nfb25lKGt2bS0+bW0sIGdwYSk7Cj4gPiBAQCAtNTk3
LDEyICs2MjYsMTggQEAgaW50IGt2bXBwY19jcmVhdGVfcHRlKHN0cnVjdCBrdm0gKmt2bSwgcGdk
X3QgKnBndGFibGUsIHB0ZV90IHB0ZSwKPiA+ICAgCS8qIE5vdyB0cmF2ZXJzZSBhZ2FpbiB1bmRl
ciB0aGUgbG9jayBhbmQgY2hhbmdlIHRoZSB0cmVlICovCj4gPiAgIAlyZXQgPSAtRU5PTUVNOwo+
ID4gICAJaWYgKHBnZF9ub25lKCpwZ2QpKSB7Cj4gPiArCQlpZiAoIW5ld19wNGQpCj4gPiArCQkJ
Z290byBvdXRfdW5sb2NrOwo+ID4gKwkJcGdkX3BvcHVsYXRlKGt2bS0+bW0sIHBnZCwgbmV3X3A0
ZCk7Cj4gPiArCQluZXdfcDRkID0gTlVMTDsKPiA+ICsJfQo+ID4gKwlpZiAocDRkX25vbmUoKnA0
ZCkpIHsKPiA+ICAgCQlpZiAoIW5ld19wdWQpCj4gPiAgIAkJCWdvdG8gb3V0X3VubG9jazsKPiA+
IC0JCXBnZF9wb3B1bGF0ZShrdm0tPm1tLCBwZ2QsIG5ld19wdWQpOwo+ID4gKwkJcDRkX3BvcHVs
YXRlKGt2bS0+bW0sIHA0ZCwgbmV3X3B1ZCk7Cj4gPiAgIAkJbmV3X3B1ZCA9IE5VTEw7Cj4gPiAg
IAl9Cj4gPiAtCXB1ZCA9IHB1ZF9vZmZzZXQocGdkLCBncGEpOwo+ID4gKwlwdWQgPSBwdWRfb2Zm
c2V0KHA0ZCwgZ3BhKTsKPiA+ICAgCWlmIChwdWRfaXNfbGVhZigqcHVkKSkgewo+ID4gICAJCXVu
c2lnbmVkIGxvbmcgaGdwYSA9IGdwYSAmIFBVRF9NQVNLOwo+ID4gQEAgLTEyMjAsNiArMTI1NSw3
IEBAIHN0YXRpYyBzc2l6ZV90IGRlYnVnZnNfcmFkaXhfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwg
Y2hhciBfX3VzZXIgKmJ1ZiwKPiA+ICAgCXBnZF90ICpwZ3Q7Cj4gPiAgIAlzdHJ1Y3Qga3ZtX25l
c3RlZF9ndWVzdCAqbmVzdGVkOwo+ID4gICAJcGdkX3QgcGdkLCAqcGdkcDsKPiA+ICsJcDRkX3Qg
cDRkLCAqcDRkcDsKPiA+ICAgCXB1ZF90IHB1ZCwgKnB1ZHA7Cj4gPiAgIAlwbWRfdCBwbWQsICpw
bWRwOwo+ID4gICAJcHRlX3QgKnB0ZXA7Cj4gPiBAQCAtMTI5OCw3ICsxMzM0LDE0IEBAIHN0YXRp
YyBzc2l6ZV90IGRlYnVnZnNfcmFkaXhfcmVhZChzdHJ1Y3QgZmlsZSAqZmlsZSwgY2hhciBfX3Vz
ZXIgKmJ1ZiwKPiA+ICAgCQkJY29udGludWU7Cj4gPiAgIAkJfQo+ID4gLQkJcHVkcCA9IHB1ZF9v
ZmZzZXQoJnBnZCwgZ3BhKTsKPiA+ICsJCXA0ZHAgPSBwNGRfb2Zmc2V0KCZwZ2QsIGdwYSk7Cj4g
PiArCQlwNGQgPSBSRUFEX09OQ0UoKnA0ZHApOwo+ID4gKwkJaWYgKCEocDRkX3ZhbChwNGQpICYg
X1BBR0VfUFJFU0VOVCkpIHsKPiA+ICsJCQlncGEgPSAoZ3BhICYgUDREX01BU0spICsgUDREX1NJ
WkU7Cj4gPiArCQkJY29udGludWU7Cj4gPiArCQl9Cj4gPiArCj4gPiArCQlwdWRwID0gcHVkX29m
ZnNldCgmcDRkLCBncGEpOwo+IAo+IFNhbWUsIGhlcmUgeW91IGFyZSBmb3JjaW5nIGEgdXNlbGVz
cyByZWFkIHdpdGggUkVBRF9PTkNFKCkuCj4gCj4gWW91ciBjaGFuZ2UgY291bGQgYmUgbGltaXRl
ZCB0bwo+IAo+IC0JCXB1ZHAgPSBwdWRfb2Zmc2V0KCZwZ2QsIGdwYSk7Cj4gKwkJcHVkcCA9IHB1
ZF9vZmZzZXQocDRkX29mZnNldCgmcGdkLCBncGEpLCBncGEpOwoKSGVyZSBhZ2FpbiB0aGUgYWN0
dWFsIGNoZWNrIG11c3QgYmUgZG9uZSBhZ2FpbnN0IHA0ZCByYXRoZXIgdGhhbiBwZ2QuIFdlCmNv
dWxkIHNraXAgUkVBRF9PTkNFKCkgZm9yIHBnZCwgYnV0IHNpbmNlIGl0IGlzIGEgZGVidWdmcyBt
ZXRob2QgSSBkb24ndAp0aGluayBpdCBpcyBtb3JlIGltcG9ydGFudCB0aGFuIGNvZGUgY29uc2lz
dGVuY3kuCiAKPiBUaGlzIGNvbW1lbnQgYXBwbGllcyB0byBtYW55IG90aGVyIHBsYWNlcy4KCkkn
bGwgbWFrZSBhbm90aGVyIHBhc3MgdG8gc2VlIHdoZXJlIHdlIGNhbiB0YWtlIHRoZSBzaG9ydGN1
dCBhbmQgdXNlIAoKCXB1ZHAgPSBwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQoLi4uKSkKIAo+ID4gICAJ
CXB1ZCA9IFJFQURfT05DRSgqcHVkcCk7Cj4gPiAgIAkJaWYgKCEocHVkX3ZhbChwdWQpICYgX1BB
R0VfUFJFU0VOVCkpIHsKPiA+ICAgCQkJZ3BhID0gKGdwYSAmIFBVRF9NQVNLKSArIFBVRF9TSVpF
Owo+ID4gZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9saWIvY29kZS1wYXRjaGluZy5jIGIvYXJj
aC9wb3dlcnBjL2xpYi9jb2RlLXBhdGNoaW5nLmMKPiA+IGluZGV4IDMzNDVmMDM5YTg3Ni4uN2E1
OWY2ODYzY2VjIDEwMDY0NAo+ID4gLS0tIGEvYXJjaC9wb3dlcnBjL2xpYi9jb2RlLXBhdGNoaW5n
LmMKPiA+ICsrKyBiL2FyY2gvcG93ZXJwYy9saWIvY29kZS1wYXRjaGluZy5jCj4gPiBAQCAtMTA3
LDEzICsxMDcsMTggQEAgc3RhdGljIGlubGluZSBpbnQgdW5tYXBfcGF0Y2hfYXJlYSh1bnNpZ25l
ZCBsb25nIGFkZHIpCj4gPiAgIAlwdGVfdCAqcHRlcDsKPiA+ICAgCXBtZF90ICpwbWRwOwo+ID4g
ICAJcHVkX3QgKnB1ZHA7Cj4gPiArCXA0ZF90ICpwNGRwOwo+ID4gICAJcGdkX3QgKnBnZHA7Cj4g
PiAgIAlwZ2RwID0gcGdkX29mZnNldF9rKGFkZHIpOwo+ID4gICAJaWYgKHVubGlrZWx5KCFwZ2Rw
KSkKPiA+ICAgCQlyZXR1cm4gLUVJTlZBTDsKPiA+IC0JcHVkcCA9IHB1ZF9vZmZzZXQocGdkcCwg
YWRkcik7Cj4gPiArCXA0ZHAgPSBwNGRfb2Zmc2V0KHBnZHAsIGFkZHIpOwo+ID4gKwlpZiAodW5s
aWtlbHkoIXA0ZHApKQo+ID4gKwkJcmV0dXJuIC1FSU5WQUw7Cj4gPiArCj4gPiArCXB1ZHAgPSBw
dWRfb2Zmc2V0KHA0ZHAsIGFkZHIpOwo+ID4gICAJaWYgKHVubGlrZWx5KCFwdWRwKSkKPiA+ICAg
CQlyZXR1cm4gLUVJTlZBTDsKPiA+IGRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNz
MzIvbW11LmMgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzMzIvbW11LmMKPiA+IGluZGV4IDBhMWM2
NWEyYzU2NS4uYjJmYzNlNzExNjVjIDEwMDY0NAo+ID4gLS0tIGEvYXJjaC9wb3dlcnBjL21tL2Jv
b2szczMyL21tdS5jCj4gPiArKysgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzMzIvbW11LmMKPiA+
IEBAIC0zMTIsNyArMzEyLDcgQEAgdm9pZCBoYXNoX3ByZWxvYWQoc3RydWN0IG1tX3N0cnVjdCAq
bW0sIHVuc2lnbmVkIGxvbmcgZWEpCj4gPiAgIAlpZiAoIUhhc2gpCj4gPiAgIAkJcmV0dXJuOwo+
ID4gLQlwbWQgPSBwbWRfb2Zmc2V0KHB1ZF9vZmZzZXQocGdkX29mZnNldChtbSwgZWEpLCBlYSks
IGVhKTsKPiA+ICsJcG1kID0gcG1kX29mZnNldChwdWRfb2Zmc2V0KHA0ZF9vZmZzZXQocGdkX29m
ZnNldChtbSwgZWEpLCBlYSksIGVhKSwgZWEpOwo+IAo+IElmIHdlIGNvbnRpbnVlIGxpa2UgdGhp
cywgaW4gdGVuIHllYXJzIHRoaXMgbGlrZSBpcyBnb2luZyB0byBiZSBtYW55Cj4ga2lsb21ldGVy
cyBsb25nLgo+IAo+IEkgdGhpbmsgdGhlIGFib3ZlIHdvdWxkIGJlIHdvcnRoIGEgZ2VuZXJpYyBo
ZWxwZXIuCgpBZ3JlZS4gTXkgcGxhbiB3YXMgdG8gZmlyc3QgdW5pZnkgYWxsIHRoZSBhcmNoaXRl
Y3R1cmVzIGFuZCB0aGVuIHN0YXJ0CmludHJvZHVjaW5nIHRoZSBnZW5lcmljIGhlbHBlcnMsIGxp
a2UgZS5nLiBwbWRfb2Zmc2V0X21tKCkuCiAKPiA+ICAgCWlmICghcG1kX25vbmUoKnBtZCkpCj4g
PiAgIAkJYWRkX2hhc2hfcGFnZShtbS0+Y29udGV4dC5pZCwgZWEsIHBtZF92YWwoKnBtZCkpOwo+
ID4gICB9Cj4gPiBkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL3RsYi5jIGIv
YXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL3RsYi5jCj4gPiBpbmRleCAyZmNkMzIxMDQwZmYuLjE3
NWJjMzNiNDFiNyAxMDA2NDQKPiA+IC0tLSBhL2FyY2gvcG93ZXJwYy9tbS9ib29rM3MzMi90bGIu
Ywo+ID4gKysrIGIvYXJjaC9wb3dlcnBjL21tL2Jvb2szczMyL3RsYi5jCj4gPiBAQCAtODcsNyAr
ODcsNyBAQCBzdGF0aWMgdm9pZCBmbHVzaF9yYW5nZShzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5z
aWduZWQgbG9uZyBzdGFydCwKPiA+ICAgCWlmIChzdGFydCA+PSBlbmQpCj4gPiAgIAkJcmV0dXJu
Owo+ID4gICAJZW5kID0gKGVuZCAtIDEpIHwgflBBR0VfTUFTSzsKPiA+IC0JcG1kID0gcG1kX29m
ZnNldChwdWRfb2Zmc2V0KHBnZF9vZmZzZXQobW0sIHN0YXJ0KSwgc3RhcnQpLCBzdGFydCk7Cj4g
PiArCXBtZCA9IHBtZF9vZmZzZXQocHVkX29mZnNldChwNGRfb2Zmc2V0KHBnZF9vZmZzZXQobW0s
IHN0YXJ0KSwgc3RhcnQpLCBzdGFydCksIHN0YXJ0KTsKPiA+ICAgCWZvciAoOzspIHsKPiA+ICAg
CQlwbWRfZW5kID0gKChzdGFydCArIFBHRElSX1NJWkUpICYgUEdESVJfTUFTSykgLSAxOwo+ID4g
ICAJCWlmIChwbWRfZW5kID4gZW5kKQo+ID4gQEAgLTE0NSw3ICsxNDUsNyBAQCB2b2lkIGZsdXNo
X3RsYl9wYWdlKHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLCB1bnNpZ25lZCBsb25nIHZtYWRk
cikKPiA+ICAgCQlyZXR1cm47Cj4gPiAgIAl9Cj4gPiAgIAltbSA9ICh2bWFkZHIgPCBUQVNLX1NJ
WkUpPyB2bWEtPnZtX21tOiAmaW5pdF9tbTsKPiA+IC0JcG1kID0gcG1kX29mZnNldChwdWRfb2Zm
c2V0KHBnZF9vZmZzZXQobW0sIHZtYWRkciksIHZtYWRkciksIHZtYWRkcik7Cj4gPiArCXBtZCA9
IHBtZF9vZmZzZXQocHVkX29mZnNldChwNGRfb2Zmc2V0KHBnZF9vZmZzZXQobW0sIHZtYWRkciks
IHZtYWRkciksIHZtYWRkciksIHZtYWRkcik7Cj4gPiAgIAlpZiAoIXBtZF9ub25lKCpwbWQpKQo+
ID4gICAJCWZsdXNoX2hhc2hfcGFnZXMobW0tPmNvbnRleHQuaWQsIHZtYWRkciwgcG1kX3ZhbCgq
cG1kKSwgMSk7Cj4gPiAgIH0KPiA+IGRpZmYgLS1naXQgYS9hcmNoL3Bvd2VycGMvbW0vYm9vazNz
NjQvaGFzaF9wZ3RhYmxlLmMgYi9hcmNoL3Bvd2VycGMvbW0vYm9vazNzNjQvaGFzaF9wZ3RhYmxl
LmMKPiA+IGluZGV4IDY0NzMzYjljYjIwYS4uOWNkMTU5MzdlODhhIDEwMDY0NAo+ID4gLS0tIGEv
YXJjaC9wb3dlcnBjL21tL2Jvb2szczY0L2hhc2hfcGd0YWJsZS5jCj4gPiArKysgYi9hcmNoL3Bv
d2VycGMvbW0vYm9vazNzNjQvaGFzaF9wZ3RhYmxlLmMKPiA+IEBAIC0xNDgsNiArMTQ4LDcgQEAg
dm9pZCBoYXNoX192bWVtbWFwX3JlbW92ZV9tYXBwaW5nKHVuc2lnbmVkIGxvbmcgc3RhcnQsCj4g
PiAgIGludCBoYXNoX19tYXBfa2VybmVsX3BhZ2UodW5zaWduZWQgbG9uZyBlYSwgdW5zaWduZWQg
bG9uZyBwYSwgcGdwcm90X3QgcHJvdCkKPiA+ICAgewo+ID4gICAJcGdkX3QgKnBnZHA7Cj4gPiAr
CXA0ZF90ICpwNGRwOwo+ID4gICAJcHVkX3QgKnB1ZHA7Cj4gPiAgIAlwbWRfdCAqcG1kcDsKPiA+
ICAgCXB0ZV90ICpwdGVwOwo+ID4gQEAgLTE1NSw3ICsxNTYsOCBAQCBpbnQgaGFzaF9fbWFwX2tl
cm5lbF9wYWdlKHVuc2lnbmVkIGxvbmcgZWEsIHVuc2lnbmVkIGxvbmcgcGEsIHBncHJvdF90IHBy
b3QpCj4gPiAgIAlCVUlMRF9CVUdfT04oVEFTS19TSVpFX1VTRVI2NCA+IEhfUEdUQUJMRV9SQU5H
RSk7Cj4gPiAgIAlpZiAoc2xhYl9pc19hdmFpbGFibGUoKSkgewo+ID4gICAJCXBnZHAgPSBwZ2Rf
b2Zmc2V0X2soZWEpOwo+ID4gLQkJcHVkcCA9IHB1ZF9hbGxvYygmaW5pdF9tbSwgcGdkcCwgZWEp
Owo+ID4gKwkJcDRkcCA9IHA0ZF9vZmZzZXQocGdkcCwgZWEpOwo+ID4gKwkJcHVkcCA9IHB1ZF9h
bGxvYygmaW5pdF9tbSwgcDRkcCwgZWEpOwo+IAo+IENvdWxkIGJlIGEgc2luZ2xlIGxpbmUsIHdp
dGhvdXQgYSBuZXcgdmFyLgo+IAo+IC0JCXB1ZHAgPSBwdWRfYWxsb2MoJmluaXRfbW0sIHBnZHAs
IGVhKTsKPiArCQlwdWRwID0gcHVkX2FsbG9jKCZpbml0X21tLCBwNGRfb2Zmc2V0KHBnZHAsIGVh
KSwgZWEpOwo+IAo+IAo+IFNhbWUga2luZCBvZiBjb21tZW50cyBhcyBhbHJlYWR5IGRvbmUgYXBw
bHkgdG8gdGhlIHJlc3QuCj4gCj4gQ2hyaXN0b3BoZQoKLS0gClNpbmNlcmVseSB5b3VycywKTWlr
ZS4KX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJ
U0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlz
dHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
