Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id D1F2934BF31
	for <lists+openrisc@lfdr.de>; Sun, 28 Mar 2021 23:14:57 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id D62A0212CB;
	Sun, 28 Mar 2021 23:14:53 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id CD69321014
 for <openrisc@lists.librecores.org>; Sun, 28 Mar 2021 08:31:29 +0200 (CEST)
Received: by mail.kernel.org (Postfix) with ESMTPSA id 331216197C;
 Sun, 28 Mar 2021 06:31:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1616913088;
 bh=aYDkJQnGePK/+lkF8hDtexkWagQ4SRB6bigpJhVfgAg=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=FAgaTJnJOmusUtmymyBNZXGK1BUiB+LA57rvQXmHTnMcTLIWlPLGv0PPjuf3tTRRr
 2M7sjdWDdwVjcO7G7yxZCrx9l+ZUtk+0DDg1pMt3NRHZMphNHPFG0G7hgysB/LzNXL
 Qk+qoQKbLwUilgC6hb7zxfcsvrM9A3HaNy/c8TSQG4x2zdRyPx3pAS67nZoGmcISIM
 93imAG0DvPoKRNOZTqu4k854xndY6bJpFXoFuhV/ny4XCRhKJ0GsX6mARj0YJylwLR
 a8OiaIYEGfIi7XB3XgVeDPDpsGXg7Tm6jCxNm6emiN9+uFIgg5DJNngRhzrFEk3zLp
 l+WH2kaYZxeFQ==
From: guoren@kernel.org
To: guoren@kernel.org
Date: Sun, 28 Mar 2021 06:30:24 +0000
Message-Id: <1616913028-83376-4-git-send-email-guoren@kernel.org>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1616913028-83376-1-git-send-email-guoren@kernel.org>
References: <1616913028-83376-1-git-send-email-guoren@kernel.org>
X-Mailman-Approved-At: Sun, 28 Mar 2021 23:14:51 +0200
Subject: [OpenRISC] [PATCH v5 3/7] csky: Convert custom spinlock/rwlock to
 generic qspinlock/qrwlock
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: linux-arch@vger.kernel.org, linux-xtensa@linux-xtensa.org,
 Guo Ren <guoren@linux.alibaba.com>, Arnd Bergmann <arnd@arndb.de>,
 Peter Zijlstra <peterz@infradead.org>, Will Deacon <will@kernel.org>,
 linux-kernel@vger.kernel.org, linux-csky@vger.kernel.org,
 openrisc@lists.librecores.org, sparclinux@vger.kernel.org,
 Waiman Long <longman@redhat.com>, linux-riscv@lists.infradead.org,
 linuxppc-dev@lists.ozlabs.org
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogR3VvIFJlbiA8Z3VvcmVuQGxpbnV4LmFsaWJhYmEuY29tPgoKVXBkYXRlIHRoZSBDLVNL
WSBwb3J0IHRvIHVzZSB0aGUgZ2VuZXJpYyBxc3BpbmxvY2sgYW5kIHFyd2xvY2suCgpDLVNLWSBv
bmx5IHN1cHBvcnQgbGRleC53L3N0ZXgudyB3aXRoIHdvcmQoZG91YmxlIHdvcmQpIHNpemUgJgph
bGlnbiBhY2Nlc3MuIFNvIGl0IG11c3Qgc2VsZWN0IFhDSEczMiB0byBsZXQgcXNwaW5sb2NrIG9u
bHkgdXNlCndvcmQgYXRvbWljIHhjaGdfdGFpbC4KClNpZ25lZC1vZmYtYnk6IEd1byBSZW4gPGd1
b3JlbkBsaW51eC5hbGliYWJhLmNvbT4KQ2M6IFdhaW1hbiBMb25nIDxsb25nbWFuQHJlZGhhdC5j
b20+CkNjOiBQZXRlciBaaWpsc3RyYSA8cGV0ZXJ6QGluZnJhZGVhZC5vcmc+CkNjOiBXaWxsIERl
YWNvbiA8d2lsbEBrZXJuZWwub3JnPgpDYzogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4K
LS0tCiBhcmNoL2Nza3kvS2NvbmZpZyAgICAgICAgICAgICAgICAgICAgICB8ICAyICsKIGFyY2gv
Y3NreS9pbmNsdWRlL2FzbS9LYnVpbGQgICAgICAgICAgIHwgIDIgKwogYXJjaC9jc2t5L2luY2x1
ZGUvYXNtL3NwaW5sb2NrLmggICAgICAgfCA4MiArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQog
YXJjaC9jc2t5L2luY2x1ZGUvYXNtL3NwaW5sb2NrX3R5cGVzLmggfCAxNiArLS0tLQogNCBmaWxl
cyBjaGFuZ2VkLCA2IGluc2VydGlvbnMoKyksIDk2IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L2FyY2gvY3NreS9LY29uZmlnIGIvYXJjaC9jc2t5L0tjb25maWcKaW5kZXggMzRlOTEyMjRhZGMz
Li41OTEwZWI2ZGRkZTIgMTAwNjQ0Ci0tLSBhL2FyY2gvY3NreS9LY29uZmlnCisrKyBiL2FyY2gv
Y3NreS9LY29uZmlnCkBAIC04LDYgKzgsOCBAQCBjb25maWcgQ1NLWQogCXNlbGVjdCBBUkNIX0hB
U19TWU5DX0RNQV9GT1JfREVWSUNFCiAJc2VsZWN0IEFSQ0hfVVNFX0JVSUxUSU5fQlNXQVAKIAlz
ZWxlY3QgQVJDSF9VU0VfUVVFVUVEX1JXTE9DS1MKKwlzZWxlY3QgQVJDSF9VU0VfUVVFVUVEX1NQ
SU5MT0NLUworCXNlbGVjdCBBUkNIX1VTRV9RVUVVRURfU1BJTkxPQ0tTX1hDSEczMgogCXNlbGVj
dCBBUkNIX1dBTlRfRlJBTUVfUE9JTlRFUlMgaWYgIUNQVV9DSzYxMAogCXNlbGVjdCBBUkNIX1dB
TlRfREVGQVVMVF9UT1BET1dOX01NQVBfTEFZT1VUCiAJc2VsZWN0IENPTU1PTl9DTEsKZGlmZiAt
LWdpdCBhL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9LYnVpbGQgYi9hcmNoL2Nza3kvaW5jbHVkZS9h
c20vS2J1aWxkCmluZGV4IGNjMjRiYjhlNTM5Zi4uMmEyZDA5OTYzYmI5IDEwMDY0NAotLS0gYS9h
cmNoL2Nza3kvaW5jbHVkZS9hc20vS2J1aWxkCisrKyBiL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9L
YnVpbGQKQEAgLTIsNiArMiw4IEBACiBnZW5lcmljLXkgKz0gYXNtLW9mZnNldHMuaAogZ2VuZXJp
Yy15ICs9IGdwaW8uaAogZ2VuZXJpYy15ICs9IGt2bV9wYXJhLmgKK2dlbmVyaWMteSArPSBtY3Nf
c3BpbmxvY2suaAogZ2VuZXJpYy15ICs9IHFyd2xvY2suaAorZ2VuZXJpYy15ICs9IHFzcGlubG9j
ay5oCiBnZW5lcmljLXkgKz0gdXNlci5oCiBnZW5lcmljLXkgKz0gdm1saW51eC5sZHMuaApkaWZm
IC0tZ2l0IGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3NwaW5sb2NrLmggYi9hcmNoL2Nza3kvaW5j
bHVkZS9hc20vc3BpbmxvY2suaAppbmRleCA2OWY1YWEyNDljNWYuLmZjZmYzNjc1M2MyNSAxMDA2
NDQKLS0tIGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3NwaW5sb2NrLmgKKysrIGIvYXJjaC9jc2t5
L2luY2x1ZGUvYXNtL3NwaW5sb2NrLmgKQEAgLTMsODcgKzMsNyBAQAogI2lmbmRlZiBfX0FTTV9D
U0tZX1NQSU5MT0NLX0gKICNkZWZpbmUgX19BU01fQ1NLWV9TUElOTE9DS19ICiAKLSNpbmNsdWRl
IDxsaW51eC9zcGlubG9ja190eXBlcy5oPgotI2luY2x1ZGUgPGFzbS9iYXJyaWVyLmg+Ci0KLS8q
Ci0gKiBUaWNrZXQtYmFzZWQgc3Bpbi1sb2NraW5nLgotICovCi1zdGF0aWMgaW5saW5lIHZvaWQg
YXJjaF9zcGluX2xvY2soYXJjaF9zcGlubG9ja190ICpsb2NrKQotewotCWFyY2hfc3BpbmxvY2tf
dCBsb2NrdmFsOwotCXUzMiB0aWNrZXRfbmV4dCA9IDEgPDwgVElDS0VUX05FWFQ7Ci0JdTMyICpw
ID0gJmxvY2stPmxvY2s7Ci0JdTMyIHRtcDsKLQotCWFzbSB2b2xhdGlsZSAoCi0JCSIxOglsZGV4
LncJCSUwLCAoJTIpIFxuIgotCQkiCW1vdgkJJTEsICUwCSBcbiIKLQkJIglhZGQJCSUwLCAlMwkg
XG4iCi0JCSIJc3RleC53CQklMCwgKCUyKSBcbiIKLQkJIgliZXoJCSUwLCAxYiAgIFxuIgotCQk6
ICI9JnIiICh0bXApLCAiPSZyIiAobG9ja3ZhbCkKLQkJOiAiciIocCksICJyIih0aWNrZXRfbmV4
dCkKLQkJOiAiY2MiKTsKLQotCXdoaWxlIChsb2NrdmFsLnRpY2tldHMubmV4dCAhPSBsb2NrdmFs
LnRpY2tldHMub3duZXIpCi0JCWxvY2t2YWwudGlja2V0cy5vd25lciA9IFJFQURfT05DRShsb2Nr
LT50aWNrZXRzLm93bmVyKTsKLQotCXNtcF9tYigpOwotfQotCi1zdGF0aWMgaW5saW5lIGludCBh
cmNoX3NwaW5fdHJ5bG9jayhhcmNoX3NwaW5sb2NrX3QgKmxvY2spCi17Ci0JdTMyIHRtcCwgY29u
dGVuZGVkLCByZXM7Ci0JdTMyIHRpY2tldF9uZXh0ID0gMSA8PCBUSUNLRVRfTkVYVDsKLQl1MzIg
KnAgPSAmbG9jay0+bG9jazsKLQotCWRvIHsKLQkJYXNtIHZvbGF0aWxlICgKLQkJIglsZGV4LncJ
CSUwLCAoJTMpICAgXG4iCi0JCSIJbW92aQkJJTIsIDEJICAgXG4iCi0JCSIJcm90bGkJCSUxLCAl
MCwgMTYgXG4iCi0JCSIJY21wbmUJCSUxLCAlMCAgICAgXG4iCi0JCSIJYnQJCTFmICAgICAgICAg
XG4iCi0JCSIJbW92aQkJJTIsIDAJICAgXG4iCi0JCSIJYWRkCQklMCwgJTAsICU0IFxuIgotCQki
CXN0ZXgudwkJJTAsICglMykgICBcbiIKLQkJIjE6CQkJCSAgIFxuIgotCQk6ICI9JnIiIChyZXMp
LCAiPSZyIiAodG1wKSwgIj0mciIgKGNvbnRlbmRlZCkKLQkJOiAiciIocCksICJyIih0aWNrZXRf
bmV4dCkKLQkJOiAiY2MiKTsKLQl9IHdoaWxlICghcmVzKTsKLQotCWlmICghY29udGVuZGVkKQot
CQlzbXBfbWIoKTsKLQotCXJldHVybiAhY29udGVuZGVkOwotfQotCi1zdGF0aWMgaW5saW5lIHZv
aWQgYXJjaF9zcGluX3VubG9jayhhcmNoX3NwaW5sb2NrX3QgKmxvY2spCi17Ci0Jc21wX21iKCk7
Ci0JV1JJVEVfT05DRShsb2NrLT50aWNrZXRzLm93bmVyLCBsb2NrLT50aWNrZXRzLm93bmVyICsg
MSk7Ci19Ci0KLXN0YXRpYyBpbmxpbmUgaW50IGFyY2hfc3Bpbl92YWx1ZV91bmxvY2tlZChhcmNo
X3NwaW5sb2NrX3QgbG9jaykKLXsKLQlyZXR1cm4gbG9jay50aWNrZXRzLm93bmVyID09IGxvY2su
dGlja2V0cy5uZXh0OwotfQotCi1zdGF0aWMgaW5saW5lIGludCBhcmNoX3NwaW5faXNfbG9ja2Vk
KGFyY2hfc3BpbmxvY2tfdCAqbG9jaykKLXsKLQlyZXR1cm4gIWFyY2hfc3Bpbl92YWx1ZV91bmxv
Y2tlZChSRUFEX09OQ0UoKmxvY2spKTsKLX0KLQotc3RhdGljIGlubGluZSBpbnQgYXJjaF9zcGlu
X2lzX2NvbnRlbmRlZChhcmNoX3NwaW5sb2NrX3QgKmxvY2spCi17Ci0Jc3RydWN0IF9fcmF3X3Rp
Y2tldHMgdGlja2V0cyA9IFJFQURfT05DRShsb2NrLT50aWNrZXRzKTsKLQotCXJldHVybiAodGlj
a2V0cy5uZXh0IC0gdGlja2V0cy5vd25lcikgPiAxOwotfQotI2RlZmluZSBhcmNoX3NwaW5faXNf
Y29udGVuZGVkCWFyY2hfc3Bpbl9pc19jb250ZW5kZWQKLQorI2luY2x1ZGUgPGFzbS9xc3Bpbmxv
Y2suaD4KICNpbmNsdWRlIDxhc20vcXJ3bG9jay5oPgogCiAjZW5kaWYgLyogX19BU01fQ1NLWV9T
UElOTE9DS19IICovCmRpZmYgLS1naXQgYS9hcmNoL2Nza3kvaW5jbHVkZS9hc20vc3BpbmxvY2tf
dHlwZXMuaCBiL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9zcGlubG9ja190eXBlcy5oCmluZGV4IDhm
ZjBmNmZmM2EwMC4uNzU3NTk0NzYwZTY1IDEwMDY0NAotLS0gYS9hcmNoL2Nza3kvaW5jbHVkZS9h
c20vc3BpbmxvY2tfdHlwZXMuaAorKysgYi9hcmNoL2Nza3kvaW5jbHVkZS9hc20vc3BpbmxvY2tf
dHlwZXMuaApAQCAtNywyMSArNyw3IEBACiAjIGVycm9yICJwbGVhc2UgZG9uJ3QgaW5jbHVkZSB0
aGlzIGZpbGUgZGlyZWN0bHkiCiAjZW5kaWYKIAotI2RlZmluZSBUSUNLRVRfTkVYVAkxNgotCi10
eXBlZGVmIHN0cnVjdCB7Ci0JdW5pb24gewotCQl1MzIgbG9jazsKLQkJc3RydWN0IF9fcmF3X3Rp
Y2tldHMgewotCQkJLyogbGl0dGxlIGVuZGlhbiAqLwotCQkJdTE2IG93bmVyOwotCQkJdTE2IG5l
eHQ7Ci0JCX0gdGlja2V0czsKLQl9OwotfSBhcmNoX3NwaW5sb2NrX3Q7Ci0KLSNkZWZpbmUgX19B
UkNIX1NQSU5fTE9DS19VTkxPQ0tFRAl7IHsgMCB9IH0KLQorI2luY2x1ZGUgPGFzbS1nZW5lcmlj
L3FzcGlubG9ja190eXBlcy5oPgogI2luY2x1ZGUgPGFzbS1nZW5lcmljL3Fyd2xvY2tfdHlwZXMu
aD4KIAogI2VuZGlmIC8qIF9fQVNNX0NTS1lfU1BJTkxPQ0tfVFlQRVNfSCAqLwotLSAKMi4xNy4x
CgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpPcGVuUklT
QyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcKaHR0cHM6Ly9saXN0
cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
