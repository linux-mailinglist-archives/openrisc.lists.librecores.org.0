Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 9D827177202
	for <lists+openrisc@lfdr.de>; Tue,  3 Mar 2020 10:09:27 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 1F60D209DA;
	Tue,  3 Mar 2020 10:09:25 +0100 (CET)
Received: from foss.arm.com (foss.arm.com [217.140.110.172])
 by mail.librecores.org (Postfix) with ESMTP id A347F20904
 for <openrisc@lists.librecores.org>; Mon,  2 Mar 2020 07:48:16 +0100 (CET)
Received: from usa-sjc-imap-foss1.foss.arm.com (unknown [10.121.207.14])
 by usa-sjc-mx-foss1.foss.arm.com (Postfix) with ESMTP id EE837FEC;
 Sun,  1 Mar 2020 22:48:14 -0800 (PST)
Received: from p8cg001049571a15.arm.com (unknown [10.163.1.119])
 by usa-sjc-imap-foss1.foss.arm.com (Postfix) with ESMTPA id 499D33F6CF;
 Sun,  1 Mar 2020 22:51:52 -0800 (PST)
From: Anshuman Khandual <anshuman.khandual@arm.com>
To: linux-mm@kvack.org
Date: Mon,  2 Mar 2020 12:17:44 +0530
Message-Id: <1583131666-15531-2-git-send-email-anshuman.khandual@arm.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1583131666-15531-1-git-send-email-anshuman.khandual@arm.com>
References: <1583131666-15531-1-git-send-email-anshuman.khandual@arm.com>
X-Mailman-Approved-At: Tue, 03 Mar 2020 10:09:23 +0100
Subject: [OpenRISC] [RFC 1/3] mm/vma: Define a default value for
 VM_DATA_DEFAULT_FLAGS
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, linux-mips@vger.kernel.org,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Guo Ren <guoren@kernel.org>, sparclinux@vger.kernel.org,
 linux-hexagon@vger.kernel.org, linux-riscv@lists.infradead.org,
 Jonas Bonn <jonas@southpole.se>, linux-s390@vger.kernel.org,
 linux-snps-arc@lists.infradead.org, linux-c6x-dev@linux-c6x.org,
 Brian Cain <bcain@codeaurora.org>, Michael Ellerman <mpe@ellerman.id.au>,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 linux-parisc@vger.kernel.org, Mark Salter <msalter@redhat.com>,
 Paul Burton <paulburton@kernel.org>, uclinux-h8-devel@lists.sourceforge.jp,
 linux-xtensa@linux-xtensa.org, Anshuman Khandual <anshuman.khandual@arm.com>,
 Jeff Dike <jdike@addtoit.com>, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 Paul Walmsley <paul.walmsley@sifive.com>, Thomas Gleixner <tglx@linutronix.de>,
 Guan Xuetao <gxt@pku.edu.cn>, linux-arm-kernel@lists.infradead.org,
 Chris Zankel <chris@zankel.net>, Michal Simek <monstr@monstr.eu>,
 Tony Luck <tony.luck@intel.com>, Yoshinori Sato <ysato@users.sourceforge.jp>,
 Nick Hu <nickhu@andestech.com>, Vineet Gupta <vgupta@synopsys.com>,
 linux-kernel@vger.kernel.org, Ralf Baechle <ralf@linux-mips.org>,
 linux-alpha@vger.kernel.org, nios2-dev@lists.rocketboards.org,
 Andrew Morton <akpm@linux-foundation.org>, linuxppc-dev@lists.ozlabs.org,
 "David S. Miller" <davem@davemloft.net>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

VGhlcmUgYXJlIG1hbnkgcGxhdGZvcm1zIHdpdGggZXhhY3Qgc2FtZSB2YWx1ZSBmb3IgVk1fREFU
QV9ERUZBVUxUX0ZMQUdTClRoaXMgY3JlYXRlcyBhIGRlZmF1bHQgdmFsdWUgZm9yIFZNX0RBVEFf
REVGQVVMVF9GTEFHUyBpbiBsaW5lIHdpdGggdGhlCmV4aXN0aW5nIFZNX1NUQUNLX0RFRkFVTFRf
RkxBR1MuIFdoaWxlIGhlcmUsIGFsc28gZGVmaW5lIHNvbWUgbW9yZSBtYWNyb3MKd2l0aCBzdGFu
ZGFyZCBWTUEgYWNjZXNzIGZsYWcgY29tYmluYXRpb25zIHRoYXQgYXJlIHVzZWQgZnJlcXVlbnRs
eSBhY3Jvc3MKbWFueSBwbGF0Zm9ybXMuIEFwYXJ0IGZyb20gc2ltcGxpZmljYXRpb24sIHRoaXMg
cmVkdWNlcyBjb2RlIGR1cGxpY2F0aW9uCmFzIHdlbGwuCgpDYzogUmljaGFyZCBIZW5kZXJzb24g
PHJ0aEB0d2lkZGxlLm5ldD4KQ2M6IFZpbmVldCBHdXB0YSA8dmd1cHRhQHN5bm9wc3lzLmNvbT4K
Q2M6IFJ1c3NlbGwgS2luZyA8bGludXhAYXJtbGludXgub3JnLnVrPgpDYzogQ2F0YWxpbiBNYXJp
bmFzIDxjYXRhbGluLm1hcmluYXNAYXJtLmNvbT4KQ2M6IE1hcmsgU2FsdGVyIDxtc2FsdGVyQHJl
ZGhhdC5jb20+CkNjOiBHdW8gUmVuIDxndW9yZW5Aa2VybmVsLm9yZz4KQ2M6IFlvc2hpbm9yaSBT
YXRvIDx5c2F0b0B1c2Vycy5zb3VyY2Vmb3JnZS5qcD4KQ2M6IEJyaWFuIENhaW4gPGJjYWluQGNv
ZGVhdXJvcmEub3JnPgpDYzogVG9ueSBMdWNrIDx0b255Lmx1Y2tAaW50ZWwuY29tPgpDYzogR2Vl
cnQgVXl0dGVyaG9ldmVuIDxnZWVydEBsaW51eC1tNjhrLm9yZz4KQ2M6IE1pY2hhbCBTaW1layA8
bW9uc3RyQG1vbnN0ci5ldT4KQ2M6IFJhbGYgQmFlY2hsZSA8cmFsZkBsaW51eC1taXBzLm9yZz4K
Q2M6IFBhdWwgQnVydG9uIDxwYXVsYnVydG9uQGtlcm5lbC5vcmc+CkNjOiBOaWNrIEh1IDxuaWNr
aHVAYW5kZXN0ZWNoLmNvbT4KQ2M6IExleSBGb29uIFRhbiA8bGV5LmZvb24udGFuQGludGVsLmNv
bT4KQ2M6IEpvbmFzIEJvbm4gPGpvbmFzQHNvdXRocG9sZS5zZT4KQ2M6ICJKYW1lcyBFLkouIEJv
dHRvbWxleSIgPEphbWVzLkJvdHRvbWxleUBIYW5zZW5QYXJ0bmVyc2hpcC5jb20+CkNjOiBNaWNo
YWVsIEVsbGVybWFuIDxtcGVAZWxsZXJtYW4uaWQuYXU+CkNjOiBQYXVsIFdhbG1zbGV5IDxwYXVs
LndhbG1zbGV5QHNpZml2ZS5jb20+CkNjOiBIZWlrbyBDYXJzdGVucyA8aGVpa28uY2Fyc3RlbnNA
ZGUuaWJtLmNvbT4KQ2M6IFJpY2ggRmVsa2VyIDxkYWxpYXNAbGliYy5vcmc+CkNjOiAiRGF2aWQg
Uy4gTWlsbGVyIiA8ZGF2ZW1AZGF2ZW1sb2Z0Lm5ldD4KQ2M6IEd1YW4gWHVldGFvIDxneHRAcGt1
LmVkdS5jbj4KQ2M6IFRob21hcyBHbGVpeG5lciA8dGdseEBsaW51dHJvbml4LmRlPgpDYzogSmVm
ZiBEaWtlIDxqZGlrZUBhZGR0b2l0LmNvbT4KQ2M6IENocmlzIFphbmtlbCA8Y2hyaXNAemFua2Vs
Lm5ldD4KQ2M6IEFuZHJldyBNb3J0b24gPGFrcG1AbGludXgtZm91bmRhdGlvbi5vcmc+CkNjOiBs
aW51eC1hbHBoYUB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxpbnV4LWtlcm5lbEB2Z2VyLmtlcm5lbC5v
cmcKQ2M6IGxpbnV4LXNucHMtYXJjQGxpc3RzLmluZnJhZGVhZC5vcmcKQ2M6IGxpbnV4LWFybS1r
ZXJuZWxAbGlzdHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgtYzZ4LWRldkBsaW51eC1jNngub3Jn
CkNjOiB1Y2xpbnV4LWg4LWRldmVsQGxpc3RzLnNvdXJjZWZvcmdlLmpwCkNjOiBsaW51eC1oZXhh
Z29uQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtaWE2NEB2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxp
bnV4LW02OGtAbGlzdHMubGludXgtbTY4ay5vcmcKQ2M6IGxpbnV4LW1pcHNAdmdlci5rZXJuZWwu
b3JnCkNjOiBuaW9zMi1kZXZAbGlzdHMucm9ja2V0Ym9hcmRzLm9yZwpDYzogb3BlbnJpc2NAbGlz
dHMubGlicmVjb3Jlcy5vcmcKQ2M6IGxpbnV4LXBhcmlzY0B2Z2VyLmtlcm5lbC5vcmcKQ2M6IGxp
bnV4cHBjLWRldkBsaXN0cy5vemxhYnMub3JnCkNjOiBsaW51eC1yaXNjdkBsaXN0cy5pbmZyYWRl
YWQub3JnCkNjOiBsaW51eC1zMzkwQHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtc2hAdmdlci5r
ZXJuZWwub3JnCkNjOiBzcGFyY2xpbnV4QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtdW1AbGlz
dHMuaW5mcmFkZWFkLm9yZwpDYzogbGludXgteHRlbnNhQGxpbnV4LXh0ZW5zYS5vcmcKQ2M6IGxp
bnV4LW1tQGt2YWNrLm9yZwpTaWduZWQtb2ZmLWJ5OiBBbnNodW1hbiBLaGFuZHVhbCA8YW5zaHVt
YW4ua2hhbmR1YWxAYXJtLmNvbT4KLS0tCiBhcmNoL2FscGhhL2luY2x1ZGUvYXNtL3BhZ2UuaCAg
ICAgIHwgIDMgLS0tCiBhcmNoL2FyYy9pbmNsdWRlL2FzbS9wYWdlLmggICAgICAgIHwgIDIgKy0K
IGFyY2gvYXJtL2luY2x1ZGUvYXNtL3BhZ2UuaCAgICAgICAgfCAgNCArLS0tCiBhcmNoL2FybTY0
L2luY2x1ZGUvYXNtL3BhZ2UuaCAgICAgIHwgIDQgKy0tLQogYXJjaC9jNngvaW5jbHVkZS9hc20v
cGFnZS5oICAgICAgICB8ICA1ICstLS0tCiBhcmNoL2Nza3kvaW5jbHVkZS9hc20vcGFnZS5oICAg
ICAgIHwgIDMgLS0tCiBhcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3BhZ2UuaCAgICAgIHwgIDIgLS0K
IGFyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS9wYWdlLmggICAgfCAgMyArLS0KIGFyY2gvaWE2NC9p
bmNsdWRlL2FzbS9wYWdlLmggICAgICAgfCAgNSArLS0tLQogYXJjaC9tNjhrL2luY2x1ZGUvYXNt
L3BhZ2UuaCAgICAgICB8ICAzIC0tLQogYXJjaC9taWNyb2JsYXplL2luY2x1ZGUvYXNtL3BhZ2Uu
aCB8ICAyIC0tCiBhcmNoL21pcHMvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgIHwgIDUgKy0tLS0K
IGFyY2gvbmRzMzIvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgfCAgMyAtLS0KIGFyY2gvbmlvczIv
aW5jbHVkZS9hc20vcGFnZS5oICAgICAgfCAgMyArLS0KIGFyY2gvb3BlbnJpc2MvaW5jbHVkZS9h
c20vcGFnZS5oICAgfCAgNSAtLS0tLQogYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vcGFnZS5oICAg
ICB8ICAzIC0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BhZ2UuaCAgICB8ICA5ICsrLS0t
LS0tLQogYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BhZ2VfNjQuaCB8ICA3ICsrLS0tLS0KIGFy
Y2gvcmlzY3YvaW5jbHVkZS9hc20vcGFnZS5oICAgICAgfCAgMyArLS0KIGFyY2gvczM5MC9pbmNs
dWRlL2FzbS9wYWdlLmggICAgICAgfCAgMyArLS0KIGFyY2gvc2gvaW5jbHVkZS9hc20vcGFnZS5o
ICAgICAgICAgfCAgMyAtLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGFnZV8zMi5oICAgfCAg
MyAtLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGFnZV82NC5oICAgfCAgMyAtLS0KIGFyY2gv
dW5pY29yZTMyL2luY2x1ZGUvYXNtL3BhZ2UuaCAgfCAgMyAtLS0KIGFyY2gveDg2L2luY2x1ZGUv
YXNtL3BhZ2VfdHlwZXMuaCAgfCAgNCArLS0tCiBhcmNoL3g4Ni91bS9hc20vdm0tZmxhZ3MuaCAg
ICAgICAgIHwgMTAgKystLS0tLS0tLQogYXJjaC94dGVuc2EvaW5jbHVkZS9hc20vcGFnZS5oICAg
ICB8ICAzIC0tLQogaW5jbHVkZS9saW51eC9tbS5oICAgICAgICAgICAgICAgICB8IDE1ICsrKysr
KysrKysrKysrKwogMjggZmlsZXMgY2hhbmdlZCwgMzIgaW5zZXJ0aW9ucygrKSwgODkgZGVsZXRp
b25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNo
L2FscGhhL2luY2x1ZGUvYXNtL3BhZ2UuaAppbmRleCBmM2ZiMjg0ODQ3MGEuLmUyNDFiZDg4ODgw
ZiAxMDA2NDQKLS0tIGEvYXJjaC9hbHBoYS9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9h
bHBoYS9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTkwLDkgKzkwLDYgQEAgdHlwZWRlZiBzdHJ1Y3Qg
cGFnZSAqcGd0YWJsZV90OwogI2RlZmluZSB2aXJ0X2FkZHJfdmFsaWQoa2FkZHIpCXBmbl92YWxp
ZChfX3BhKGthZGRyKSA+PiBQQUdFX1NISUZUKQogI2VuZGlmIC8qIENPTkZJR19ESVNDT05USUdN
RU0gKi8KIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJCShWTV9SRUFEIHwgVk1fV1JJ
VEUgfCBWTV9FWEVDIHwgXAotCQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZ
RVhFQykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9tb2RlbC5oPgogI2luY2x1ZGUg
PGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CiAKZGlmZiAtLWdpdCBhL2FyY2gvYXJjL2luY2x1ZGUv
YXNtL3BhZ2UuaCBiL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3BhZ2UuaAppbmRleCAwYTMyZThjZmQw
NzQuLmIwZGZlZDBmMTJiZSAxMDA2NDQKLS0tIGEvYXJjaC9hcmMvaW5jbHVkZS9hc20vcGFnZS5o
CisrKyBiL2FyY2gvYXJjL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMTAyLDcgKzEwMiw3IEBAIHR5
cGVkZWYgcHRlX3QgKiBwZ3RhYmxlX3Q7CiAjZGVmaW5lIHZpcnRfYWRkcl92YWxpZChrYWRkcikg
IHBmbl92YWxpZCh2aXJ0X3RvX3BmbihrYWRkcikpCiAKIC8qIERlZmF1bHQgUGVybWlzc2lvbnMg
Zm9yIHN0YWNrL2hlYXBzIHBhZ2VzIChOb24gRXhlY3V0YWJsZSkgKi8KLSNkZWZpbmUgVk1fREFU
QV9ERUZBVUxUX0ZMQUdTICAgKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX01BWVJFQUQgfCBWTV9N
QVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9E
QVRBX0ZMQUdTX05PTl9FWEVDCiAKICNkZWZpbmUgV0FOVF9QQUdFX1ZJUlRVQUwgICAxCiAKZGlm
ZiAtLWdpdCBhL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvYXJtL2luY2x1ZGUv
YXNtL3BhZ2UuaAppbmRleCBjMmI3NWNiYTI2ZGYuLjExYjA1OGE3MmE1YiAxMDA2NDQKLS0tIGEv
YXJjaC9hcm0vaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvYXJtL2luY2x1ZGUvYXNtL3Bh
Z2UuaApAQCAtMTYxLDkgKzE2MSw3IEBAIGV4dGVybiBpbnQgcGZuX3ZhbGlkKHVuc2lnbmVkIGxv
bmcpOwogCiAjZW5kaWYgLyogIV9fQVNTRU1CTFlfXyAqLwogCi0jZGVmaW5lIFZNX0RBVEFfREVG
QVVMVF9GTEFHUyBcCi0JKCgoY3VycmVudC0+cGVyc29uYWxpdHkgJiBSRUFEX0lNUExJRVNfRVhF
QykgPyBWTV9FWEVDIDogMCkgfCBcCi0JIFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX01BWVJFQUQg
fCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFH
UwlWTV9EQVRBX0ZMQUdTX1RTS19FWEVDCiAKICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9nZXRvcmRl
ci5oPgogCmRpZmYgLS1naXQgYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gv
YXJtNjQvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IGQzOWRkYjI1OGEwNC4uY2I0ZTFlNmNhMzg1
IDEwMDY0NAotLS0gYS9hcmNoL2FybTY0L2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL2Fy
bTY0L2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMzIsOSArMzIsNyBAQCBleHRlcm4gaW50IHBmbl92
YWxpZCh1bnNpZ25lZCBsb25nKTsKIAogI2VuZGlmIC8qICFfX0FTU0VNQkxZX18gKi8KIAotI2Rl
ZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MgXAotCSgoKGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYg
UkVBRF9JTVBMSUVTX0VYRUMpID8gVk1fRVhFQyA6IDApIHwgXAotCSBWTV9SRUFEIHwgVk1fV1JJ
VEUgfCBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBWTV9E
QVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19UU0tfRVhFQwogCiAjaW5jbHVkZSA8YXNt
LWdlbmVyaWMvZ2V0b3JkZXIuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC9jNngvaW5jbHVkZS9hc20v
cGFnZS5oIGIvYXJjaC9jNngvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDcwZGIxZTc2MzJiYy4u
NDAwNzk4OTkwODRkIDEwMDY0NAotLS0gYS9hcmNoL2M2eC9pbmNsdWRlL2FzbS9wYWdlLmgKKysr
IGIvYXJjaC9jNngvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC0yLDEwICsyLDcgQEAKICNpZm5kZWYg
X0FTTV9DNlhfUEFHRV9ICiAjZGVmaW5lIF9BU01fQzZYX1BBR0VfSAogCi0jZGVmaW5lIFZNX0RB
VEFfREVGQVVMVF9GTEFHUyBcCi0JKFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQkoKGN1cnJlbnQt
PnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVTX0VYRUMpID8gVk1fRVhFQyA6IDApIHwgXAotCQkg
Vk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9E
RUZBVUxUX0ZMQUdTCVZNX0RBVEFfRkxBR1NfVFNLX0VYRUMKIAogI2luY2x1ZGUgPGFzbS1nZW5l
cmljL3BhZ2UuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC9jc2t5L2luY2x1ZGUvYXNtL3BhZ2UuaCBi
L2FyY2gvY3NreS9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggOTczOGVhY2VmZGM3Li45Yjk4YmYz
MWQ1N2MgMTAwNjQ0Ci0tLSBhL2FyY2gvY3NreS9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJj
aC9jc2t5L2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtODUsOSArODUsNiBAQCBleHRlcm4gdW5zaWdu
ZWQgbG9uZyB2YV9wYV9vZmZzZXQ7CiAJCQkJIFBIWVNfT0ZGU0VUX09GRlNFVCkKICNkZWZpbmUg
dmlydF90b19wYWdlKHgpCShtZW1fbWFwICsgTUFQX05SKHgpKQogCi0jZGVmaW5lIFZNX0RBVEFf
REVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQlWTV9N
QVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQotCiAjZGVmaW5lIHBmbl90b19rYWRk
cih4KQlfX3ZhKFBGTl9QSFlTKHgpKQogCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvbWVtb3J5X21v
ZGVsLmg+CmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gv
aDgzMDAvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDhkYTUxMjRhZDM0NC4uNTNlMDM3NTQ0MjM5
IDEwMDY0NAotLS0gYS9hcmNoL2g4MzAwL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL2g4
MzAwL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtNiw4ICs2LDYgQEAKICNpbmNsdWRlIDxsaW51eC90
eXBlcy5oPgogCiAjZGVmaW5lIE1BUF9OUihhZGRyKSAoKCh1aW50cHRyX3QpKGFkZHIpLVBBR0Vf
T0ZGU0VUKSA+PiBQQUdFX1NISUZUKQotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZN
X1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlX
UklURSB8IFZNX01BWUVYRUMpCiAKICNpZm5kZWYgX19BU1NFTUJMWV9fCiBleHRlcm4gdW5zaWdu
ZWQgbG9uZyByb21fbGVuZ3RoOwpkaWZmIC0tZ2l0IGEvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNt
L3BhZ2UuaCBiL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggZWUzMWYzNmY0
OGYzLi43Y2JmNzE5YzU3OGUgMTAwNjQ0Ci0tLSBhL2FyY2gvaGV4YWdvbi9pbmNsdWRlL2FzbS9w
YWdlLmgKKysrIGIvYXJjaC9oZXhhZ29uL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtOTMsOCArOTMs
NyBAQCBzdHJ1Y3QgcGFnZTsKICNkZWZpbmUgdmlydF90b19wYWdlKGthZGRyKSBwZm5fdG9fcGFn
ZShQRk5fRE9XTihfX3BhKGthZGRyKSkpCiAKIC8qIERlZmF1bHQgdm0gYXJlYSBiZWhhdmlvciBp
cyBub24tZXhlY3V0YWJsZS4gICovCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUyAoVk1f
UkVBRCB8IFZNX1dSSVRFIHwgXAotCQkJCVZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01B
WUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9EQVRBX0ZMQUdTX05PTl9F
WEVDCiAKICNkZWZpbmUgcGZuX3ZhbGlkKHBmbikgKChwZm4pIDwgbWF4X21hcG5yKQogI2RlZmlu
ZSB2aXJ0X2FkZHJfdmFsaWQoa2FkZHIpIHBmbl92YWxpZChfX3BhKGthZGRyKSA+PiBQQUdFX1NI
SUZUKQpkaWZmIC0tZ2l0IGEvYXJjaC9pYTY0L2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvaWE2
NC9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggNTc5OGJkMmI0NjJjLi5iNjlhNTQ5OWQ3NWIgMTAw
NjQ0Ci0tLSBhL2FyY2gvaWE2NC9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9pYTY0L2lu
Y2x1ZGUvYXNtL3BhZ2UuaApAQCAtMjE4LDEwICsyMTgsNyBAQCBnZXRfb3JkZXIgKHVuc2lnbmVk
IGxvbmcgc2l6ZSkKIAogI2RlZmluZSBQQUdFX09GRlNFVAkJCVJHTl9CQVNFKFJHTl9LRVJORUwp
CiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCQkoVk1fUkVBRCB8IFZNX1dSSVRFIHwJ
CQkJCVwKLQkJCQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMgfAkJXAot
CQkJCQkgKCgoY3VycmVudC0+cGVyc29uYWxpdHkgJiBSRUFEX0lNUExJRVNfRVhFQykgIT0gMCkJ
XAotCQkJCQkgID8gVk1fRVhFQyA6IDApKQorI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJ
Vk1fREFUQV9GTEFHU19UU0tfRVhFQwogCiAjZGVmaW5lIEdBVEVfQUREUgkJUkdOX0JBU0UoUkdO
X0dBVEUpCiAKZGlmZiAtLWdpdCBhL2FyY2gvbTY4ay9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNo
L202OGsvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDA1ZTFlMWU3N2E5YS4uOWQyZWYwYTUxNzIw
IDEwMDY0NAotLS0gYS9hcmNoL202OGsvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvbTY4
ay9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTU1LDkgKzU1LDYgQEAgZXh0ZXJuIHVuc2lnbmVkIGxv
bmcgX3JhbWVuZDsKICNkZWZpbmUgX19waHlzX3RvX3BmbihwYWRkcikJKCh1bnNpZ25lZCBsb25n
KSgocGFkZHIpID4+IFBBR0VfU0hJRlQpKQogI2RlZmluZSBfX3Bmbl90b19waHlzKHBmbikJUEZO
X1BIWVMocGZuKQogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8IFZN
X1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1f
TUFZRVhFQykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CiAKICNlbmRpZiAv
KiBfTTY4S19QQUdFX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2Fz
bS9wYWdlLmggYi9hcmNoL21pY3JvYmxhemUvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IGY0YjQ0
YjI0YjAyZS4uNDNiZDU2MGI3YjY3IDEwMDY0NAotLS0gYS9hcmNoL21pY3JvYmxhemUvaW5jbHVk
ZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvbWljcm9ibGF6ZS9pbmNsdWRlL2FzbS9wYWdlLmgKQEAg
LTE5Nyw4ICsxOTcsNiBAQCBleHRlcm4gaW50IHBhZ2VfaXNfcmFtKHVuc2lnbmVkIGxvbmcgcGZu
KTsKIAogI2lmZGVmIENPTkZJR19NTVUKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJ
KFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBWTV9N
QVlXUklURSB8IFZNX01BWUVYRUMpCiAjZW5kaWYgLyogQ09ORklHX01NVSAqLwogCiAjZW5kaWYg
LyogX19LRVJORUxfXyAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL2luY2x1ZGUvYXNtL3BhZ2Uu
aCBiL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggMGJhNGNlNmUyYmYzLi5lMmY1
MDNmYzdhODQgMTAwNjQ0Ci0tLSBhL2FyY2gvbWlwcy9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIv
YXJjaC9taXBzL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMjUzLDEwICsyNTMsNyBAQCBleHRlcm4g
Ym9vbCBfX3ZpcnRfYWRkcl92YWxpZChjb25zdCB2b2xhdGlsZSB2b2lkICprYWRkcik7CiAjZGVm
aW5lIHZpcnRfYWRkcl92YWxpZChrYWRkcikJCQkJCQlcCiAJX192aXJ0X2FkZHJfdmFsaWQoKGNv
bnN0IHZvbGF0aWxlIHZvaWQgKikgKGthZGRyKSkKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRf
RkxBR1MgXAotCShWTV9SRUFEIHwgVk1fV1JJVEUgfCBcCi0JICgoY3VycmVudC0+cGVyc29uYWxp
dHkgJiBSRUFEX0lNUExJRVNfRVhFQykgPyBWTV9FWEVDIDogMCkgfCBcCi0JIFZNX01BWVJFQUQg
fCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFH
UwlWTV9EQVRBX0ZMQUdTX1RTS19FWEVDCiAKICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9tZW1vcnlf
bW9kZWwuaD4KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9nZXRvcmRlci5oPgpkaWZmIC0tZ2l0IGEv
YXJjaC9uZHMzMi9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL25kczMyL2luY2x1ZGUvYXNtL3Bh
Z2UuaAppbmRleCA4NmIzMjAxNGM1ZjkuLmFkZDMzYTdmMDJjOCAxMDA2NDQKLS0tIGEvYXJjaC9u
ZHMzMi9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9uZHMzMi9pbmNsdWRlL2FzbS9wYWdl
LmgKQEAgLTU5LDkgKzU5LDYgQEAgdHlwZWRlZiBzdHJ1Y3QgcGFnZSAqcGd0YWJsZV90OwogCiAj
ZW5kaWYgLyogIV9fQVNTRU1CTFlfXyAqLwogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFH
UwkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZN
X01BWVdSSVRFIHwgVk1fTUFZRVhFQykKLQogI2VuZGlmIC8qIF9fS0VSTkVMX18gKi8KIAogI2Vu
ZGlmCmRpZmYgLS1naXQgYS9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gvbmlv
czIvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDc5ZmNhYzYxZjZlZi4uNmE5ODk4MTlhN2MxIDEw
MDY0NAotLS0gYS9hcmNoL25pb3MyL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL25pb3My
L2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtOTgsOCArOTgsNyBAQCBzdGF0aWMgaW5saW5lIGJvb2wg
cGZuX3ZhbGlkKHVuc2lnbmVkIGxvbmcgcGZuKQogIyBkZWZpbmUgdmlydF90b19wYWdlKHZhZGRy
KQlwZm5fdG9fcGFnZShQRk5fRE9XTih2aXJ0X3RvX3BoeXModmFkZHIpKSkKICMgZGVmaW5lIHZp
cnRfYWRkcl92YWxpZCh2YWRkcikJcGZuX3ZhbGlkKFBGTl9ET1dOKHZpcnRfdG9fcGh5cyh2YWRk
cikpKQogCi0jIGRlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklU
RSB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyMgZGVm
aW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwlWTV9EQVRBX0ZMQUdTX05PTl9FWEVDCiAKICNpbmNs
dWRlIDxhc20tZ2VuZXJpYy9tZW1vcnlfbW9kZWwuaD4KIApkaWZmIC0tZ2l0IGEvYXJjaC9vcGVu
cmlzYy9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL29wZW5yaXNjL2luY2x1ZGUvYXNtL3BhZ2Uu
aAppbmRleCAwMTA2OWRiNTk0NTQuLmFhYjZlNjRkNmRiNCAxMDA2NDQKLS0tIGEvYXJjaC9vcGVu
cmlzYy9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJjaC9vcGVucmlzYy9pbmNsdWRlL2FzbS9w
YWdlLmgKQEAgLTg2LDExICs4Niw2IEBAIHR5cGVkZWYgc3RydWN0IHBhZ2UgKnBndGFibGVfdDsK
IAogI2VuZGlmIC8qIF9fQVNTRU1CTFlfXyAqLwogCi0KLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxU
X0ZMQUdTCShWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgXAotCQkJCSBWTV9NQVlSRUFE
IHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQotCi0KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9t
ZW1vcnlfbW9kZWwuaD4KICNpbmNsdWRlIDxhc20tZ2VuZXJpYy9nZXRvcmRlci5oPgogCmRpZmYg
LS1naXQgYS9hcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL3BhcmlzYy9pbmNs
dWRlL2FzbS9wYWdlLmgKaW5kZXggNzk2YWUyOWU5YjlhLi42YjNmNjc0MGE2YTYgMTAwNjQ0Ci0t
LSBhL2FyY2gvcGFyaXNjL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL3BhcmlzYy9pbmNs
dWRlL2FzbS9wYWdlLmgKQEAgLTE4MCw5ICsxODAsNiBAQCBleHRlcm4gaW50IG5wbWVtX3Jhbmdl
czsKICNkZWZpbmUgcGFnZV90b19waHlzKHBhZ2UpCShwYWdlX3RvX3BmbihwYWdlKSA8PCBQQUdF
X1NISUZUKQogI2RlZmluZSB2aXJ0X3RvX3BhZ2Uoa2FkZHIpICAgICBwZm5fdG9fcGFnZShfX3Bh
KGthZGRyKSA+PiBQQUdFX1NISUZUKQogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwko
Vk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01B
WVdSSVRFIHwgVk1fTUFZRVhFQykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9tb2Rl
bC5oPgogI2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CiAjaW5jbHVkZSA8YXNtL3Bk
Yy5oPgpkaWZmIC0tZ2l0IGEvYXJjaC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BhZ2UuaCBiL2FyY2gv
cG93ZXJwYy9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggMDgwYTBiZjhlNTRiLi4zZWU4ZGYwZjY2
ZTAgMTAwNjQ0Ci0tLSBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wYWdlLmgKKysrIGIvYXJj
aC9wb3dlcnBjL2luY2x1ZGUvYXNtL3BhZ2UuaApAQCAtMjQwLDEzICsyNDAsOCBAQCBzdGF0aWMg
aW5saW5lIGJvb2wgcGZuX3ZhbGlkKHVuc2lnbmVkIGxvbmcgcGZuKQogICogYW5kIG5lZWRzIHRv
IGJlIGV4ZWN1dGFibGUuICBUaGlzIG1lYW5zIHRoZSB3aG9sZSBoZWFwIGVuZHMKICAqIHVwIGJl
aW5nIGV4ZWN1dGFibGUuCiAgKi8KLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTMzIgXAot
CSgoKGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVTX0VYRUMpID8gVk1fRVhFQyA6
IDApIHwgXAotCQkJCSBWTV9SRUFEIHwgVk1fV1JJVEUgfCBcCi0JCQkJIFZNX01BWVJFQUQgfCBW
TV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdT
NjQJKFZNX1JFQUQgfCBWTV9XUklURSB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRF
IHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTMzIJVk1fREFUQV9G
TEFHU19UU0tfRVhFQworI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1M2NAlWTV9EQVRBX0ZM
QUdTX05PTl9FWEVDCiAKICNpZmRlZiBfX3Bvd2VycGM2NF9fCiAjaW5jbHVkZSA8YXNtL3BhZ2Vf
NjQuaD4KZGlmZiAtLWdpdCBhL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wYWdlXzY0LmggYi9h
cmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGFnZV82NC5oCmluZGV4IDU5NjI3OTdmNzg0YS4uNzlh
OWI3YzZhMTMyIDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvaW5jbHVkZS9hc20vcGFnZV82NC5o
CisrKyBiL2FyY2gvcG93ZXJwYy9pbmNsdWRlL2FzbS9wYWdlXzY0LmgKQEAgLTk0LDExICs5NCw4
IEBAIGV4dGVybiB1NjQgcHBjNjRfcGZ0X3NpemU7CiAgKiBzdGFjayBieSBkZWZhdWx0LCBzbyBp
biB0aGUgYWJzZW5jZSBvZiBhIFBUX0dOVV9TVEFDSyBwcm9ncmFtIGhlYWRlcgogICogd2UgdHVy
biBleGVjdXRlIHBlcm1pc3Npb24gb2ZmLgogICovCi0jZGVmaW5lIFZNX1NUQUNLX0RFRkFVTFRf
RkxBR1MzMgkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkJIFZNX01BWVJF
QUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KLSNkZWZpbmUgVk1fU1RBQ0tfREVGQVVM
VF9GTEFHUzY0CShWTV9SRUFEIHwgVk1fV1JJVEUgfCBcCi0JCQkJCSBWTV9NQVlSRUFEIHwgVk1f
TUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBWTV9TVEFDS19ERUZBVUxUX0ZMQUdTMzIJ
Vk1fREFUQV9GTEFHU19FWEVDCisjZGVmaW5lIFZNX1NUQUNLX0RFRkFVTFRfRkxBR1M2NAlWTV9E
QVRBX0ZMQUdTX05PTl9FWEVDCiAKICNkZWZpbmUgVk1fU1RBQ0tfREVGQVVMVF9GTEFHUyBcCiAJ
KGlzXzMyYml0X3Rhc2soKSA/IFwKZGlmZiAtLWdpdCBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20v
cGFnZS5oIGIvYXJjaC9yaXNjdi9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggOGNhMTkzMGNhYTQ0
Li4yZDUwZjc2ZWZlNDggMTAwNjQ0Ci0tLSBhL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGFnZS5o
CisrKyBiL2FyY2gvcmlzY3YvaW5jbHVkZS9hc20vcGFnZS5oCkBAIC0xMzcsOCArMTM3LDcgQEAg
ZXh0ZXJuIHBoeXNfYWRkcl90IF9fcGh5c19hZGRyX3N5bWJvbCh1bnNpZ25lZCBsb25nIHgpOwog
CiAjZGVmaW5lIHZpcnRfYWRkcl92YWxpZCh2YWRkcikJKHBmbl92YWxpZCh2aXJ0X3RvX3Bmbih2
YWRkcikpKQogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8IFZNX1dS
SVRFIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2Rl
ZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19OT05fRVhFQwogCiAjaW5j
bHVkZSA8YXNtLWdlbmVyaWMvbWVtb3J5X21vZGVsLmg+CiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMv
Z2V0b3JkZXIuaD4KZGlmZiAtLWdpdCBhL2FyY2gvczM5MC9pbmNsdWRlL2FzbS9wYWdlLmggYi9h
cmNoL3MzOTAvaW5jbHVkZS9hc20vcGFnZS5oCmluZGV4IDEwMTllZmQ4NWI5ZC4uMDg5ZjQ5MjMw
OTY2IDEwMDY0NAotLS0gYS9hcmNoL3MzOTAvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gv
czM5MC9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTE3Niw4ICsxNzYsNyBAQCBzdGF0aWMgaW5saW5l
IGludCBkZXZtZW1faXNfYWxsb3dlZCh1bnNpZ25lZCBsb25nIHBmbikKIAogI2RlZmluZSB2aXJ0
X2FkZHJfdmFsaWQoa2FkZHIpCXBmbl92YWxpZChfX3BhKGthZGRyKSA+PiBQQUdFX1NISUZUKQog
Ci0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgXAot
CQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBWTV9E
QVRBX0RFRkFVTFRfRkxBR1MJVk1fREFUQV9GTEFHU19OT05fRVhFQwogCiAjaW5jbHVkZSA8YXNt
LWdlbmVyaWMvbWVtb3J5X21vZGVsLmg+CiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIu
aD4KZGlmZiAtLWdpdCBhL2FyY2gvc2gvaW5jbHVkZS9hc20vcGFnZS5oIGIvYXJjaC9zaC9pbmNs
dWRlL2FzbS9wYWdlLmgKaW5kZXggNWVlZjhiZTNlNTlmLi5lYThkNjhmNThlMzkgMTAwNjQ0Ci0t
LSBhL2FyY2gvc2gvaW5jbHVkZS9hc20vcGFnZS5oCisrKyBiL2FyY2gvc2gvaW5jbHVkZS9hc20v
cGFnZS5oCkBAIC0xODIsOSArMTgyLDYgQEAgdHlwZWRlZiBzdHJ1Y3QgcGFnZSAqcGd0YWJsZV90
OwogI2VuZGlmCiAjZGVmaW5lIHZpcnRfYWRkcl92YWxpZChrYWRkcikJcGZuX3ZhbGlkKF9fcGEo
a2FkZHIpID4+IFBBR0VfU0hJRlQpCiAKLSNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCShW
TV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgXAotCQkJCSBWTV9NQVlSRUFEIHwgVk1fTUFZ
V1JJVEUgfCBWTV9NQVlFWEVDKQotCiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvbWVtb3J5X21vZGVs
Lmg+CiAjaW5jbHVkZSA8YXNtLWdlbmVyaWMvZ2V0b3JkZXIuaD4KIApkaWZmIC0tZ2l0IGEvYXJj
aC9zcGFyYy9pbmNsdWRlL2FzbS9wYWdlXzMyLmggYi9hcmNoL3NwYXJjL2luY2x1ZGUvYXNtL3Bh
Z2VfMzIuaAppbmRleCBiNzZkNTllZGVjOGMuLjQ3ODI2MDAwMjgzNiAxMDA2NDQKLS0tIGEvYXJj
aC9zcGFyYy9pbmNsdWRlL2FzbS9wYWdlXzMyLmgKKysrIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2Fz
bS9wYWdlXzMyLmgKQEAgLTEzMyw5ICsxMzMsNiBAQCBleHRlcm4gdW5zaWduZWQgbG9uZyBwZm5f
YmFzZTsKICNkZWZpbmUgcGZuX3ZhbGlkKHBmbikJCSgoKHBmbikgPj0gKHBmbl9iYXNlKSkgJiYg
KCgocGZuKS0ocGZuX2Jhc2UpKSA8IG1heF9tYXBucikpCiAjZGVmaW5lIHZpcnRfYWRkcl92YWxp
ZChrYWRkcikJKCgoKHVuc2lnbmVkIGxvbmcpKGthZGRyKS1QQUdFX09GRlNFVCk+PlBBR0VfU0hJ
RlQpIDwgbWF4X21hcG5yKQogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkoVk1fUkVB
RCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZNX01BWVdSSVRF
IHwgVk1fTUFZRVhFQykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9tb2RlbC5oPgog
I2luY2x1ZGUgPGFzbS1nZW5lcmljL2dldG9yZGVyLmg+CiAKZGlmZiAtLWdpdCBhL2FyY2gvc3Bh
cmMvaW5jbHVkZS9hc20vcGFnZV82NC5oIGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS9wYWdlXzY0
LmgKaW5kZXggZTgwZjJkNWJmNjJmLi4yNTRkZmZkODVmYjEgMTAwNjQ0Ci0tLSBhL2FyY2gvc3Bh
cmMvaW5jbHVkZS9hc20vcGFnZV82NC5oCisrKyBiL2FyY2gvc3BhcmMvaW5jbHVkZS9hc20vcGFn
ZV82NC5oCkBAIC0xNTgsOSArMTU4LDYgQEAgZXh0ZXJuIHVuc2lnbmVkIGxvbmcgUEFHRV9PRkZT
RVQ7CiAKICNlbmRpZiAvKiAhKF9fQVNTRU1CTFlfXykgKi8KIAotI2RlZmluZSBWTV9EQVRBX0RF
RkFVTFRfRkxBR1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0JCQkJIFZNX01B
WVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KICNpbmNsdWRlIDxhc20tZ2VuZXJp
Yy9nZXRvcmRlci5oPgogCiAjZW5kaWYgLyogX1NQQVJDNjRfUEFHRV9IICovCmRpZmYgLS1naXQg
YS9hcmNoL3VuaWNvcmUzMi9pbmNsdWRlL2FzbS9wYWdlLmggYi9hcmNoL3VuaWNvcmUzMi9pbmNs
dWRlL2FzbS9wYWdlLmgKaW5kZXggOGE4OTMzNTY3M2Y5Li45NmQ2YmRmMTgwYmQgMTAwNjQ0Ci0t
LSBhL2FyY2gvdW5pY29yZTMyL2luY2x1ZGUvYXNtL3BhZ2UuaAorKysgYi9hcmNoL3VuaWNvcmUz
Mi9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTY5LDkgKzY5LDYgQEAgZXh0ZXJuIGludCBwZm5fdmFs
aWQodW5zaWduZWQgbG9uZyk7CiAKICNlbmRpZiAvKiAhX19BU1NFTUJMWV9fICovCiAKLSNkZWZp
bmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTIFwKLQkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhF
QyB8IFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCi0KICNpbmNsdWRlIDxh
c20tZ2VuZXJpYy9nZXRvcmRlci5oPgogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2lu
Y2x1ZGUvYXNtL3BhZ2VfdHlwZXMuaCBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhZ2VfdHlwZXMu
aAppbmRleCBjODVlMTUwMTBmNDguLmUyN2FhNmJlNjMyMCAxMDA2NDQKLS0tIGEvYXJjaC94ODYv
aW5jbHVkZS9hc20vcGFnZV90eXBlcy5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUvYXNtL3BhZ2Vf
dHlwZXMuaApAQCAtMzUsOSArMzUsNyBAQAogCiAjZGVmaW5lIFBBR0VfT0ZGU0VUCQkoKHVuc2ln
bmVkIGxvbmcpX19QQUdFX09GRlNFVCkKIAotI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxBR1Mg
XAotCSgoKGN1cnJlbnQtPnBlcnNvbmFsaXR5ICYgUkVBRF9JTVBMSUVTX0VYRUMpID8gVk1fRVhF
QyA6IDAgKSB8IFwKLQkgVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fTUFZUkVBRCB8IFZNX01BWVdS
SVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCVZNX0RBVEFf
RkxBR1NfVFNLX0VYRUMKIAogI2RlZmluZSBfX1BIWVNJQ0FMX1NUQVJUCUFMSUdOKENPTkZJR19Q
SFlTSUNBTF9TVEFSVCwgXAogCQkJCSAgICAgIENPTkZJR19QSFlTSUNBTF9BTElHTikKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L3VtL2FzbS92bS1mbGFncy5oIGIvYXJjaC94ODYvdW0vYXNtL3ZtLWZs
YWdzLmgKaW5kZXggN2MyOTdlOWUyNDEzLi5kZjdhMzg5NmY1ZGQgMTAwNjQ0Ci0tLSBhL2FyY2gv
eDg2L3VtL2FzbS92bS1mbGFncy5oCisrKyBiL2FyY2gveDg2L3VtL2FzbS92bS1mbGFncy5oCkBA
IC05LDE3ICs5LDExIEBACiAKICNpZmRlZiBDT05GSUdfWDg2XzMyCiAKLSNkZWZpbmUgVk1fREFU
QV9ERUZBVUxUX0ZMQUdTIFwKLQkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgXAotCSgoY3VycmVudC0+
cGVyc29uYWxpdHkgJiBSRUFEX0lNUExJRVNfRVhFQykgPyBWTV9FWEVDIDogMCApIHwgXAotCQkg
Vk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9E
RUZBVUxUX0ZMQUdTCVZNX0RBVEFfRkxBR1NfVFNLX0VYRUMKIAogI2Vsc2UKIAotI2RlZmluZSBW
TV9EQVRBX0RFRkFVTFRfRkxBR1MgKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCi0J
Vk1fTUFZUkVBRCB8IFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKLSNkZWZpbmUgVk1fU1RBQ0tf
REVGQVVMVF9GTEFHUyAoVk1fR1JPV1NET1dOIHwgVk1fUkVBRCB8IFZNX1dSSVRFIHwgXAotCVZN
X0VYRUMgfCBWTV9NQVlSRUFEIHwgVk1fTUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorI2RlZmluZSBW
TV9TVEFDS19ERUZBVUxUX0ZMQUdTIChWTV9HUk9XU0RPV04gfCBWTV9EQVRBX0ZMQUdTX0VYRUMp
CiAKICNlbmRpZgogI2VuZGlmCmRpZmYgLS1naXQgYS9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9w
YWdlLmggYi9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9wYWdlLmgKaW5kZXggZjQ3NzFjMjljN2U5
Li4zN2NlMjVlZjkyZDYgMTAwNjQ0Ci0tLSBhL2FyY2gveHRlbnNhL2luY2x1ZGUvYXNtL3BhZ2Uu
aAorKysgYi9hcmNoL3h0ZW5zYS9pbmNsdWRlL2FzbS9wYWdlLmgKQEAgLTIwMyw4ICsyMDMsNSBA
QCBzdGF0aWMgaW5saW5lIHVuc2lnbmVkIGxvbmcgX19fcGEodW5zaWduZWQgbG9uZyB2YSkKIAog
I2VuZGlmIC8qIF9fQVNTRU1CTFlfXyAqLwogCi0jZGVmaW5lIFZNX0RBVEFfREVGQVVMVF9GTEFH
UwkoVk1fUkVBRCB8IFZNX1dSSVRFIHwgVk1fRVhFQyB8IFwKLQkJCQkgVk1fTUFZUkVBRCB8IFZN
X01BWVdSSVRFIHwgVk1fTUFZRVhFQykKLQogI2luY2x1ZGUgPGFzbS1nZW5lcmljL21lbW9yeV9t
b2RlbC5oPgogI2VuZGlmIC8qIF9YVEVOU0FfUEFHRV9IICovCmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgKaW5kZXggYjBlNTNlZjEzZmYxLi43YTc2
NGFlNmFiNjggMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbW0uaAorKysgYi9pbmNsdWRlL2xp
bnV4L21tLmgKQEAgLTM0Miw2ICszNDIsMjEgQEAgZXh0ZXJuIHVuc2lnbmVkIGludCBrb2Jqc2l6
ZShjb25zdCB2b2lkICpvYmpwKTsKIC8qIEJpdHMgc2V0IGluIHRoZSBWTUEgdW50aWwgdGhlIHN0
YWNrIGlzIGluIGl0cyBmaW5hbCBsb2NhdGlvbiAqLwogI2RlZmluZSBWTV9TVEFDS19JTkNPTVBM
RVRFX1NFVFVQCShWTV9SQU5EX1JFQUQgfCBWTV9TRVFfUkVBRCkKIAorI2RlZmluZSBUQVNLX0VY
RUMgKChjdXJyZW50LT5wZXJzb25hbGl0eSAmIFJFQURfSU1QTElFU19FWEVDKSA/IFZNX0VYRUMg
OiAwKQorCisvKiBDb21tb24gZGF0YSBmbGFnIGNvbWJpbmF0aW9ucyAqLworI2RlZmluZSBWTV9E
QVRBX0ZMQUdTX1RTS19FWEVDCShWTV9SRUFEIHwgVk1fV1JJVEUgfCBUQVNLX0VYRUMgfCBcCisJ
CQkJIFZNX01BWVJFQUQgfCBWTV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisjZGVmaW5lIFZNX0RB
VEFfRkxBR1NfTk9OX0VYRUMJKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX01BWVJFQUQgfCBcCisJ
CQkJIFZNX01BWVdSSVRFIHwgVk1fTUFZRVhFQykKKyNkZWZpbmUgVk1fREFUQV9GTEFHU19FWEVD
CShWTV9SRUFEIHwgVk1fV1JJVEUgfCBWTV9FWEVDIHwgXAorCQkJCSBWTV9NQVlSRUFEIHwgVk1f
TUFZV1JJVEUgfCBWTV9NQVlFWEVDKQorCisjaWZuZGVmIFZNX0RBVEFfREVGQVVMVF9GTEFHUwkJ
LyogYXJjaCBjYW4gb3ZlcnJpZGUgdGhpcyAqLworI2RlZmluZSBWTV9EQVRBX0RFRkFVTFRfRkxB
R1MJKFZNX1JFQUQgfCBWTV9XUklURSB8IFZNX0VYRUMgfCBcCisJCQkJIFZNX01BWVJFQUQgfCBW
TV9NQVlXUklURSB8IFZNX01BWUVYRUMpCisjZW5kaWYKKwogI2lmbmRlZiBWTV9TVEFDS19ERUZB
VUxUX0ZMQUdTCQkvKiBhcmNoIGNhbiBvdmVycmlkZSB0aGlzICovCiAjZGVmaW5lIFZNX1NUQUNL
X0RFRkFVTFRfRkxBR1MgVk1fREFUQV9ERUZBVUxUX0ZMQUdTCiAjZW5kaWYKLS0gCjIuMjAuMQoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJU0Mg
bWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlzdHMu
bGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
