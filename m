Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id A7A59470EC3
	for <lists+openrisc@lfdr.de>; Sat, 11 Dec 2021 00:35:22 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 8AE9B242C3;
	Sat, 11 Dec 2021 00:35:22 +0100 (CET)
Received: from mail-pf1-f179.google.com (mail-pf1-f179.google.com
 [209.85.210.179])
 by mail.librecores.org (Postfix) with ESMTPS id 24E12242B8
 for <openrisc@lists.librecores.org>; Sat, 11 Dec 2021 00:35:21 +0100 (CET)
Received: by mail-pf1-f179.google.com with SMTP id i12so9780494pfd.6
 for <openrisc@lists.librecores.org>; Fri, 10 Dec 2021 15:35:21 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=vxGxuajyDf5nY+aA0aIB7ztLg7ACmXeyCmrLkh9Cf3A=;
 b=iXiRb2lkj9veoSlyLHHZuBpwF+53XSZ6QiwSwvQdCxWCpyu99N6ScbYFh44kxab5Gt
 aaBNsQ5ORWncW0ynxSTWNcqURTUGPCoINO0hWUfgU3XMC+OKYQ1hJobc99YYuMtAyheI
 ZSsUlEn9kf17ba2ggIv5AyHgx3GGdGO4NzP5SdgyrK2uy6tsImnnAxnK0JtjQhrPrMpf
 zgbPXTTfwfRel+uqv7sIzXhIkAc7Wtv1J+cno/RzxfEIi9Ar5X/vKsl9WTvSbXPn4riZ
 VdLHqBQ3NqaExDow+9fQL8Ab0vJEe81FLCUJLfvJFbw415Kb2FdPsOw1v/85ggZZFxDJ
 r28Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=vxGxuajyDf5nY+aA0aIB7ztLg7ACmXeyCmrLkh9Cf3A=;
 b=a5zh+inj2Ln3el/gOTxOxmRbNDvPcwVpyKdADe5gNPLnzdtGB0lRpj3sC0zOeb4SAJ
 P0/EWJrpbG6jDXEflaQialR6DQG5v4R25jZqYgy510aHS8k+HOOfJ/gRja/c8flQPslf
 tykDHVUO8XadNz2M2ZClMpxrXL73nwv+7EaY72TzYGFreGC4v5Tb3YgkE6NG3fVIZadL
 C20yzRQKIXNFAHaAjhMKDs6trFNKbpd1x38faLrJ/ChSjvWRBG4IB2IXp3FoP1NTStvX
 Kd9m0uRMear/aaRU4RiC7AwsVlajUCU4xxUybmJFLjZXD5rO8m1p6MUyzKKsKILu5duH
 cSNw==
X-Gm-Message-State: AOAM5330DhJojchJ5edzyTh651dZpo9ZdOkbAsg7z2lHshfnlIobJv/Y
 sBpO/h1vVh4GqW0cS3Xge8M=
X-Google-Smtp-Source: ABdhPJzxAXKLD457h1kDJ1DJp9mXFLSR1JGHh1XbPnOseQ/cPqOOJhQosBfkWuUsPyn+a5z/T3hhrQ==
X-Received: by 2002:a63:cc03:: with SMTP id x3mr316863pgf.295.1639179319476;
 Fri, 10 Dec 2021 15:35:19 -0800 (PST)
Received: from localhost ([2409:10:24a0:4700:e8ad:216a:2a9d:6d0c])
 by smtp.gmail.com with ESMTPSA id i1sm3651852pgs.50.2021.12.10.15.35.18
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 10 Dec 2021 15:35:18 -0800 (PST)
From: Stafford Horne <shorne@gmail.com>
To: GLIBC patches <libc-alpha@sourceware.org>
Date: Sat, 11 Dec 2021 08:34:48 +0900
Message-Id: <20211210233456.4146479-6-shorne@gmail.com>
X-Mailer: git-send-email 2.31.1
In-Reply-To: <20211210233456.4146479-1-shorne@gmail.com>
References: <20211210233456.4146479-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH v3 05/13] or1k: Thread Local Storage support
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

T3BlblJJU0MgaW5jbHVkZXMgMyBUTFMgYWRkcmVzc2luZyBtb2RlbHMuICBMb2NhbCBEeW5hbWlj
IG9wdGltaXphdGlvbnMKYXJlIG5vdCBkb25lIGluIHRoZSBsaW5rZXIgYW5kIHRoZXJlZm9yZSB1
c2UgdGhlIHNhbWUgY29kZSBzZXF1ZW5jZXMgYXMKR2xvYmFsIER5bmFtaWMuCi0tLQogc3lzZGVw
cy9vcjFrL2RsLXRscy5oICAgICAgICAgICAgIHwgIDI3ICsrKysrCiBzeXNkZXBzL29yMWsvbGli
Yy10bHMuYyAgICAgICAgICAgfCAgMzQgKysrKysrCiBzeXNkZXBzL29yMWsvbnB0bC90Y2Itb2Zm
c2V0cy5zeW0gfCAgIDYgKwogc3lzZGVwcy9vcjFrL25wdGwvdGxzLmggICAgICAgICAgIHwgMTg5
ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogc3lzZGVwcy9vcjFrL3N0YWNraW5mby5o
ICAgICAgICAgIHwgIDM0ICsrKysrKwogNSBmaWxlcyBjaGFuZ2VkLCAyOTAgaW5zZXJ0aW9ucygr
KQogY3JlYXRlIG1vZGUgMTAwNjQ0IHN5c2RlcHMvb3Ixay9kbC10bHMuaAogY3JlYXRlIG1vZGUg
MTAwNjQ0IHN5c2RlcHMvb3Ixay9saWJjLXRscy5jCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVw
cy9vcjFrL25wdGwvdGNiLW9mZnNldHMuc3ltCiBjcmVhdGUgbW9kZSAxMDA2NDQgc3lzZGVwcy9v
cjFrL25wdGwvdGxzLmgKIGNyZWF0ZSBtb2RlIDEwMDY0NCBzeXNkZXBzL29yMWsvc3RhY2tpbmZv
LmgKCmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvZGwtdGxzLmggYi9zeXNkZXBzL29yMWsvZGwt
dGxzLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uMzgyNTg4ZDUwNAot
LS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9kbC10bHMuaApAQCAtMCwwICsxLDI3IEBA
CisvKiBUTFMgZGVmaW5pdGlvbnMgZm9yIHRoZSBFTEYgZHluYW1pYyBsaW5rZXIuICBPcGVuUklT
QyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIxIEZyZWUgU29mdHdhcmUgRm91bmRhdGlv
biwgSW5jLgorCisgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgR05VIEMgTGlicmFyeS4KKwor
ICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1
dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVz
c2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMKKyAgIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBT
b2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAyLjEgb2YgdGhlCisgICBMaWNlbnNl
LCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgorCisgICBUaGUgR05VIEMg
TGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVs
LAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQg
d2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VM
QVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5z
ZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5
IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljCisgICBMaWNlbnNlIGFsb25nIHdpdGgg
dGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9s
aWNlbnNlcy8+LiAgKi8KKworLyogVHlwZSB1c2VkIGZvciB0aGUgcmVwcmVzZW50YXRpb24gb2Yg
VExTIGluZm9ybWF0aW9uIGluIHRoZSBHT1QuICAqLwordHlwZWRlZiBzdHJ1Y3QKK3sKKyAgdW5z
aWduZWQgbG9uZyBpbnQgdGlfbW9kdWxlOworICB1bnNpZ25lZCBsb25nIGludCB0aV9vZmZzZXQ7
Cit9IHRsc19pbmRleDsKKworZXh0ZXJuIHZvaWQgKl9fdGxzX2dldF9hZGRyICh0bHNfaW5kZXgg
KnRpKTsKZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9saWJjLXRscy5jIGIvc3lzZGVwcy9vcjFr
L2xpYmMtdGxzLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uMTUyNDg1
NWU4OAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2RlcHMvb3Ixay9saWJjLXRscy5jCkBAIC0wLDAg
KzEsMzQgQEAKKy8qIFRocmVhZC1sb2NhbCBzdG9yYWdlIGhhbmRsaW5nIGluIHRoZSBFTEYgZHlu
YW1pYyBsaW5rZXIuCisgICBPcGVuUklTQyB2ZXJzaW9uLgorICAgQ29weXJpZ2h0IChDKSAyMDIx
IEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgSW5jLgorCisgICBUaGlzIGZpbGUgaXMgcGFydCBv
ZiB0aGUgR05VIEMgTGlicmFyeS4KKworICAgVGhlIEdOVSBDIExpYnJhcnkgaXMgZnJlZSBzb2Z0
d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yCisgICBtb2RpZnkgaXQgdW5kZXIg
dGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMKKyAg
IHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lv
biAyLjEgb2YgdGhlCisgICBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2
ZXJzaW9uLgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9w
ZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLAorICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3
aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YKKyAgIE1FUkNIQU5UQUJJTElUWSBv
ciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUgR05VCisgICBMZXNz
ZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLgorCisgICBZb3Ugc2hv
dWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGlj
CisgICBMaWNlbnNlIGFsb25nIHdpdGggdGhlIEdOVSBDIExpYnJhcnk7IGlmIG5vdCwgc2VlCisg
ICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworI2luY2x1ZGUgPGNzdS9s
aWJjLXRscy5jPgorI2luY2x1ZGUgPGRsLXRscy5oPgorCisvKiBPbiBPcGVuUklTQywgbGlua2Vy
IG9wdGltaXphdGlvbnMgYXJlIG5vdCByZXF1aXJlZCwgc28gX190bHNfZ2V0X2FkZHIKKyAgIGNh
biBiZSBjYWxsZWQgZXZlbiBpbiBzdGF0aWNhbGx5IGxpbmtlZCBiaW5hcmllcy4gIEluIHRoaXMg
Y2FzZSBtb2R1bGUKKyAgIG11c3QgYmUgYWx3YXlzIDEgYW5kIFBUX1RMUyBzZWdtZW50IGV4aXN0
IGluIHRoZSBiaW5hcnksIG90aGVyd2lzZSBpdAorICAgd291bGQgbm90IGxpbmsuICAqLworCit2
b2lkICoKK19fdGxzX2dldF9hZGRyICh0bHNfaW5kZXggKnRpKQoreworICBkdHZfdCAqZHR2ID0g
VEhSRUFEX0RUViAoKTsKKyAgcmV0dXJuIChjaGFyICopIGR0dlsxXS5wb2ludGVyLnZhbCArIHRp
LT50aV9vZmZzZXQ7Cit9CmRpZmYgLS1naXQgYS9zeXNkZXBzL29yMWsvbnB0bC90Y2Itb2Zmc2V0
cy5zeW0gYi9zeXNkZXBzL29yMWsvbnB0bC90Y2Itb2Zmc2V0cy5zeW0KbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uODYwMjVhNDAyZAotLS0gL2Rldi9udWxsCisrKyBiL3N5
c2RlcHMvb3Ixay9ucHRsL3RjYi1vZmZzZXRzLnN5bQpAQCAtMCwwICsxLDYgQEAKKyNpbmNsdWRl
IDxzeXNkZXAuaD4KKyNpbmNsdWRlIDx0bHMuaD4KKworTVVMVElQTEVfVEhSRUFEU19PRkZTRVQg
ICAgICAgICBvZmZzZXRvZiAoc3RydWN0IHB0aHJlYWQsIGhlYWRlci5tdWx0aXBsZV90aHJlYWRz
KQorVElEX09GRlNFVCAgICAgICAgICAgICAgICAgICAgICBvZmZzZXRvZiAoc3RydWN0IHB0aHJl
YWQsIHRpZCkKK1RQX1RPX1BUSFJFQURfT0ZGU0VUICAgICAgICAgICAgLShzaXplb2YgKHN0cnVj
dCBwdGhyZWFkKSArIHNpemVvZiAodGNiaGVhZF90KSkKZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ix
ay9ucHRsL3Rscy5oIGIvc3lzZGVwcy9vcjFrL25wdGwvdGxzLmgKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMC4uZGMxMTYxMDkyMAotLS0gL2Rldi9udWxsCisrKyBiL3N5c2Rl
cHMvb3Ixay9ucHRsL3Rscy5oCkBAIC0wLDAgKzEsMTg5IEBACisvKiBEZWZpbml0aW9uIGZvciB0
aHJlYWQtbG9jYWwgZGF0YSBoYW5kbGluZy4gIE5QVEwvT3BlblJJU0MgdmVyc2lvbi4KKyAgIENv
cHlyaWdodCAoQykgMjAyMSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMg
ZmlsZSBpcyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFy
eSBpcyBmcmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1v
ZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMK
KyAgIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247
IGVpdGhlcgorICAgdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlv
bikgYW55IGxhdGVyIHZlcnNpb24uCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1
dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBB
TlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVS
Q0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRo
ZSBHTlUKKyAgIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMu
CisKKyAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIg
R2VuZXJhbCBQdWJsaWMKKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeS4g
IElmIG5vdCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKwor
I2lmbmRlZiBfVExTX0gKKyNkZWZpbmUgX1RMU19IICAxCisKKyNpbmNsdWRlIDxkbC1zeXNkZXAu
aD4KKworI2lmbmRlZiBfX0FTU0VNQkxFUl9fCisjIGluY2x1ZGUgPHN0ZGJvb2wuaD4KKyMgaW5j
bHVkZSA8c3RkZGVmLmg+CisjIGluY2x1ZGUgPHN0ZGludC5oPgorIyBpbmNsdWRlIDxkbC1kdHYu
aD4KKwordHlwZWRlZiBzdHJ1Y3QKK3sKKyAgZHR2X3QgKmR0djsKKyAgdm9pZCAqX19wYWRkaW5n
WzNdOyAvKiBUbyBtYWludGFpbiAxNiBieXRlIHBhZGRpbmcsIG5lZWRlZCBieSBTVEFDS19BTElH
Ti4gICovCit9IHRjYmhlYWRfdDsKKworcmVnaXN0ZXIgdGNiaGVhZF90ICpfX3RocmVhZF9zZWxm
IF9fYXNtX18oInIxMCIpOworCisjIGRlZmluZSBUTFNfTVVMVElQTEVfVEhSRUFEU19JTl9UQ0Ig
MQorCisjZWxzZSAvKiBfX0FTU0VNQkxFUl9fICovCisjIGluY2x1ZGUgPHRjYi1vZmZzZXRzLmg+
CisjZW5kaWYgLyogX19BU1NFTUJMRVJfXyAqLworCisjaWZuZGVmIF9fQVNTRU1CTEVSX18KKwor
LyogR2V0IHN5c3RlbSBjYWxsIGluZm9ybWF0aW9uLiAgKi8KKyMgaW5jbHVkZSA8c3lzZGVwLmg+
CisKKy8qIFRoZSBUUCBwb2ludHMgdG8gdGhlIHN0YXJ0IG9mIHRoZSBUTFMgYmxvY2suCisgICBB
cyBJIHVuZGVyc3RhbmQgaXQsIHRoaXMgaXNuJ3Qgc3RyaWN0bHkgdGhhdCAiVFAgcG9pbnRzIHRv
IERUViIgLSBpdCdzCisgICBtb3JlIHdoZXJlIHRvIHBsYWNlIHRoZSBUQ0IgaW4gdGhlIFRMUyBi
bG9jay4gIFRoaXMgd2lsbCBwbGFjZSBpdCBpbgorICAgdGhlIGJlZ2lubmluZy4KKworICAgTGF5
b3V0OgorICAgICstLS0tLSstLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tKworICAgIHwgUFJF
IHwgVENCIHwgVExTIE1FTU9SWSAuLiAgICAgICAgfAorICAgICstLS0tLSstLS0tLSstLS0tLS0t
LS0tLS0tLS0tLS0tLS0tKworCQkgXiByMTAgLyBUUAorCisgICBQUkUgaXMgdGhlIHN0cnVjdCBw
dGhyZWFkIGRlc2NyaWJlZCBiZWxvdworICAgVENCIGlzIHRjYmhlYWRfdAorICAgVExTIG1lbW9y
eSBpcyB3aGVyZSB0aGUgVExTIHByb2dyYW0gc2VjdGlvbnMgYXJlIGxvYWRlZAorCisgICBTZWUg
X2RsX2FsbG9jYXRlX3Rsc19zdG9yYWdlIGFuZCBfX2xpYmNfc2V0dXBfdGxzIGZvciBtb3JlIGlu
Zm9ybWF0aW9uLiAgKi8KKworIyBkZWZpbmUgVExTX0RUVl9BVF9UUCAgMQorIyBkZWZpbmUgVExT
X1RDQl9BVF9UUCAgMAorCisvKiBHZXQgdGhlIHRocmVhZCBkZXNjcmlwdG9yIGRlZmluaXRpb24u
ICAqLworIyBpbmNsdWRlIDxucHRsL2Rlc2NyLmg+CisKKy8qIFJlcXVpcmVtZW50cyBmb3IgdGhl
IFRDQi4gICovCisjIGRlZmluZSBUTFNfSU5JVF9UQ0JfU0laRSAgICBzaXplb2YgKHRjYmhlYWRf
dCkKKyMgZGVmaW5lIFRMU19JTklUX1RDQl9BTElHTiAgIF9fYWxpZ25vZl9fIChzdHJ1Y3QgcHRo
cmVhZCkKKworIyBkZWZpbmUgVExTX1RDQl9TSVpFICAgICAgICAgc2l6ZW9mICh0Y2JoZWFkX3Qp
CisjIGRlZmluZSBUTFNfVENCX0FMSUdOICAgICAgICBfX2FsaWdub2ZfXyAoc3RydWN0IHB0aHJl
YWQpCisKKy8qIFRoaXMgaXMgdGhlIHNpemUgb2YgdGhlIFRDQi4gICovCisKKy8qIFRoaXMgaXMg
dGhlIHNpemUgd2UgbmVlZCBiZWZvcmUgVENCLgorICAgVG8gc3VwcG9ydCBUSFJFQURfR0VUTUVN
IHdpdGggZnJpZW5kcyB3ZSB3YW50IHRvIGhhdmUgYQorICAgc3RydWN0IHB0aHJlYWQgYXZhaWxh
YmxlLgorICAgWWFuayBpdCBpbiBpbmZyb250IG9mIGV2ZXJ5dGhpbmcsIEknbSBzdXJlIG5vYm9k
eSB3aWxsIG1pbmQuCisKKyAgIFRoaXMgbWVtb3J5IGlzIHJlYWxseSBhbGxvY2F0ZWQgUFJFIHRo
ZSBUTFMgYmxvY2ssIHNvIGl0J3MgcG9zc2libGUKKyAgIHRvIGRvICgoY2hhciopdGxzYmxvY2sp
IC0gVExTX1BSRV9UQ0JfU0laRSB0byBhY2Nlc3MgaXQuCisgICBUaGlzIGlzIGRvbmUgZm9yIFRI
UkVBRF9TRUxGLiAgKi8KKworIyBkZWZpbmUgVExTX1BSRV9UQ0JfU0laRSBzaXplb2YgKHN0cnVj
dCBwdGhyZWFkKQorCisKKy8qIEluc3RhbGwgdGhlIGR0diBwb2ludGVyLgorICAgV2hlbiBjYWxs
ZWQsIGR0dnAgaXMgYSBwb2ludGVyIG5vdCB0aGUgRFRWIHBlciBzYXkgKHdoaWNoIHNob3VsZCBz
dGFydAorICAgd2l0aCB0aGUgZ2VuZXJhdGlvbiBjb3VudGVyKSBidXQgdG8gdGhlIGxlbmd0aCBv
ZiB0aGUgRFRWLgorICAgV2UgY2FuIGFsd2F5cyBpbmRleCB3aXRoIC0xLCBzbyB3ZSBzdG9yZSBk
dHZwWzFdLiAgKi8KKworIyBkZWZpbmUgSU5TVEFMTF9EVFYodGNicCwgZHR2cCkgXAorICAoKCh0
Y2JoZWFkX3QgKikgKHRjYnApKS0+ZHR2ID0gKGR0dnApICsgMSkKKworLyogSW5zdGFsbCBuZXcg
ZHR2IGZvciBjdXJyZW50IHRocmVhZAorICAgSW4gYSBsb2dpY2lhbCB3b3JsZCBkdHYgaGVyZSB3
b3VsZCBhbHNvIHBvaW50IHRvIHRoZSBsZW5ndGggb2YgdGhlIERUVi4KKyAgIEhvd2V2ZXIgaXQg
ZG9lcyBub3QsIHRoaXMgdGltZSBpdCBwb2ludHMgdG8gdGhlIGdlbmVyYXRpb24gY291bnRlciwK
KyAgIHNvIGp1c3Qgc3RvcmUgaXQuCisKKyAgIE5vdGU6IC0xIGlzIHN0aWxsIHZhbGlkIGFuZCBj
b250YWlucyB0aGUgbGVuZ3RoLiAgKi8KKworIyBkZWZpbmUgSU5TVEFMTF9ORVdfRFRWKGR0dikg
KFRIUkVBRF9EVFYoKSA9IChkdHYpKQorCisvKiBSZXR1cm4gZHR2IG9mIGdpdmVuIHRocmVhZCBk
ZXNjcmlwdG9yLiAgKi8KKyMgZGVmaW5lIEdFVF9EVFYodGNicCkgKCgodGNiaGVhZF90ICopICh0
Y2JwKSktPmR0dikKKworLyogQ29kZSB0byBpbml0aWFsbHkgaW5pdGlhbGl6ZSB0aGUgdGhyZWFk
IHBvaW50ZXIuCisKKyAgIFNldCBUUCB0byB0aGUgYWRkcmVzcyBfYWZ0ZXJfIHRjYmhlYWRfdC4g
IFRoaXMgd2lsbCBhbGxvdyB1cworICAgdG8gY2hhbmdlIHRoZSBzaXplIG9mIHRjYmhlYWRfdCB3
aXRob3V0IGhhdmluZyB0byByZS1saW5rIGV2ZXJ5dGhpbmcuCisKKyAgIFRoaXMgaGFzIHRvIHJl
dHVybiBOVUxMIG9uIHN1Y2Nlc3MgKG9yIGEgc3RyaW5nIHdpdGggdGhlIGZhaWx1cmUgdGV4dCku
CisgICBJdCdzIGhhcmQgdG8gZmFpbCB0aGlzLCBzbyByZXR1cm4gTlVMTCBhbHdheXMuICAqLwor
CisjIGRlZmluZSBUTFNfSU5JVF9UUCh0Y2JwKSBcCisgICh7X190aHJlYWRfc2VsZiA9ICgodGNi
aGVhZF90ICopdGNicCArIDEpOyBOVUxMO30pCisKKy8qIFZhbHVlIHBhc3NlZCB0byAnY2xvbmUn
IGZvciBpbml0aWFsaXphdGlvbiBvZiB0aGUgdGhyZWFkIHJlZ2lzdGVyLiAgKi8KKyMgZGVmaW5l
IFRMU19ERUZJTkVfSU5JVF9UUCh0cCwgcGQpIFwKKyAgdm9pZCAqdHAgPSAoKGNoYXIgKikgcGQg
KyBUTFNfUFJFX1RDQl9TSVpFICsgVExTX0lOSVRfVENCX1NJWkUpCisKKy8qIFJldHVybiB0aGUg
YWRkcmVzcyBvZiB0aGUgZHR2IGZvciB0aGUgY3VycmVudCB0aHJlYWQuCisKKyAgIERlcmVmZXJl
bmNlIFRQLCBvZmZzZXQgdG8gZHR2IC0gcmVhbGx5IHN0cmFpZ2h0Zm9yd2FyZC4KKyAgIFJlbWVt
YmVyIHRoYXQgd2UgbWFkZSBUUCBwb2ludCB0byBhZnRlciB0Y2IsIHNvIHdlIG5lZWQgdG8gcmV2
ZXJzZSB0aGF0LiAgKi8KKworIyAgZGVmaW5lIFRIUkVBRF9EVFYoKSBcCisgICgoKCh0Y2JoZWFk
X3QgKilfX3RocmVhZF9zZWxmKS0xKS0+ZHR2KQorCisvKiBSZXR1cm4gdGhlIHRocmVhZCBkZXNj
cmlwdG9yIGZvciB0aGUgY3VycmVudCB0aHJlYWQuCisKKyAgIFJldHVybiBhIHBvaW50ZXIgdG8g
dGhlIFRMU19QUkUgYXJlYSB3aGVyZSB3ZSBhbGxvY2F0ZWQgc3BhY2UgZm9yCisgICBhIHN0cnVj
dCBwdGhyZWFkLiAgQWdhaW4sIFRQIHBvaW50cyB0byBhZnRlciB0Y2JoZWFkX3QsIGNvbXBlbnNh
dGUgd2l0aAorICAgVExTX0lOSVRfVENCX1NJWkUuCisKKyAgIEkgcmVnYXJkIHRoaXMgaXMgYSBz
ZXBlcmF0ZSBzeXN0ZW0gZnJvbSB0aGUgIm5vcm1hbCIgVExTLiAgKi8KKworIyBkZWZpbmUgVEhS
RUFEX1NFTEYgXAorICAoKHN0cnVjdCBwdGhyZWFkICopICgoY2hhciAqKSBfX3RocmVhZF9zZWxm
IC0gVExTX0lOSVRfVENCX1NJWkUgXAorICAgIC0gVExTX1BSRV9UQ0JfU0laRSkpCisKKy8qIE1h
Z2ljIGZvciBsaWJ0aHJlYWRfZGIgdG8ga25vdyBob3cgdG8gZG8gVEhSRUFEX1NFTEYuICAqLwor
CisjIGRlZmluZSBEQl9USFJFQURfU0VMRiBcCisgIFJFR0lTVEVSICgzMiwgMzIsIDEwICogNCwg
LSBUTFNfSU5JVF9UQ0JfU0laRSAtIFRMU19QUkVfVENCX1NJWkUpCisKKy8qIEFjY2VzcyB0byBk
YXRhIGluIHRoZSB0aHJlYWQgZGVzY3JpcHRvciBpcyBlYXN5LiAgKi8KKworI2RlZmluZSBUSFJF
QURfR0VUTUVNKGRlc2NyLCBtZW1iZXIpIFwKKyAgZGVzY3ItPm1lbWJlcgorI2RlZmluZSBUSFJF
QURfR0VUTUVNX05DKGRlc2NyLCBtZW1iZXIsIGlkeCkgXAorICBkZXNjci0+bWVtYmVyW2lkeF0K
KyNkZWZpbmUgVEhSRUFEX1NFVE1FTShkZXNjciwgbWVtYmVyLCB2YWx1ZSkgXAorICBkZXNjci0+
bWVtYmVyID0gKHZhbHVlKQorI2RlZmluZSBUSFJFQURfU0VUTUVNX05DKGRlc2NyLCBtZW1iZXIs
IGlkeCwgdmFsdWUpIFwKKyAgZGVzY3ItPm1lbWJlcltpZHhdID0gKHZhbHVlKQorCisvKiBHZXQg
YW5kIHNldCB0aGUgZ2xvYmFsIHNjb3BlIGdlbmVyYXRpb24gY291bnRlciBpbiBzdHJ1Y3QgcHRo
cmVhZC4gICovCisKKyNkZWZpbmUgVEhSRUFEX0dTQ09QRV9GTEFHX1VOVVNFRCAwCisjZGVmaW5l
IFRIUkVBRF9HU0NPUEVfRkxBR19VU0VEICAgMQorI2RlZmluZSBUSFJFQURfR1NDT1BFX0ZMQUdf
V0FJVCAgIDIKKyNkZWZpbmUgVEhSRUFEX0dTQ09QRV9SRVNFVF9GTEFHKCkJCQkJCVwKKyAgZG8J
CQkJCQkJCQlcCisgICAgewkJCQkJCQkJCVwKKyAgICAgIGludCBfX3JlcyA9IGF0b21pY19leGNo
YW5nZV9yZWwgKCZUSFJFQURfU0VMRi0+aGVhZGVyLmdzY29wZV9mbGFnLFwKKwkJCQkgICAgICAg
VEhSRUFEX0dTQ09QRV9GTEFHX1VOVVNFRCk7CVwKKyAgICAgIGlmIChfX3JlcyA9PSBUSFJFQURf
R1NDT1BFX0ZMQUdfV0FJVCkJCQkJXAorCSAgbGxsX2Z1dGV4X3dha2UgKCZUSFJFQURfU0VMRi0+
aGVhZGVyLmdzY29wZV9mbGFnLCAxLAkJXAorCQkJICBMTExfUFJJVkFURSk7CQkJCQlcCisgICAg
fQkJCQkJCQkJCVwKKyAgd2hpbGUgKDApCisjZGVmaW5lIFRIUkVBRF9HU0NPUEVfU0VUX0ZMQUco
KQkJCQkJXAorICBkbwkJCQkJCQkJCVwKKyAgICB7CQkJCQkJCQkJXAorICAgICAgVEhSRUFEX1NF
TEYtPmhlYWRlci5nc2NvcGVfZmxhZyA9IFRIUkVBRF9HU0NPUEVfRkxBR19VU0VEOwlcCisgICAg
ICBhdG9taWNfd3JpdGVfYmFycmllciAoKTsJCQkJCQlcCisgICAgfQkJCQkJCQkJCVwKKyAgd2hp
bGUgKDApCisKKyNlbmRpZiAvKiBfX0FTU0VNQkxFUl9fICovCisKKyNlbmRpZiAgLyogdGxzLmgg
Ki8KZGlmZiAtLWdpdCBhL3N5c2RlcHMvb3Ixay9zdGFja2luZm8uaCBiL3N5c2RlcHMvb3Ixay9z
dGFja2luZm8uaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi45MjczZTcw
OWJkCi0tLSAvZGV2L251bGwKKysrIGIvc3lzZGVwcy9vcjFrL3N0YWNraW5mby5oCkBAIC0wLDAg
KzEsMzQgQEAKKy8qIFN0YWNrIGRlZmluaXRpb25zIGZvciBPcGVuUklTQy4KKyAgIENvcHlyaWdo
dCAoQykgMjAyMSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4KKyAgIFRoaXMgZmlsZSBp
cyBwYXJ0IG9mIHRoZSBHTlUgQyBMaWJyYXJ5LgorCisgICBUaGUgR05VIEMgTGlicmFyeSBpcyBm
cmVlIHNvZnR3YXJlOyB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IKKyAgIG1vZGlmeSBp
dCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMKKyAgIExp
Y2Vuc2UgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhl
cgorICAgdmVyc2lvbiAyLjEgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55
IGxhdGVyIHZlcnNpb24uCisKKyAgIFRoZSBHTlUgQyBMaWJyYXJ5IGlzIGRpc3RyaWJ1dGVkIGlu
IHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsCisgICBidXQgV0lUSE9VVCBBTlkgV0FS
UkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZgorICAgTUVSQ0hBTlRB
QklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZSBHTlUK
KyAgIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuCisKKyAg
IFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJh
bCBQdWJsaWMKKyAgIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGUgR05VIEMgTGlicmFyeS4gIElmIG5v
dCwgc2VlCisgICA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LiAgKi8KKworLyogVGhp
cyBmaWxlIGNvbnRhaW5zIGEgYml0IG9mIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzdGFjayBhbGxv
Y2F0aW9uCisgICBvZiB0aGUgcHJvY2Vzc29yLiAgKi8KKworI2lmbmRlZiBfU1RBQ0tJTkZPX0gK
KyNkZWZpbmUgX1NUQUNLSU5GT19ICTEKKworI2luY2x1ZGUgPGVsZi5oPgorCisvKiBPbiBvcjFr
IHRoZSBzdGFjayBncm93cyBkb3duLiAgKi8KKyNkZWZpbmUgX1NUQUNLX0dST1dTX0RPV04JMQor
CisvKiBEZWZhdWx0IHRvIGFuIGV4ZWN1dGFibGUgc3RhY2suICBQRl9YIGNhbiBiZSBvdmVycmlk
ZGVuIGlmIFBUX0dOVV9TVEFDSyBpcworICAgcHJlc2VudCwgYnV0IGl0IGlzIHByZXN1bWVkIGFi
c2VudC4gICovCisjZGVmaW5lIERFRkFVTFRfU1RBQ0tfUEVSTVMgKFBGX1IgfCBQRl9XIHwgUEZf
WCkKKworI2VuZGlmIC8qIHN0YWNraW5mby5oICovCi0tIAoyLjMxLjEKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9wZW5SSVNDIG1haWxpbmcgbGlzdApP
cGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczovL2xpc3RzLmxpYnJlY29yZXMub3Jn
L2xpc3RpbmZvL29wZW5yaXNjCg==
