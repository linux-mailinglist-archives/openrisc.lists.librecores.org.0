Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id E1F571B209F
	for <lists+openrisc@lfdr.de>; Tue, 21 Apr 2020 10:01:42 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 4BC992088A;
	Tue, 21 Apr 2020 10:01:40 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 4C965209F6
 for <openrisc@lists.librecores.org>; Sun, 12 Apr 2020 21:50:37 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id 4E08020739;
 Sun, 12 Apr 2020 19:50:22 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1586721035;
 bh=iOM3A0vobJDsExVzrS7lGV2zReH6TqGaWcX9M8mM67o=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=Li6J9KLf7BQUIwORBJAtmxXSovbI7+Oztrvkl3btE/AykHPFPb9eyP0D+y3v4aT4a
 hOOfbO3g2RKdUKA65ke3k0wtxsrNv+MCNOD6iqt6IW+nsyaSIJ/98KFgqdCAlgv4is
 AZ+L5b8mc15X1JCJFksrpHD/3bD8maPqGIn+/Fpo=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Sun, 12 Apr 2020 22:48:43 +0300
Message-Id: <20200412194859.12663-6-rppt@kernel.org>
X-Mailer: git-send-email 2.25.1
In-Reply-To: <20200412194859.12663-1-rppt@kernel.org>
References: <20200412194859.12663-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Tue, 21 Apr 2020 10:01:35 +0200
Subject: [OpenRISC] [PATCH 05/21] mm: use free_area_init() instead of
 free_area_init_nodes()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-doc@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Michal Hocko <mhocko@kernel.org>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Guo Ren <guoren@kernel.org>,
 linux-csky@vger.kernel.org, linux-parisc@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Mike Rapoport <rppt@linux.ibm.com>,
 Greg Ungerer <gerg@linux-m68k.org>, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Baoquan He <bhe@redhat.com>, Jonathan Corbet <corbet@lwn.net>,
 linux-sh@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
 Helge Deller <deller@gmx.de>, x86@kernel.org,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-arm-kernel@lists.infradead.org, Mark Salter <msalter@redhat.com>,
 Matt Turner <mattst88@gmail.com>, linux-snps-arc@lists.infradead.org,
 uclinux-h8-devel@lists.sourceforge.jp, linux-xtensa@linux-xtensa.org,
 linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, Tony Luck <tony.luck@intel.com>,
 Greentime Hu <green.hu@gmail.com>, Paul Walmsley <paul.walmsley@sifive.com>,
 Guan Xuetao <gxt@pku.edu.cn>, Hoan Tran <Hoan@os.amperecomputing.com>,
 Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Brian Cain <bcain@codeaurora.org>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Richard Weinberger <richard@nod.at>, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>,
 Mike Rapoport <rppt@kernel.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKVGhlIGZyZWVfYXJlYV9p
bml0KCkgaGFzIGVmZmVjdGl2ZWx5IGJlY2FtZSBhIHdyYXBwZXIgZm9yCmZyZWVfYXJlYV9pbml0
X25vZGVzKCkgYW5kIHRoZXJlIGlzIG5vIHBvaW50IG9mIGtlZXBpbmcgaXQuIFN0aWxsCmZyZWVf
YXJlYV9pbml0KCkgbmFtZSBpcyBzaG9ydGVyIGFuZCBtb3JlIGdlbmVyYWwgYXMgaXQgZG9lcyBu
b3QgaW1wbHkKbmVjZXNzaXR5IHRvIGluaXRpYWxpemUgbXVsdGlwbGUgbm9kZXMuCgpSZW5hbWUg
ZnJlZV9hcmVhX2luaXRfbm9kZXMoKSB0byBmcmVlX2FyZWFfaW5pdCgpLCB1cGRhdGUgdGhlIGNh
bGxlcnMgYW5kCmRyb3Agb2xkIHZlcnNpb24gb2YgZnJlZV9hcmVhX2luaXQoKS4KClNpZ25lZC1v
ZmYtYnk6IE1pa2UgUmFwb3BvcnQgPHJwcHRAbGludXguaWJtLmNvbT4KLS0tCiBhcmNoL2FybTY0
L21tL2luaXQuYyAgICAgICAgICAgICB8ICAyICstCiBhcmNoL2lhNjQvbW0vY29udGlnLmMgICAg
ICAgICAgICB8ICAyICstCiBhcmNoL2lhNjQvbW0vZGlzY29udGlnLmMgICAgICAgICB8ICAyICst
CiBhcmNoL21pY3JvYmxhemUvbW0vaW5pdC5jICAgICAgICB8ICAyICstCiBhcmNoL21pcHMvbG9v
bmdzb242NC9udW1hLmMgICAgICB8ICAyICstCiBhcmNoL21pcHMvbW0vaW5pdC5jICAgICAgICAg
ICAgICB8ICAyICstCiBhcmNoL21pcHMvc2dpLWlwMjcvaXAyNy1tZW1vcnkuYyB8ICAyICstCiBh
cmNoL3Bvd2VycGMvbW0vbWVtLmMgICAgICAgICAgICB8ICAyICstCiBhcmNoL3Jpc2N2L21tL2lu
aXQuYyAgICAgICAgICAgICB8ICAyICstCiBhcmNoL3MzOTAvbW0vaW5pdC5jICAgICAgICAgICAg
ICB8ICAyICstCiBhcmNoL3NoL21tL2luaXQuYyAgICAgICAgICAgICAgICB8ICAyICstCiBhcmNo
L3NwYXJjL21tL2luaXRfNjQuYyAgICAgICAgICB8ICAyICstCiBhcmNoL3g4Ni9tbS9pbml0LmMg
ICAgICAgICAgICAgICB8ICAyICstCiBpbmNsdWRlL2xpbnV4L21tLmggICAgICAgICAgICAgICB8
ICA3ICsrKy0tLS0KIG1tL3BhZ2VfYWxsb2MuYyAgICAgICAgICAgICAgICAgIHwgMTAgKystLS0t
LS0tLQogMTUgZmlsZXMgY2hhbmdlZCwgMTggaW5zZXJ0aW9ucygrKSwgMjUgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvYXJjaC9hcm02NC9tbS9pbml0LmMgYi9hcmNoL2FybTY0L21tL2luaXQu
YwppbmRleCBlNDI3MjdlMzU2OGUuLmE2NTBhZGIzNThlZSAxMDA2NDQKLS0tIGEvYXJjaC9hcm02
NC9tbS9pbml0LmMKKysrIGIvYXJjaC9hcm02NC9tbS9pbml0LmMKQEAgLTIwNiw3ICsyMDYsNyBA
QCBzdGF0aWMgdm9pZCBfX2luaXQgem9uZV9zaXplc19pbml0KHVuc2lnbmVkIGxvbmcgbWluLCB1
bnNpZ25lZCBsb25nIG1heCkKICNlbmRpZgogCW1heF96b25lX3BmbnNbWk9ORV9OT1JNQUxdID0g
bWF4OwogCi0JZnJlZV9hcmVhX2luaXRfbm9kZXMobWF4X3pvbmVfcGZucyk7CisJZnJlZV9hcmVh
X2luaXQobWF4X3pvbmVfcGZucyk7CiB9CiAKICNlbHNlCmRpZmYgLS1naXQgYS9hcmNoL2lhNjQv
bW0vY29udGlnLmMgYi9hcmNoL2lhNjQvbW0vY29udGlnLmMKaW5kZXggNWIwMGRjMzg5OGUxLi44
Nzg2ZmE1Yzc2MTIgMTAwNjQ0Ci0tLSBhL2FyY2gvaWE2NC9tbS9jb250aWcuYworKysgYi9hcmNo
L2lhNjQvbW0vY29udGlnLmMKQEAgLTIxMCw2ICsyMTAsNiBAQCBwYWdpbmdfaW5pdCAodm9pZCkK
IAkJcHJpbnRrKCJWaXJ0dWFsIG1lbV9tYXAgc3RhcnRzIGF0IDB4JXBcbiIsIG1lbV9tYXApOwog
CX0KICNlbmRpZiAvKiAhQ09ORklHX1ZJUlRVQUxfTUVNX01BUCAqLwotCWZyZWVfYXJlYV9pbml0
X25vZGVzKG1heF96b25lX3BmbnMpOworCWZyZWVfYXJlYV9pbml0KG1heF96b25lX3BmbnMpOwog
CXplcm9fcGFnZV9tZW1tYXBfcHRyID0gdmlydF90b19wYWdlKGlhNjRfaW12YShlbXB0eV96ZXJv
X3BhZ2UpKTsKIH0KZGlmZiAtLWdpdCBhL2FyY2gvaWE2NC9tbS9kaXNjb250aWcuYyBiL2FyY2gv
aWE2NC9tbS9kaXNjb250aWcuYwppbmRleCA0ZjMzZjZlN2UyMDYuLmRkODI4NGJjYmYxNiAxMDA2
NDQKLS0tIGEvYXJjaC9pYTY0L21tL2Rpc2NvbnRpZy5jCisrKyBiL2FyY2gvaWE2NC9tbS9kaXNj
b250aWcuYwpAQCAtNjI3LDcgKzYyNyw3IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQp
CiAJbWF4X3pvbmVfcGZuc1taT05FX0RNQTMyXSA9IG1heF9kbWE7CiAjZW5kaWYKIAltYXhfem9u
ZV9wZm5zW1pPTkVfTk9STUFMXSA9IG1heF9wZm47Ci0JZnJlZV9hcmVhX2luaXRfbm9kZXMobWF4
X3pvbmVfcGZucyk7CisJZnJlZV9hcmVhX2luaXQobWF4X3pvbmVfcGZucyk7CiAKIAl6ZXJvX3Bh
Z2VfbWVtbWFwX3B0ciA9IHZpcnRfdG9fcGFnZShpYTY0X2ltdmEoZW1wdHlfemVyb19wYWdlKSk7
CiB9CmRpZmYgLS1naXQgYS9hcmNoL21pY3JvYmxhemUvbW0vaW5pdC5jIGIvYXJjaC9taWNyb2Js
YXplL21tL2luaXQuYwppbmRleCAxZmZiZmE5NmI5YjguLmRjYWE1M2QxMTMzOSAxMDA2NDQKLS0t
IGEvYXJjaC9taWNyb2JsYXplL21tL2luaXQuYworKysgYi9hcmNoL21pY3JvYmxhemUvbW0vaW5p
dC5jCkBAIC0xMTIsNyArMTEyLDcgQEAgc3RhdGljIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZv
aWQpCiAjZW5kaWYKIAogCS8qIFdlIGRvbid0IGhhdmUgaG9sZXMgaW4gbWVtb3J5IG1hcCAqLwot
CWZyZWVfYXJlYV9pbml0X25vZGVzKHpvbmVzX3NpemUpOworCWZyZWVfYXJlYV9pbml0KHpvbmVz
X3NpemUpOwogfQogCiB2b2lkIF9faW5pdCBzZXR1cF9tZW1vcnkodm9pZCkKZGlmZiAtLWdpdCBh
L2FyY2gvbWlwcy9sb29uZ3NvbjY0L251bWEuYyBiL2FyY2gvbWlwcy9sb29uZ3NvbjY0L251bWEu
YwppbmRleCAxYWUwNzJkZjQ4MzEuLjkwMWY1YmU1ZWU3NiAxMDA2NDQKLS0tIGEvYXJjaC9taXBz
L2xvb25nc29uNjQvbnVtYS5jCisrKyBiL2FyY2gvbWlwcy9sb29uZ3NvbjY0L251bWEuYwpAQCAt
MjQ3LDcgKzI0Nyw3IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJem9uZXNfc2l6
ZVtaT05FX0RNQTMyXSA9IE1BWF9ETUEzMl9QRk47CiAjZW5kaWYKIAl6b25lc19zaXplW1pPTkVf
Tk9STUFMXSA9IG1heF9sb3dfcGZuOwotCWZyZWVfYXJlYV9pbml0X25vZGVzKHpvbmVzX3NpemUp
OworCWZyZWVfYXJlYV9pbml0KHpvbmVzX3NpemUpOwogfQogCiB2b2lkIF9faW5pdCBtZW1faW5p
dCh2b2lkKQpkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL21tL2luaXQuYyBiL2FyY2gvbWlwcy9tbS9p
bml0LmMKaW5kZXggNzk2ODQwMDBkZTBlLi4xOTcxOWU4YjQxYTUgMTAwNjQ0Ci0tLSBhL2FyY2gv
bWlwcy9tbS9pbml0LmMKKysrIGIvYXJjaC9taXBzL21tL2luaXQuYwpAQCAtNDE4LDcgKzQxOCw3
IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJfQogI2VuZGlmCiAKLQlmcmVlX2Fy
ZWFfaW5pdF9ub2RlcyhtYXhfem9uZV9wZm5zKTsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9w
Zm5zKTsKIH0KIAogI2lmZGVmIENPTkZJR182NEJJVApkaWZmIC0tZ2l0IGEvYXJjaC9taXBzL3Nn
aS1pcDI3L2lwMjctbWVtb3J5LmMgYi9hcmNoL21pcHMvc2dpLWlwMjcvaXAyNy1tZW1vcnkuYwpp
bmRleCBhNDU2OTFlNmFiOTAuLjEyMTMyMTVlYTk2NSAxMDA2NDQKLS0tIGEvYXJjaC9taXBzL3Nn
aS1pcDI3L2lwMjctbWVtb3J5LmMKKysrIGIvYXJjaC9taXBzL3NnaS1pcDI3L2lwMjctbWVtb3J5
LmMKQEAgLTQxOSw3ICs0MTksNyBAQCB2b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2b2lkKQogCiAJ
cGFnZXRhYmxlX2luaXQoKTsKIAl6b25lc19zaXplW1pPTkVfTk9STUFMXSA9IG1heF9sb3dfcGZu
OwotCWZyZWVfYXJlYV9pbml0X25vZGVzKHpvbmVzX3NpemUpOworCWZyZWVfYXJlYV9pbml0KHpv
bmVzX3NpemUpOwogfQogCiB2b2lkIF9faW5pdCBtZW1faW5pdCh2b2lkKQpkaWZmIC0tZ2l0IGEv
YXJjaC9wb3dlcnBjL21tL21lbS5jIGIvYXJjaC9wb3dlcnBjL21tL21lbS5jCmluZGV4IDA0MWVk
N2NmZDM0MS4uMGZjZWEyMWYyNmI0IDEwMDY0NAotLS0gYS9hcmNoL3Bvd2VycGMvbW0vbWVtLmMK
KysrIGIvYXJjaC9wb3dlcnBjL21tL21lbS5jCkBAIC0yNzEsNyArMjcxLDcgQEAgdm9pZCBfX2lu
aXQgcGFnaW5nX2luaXQodm9pZCkKIAltYXhfem9uZV9wZm5zW1pPTkVfSElHSE1FTV0gPSBtYXhf
cGZuOwogI2VuZGlmCiAKLQlmcmVlX2FyZWFfaW5pdF9ub2RlcyhtYXhfem9uZV9wZm5zKTsKKwlm
cmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm5zKTsKIAogCW1hcmtfbm9ucmFtX25vc2F2ZSgpOwog
fQpkaWZmIC0tZ2l0IGEvYXJjaC9yaXNjdi9tbS9pbml0LmMgYi9hcmNoL3Jpc2N2L21tL2luaXQu
YwppbmRleCBiNTViZTQ0ZmY5YmQuLmYyY2VhYjc3YjhlNiAxMDA2NDQKLS0tIGEvYXJjaC9yaXNj
di9tbS9pbml0LmMKKysrIGIvYXJjaC9yaXNjdi9tbS9pbml0LmMKQEAgLTM5LDcgKzM5LDcgQEAg
c3RhdGljIHZvaWQgX19pbml0IHpvbmVfc2l6ZXNfaW5pdCh2b2lkKQogI2VuZGlmCiAJbWF4X3pv
bmVfcGZuc1taT05FX05PUk1BTF0gPSBtYXhfbG93X3BmbjsKIAotCWZyZWVfYXJlYV9pbml0X25v
ZGVzKG1heF96b25lX3BmbnMpOworCWZyZWVfYXJlYV9pbml0KG1heF96b25lX3BmbnMpOwogfQog
CiBzdGF0aWMgdm9pZCBzZXR1cF96ZXJvX3BhZ2Uodm9pZCkKZGlmZiAtLWdpdCBhL2FyY2gvczM5
MC9tbS9pbml0LmMgYi9hcmNoL3MzOTAvbW0vaW5pdC5jCmluZGV4IDg3YjJkMDI0ZTc1YS4uYjEx
YmNmNGRhNTMxIDEwMDY0NAotLS0gYS9hcmNoL3MzOTAvbW0vaW5pdC5jCisrKyBiL2FyY2gvczM5
MC9tbS9pbml0LmMKQEAgLTEyMiw3ICsxMjIsNyBAQCB2b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2
b2lkKQogCW1lbXNldChtYXhfem9uZV9wZm5zLCAwLCBzaXplb2YobWF4X3pvbmVfcGZucykpOwog
CW1heF96b25lX3BmbnNbWk9ORV9ETUFdID0gUEZOX0RPV04oTUFYX0RNQV9BRERSRVNTKTsKIAlt
YXhfem9uZV9wZm5zW1pPTkVfTk9STUFMXSA9IG1heF9sb3dfcGZuOwotCWZyZWVfYXJlYV9pbml0
X25vZGVzKG1heF96b25lX3BmbnMpOworCWZyZWVfYXJlYV9pbml0KG1heF96b25lX3BmbnMpOwog
fQogCiB2b2lkIG1hcmtfcm9kYXRhX3JvKHZvaWQpCmRpZmYgLS1naXQgYS9hcmNoL3NoL21tL2lu
aXQuYyBiL2FyY2gvc2gvbW0vaW5pdC5jCmluZGV4IGI5ZGUyZDRmYTU3ZS4uMjU3M2IxNjNiM2Fi
IDEwMDY0NAotLS0gYS9hcmNoL3NoL21tL2luaXQuYworKysgYi9hcmNoL3NoL21tL2luaXQuYwpA
QCAtMzM0LDcgKzMzNCw3IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAKIAltZW1z
ZXQobWF4X3pvbmVfcGZucywgMCwgc2l6ZW9mKG1heF96b25lX3BmbnMpKTsKIAltYXhfem9uZV9w
Zm5zW1pPTkVfTk9STUFMXSA9IG1heF9sb3dfcGZuOwotCWZyZWVfYXJlYV9pbml0X25vZGVzKG1h
eF96b25lX3BmbnMpOworCWZyZWVfYXJlYV9pbml0KG1heF96b25lX3BmbnMpOwogfQogCiB1bnNp
Z25lZCBpbnQgbWVtX2luaXRfZG9uZSA9IDA7CmRpZmYgLS1naXQgYS9hcmNoL3NwYXJjL21tL2lu
aXRfNjQuYyBiL2FyY2gvc3BhcmMvbW0vaW5pdF82NC5jCmluZGV4IDFjZjBkNjY2ZGVhMy4uNzlk
M2M1ZTA4MDJlIDEwMDY0NAotLS0gYS9hcmNoL3NwYXJjL21tL2luaXRfNjQuYworKysgYi9hcmNo
L3NwYXJjL21tL2luaXRfNjQuYwpAQCAtMjQ4OCw3ICsyNDg4LDcgQEAgdm9pZCBfX2luaXQgcGFn
aW5nX2luaXQodm9pZCkKIAogCQltYXhfem9uZV9wZm5zW1pPTkVfTk9STUFMXSA9IGVuZF9wZm47
CiAKLQkJZnJlZV9hcmVhX2luaXRfbm9kZXMobWF4X3pvbmVfcGZucyk7CisJCWZyZWVfYXJlYV9p
bml0KG1heF96b25lX3BmbnMpOwogCX0KIAogCXByaW50aygiQm9vdGluZyBMaW51eC4uLlxuIik7
CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9tbS9pbml0LmMgYi9hcmNoL3g4Ni9tbS9pbml0LmMKaW5k
ZXggMWJiYTE2YzU3NDJiLi40MDE2ZjJiZjVkODcgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L21tL2lu
aXQuYworKysgYi9hcmNoL3g4Ni9tbS9pbml0LmMKQEAgLTk0OSw3ICs5NDksNyBAQCB2b2lkIF9f
aW5pdCB6b25lX3NpemVzX2luaXQodm9pZCkKIAltYXhfem9uZV9wZm5zW1pPTkVfSElHSE1FTV0J
PSBtYXhfcGZuOwogI2VuZGlmCiAKLQlmcmVlX2FyZWFfaW5pdF9ub2RlcyhtYXhfem9uZV9wZm5z
KTsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm5zKTsKIH0KIAogX192aXNpYmxlIERFRklO
RV9QRVJfQ1BVX1NIQVJFRF9BTElHTkVEKHN0cnVjdCB0bGJfc3RhdGUsIGNwdV90bGJzdGF0ZSkg
PSB7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgK
aW5kZXggZDlhMjU2YTk3YWM1Li4xYzJlY2I0MmUwNDMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGlu
dXgvbW0uaAorKysgYi9pbmNsdWRlL2xpbnV4L21tLmgKQEAgLTIyNzIsNyArMjI3Miw2IEBAIHN0
YXRpYyBpbmxpbmUgc3BpbmxvY2tfdCAqcHVkX2xvY2soc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1
ZF90ICpwdWQpCiB9CiAKIGV4dGVybiB2b2lkIF9faW5pdCBwYWdlY2FjaGVfaW5pdCh2b2lkKTsK
LWV4dGVybiB2b2lkIGZyZWVfYXJlYV9pbml0KHVuc2lnbmVkIGxvbmcgKiBtYXhfem9uZV9wZm4p
OwogZXh0ZXJuIHZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0X25vZGUoaW50IG5pZCwgdW5zaWdu
ZWQgbG9uZyAqIHpvbmVzX3NpemUsCiAJCXVuc2lnbmVkIGxvbmcgem9uZV9zdGFydF9wZm4sIHVu
c2lnbmVkIGxvbmcgKnpob2xlc19zaXplKTsKIGV4dGVybiB2b2lkIGZyZWVfaW5pdG1lbSh2b2lk
KTsKQEAgLTIzNTMsMjEgKzIzNTIsMjEgQEAgc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIGdl
dF9udW1fcGh5c3BhZ2VzKHZvaWQpCiAgKgogICogQW4gYXJjaGl0ZWN0dXJlIGlzIGV4cGVjdGVk
IHRvIHJlZ2lzdGVyIHJhbmdlIG9mIHBhZ2UgZnJhbWVzIGJhY2tlZCBieQogICogcGh5c2ljYWwg
bWVtb3J5IHdpdGggbWVtYmxvY2tfYWRkW19ub2RlXSgpIGJlZm9yZSBjYWxsaW5nCi0gKiBmcmVl
X2FyZWFfaW5pdF9ub2RlcygpIHBhc3NpbmcgaW4gdGhlIFBGTiBlYWNoIHpvbmUgZW5kcyBhdC4g
QXQgYSBiYXNpYworICogZnJlZV9hcmVhX2luaXQoKSBwYXNzaW5nIGluIHRoZSBQRk4gZWFjaCB6
b25lIGVuZHMgYXQuIEF0IGEgYmFzaWMKICAqIHVzYWdlLCBhbiBhcmNoaXRlY3R1cmUgaXMgZXhw
ZWN0ZWQgdG8gZG8gc29tZXRoaW5nIGxpa2UKICAqCiAgKiB1bnNpZ25lZCBsb25nIG1heF96b25l
X3BmbnNbTUFYX05SX1pPTkVTXSA9IHttYXhfZG1hLCBtYXhfbm9ybWFsX3BmbiwKICAqIAkJCQkJ
CQkgbWF4X2hpZ2htZW1fcGZufTsKICAqIGZvcl9lYWNoX3ZhbGlkX3BoeXNpY2FsX3BhZ2VfcmFu
Z2UoKQogICogCW1lbWJsb2NrX2FkZF9ub2RlKGJhc2UsIHNpemUsIG5pZCkKLSAqIGZyZWVfYXJl
YV9pbml0X25vZGVzKG1heF96b25lX3BmbnMpOworICogZnJlZV9hcmVhX2luaXQobWF4X3pvbmVf
cGZucyk7CiAgKgogICogZnJlZV9ib290bWVtX3dpdGhfYWN0aXZlX3JlZ2lvbnMoKSBjYWxscyBm
cmVlX2Jvb3RtZW1fbm9kZSgpIGZvciBlYWNoCiAgKiByZWdpc3RlcmVkIHBoeXNpY2FsIHBhZ2Ug
cmFuZ2UuICBTaW1pbGFybHkKICAqIHNwYXJzZV9tZW1vcnlfcHJlc2VudF93aXRoX2FjdGl2ZV9y
ZWdpb25zKCkgY2FsbHMgbWVtb3J5X3ByZXNlbnQoKSBmb3IKICAqIGVhY2ggcmFuZ2Ugd2hlbiBT
UEFSU0VNRU0gaXMgZW5hYmxlZC4KICAqLwotZXh0ZXJuIHZvaWQgZnJlZV9hcmVhX2luaXRfbm9k
ZXModW5zaWduZWQgbG9uZyAqbWF4X3pvbmVfcGZuKTsKK3ZvaWQgZnJlZV9hcmVhX2luaXQodW5z
aWduZWQgbG9uZyAqbWF4X3pvbmVfcGZuKTsKIHVuc2lnbmVkIGxvbmcgbm9kZV9tYXBfcGZuX2Fs
aWdubWVudCh2b2lkKTsKIHVuc2lnbmVkIGxvbmcgX19hYnNlbnRfcGFnZXNfaW5fcmFuZ2UoaW50
IG5pZCwgdW5zaWduZWQgbG9uZyBzdGFydF9wZm4sCiAJCQkJCQl1bnNpZ25lZCBsb25nIGVuZF9w
Zm4pOwpkaWZmIC0tZ2l0IGEvbW0vcGFnZV9hbGxvYy5jIGIvbW0vcGFnZV9hbGxvYy5jCmluZGV4
IDUzMDcwMWIzOGJjNy4uN2Y2YTMwODFlZGI4IDEwMDY0NAotLS0gYS9tbS9wYWdlX2FsbG9jLmMK
KysrIGIvbW0vcGFnZV9hbGxvYy5jCkBAIC03NDI4LDcgKzc0MjgsNyBAQCBzdGF0aWMgdm9pZCBj
aGVja19mb3JfbWVtb3J5KHBnX2RhdGFfdCAqcGdkYXQsIGludCBuaWQpCiB9CiAKIC8qKgotICog
ZnJlZV9hcmVhX2luaXRfbm9kZXMgLSBJbml0aWFsaXNlIGFsbCBwZ19kYXRhX3QgYW5kIHpvbmUg
ZGF0YQorICogZnJlZV9hcmVhX2luaXQgLSBJbml0aWFsaXNlIGFsbCBwZ19kYXRhX3QgYW5kIHpv
bmUgZGF0YQogICogQG1heF96b25lX3BmbjogYW4gYXJyYXkgb2YgbWF4IFBGTnMgZm9yIGVhY2gg
em9uZQogICoKICAqIFRoaXMgd2lsbCBjYWxsIGZyZWVfYXJlYV9pbml0X25vZGUoKSBmb3IgZWFj
aCBhY3RpdmUgbm9kZSBpbiB0aGUgc3lzdGVtLgpAQCAtNzQ0MCw3ICs3NDQwLDcgQEAgc3RhdGlj
IHZvaWQgY2hlY2tfZm9yX21lbW9yeShwZ19kYXRhX3QgKnBnZGF0LCBpbnQgbmlkKQogICogc3Rh
cnRzIHdoZXJlIHRoZSBwcmV2aW91cyBvbmUgZW5kZWQuIEZvciBleGFtcGxlLCBaT05FX0RNQTMy
IHN0YXJ0cwogICogYXQgYXJjaF9tYXhfZG1hX3Bmbi4KICAqLwotdm9pZCBfX2luaXQgZnJlZV9h
cmVhX2luaXRfbm9kZXModW5zaWduZWQgbG9uZyAqbWF4X3pvbmVfcGZuKQordm9pZCBfX2luaXQg
ZnJlZV9hcmVhX2luaXQodW5zaWduZWQgbG9uZyAqbWF4X3pvbmVfcGZuKQogewogCXVuc2lnbmVk
IGxvbmcgc3RhcnRfcGZuLCBlbmRfcGZuOwogCWludCBpLCBuaWQ7CkBAIC03NzAwLDEyICs3NzAw
LDYgQEAgdm9pZCBfX2luaXQgc2V0X2RtYV9yZXNlcnZlKHVuc2lnbmVkIGxvbmcgbmV3X2RtYV9y
ZXNlcnZlKQogCWRtYV9yZXNlcnZlID0gbmV3X2RtYV9yZXNlcnZlOwogfQogCi12b2lkIF9faW5p
dCBmcmVlX2FyZWFfaW5pdCh1bnNpZ25lZCBsb25nICptYXhfem9uZV9wZm4pCi17Ci0JaW5pdF91
bmF2YWlsYWJsZV9tZW0oKTsKLQlmcmVlX2FyZWFfaW5pdF9ub2RlcyhtYXhfem9uZV9wZm4pOwot
fQotCiBzdGF0aWMgaW50IHBhZ2VfYWxsb2NfY3B1X2RlYWQodW5zaWduZWQgaW50IGNwdSkKIHsK
IAotLSAKMi4yNS4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpPcGVuUklTQyBtYWlsaW5nIGxpc3QKT3BlblJJU0NAbGlzdHMubGlicmVjb3Jlcy5vcmcK
aHR0cHM6Ly9saXN0cy5saWJyZWNvcmVzLm9yZy9saXN0aW5mby9vcGVucmlzYwo=
