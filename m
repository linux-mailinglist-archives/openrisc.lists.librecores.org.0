Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id 8F43B4B5670
	for <lists+openrisc@lfdr.de>; Mon, 14 Feb 2022 17:36:07 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 69C7324804;
	Mon, 14 Feb 2022 17:36:07 +0100 (CET)
Received: from sin.source.kernel.org (sin.source.kernel.org [145.40.73.55])
 by mail.librecores.org (Postfix) with ESMTPS id 5A939240F6
 for <openrisc@lists.librecores.org>; Mon, 14 Feb 2022 17:36:06 +0100 (CET)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by sin.source.kernel.org (Postfix) with ESMTPS id AE48ECE19DD;
 Mon, 14 Feb 2022 16:36:03 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 83CC7C340EE;
 Mon, 14 Feb 2022 16:35:53 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1644856563;
 bh=2pS2EzxZTLC0RofP+LmFDCkJfcLqG3oyKMTlDsmnQjc=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=jfoz4OzMYCCZunzrcMopY/CyXCM5x2vWuoQu5cxZQgMKEaVoM/Sr8N71wvtrRgqXL
 a36+f8T/jsd7M34QjI1qwRfOhWeXJdMvjHj71iiMAKhSF1PXQoTPyu+r3MQFpjzlNY
 pfj/Fntbr2pKTQjwxeb4E8U2+BwpVepsuV65Y513Xys+mieerEcPbOyhc3jsLYZVF0
 vhV7u/+LrIj1P+w6AXzskZG9da4m/RTtKbhUOU871uw7Ra1bQtL3Uq9EPOwjYbjRLK
 2KVWCc8btF4FXJwm34tAEWsWzKZs63WJsOZ/ydmWQRF1Gp0oAYsx6ehNg5GZx72riS
 VIrwimliCyZQg==
From: Arnd Bergmann <arnd@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>,
 Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
 linux-mm@kvack.org, linux-api@vger.kernel.org, arnd@arndb.de,
 linux-kernel@vger.kernel.org
Date: Mon, 14 Feb 2022 17:34:40 +0100
Message-Id: <20220214163452.1568807-3-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
In-Reply-To: <20220214163452.1568807-1-arnd@kernel.org>
References: <20220214163452.1568807-1-arnd@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 02/14] sparc64: add __{get, put}_kernel_nocheck()
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: mark.rutland@arm.com, dalias@libc.org, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, peterz@infradead.org, jcmvbkbc@gmail.com,
 guoren@kernel.org, sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, will@kernel.org, ardb@kernel.org,
 linux-s390@vger.kernel.org, bcain@codeaurora.org, mpe@ellerman.id.au,
 deller@gmx.de, x86@kernel.org, linux@armlinux.org.uk,
 linux-csky@vger.kernel.org, mingo@redhat.com,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 hca@linux.ibm.com, linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 green.hu@gmail.com, linux-arm-kernel@lists.infradead.org, monstr@monstr.eu,
 tsbogend@alpha.franken.de, linux-parisc@vger.kernel.org, nickhu@andestech.com,
 linux-mips@vger.kernel.org, dinguyen@kernel.org, ebiederm@xmission.com,
 richard@nod.at, akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org,
 davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KCnNwYXJjNjQgaXMgb25lIG9mIHRo
ZSBhcmNoaXRlY3R1cmVzIHRoYXQgdXNlcyBzZXBhcmF0ZSBhZGRyZXNzCnNwYWNlcyBmb3Iga2Vy
bmVsIGFuZCB1c2VyIGFkZHJlc3Nlcywgc28gX19nZXRfa2VybmVsX25vZmF1bHQoKQpjYW4gbm90
IGp1c3QgY2FsbCBpbnRvIHRoZSBub3JtYWwgX19nZXRfdXNlcigpIHdpdGhvdXQgdGhlCmFjY2Vz
c19vaygpIGNoZWNrLgoKSW5zdGVhZCBkdXBsaWNhdGUgX19nZXRfdXNlcigpIGFuZCBfX3B1dF91
c2VyKCkgaW50byB0aGVpcgppbi1rZXJuZWwgdmVyc2lvbnMsIHdpdGggbWlub3IgY2hhbmdlcyBm
b3IgdGhlIGNhbGxpbmcgY29udmVudGlvbnMKYW5kIGxlYXZpbmcgb3V0IHRoZSBhZGRyZXNzIHNw
YWNlIG1vZGlmaWVyIG9uIHRoZSBhc3NlbWJsZXIKaW5zdHJ1Y3Rpb24uCgpUaGlzIGNvdWxkIHN1
cmVseSBiZSB3cml0dGVuIG1vcmUgZWxlZ2FudGx5LCBidXQgZHVwbGljYXRpbmcgaXQKZ2V0cyB0
aGUgam9iIGRvbmUuCgpTaWduZWQtb2ZmLWJ5OiBBcm5kIEJlcmdtYW5uIDxhcm5kQGFybmRiLmRl
PgotLS0KIGFyY2gvc3BhcmMvaW5jbHVkZS9hc20vdWFjY2Vzc182NC5oIHwgNzggKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysKIDEgZmlsZSBjaGFuZ2VkLCA3OCBpbnNlcnRpb25zKCspCgpk
aWZmIC0tZ2l0IGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91YWNjZXNzXzY0LmggYi9hcmNoL3Nw
YXJjL2luY2x1ZGUvYXNtL3VhY2Nlc3NfNjQuaAppbmRleCAzMGViNGM2NDE0ZDEuLmIyODM3OTgz
MTViMSAxMDA2NDQKLS0tIGEvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91YWNjZXNzXzY0LmgKKysr
IGIvYXJjaC9zcGFyYy9pbmNsdWRlL2FzbS91YWNjZXNzXzY0LmgKQEAgLTEwMCw2ICsxMDAsNDIg
QEAgdm9pZCBfX3JldGxfZWZhdWx0KHZvaWQpOwogc3RydWN0IF9fbGFyZ2Vfc3RydWN0IHsgdW5z
aWduZWQgbG9uZyBidWZbMTAwXTsgfTsKICNkZWZpbmUgX19tKHgpICgoc3RydWN0IF9fbGFyZ2Vf
c3RydWN0ICopKHgpKQogCisjZGVmaW5lIF9fcHV0X2tlcm5lbF9ub2ZhdWx0KGRzdCwgc3JjLCB0
eXBlLCBsYWJlbCkJCQlcCitkbyB7CQkJCQkJCQkJXAorCXR5cGUgKmFkZHIgPSAodHlwZSBfX2Zv
cmNlICopKGRzdCk7CQkJCVwKKwl0eXBlIGRhdGEgPSAqKHR5cGUgKilzcmM7CQkJCQlcCisJcmVn
aXN0ZXIgaW50IF9fcHVfcmV0OwkJCQkJCVwKKwlzd2l0Y2ggKHNpemVvZih0eXBlKSkgewkJCQkJ
CVwKKwljYXNlIDE6IF9fcHV0X2tlcm5lbF9hc20oZGF0YSwgYiwgYWRkciwgX19wdV9yZXQpOyBi
cmVhazsJXAorCWNhc2UgMjogX19wdXRfa2VybmVsX2FzbShkYXRhLCBoLCBhZGRyLCBfX3B1X3Jl
dCk7IGJyZWFrOwlcCisJY2FzZSA0OiBfX3B1dF9rZXJuZWxfYXNtKGRhdGEsIHcsIGFkZHIsIF9f
cHVfcmV0KTsgYnJlYWs7CVwKKwljYXNlIDg6IF9fcHV0X2tlcm5lbF9hc20oZGF0YSwgeCwgYWRk
ciwgX19wdV9yZXQpOyBicmVhazsJXAorCWRlZmF1bHQ6IF9fcHVfcmV0ID0gX19wdXRfdXNlcl9i
YWQoKTsgYnJlYWs7CQkJXAorCX0JCQkJCQkJCVwKKwlpZiAoX19wdV9yZXQpCQkJCQkJCVwKKwkJ
Z290byBsYWJlbDsJCQkJCQlcCit9IHdoaWxlICgwKQorCisjZGVmaW5lIF9fcHV0X2tlcm5lbF9h
c20oeCwgc2l6ZSwgYWRkciwgcmV0KQkJCQlcCitfX2FzbV9fIF9fdm9sYXRpbGVfXygJCQkJCQkJ
XAorCQkiLyogUHV0IGtlcm5lbCBhc20sIGlubGluZS4gKi9cbiIJCQlcCisJIjE6XHQiCSJzdCIj
c2l6ZSAiICUxLCBbJTJdXG5cdCIJCQkJXAorCQkiY2xyCSUwXG4iCQkJCQkJXAorCSIyOlxuXG5c
dCIJCQkJCQkJXAorCQkiLnNlY3Rpb24gLmZpeHVwLCNhbGxvYywjZXhlY2luc3RyXG5cdCIJCQlc
CisJCSIuYWxpZ24JNFxuIgkJCQkJCVwKKwkiMzpcblx0IgkJCQkJCQlcCisJCSJzZXRoaQklJWhp
KDJiKSwgJTBcblx0IgkJCQlcCisJCSJqbXBsCSUwICsgJSVsbygyYiksICUlZzBcblx0IgkJCVwK
KwkJIiBtb3YJJTMsICUwXG5cblx0IgkJCQkJXAorCQkiLnByZXZpb3VzXG5cdCIJCQkJCQlcCisJ
CSIuc2VjdGlvbiBfX2V4X3RhYmxlLFwiYVwiXG5cdCIJCQkJXAorCQkiLmFsaWduCTRcblx0IgkJ
CQkJCVwKKwkJIi53b3JkCTFiLCAzYlxuXHQiCQkJCQlcCisJCSIucHJldmlvdXNcblxuXHQiCQkJ
CQlcCisJICAgICAgIDogIj1yIiAocmV0KSA6ICJyIiAoeCksICJyIiAoX19tKGFkZHIpKSwJCQlc
CisJCSAiaSIgKC1FRkFVTFQpKQorCiAjZGVmaW5lIF9fcHV0X3VzZXJfbm9jaGVjayhkYXRhLCBh
ZGRyLCBzaXplKSAoewkJCVwKIAlyZWdpc3RlciBpbnQgX19wdV9yZXQ7CQkJCQlcCiAJc3dpdGNo
IChzaXplKSB7CQkJCQkJXApAQCAtMTM0LDYgKzE3MCw0OCBAQCBfX2FzbV9fIF9fdm9sYXRpbGVf
XygJCQkJCQkJXAogCiBpbnQgX19wdXRfdXNlcl9iYWQodm9pZCk7CiAKKyNkZWZpbmUgX19nZXRf
a2VybmVsX25vZmF1bHQoZHN0LCBzcmMsIHR5cGUsIGxhYmVsKQkJCSAgICAgXAorZG8gewkJCQkJ
CQkJCSAgICAgXAorCXR5cGUgKmFkZHIgPSAodHlwZSBfX2ZvcmNlICopKHNyYyk7CQkgICAgIAkJ
ICAgICBcCisJcmVnaXN0ZXIgaW50IF9fZ3VfcmV0OwkJCQkJCSAgICAgXAorCXJlZ2lzdGVyIHVu
c2lnbmVkIGxvbmcgX19ndV92YWw7CQkJCSAgICAgXAorCXN3aXRjaCAoc2l6ZW9mKHR5cGUpKSB7
CQkJCQkJICAgICBcCisJCWNhc2UgMTogX19nZXRfa2VybmVsX2FzbShfX2d1X3ZhbCwgdWIsIGFk
ZHIsIF9fZ3VfcmV0KTsgYnJlYWs7IFwKKwkJY2FzZSAyOiBfX2dldF9rZXJuZWxfYXNtKF9fZ3Vf
dmFsLCB1aCwgYWRkciwgX19ndV9yZXQpOyBicmVhazsgXAorCQljYXNlIDQ6IF9fZ2V0X2tlcm5l
bF9hc20oX19ndV92YWwsIHV3LCBhZGRyLCBfX2d1X3JldCk7IGJyZWFrOyBcCisJCWNhc2UgODog
X19nZXRfa2VybmVsX2FzbShfX2d1X3ZhbCwgeCwgYWRkciwgX19ndV9yZXQpOyBicmVhazsgIFwK
KwkJZGVmYXVsdDoJCQkJCQkgICAgIFwKKwkJCV9fZ3VfdmFsID0gMDsJCQkJCSAgICAgXAorCQkJ
X19ndV9yZXQgPSBfX2dldF91c2VyX2JhZCgpOwkJCSAgICAgXAorCQkJYnJlYWs7CQkJCQkJICAg
ICBcCisJfSAJCQkJCQkJCSAgICAgXAorCWlmIChfX2d1X3JldCkJCQkJCQkJICAgICBcCisJCWdv
dG8gbGFiZWw7CQkJCQkJICAgICBcCisJKih0eXBlICopZHN0ID0gKF9fZm9yY2UgdHlwZSkgX19n
dV92YWw7CQkJCSAgICAgXAorfSB3aGlsZSAoMCkKKyNkZWZpbmUgX19nZXRfa2VybmVsX2FzbSh4
LCBzaXplLCBhZGRyLCByZXQpCQkJCVwKK19fYXNtX18gX192b2xhdGlsZV9fKAkJCQkJCQlcCisJ
CSIvKiBHZXQga2VybmVsIGFzbSwgaW5saW5lLiAqL1xuIgkJCVwKKwkiMTpcdCIJImxkIiNzaXpl
ICIgWyUyXSwgJTFcblx0IgkJCQlcCisJCSJjbHIJJTBcbiIJCQkJCQlcCisJIjI6XG5cblx0IgkJ
CQkJCQlcCisJCSIuc2VjdGlvbiAuZml4dXAsI2FsbG9jLCNleGVjaW5zdHJcblx0IgkJCVwKKwkJ
Ii5hbGlnbgk0XG4iCQkJCQkJXAorCSIzOlxuXHQiCQkJCQkJCVwKKwkJInNldGhpCSUlaGkoMmIp
LCAlMFxuXHQiCQkJCVwKKwkJImNscgklMVxuXHQiCQkJCQkJXAorCQkiam1wbAklMCArICUlbG8o
MmIpLCAlJWcwXG5cdCIJCQlcCisJCSIgbW92CSUzLCAlMFxuXG5cdCIJCQkJCVwKKwkJIi5wcmV2
aW91c1xuXHQiCQkJCQkJXAorCQkiLnNlY3Rpb24gX19leF90YWJsZSxcImFcIlxuXHQiCQkJCVwK
KwkJIi5hbGlnbgk0XG5cdCIJCQkJCQlcCisJCSIud29yZAkxYiwgM2JcblxuXHQiCQkJCQlcCisJ
CSIucHJldmlvdXNcblx0IgkJCQkJCVwKKwkgICAgICAgOiAiPXIiIChyZXQpLCAiPXIiICh4KSA6
ICJyIiAoX19tKGFkZHIpKSwJCVwKKwkJICJpIiAoLUVGQVVMVCkpCisKKyNkZWZpbmUgSEFWRV9H
RVRfS0VSTkVMX05PRkFVTFQKKwogI2RlZmluZSBfX2dldF91c2VyX25vY2hlY2soZGF0YSwgYWRk
ciwgc2l6ZSwgdHlwZSkgKHsJCQkgICAgIFwKIAlyZWdpc3RlciBpbnQgX19ndV9yZXQ7CQkJCQkJ
ICAgICBcCiAJcmVnaXN0ZXIgdW5zaWduZWQgbG9uZyBfX2d1X3ZhbDsJCQkJICAgICBcCi0tIAoy
LjI5LjIKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCk9w
ZW5SSVNDIG1haWxpbmcgbGlzdApPcGVuUklTQ0BsaXN0cy5saWJyZWNvcmVzLm9yZwpodHRwczov
L2xpc3RzLmxpYnJlY29yZXMub3JnL2xpc3RpbmZvL29wZW5yaXNjCg==
