Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id CC7491D3F73
	for <lists+openrisc@lfdr.de>; Thu, 14 May 2020 23:00:37 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id B559A20AF4;
	Thu, 14 May 2020 23:00:37 +0200 (CEST)
Received: from mail-pf1-f193.google.com (mail-pf1-f193.google.com
 [209.85.210.193])
 by mail.librecores.org (Postfix) with ESMTPS id DDB6320A79
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 23:00:35 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id v63so1906386pfb.10
 for <openrisc@lists.librecores.org>; Thu, 14 May 2020 14:00:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=YwLNOBfZdjdAS85Ok4BIBkqHsfmSU5h1RbnawKoN91c=;
 b=ax+SUuCzqQgBryO57LEMtHqq5B6HOZdITngamKawZGu3BWHirwtHI9jvBNI6g5lgmR
 AXuj5lo6XDnRWAe60NNZP6OXowCb2G7H/LN+h/UrSYYzHf62Cfji1ru5EdBTKC7eUZW/
 U3OWuGjuL3q2epVHhV0QA45ViEYpRNaFQkbq4CYkyznEnvx8ZnT7bAt/zcTU7UD49Na6
 WjLRgdQRY6DosUOk5UpZ/LZagjLvbr94HPtJDAf7j1XfI1FWTt4/xeFDqfZs3ic2YhPX
 xo9CGTeSa3Rpo+Bfeui//WKVPx4Ip7m4OpbD93JDKduurXsW3jdQU75sHwuZ7vX8vSmW
 WcVw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=YwLNOBfZdjdAS85Ok4BIBkqHsfmSU5h1RbnawKoN91c=;
 b=YJ154r9UGM1Kx4ePECGmMg0sbASdRIEHFGylPwWCgMadityW/52iBeznx8iR0Kxotx
 Tw6ZLJYfY2l8wVpt0rZrvZVScX94s4UdCsXI55DMuR2k+PCY24KCw4Fa+KPQKCFNxaO9
 3y018E/whgAouJUNFOt4nn+0dPGartmoXoyOziBv6r/mlBmA/93UFIejWnWh6uOU/jtK
 F6PcG83m4CKcWGBRKfqceZWYWHGd3cVfB9E1UCyH+0qJ9DfWqLiKxtn6sM6joFRxloXE
 MkjwZ0PcM76luDzhglV/S+AePUPz2i+XuUMTV7/xyC+XZSck8K+wnWOG1Cw6jD5yZONy
 O5Sw==
X-Gm-Message-State: AOAM530LoF5eLxb/GUqq9P1kM2CTNOAxvgXYhbLdMDTVQiHBiaTrLm4t
 f4J16hFKJCEQEg88jv/QDsMx+Cuv
X-Google-Smtp-Source: ABdhPJxeATApEkylbPQ+qkQWOaDJGoTyyoW76R4cvLYBgZielXL90kdSRlOIkTxGJhe0EteFiBBneg==
X-Received: by 2002:a63:155f:: with SMTP id 31mr22945pgv.0.1589490034398;
 Thu, 14 May 2020 14:00:34 -0700 (PDT)
Received: from localhost (g216.222-224-245.ppp.wakwak.ne.jp. [222.224.245.216])
 by smtp.gmail.com with ESMTPSA id i3sm103155pfe.44.2020.05.14.14.00.32
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Thu, 14 May 2020 14:00:33 -0700 (PDT)
From: Stafford Horne <shorne@gmail.com>
To: GNU Binutils <binutils@sourceware.org>
Date: Fri, 15 May 2020 06:00:11 +0900
Message-Id: <20200514210018.2749462-2-shorne@gmail.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20200514210018.2749462-1-shorne@gmail.com>
References: <20200514210018.2749462-1-shorne@gmail.com>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 1/8] or1k: Fix static linking when with .rela.got
 relocations
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Openrisc <openrisc@lists.librecores.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

V2hlbiB0ZXN0aW5nIGdsaWJjIHN0YXRpYyBjYXNlcyB3ZXJlIGZhaWxpbmcgZHVlIHRvIHRoZSBh
c3NlcnQgb2YKc3JlbGdvdCBmYWlsaW5nLiAgVXNpbmcgdGhlIHJlZmVyZW5jZSB2aWEgaHRhYi0+
cm9vdC5zcmVsZ290CndvcmtzIGZpbmUgYXMgaXQgaXMgaW5pdGlhbGl6ZWQuICBBbHNvLCB0aGlz
IGNvbnRhaW5zIGEgZmV3IG90aGVyCmZpeHVwcyBtYWRlIHdoaWxlIGZpZ3VyaW5nIG91dCB0aGUg
aXNzdWUuCgpiZmQvQ2hhbmdlTG9nOgoKeXl5eS1tbS1kZCAgU3RhZmZvcmQgSG9ybmUgIDxzaG9y
bmVAZ21haWwuY29tPgoKCSogZWxmMzItb3Ixay5jIChvcjFrX2VsZl9maW5pc2hfZHluYW1pY19z
eW1ib2wpOiBSZW5hbWUgc3JlbGEKCXRvIHJlbGdvdC4KCShvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0
aW9uKTogQWNjZXNzIHNyZWxnb3QgdmlhCglodGFiLT5yb290LnNyZWxnb3QuICBBZGQgYXNzZXJ0
aW9ucyBmb3Igc3JlbGdvdC0+Y29udGVudHMuCglJbnRyb2R1Y2UgbG9jYWwgdmFyaWFibGUgZm9y
IHNyZWxnb3QgdG8gbm90IHJldXNlIGdsb2JhbAoJc3JlbG9jLgotLS0KIGJmZC9lbGYzMi1vcjFr
LmMgfCA0MyArKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLS0tLS0tLS0tLS0tLS0tCiAxIGZp
bGUgY2hhbmdlZCwgMjMgaW5zZXJ0aW9ucygrKSwgMjAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0
IGEvYmZkL2VsZjMyLW9yMWsuYyBiL2JmZC9lbGYzMi1vcjFrLmMKaW5kZXggNDFlNjFhYzdlMi4u
MjIxYTE0YzViMSAxMDA2NDQKLS0tIGEvYmZkL2VsZjMyLW9yMWsuYworKysgYi9iZmQvZWxmMzIt
b3Ixay5jCkBAIC0xMjI2LDcgKzEyMjYsNiBAQCBvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0aW9uIChi
ZmQgKm91dHB1dF9iZmQsCiAgIEVsZl9JbnRlcm5hbF9SZWxhICpyZWw7CiAgIEVsZl9JbnRlcm5h
bF9SZWxhICpyZWxlbmQ7CiAgIHN0cnVjdCBlbGZfb3Ixa19saW5rX2hhc2hfdGFibGUgKmh0YWIg
PSBvcjFrX2VsZl9oYXNoX3RhYmxlIChpbmZvKTsKLSAgYmZkICpkeW5vYmo7CiAgIGFzZWN0aW9u
ICpzcmVsb2M7CiAgIGJmZF92bWEgKmxvY2FsX2dvdF9vZmZzZXRzOwogICBhc2VjdGlvbiAqc2dv
dCwgKnNwbHQ7CkBAIC0xMjM2LDcgKzEyMzUsNiBAQCBvcjFrX2VsZl9yZWxvY2F0ZV9zZWN0aW9u
IChiZmQgKm91dHB1dF9iZmQsCiAgIGlmIChodGFiID09IE5VTEwpCiAgICAgcmV0dXJuIEZBTFNF
OwogCi0gIGR5bm9iaiA9IGh0YWItPnJvb3QuZHlub2JqOwogICBsb2NhbF9nb3Rfb2Zmc2V0cyA9
IGVsZl9sb2NhbF9nb3Rfb2Zmc2V0cyAoaW5wdXRfYmZkKTsKIAogICBzcmVsb2MgPSBlbGZfc2Vj
dGlvbl9kYXRhIChpbnB1dF9zZWN0aW9uKS0+c3JlbG9jOwpAQCAtMTI1NCw3ICsxMjUyLDcgQEAg
b3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZkICpvdXRwdXRfYmZkLAogICAgICAgZ290X3N5
bV92YWx1ZSA9IChoZ290LT5yb290LnUuZGVmLnZhbHVlCiAJCSAgICAgICArIGhnb3QtPnJvb3Qu
dS5kZWYuc2VjdGlvbi0+b3V0cHV0X3NlY3Rpb24tPnZtYQogCQkgICAgICAgKyBoZ290LT5yb290
LnUuZGVmLnNlY3Rpb24tPm91dHB1dF9vZmZzZXQpOwotICAgIGdvdF9iYXNlID0gc2dvdC0+b3V0
cHV0X3NlY3Rpb24tPnZtYSArIHNnb3QtPm91dHB1dF9vZmZzZXQ7CisgICAgICBnb3RfYmFzZSA9
IHNnb3QtPm91dHB1dF9zZWN0aW9uLT52bWEgKyBzZ290LT5vdXRwdXRfb2Zmc2V0OwogICAgIH0K
IAogICBzeW10YWJfaGRyID0gJmVsZl90ZGF0YSAoaW5wdXRfYmZkKS0+c3ltdGFiX2hkcjsKQEAg
LTE0MTYsMTYgKzE0MTQsMTYgQEAgb3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZkICpvdXRw
dXRfYmZkLAogCiAJCSAgICAgIC8qIFdlIG5lZWQgdG8gZ2VuZXJhdGUgYSBSX09SMUtfUkVMQVRJ
VkUgcmVsb2MKIAkJCSBmb3IgdGhlIGR5bmFtaWMgbGlua2VyLiAgKi8KLQkJCXNyZWxnb3QgPSBi
ZmRfZ2V0X3NlY3Rpb25fYnlfbmFtZSAoZHlub2JqLCAiLnJlbGEuZ290Iik7CisJCSAgICAgIHNy
ZWxnb3QgPSBodGFiLT5yb290LnNyZWxnb3Q7CiAJCSAgICAgIEJGRF9BU1NFUlQgKHNyZWxnb3Qg
IT0gTlVMTCk7CiAKIAkJICAgICAgb3V0cmVsLnJfb2Zmc2V0ID0gZ290X2Jhc2UgKyBvZmY7CiAJ
CSAgICAgIG91dHJlbC5yX2luZm8gPSBFTEYzMl9SX0lORk8gKDAsIFJfT1IxS19SRUxBVElWRSk7
CiAJCSAgICAgIG91dHJlbC5yX2FkZGVuZCA9IHJlbG9jYXRpb247CiAJCSAgICAgIGxvYyA9IHNy
ZWxnb3QtPmNvbnRlbnRzOwotCQkJbG9jICs9IChzcmVsZ290LT5yZWxvY19jb3VudAotCQkJCSog
c2l6ZW9mIChFbGYzMl9FeHRlcm5hbF9SZWxhKSk7Ci0JCSAgICAgIGJmZF9lbGYzMl9zd2FwX3Jl
bG9jYV9vdXQgKG91dHB1dF9iZmQsICZvdXRyZWwsbG9jKTsKKwkJICAgICAgbG9jICs9IChzcmVs
Z290LT5yZWxvY19jb3VudAorCQkJICAgICAgKiBzaXplb2YgKEVsZjMyX0V4dGVybmFsX1JlbGEp
KTsKKwkJICAgICAgYmZkX2VsZjMyX3N3YXBfcmVsb2NhX291dCAob3V0cHV0X2JmZCwgJm91dHJl
bCwgbG9jKTsKIAkJICAgICAgKytzcmVsZ290LT5yZWxvY19jb3VudDsKIAkJICAgIH0KIAkJICBs
b2NhbF9nb3Rfb2Zmc2V0c1tyX3N5bW5keF0gfD0gMTsKQEAgLTE1OTEsMTAgKzE1ODksMTEgQEAg
b3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZkICpvdXRwdXRfYmZkLAogCSAgewogCSAgICBi
ZmRfdm1hIGdvdG9mZjsKIAkgICAgRWxmX0ludGVybmFsX1JlbGEgcmVsYTsKKwkgICAgYXNlY3Rp
b24gKnNyZWxnb3Q7CiAJICAgIGJmZF9ieXRlICpsb2M7CiAJICAgIGludCBkeW5hbWljOwogCi0J
ICAgIHNyZWxvYyA9IGJmZF9nZXRfc2VjdGlvbl9ieV9uYW1lIChkeW5vYmosICIucmVsYS5nb3Qi
KTsKKwkgICAgc3JlbGdvdCA9IGh0YWItPnJvb3Quc3JlbGdvdDsKIAogCSAgICAvKiBNYXJrIGFz
IFRMUyByZWxhdGVkIEdPVCBlbnRyeSBieSBzZXR0aW5nCiAJICAgICAgIGJpdCAyIGFzIHdlbGwg
YXMgYml0IDEuICAqLwpAQCAtMTYxOSw3ICsxNjE4LDcgQEAgb3Ixa19lbGZfcmVsb2NhdGVfc2Vj
dGlvbiAoYmZkICpvdXRwdXRfYmZkLAogCSAgICBCRkRfQVNTRVJUIChlbGZfaGFzaF90YWJsZSAo
aW5mbyktPmhnb3QgPT0gTlVMTAogCQkJfHwgZWxmX2hhc2hfdGFibGUgKGluZm8pLT5oZ290LT5y
b290LnUuZGVmLnZhbHVlID09IDApOwogCi0JICAgIC8qIER5bmFtaWMgZW50cmllcyB3aWxsIHJl
cXVpcmUgcmVsb2NhdGlvbnMuIGlmIHdlIGRvIG5vdCBuZWVkCisJICAgIC8qIER5bmFtaWMgZW50
cmllcyB3aWxsIHJlcXVpcmUgcmVsb2NhdGlvbnMuICBJZiB3ZSBkbyBub3QgbmVlZAogCSAgICAg
ICB0aGVtIHdlIHdpbGwganVzdCB1c2UgdGhlIGRlZmF1bHQgUl9PUjFLX05PTkUgYW5kCiAJICAg
ICAgIG5vdCBzZXQgYW55dGhpbmcuICAqLwogCSAgICBkeW5hbWljID0gYmZkX2xpbmtfcGljIChp
bmZvKQpAQCAtMTYzOSw2ICsxNjM4LDggQEAgb3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZk
ICpvdXRwdXRfYmZkLAogCQkvKiBBZGQgRFRQTU9EIGFuZCBEVFBPRkYgR09UIGFuZCByZWxhIGVu
dHJpZXMuICAqLwogCQlmb3IgKGkgPSAwOyBpIDwgMjsgKytpKQogCQkgIHsKKwkJICAgIEJGRF9B
U1NFUlQgKHNyZWxnb3QtPmNvbnRlbnRzICE9IE5VTEwpOworCiAJCSAgICByZWxhLnJfb2Zmc2V0
ID0gZ290X2Jhc2UgKyBnb3RvZmYgKyBpKjQ7CiAJCSAgICBpZiAoaCAhPSBOVUxMICYmIGgtPmR5
bmluZHggIT0gLTEpCiAJCSAgICAgIHsKQEAgLTE2NTMsOSArMTY1NCw5IEBAIG9yMWtfZWxmX3Jl
bG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAkJCXJlbGEucl9hZGRlbmQgPSB0cG9m
ZiAoaW5mbywgcmVsb2NhdGlvbik7CiAJCSAgICAgIH0KIAotCQkgICAgbG9jID0gc3JlbG9jLT5j
b250ZW50czsKLQkJICAgIGxvYyArPSBzcmVsb2MtPnJlbG9jX2NvdW50KysgKgotCQkgICAgICBz
aXplb2YgKEVsZjMyX0V4dGVybmFsX1JlbGEpOworCQkgICAgbG9jID0gc3JlbGdvdC0+Y29udGVu
dHM7CisJCSAgICBsb2MgKz0gKHNyZWxnb3QtPnJlbG9jX2NvdW50KysKKwkJCSAgICAqIHNpemVv
ZiAoRWxmMzJfRXh0ZXJuYWxfUmVsYSkpOwogCiAJCSAgICBiZmRfZWxmMzJfc3dhcF9yZWxvY2Ff
b3V0IChvdXRwdXRfYmZkLCAmcmVsYSwgbG9jKTsKIAkJICAgIGJmZF9wdXRfMzIgKG91dHB1dF9i
ZmQsIDAsIHNnb3QtPmNvbnRlbnRzICsgZ290b2ZmICsgaSo0KTsKQEAgLTE2NzQsNiArMTY3NSw4
IEBAIG9yMWtfZWxmX3JlbG9jYXRlX3NlY3Rpb24gKGJmZCAqb3V0cHV0X2JmZCwKIAkgICAgLyog
U2hhcmVkIElFLiAgKi8KIAkgICAgZWxzZSBpZiAoZHluYW1pYykKIAkgICAgICB7CisJCUJGRF9B
U1NFUlQgKHNyZWxnb3QtPmNvbnRlbnRzICE9IE5VTEwpOworCiAJCS8qIEFkZCBUUE9GRiBHT1Qg
YW5kIHJlbGEgZW50cmllcy4gICovCiAJCXJlbGEucl9vZmZzZXQgPSBnb3RfYmFzZSArIGdvdG9m
ZjsKIAkJaWYgKGggIT0gTlVMTCAmJiBoLT5keW5pbmR4ICE9IC0xKQpAQCAtMTY4Nyw4ICsxNjkw
LDggQEAgb3Ixa19lbGZfcmVsb2NhdGVfc2VjdGlvbiAoYmZkICpvdXRwdXRfYmZkLAogCQkgICAg
cmVsYS5yX2FkZGVuZCA9IHRwb2ZmIChpbmZvLCByZWxvY2F0aW9uKTsKIAkJICB9CiAKLQkJbG9j
ID0gc3JlbG9jLT5jb250ZW50czsKLQkJbG9jICs9IHNyZWxvYy0+cmVsb2NfY291bnQrKyAqIHNp
emVvZiAoRWxmMzJfRXh0ZXJuYWxfUmVsYSk7CisJCWxvYyA9IHNyZWxnb3QtPmNvbnRlbnRzOwor
CQlsb2MgKz0gc3JlbGdvdC0+cmVsb2NfY291bnQrKyAqIHNpemVvZiAoRWxmMzJfRXh0ZXJuYWxf
UmVsYSk7CiAKIAkJYmZkX2VsZjMyX3N3YXBfcmVsb2NhX291dCAob3V0cHV0X2JmZCwgJnJlbGEs
IGxvYyk7CiAJCWJmZF9wdXRfMzIgKG91dHB1dF9iZmQsIDAsIHNnb3QtPmNvbnRlbnRzICsgZ290
b2ZmKTsKQEAgLTI0MDIsMTQgKzI0MDUsMTQgQEAgb3Ixa19lbGZfZmluaXNoX2R5bmFtaWNfc3lt
Ym9sIChiZmQgKm91dHB1dF9iZmQsCiAgICAgICAmJiAoaC0+Z290Lm9mZnNldCAmIDIpID09IDAp
IC8qIEhvbWVtYWRlIFRMUyBjaGVjay4gICovCiAgICAgewogICAgICAgYXNlY3Rpb24gKnNnb3Q7
Ci0gICAgICBhc2VjdGlvbiAqc3JlbGE7CisgICAgICBhc2VjdGlvbiAqc3JlbGdvdDsKICAgICAg
IEVsZl9JbnRlcm5hbF9SZWxhIHJlbGE7CiAKICAgICAgIC8qIFRoaXMgc3ltYm9sIGhhcyBhbiBl
bnRyeSBpbiB0aGUgZ2xvYmFsIG9mZnNldCB0YWJsZS4gIFNldCBpdAogCSB1cC4gICovCiAgICAg
ICBzZ290ID0gaHRhYi0+cm9vdC5zZ290OwotICAgICAgc3JlbGEgPSBodGFiLT5yb290LnNyZWxn
b3Q7Ci0gICAgICBCRkRfQVNTRVJUIChzZ290ICE9IE5VTEwgJiYgc3JlbGEgIT0gTlVMTCk7Cisg
ICAgICBzcmVsZ290ID0gaHRhYi0+cm9vdC5zcmVsZ290OworICAgICAgQkZEX0FTU0VSVCAoc2dv
dCAhPSBOVUxMICYmIHNyZWxnb3QgIT0gTlVMTCk7CiAKICAgICAgIHJlbGEucl9vZmZzZXQgPSAo
c2dvdC0+b3V0cHV0X3NlY3Rpb24tPnZtYQogCQkgICAgICAgKyBzZ290LT5vdXRwdXRfb2Zmc2V0
CkBAIC0yNDM1LDEwICsyNDM4LDEwIEBAIG9yMWtfZWxmX2ZpbmlzaF9keW5hbWljX3N5bWJvbCAo
YmZkICpvdXRwdXRfYmZkLAogCSAgcmVsYS5yX2FkZGVuZCA9IDA7CiAJfQogCi0gICAgICBsb2Mg
PSBzcmVsYS0+Y29udGVudHM7Ci0gICAgICBsb2MgKz0gc3JlbGEtPnJlbG9jX2NvdW50ICogc2l6
ZW9mIChFbGYzMl9FeHRlcm5hbF9SZWxhKTsKKyAgICAgIGxvYyA9IHNyZWxnb3QtPmNvbnRlbnRz
OworICAgICAgbG9jICs9IHNyZWxnb3QtPnJlbG9jX2NvdW50ICogc2l6ZW9mIChFbGYzMl9FeHRl
cm5hbF9SZWxhKTsKICAgICAgIGJmZF9lbGYzMl9zd2FwX3JlbG9jYV9vdXQgKG91dHB1dF9iZmQs
ICZyZWxhLCBsb2MpOwotICAgICAgKytzcmVsYS0+cmVsb2NfY291bnQ7CisgICAgICArK3NyZWxn
b3QtPnJlbG9jX2NvdW50OwogICAgIH0KIAogICBpZiAoaC0+bmVlZHNfY29weSkKLS0gCjIuMjYu
MgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3BlblJJ
U0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8vbGlz
dHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
