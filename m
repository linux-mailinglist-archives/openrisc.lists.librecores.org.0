Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id D2C691C05C2
	for <lists+openrisc@lfdr.de>; Thu, 30 Apr 2020 21:09:31 +0200 (CEST)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id A9D8B20B2A;
	Thu, 30 Apr 2020 21:09:31 +0200 (CEST)
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 by mail.librecores.org (Postfix) with ESMTPS id 740C620A6E
 for <openrisc@lists.librecores.org>; Wed, 29 Apr 2020 14:13:03 +0200 (CEST)
Received: from aquarius.haifa.ibm.com (nesher1.haifa.il.ibm.com [195.110.40.7])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-SHA256 (128/128 bits))
 (No client certificate requested)
 by mail.kernel.org (Postfix) with ESMTPSA id DC4A62176D;
 Wed, 29 Apr 2020 12:12:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=default; t=1588162382;
 bh=agWHDZcbGuN/4gztQ6Nv7+RIFuQAEucR4rIJkZhb9Bo=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=CTvBtTC3k+1E+CWYpfXAyzmF7QDWHe+LtjGtp4tB1b2N0Vw5uOR+qJ9xvXtJDH5+G
 aVpB58lqEiEn8cEAn92HPlM02ldL/mMqHQMMExnWwkvwQnngM1d/2/iPdAZKCJTbN6
 XC8EJWSOYLms8B9XXnofnXDmQXYkwQNxLQupL56A=
From: Mike Rapoport <rppt@kernel.org>
To: linux-kernel@vger.kernel.org
Date: Wed, 29 Apr 2020 15:11:10 +0300
Message-Id: <20200429121126.17989-5-rppt@kernel.org>
X-Mailer: git-send-email 2.26.1
In-Reply-To: <20200429121126.17989-1-rppt@kernel.org>
References: <20200429121126.17989-1-rppt@kernel.org>
MIME-Version: 1.0
X-Mailman-Approved-At: Thu, 30 Apr 2020 21:09:13 +0200
Subject: [OpenRISC] [PATCH v2 04/20] mm: free_area_init: use maximal zone
 PFNs rather than zone sizes
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: Rich Felker <dalias@libc.org>, linux-ia64@vger.kernel.org,
 linux-doc@vger.kernel.org, Catalin Marinas <catalin.marinas@arm.com>,
 Heiko Carstens <heiko.carstens@de.ibm.com>, Michal Hocko <mhocko@kernel.org>,
 "James E.J. Bottomley" <James.Bottomley@HansenPartnership.com>,
 Max Filippov <jcmvbkbc@gmail.com>, Guo Ren <guoren@kernel.org>,
 linux-csky@vger.kernel.org, linux-parisc@vger.kernel.org,
 sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, Mike Rapoport <rppt@linux.ibm.com>,
 Greg Ungerer <gerg@linux-m68k.org>, linux-arch@vger.kernel.org,
 linux-s390@vger.kernel.org, linux-c6x-dev@linux-c6x.org,
 Baoquan He <bhe@redhat.com>, Jonathan Corbet <corbet@lwn.net>,
 linux-sh@vger.kernel.org, Michael Ellerman <mpe@ellerman.id.au>,
 Helge Deller <deller@gmx.de>, x86@kernel.org,
 Russell King <linux@armlinux.org.uk>, Ley Foon Tan <ley.foon.tan@intel.com>,
 Yoshinori Sato <ysato@users.sourceforge.jp>,
 linux-arm-kernel@lists.infradead.org, Mark Salter <msalter@redhat.com>,
 Matt Turner <mattst88@gmail.com>, linux-snps-arc@lists.infradead.org,
 uclinux-h8-devel@lists.sourceforge.jp, linux-xtensa@linux-xtensa.org,
 linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, Tony Luck <tony.luck@intel.com>,
 Qian Cai <cai@lca.pw>, Greentime Hu <green.hu@gmail.com>,
 Paul Walmsley <paul.walmsley@sifive.com>, Guan Xuetao <gxt@pku.edu.cn>,
 Hoan Tran <Hoan@os.amperecomputing.com>, Michal Simek <monstr@monstr.eu>,
 Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
 Brian Cain <bcain@codeaurora.org>, Nick Hu <nickhu@andestech.com>,
 linux-mm@kvack.org, Vineet Gupta <vgupta@synopsys.com>,
 linux-mips@vger.kernel.org, openrisc@lists.librecores.org,
 Richard Weinberger <richard@nod.at>, Andrew Morton <akpm@linux-foundation.org>,
 linuxppc-dev@lists.ozlabs.org, "David S. Miller" <davem@davemloft.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29tPgoKQ3VycmVudGx5LCBhcmNo
aXRlY3R1cmVzIHRoYXQgdXNlIGZyZWVfYXJlYV9pbml0KCkgdG8gaW5pdGlhbGl6ZSBtZW1vcnkg
bWFwCmFuZCBub2RlIGFuZCB6b25lIHN0cnVjdHVyZXMgbmVlZCB0byBjYWxjdWxhdGUgem9uZSBh
bmQgaG9sZSBzaXplcy4gV2UgY2FuCnVzZSBmcmVlX2FyZWFfaW5pdF9ub2RlcygpIGluc3RlYWQg
YW5kIGxldCBpdCBkZXRlY3QgdGhlIHpvbmUgYm91bmRhcmllcwp3aGlsZSB0aGUgYXJjaGl0ZWN0
dXJlcyB3aWxsIG9ubHkgaGF2ZSB0byBzdXBwbHkgdGhlIHBvc3NpYmxlIGxpbWl0cyBmb3IKdGhl
IHpvbmVzLgoKU2lnbmVkLW9mZi1ieTogTWlrZSBSYXBvcG9ydCA8cnBwdEBsaW51eC5pYm0uY29t
PgotLS0KIGFyY2gvYWxwaGEvbW0vaW5pdC5jICAgIHwgMTYgKysrKysrLS0tLS0tLS0tLQogYXJj
aC9jNngvbW0vaW5pdC5jICAgICAgfCAgOCArKystLS0tLQogYXJjaC9oODMwMC9tbS9pbml0LmMg
ICAgfCAgNiArKystLS0KIGFyY2gvaGV4YWdvbi9tbS9pbml0LmMgIHwgIDYgKysrLS0tCiBhcmNo
L202OGsvbW0vaW5pdC5jICAgICB8ICA2ICsrKy0tLQogYXJjaC9tNjhrL21tL21jZm1tdS5jICAg
fCAgOSArKystLS0tLS0KIGFyY2gvbmRzMzIvbW0vaW5pdC5jICAgIHwgMTEgKysrKy0tLS0tLS0K
IGFyY2gvbmlvczIvbW0vaW5pdC5jICAgIHwgIDggKysrLS0tLS0KIGFyY2gvb3BlbnJpc2MvbW0v
aW5pdC5jIHwgIDkgKysrLS0tLS0tCiBhcmNoL3VtL2tlcm5lbC9tZW0uYyAgICB8IDEyICsrKyst
LS0tLS0tLQogaW5jbHVkZS9saW51eC9tbS5oICAgICAgfCAgMiArLQogbW0vcGFnZV9hbGxvYy5j
ICAgICAgICAgfCAgNSArKy0tLQogMTIgZmlsZXMgY2hhbmdlZCwgMzggaW5zZXJ0aW9ucygrKSwg
NjAgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC9hbHBoYS9tbS9pbml0LmMgYi9hcmNo
L2FscGhhL21tL2luaXQuYwppbmRleCAxMmUyMThkMzc5MmEuLjY2N2NkMjEzOTNiNSAxMDA2NDQK
LS0tIGEvYXJjaC9hbHBoYS9tbS9pbml0LmMKKysrIGIvYXJjaC9hbHBoYS9tbS9pbml0LmMKQEAg
LTI0MywyMSArMjQzLDE3IEBAIGNhbGxiYWNrX2luaXQodm9pZCAqIGtlcm5lbF9lbmQpCiAgKi8K
IHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiB7Ci0JdW5zaWduZWQgbG9uZyB6b25lc19z
aXplW01BWF9OUl9aT05FU10gPSB7MCwgfTsKLQl1bnNpZ25lZCBsb25nIGRtYV9wZm4sIGhpZ2hf
cGZuOworCXVuc2lnbmVkIGxvbmcgbWF4X3pvbmVfcGZuW01BWF9OUl9aT05FU10gPSB7MCwgfTsK
Kwl1bnNpZ25lZCBsb25nIGRtYV9wZm47CiAKIAlkbWFfcGZuID0gdmlydF90b19waHlzKChjaGFy
ICopTUFYX0RNQV9BRERSRVNTKSA+PiBQQUdFX1NISUZUOwotCWhpZ2hfcGZuID0gbWF4X3BmbiA9
IG1heF9sb3dfcGZuOworCW1heF9wZm4gPSBtYXhfbG93X3BmbjsKIAotCWlmIChkbWFfcGZuID49
IGhpZ2hfcGZuKQotCQl6b25lc19zaXplW1pPTkVfRE1BXSA9IGhpZ2hfcGZuOwotCWVsc2Ugewot
CQl6b25lc19zaXplW1pPTkVfRE1BXSA9IGRtYV9wZm47Ci0JCXpvbmVzX3NpemVbWk9ORV9OT1JN
QUxdID0gaGlnaF9wZm4gLSBkbWFfcGZuOwotCX0KKwltYXhfem9uZV9wZm5bWk9ORV9ETUFdID0g
ZG1hX3BmbjsKKwltYXhfem9uZV9wZm5bWk9ORV9OT1JNQUxdID0gbWF4X3BmbjsKIAogCS8qIElu
aXRpYWxpemUgbWVtX21hcFtdLiAgKi8KLQlmcmVlX2FyZWFfaW5pdCh6b25lc19zaXplKTsKKwlm
cmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm4pOwogCiAJLyogSW5pdGlhbGl6ZSB0aGUga2VybmVs
J3MgWkVST19QR0UuICovCiAJbWVtc2V0KCh2b2lkICopWkVST19QR0UsIDAsIFBBR0VfU0laRSk7
CmRpZmYgLS1naXQgYS9hcmNoL2M2eC9tbS9pbml0LmMgYi9hcmNoL2M2eC9tbS9pbml0LmMKaW5k
ZXggOWIzNzQzOTNhOGY0Li5hOTdlNTFhM2UyNmQgMTAwNjQ0Ci0tLSBhL2FyY2gvYzZ4L21tL2lu
aXQuYworKysgYi9hcmNoL2M2eC9tbS9pbml0LmMKQEAgLTMzLDcgKzMzLDcgQEAgRVhQT1JUX1NZ
TUJPTChlbXB0eV96ZXJvX3BhZ2UpOwogdm9pZCBfX2luaXQgcGFnaW5nX2luaXQodm9pZCkKIHsK
IAlzdHJ1Y3QgcGdsaXN0X2RhdGEgKnBnZGF0ID0gTk9ERV9EQVRBKDApOwotCXVuc2lnbmVkIGxv
bmcgem9uZXNfc2l6ZVtNQVhfTlJfWk9ORVNdID0gezAsIH07CisJdW5zaWduZWQgbG9uZyBtYXhf
em9uZV9wZm5bTUFYX05SX1pPTkVTXSA9IHswLCB9OwogCiAJZW1wdHlfemVyb19wYWdlICAgICAg
PSAodW5zaWduZWQgbG9uZykgbWVtYmxvY2tfYWxsb2MoUEFHRV9TSVpFLAogCQkJCQkJCSAgICAg
IFBBR0VfU0laRSk7CkBAIC00OSwxMSArNDksOSBAQCB2b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2
b2lkKQogCS8qCiAJICogRGVmaW5lIHpvbmVzCiAJICovCi0Jem9uZXNfc2l6ZVtaT05FX05PUk1B
TF0gPSAobWVtb3J5X2VuZCAtIFBBR0VfT0ZGU0VUKSA+PiBQQUdFX1NISUZUOwotCXBnZGF0LT5u
b2RlX3pvbmVzW1pPTkVfTk9STUFMXS56b25lX3N0YXJ0X3BmbiA9Ci0JCV9fcGEoUEFHRV9PRkZT
RVQpID4+IFBBR0VfU0hJRlQ7CisJbWF4X3pvbmVfcGZuW1pPTkVfTk9STUFMXSA9IG1lbW9yeV9l
bmQgPj4gUEFHRV9TSElGVDsKIAotCWZyZWVfYXJlYV9pbml0KHpvbmVzX3NpemUpOworCWZyZWVf
YXJlYV9pbml0KG1heF96b25lX3Bmbik7CiB9CiAKIHZvaWQgX19pbml0IG1lbV9pbml0KHZvaWQp
CmRpZmYgLS1naXQgYS9hcmNoL2g4MzAwL21tL2luaXQuYyBiL2FyY2gvaDgzMDAvbW0vaW5pdC5j
CmluZGV4IDFlYWIxNmIxYTBiYy4uMjdhMDAyMGUzNzcxIDEwMDY0NAotLS0gYS9hcmNoL2g4MzAw
L21tL2luaXQuYworKysgYi9hcmNoL2g4MzAwL21tL2luaXQuYwpAQCAtODMsMTAgKzgzLDEwIEBA
IHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJCSBzdGFydF9tZW0sIGVuZF9tZW0pOwog
CiAJewotCQl1bnNpZ25lZCBsb25nIHpvbmVzX3NpemVbTUFYX05SX1pPTkVTXSA9IHswLCB9Owor
CQl1bnNpZ25lZCBsb25nIG1heF96b25lX3BmbltNQVhfTlJfWk9ORVNdID0gezAsIH07CiAKLQkJ
em9uZXNfc2l6ZVtaT05FX05PUk1BTF0gPSAoZW5kX21lbSAtIFBBR0VfT0ZGU0VUKSA+PiBQQUdF
X1NISUZUOwotCQlmcmVlX2FyZWFfaW5pdCh6b25lc19zaXplKTsKKwkJbWF4X3pvbmVfcGZuW1pP
TkVfTk9STUFMXSA9IGVuZF9tZW0gPj4gUEFHRV9TSElGVDsKKwkJZnJlZV9hcmVhX2luaXQobWF4
X3pvbmVfcGZuKTsKIAl9CiB9CiAKZGlmZiAtLWdpdCBhL2FyY2gvaGV4YWdvbi9tbS9pbml0LmMg
Yi9hcmNoL2hleGFnb24vbW0vaW5pdC5jCmluZGV4IGM5NjE3NzNhNmZmZi4uZjJlNmM4NjhlNDc3
IDEwMDY0NAotLS0gYS9hcmNoL2hleGFnb24vbW0vaW5pdC5jCisrKyBiL2FyY2gvaGV4YWdvbi9t
bS9pbml0LmMKQEAgLTkxLDcgKzkxLDcgQEAgdm9pZCBzeW5jX2ljYWNoZV9kY2FjaGUocHRlX3Qg
cHRlKQogICovCiB2b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2b2lkKQogewotCXVuc2lnbmVkIGxv
bmcgem9uZXNfc2l6ZXNbTUFYX05SX1pPTkVTXSA9IHswLCB9OworCXVuc2lnbmVkIGxvbmcgbWF4
X3pvbmVfcGZuW01BWF9OUl9aT05FU10gPSB7MCwgfTsKIAogCS8qCiAJICogIFRoaXMgaXMgbm90
IHBhcnRpY3VsYXJseSB3ZWxsIGRvY3VtZW50ZWQgYW55d2hlcmUsIGJ1dApAQCAtMTAxLDkgKzEw
MSw5IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJICogIGFkanVzdCBhY2NvcmRp
bmdseS4KIAkgKi8KIAotCXpvbmVzX3NpemVzW1pPTkVfTk9STUFMXSA9IG1heF9sb3dfcGZuOwor
CW1heF96b25lX3BmbltaT05FX05PUk1BTF0gPSBtYXhfbG93X3BmbjsKIAotCWZyZWVfYXJlYV9p
bml0KHpvbmVzX3NpemVzKTsgIC8qICBzZXRzIHVwIHRoZSB6b25lbGlzdHMgYW5kIG1lbV9tYXAg
ICovCisJZnJlZV9hcmVhX2luaXQobWF4X3pvbmVfcGZuKTsgIC8qICBzZXRzIHVwIHRoZSB6b25l
bGlzdHMgYW5kIG1lbV9tYXAgICovCiAKIAkvKgogCSAqIFN0YXJ0IG9mIGhpZ2ggbWVtb3J5IGFy
ZWEuICBXaWxsIHByb2JhYmx5IG5lZWQgc29tZXRoaW5nIG1vcmUKZGlmZiAtLWdpdCBhL2FyY2gv
bTY4ay9tbS9pbml0LmMgYi9hcmNoL202OGsvbW0vaW5pdC5jCmluZGV4IGI4OGQ1MTBkNGZlMy4u
NmQzMTQ3NjYyZmYyIDEwMDY0NAotLS0gYS9hcmNoL202OGsvbW0vaW5pdC5jCisrKyBiL2FyY2gv
bTY4ay9tbS9pbml0LmMKQEAgLTg0LDcgKzg0LDcgQEAgdm9pZCBfX2luaXQgcGFnaW5nX2luaXQo
dm9pZCkKIAkgKiBwYWdlX2FsbG9jIGdldCBkaWZmZXJlbnQgdmlld3Mgb2YgdGhlIHdvcmxkLgog
CSAqLwogCXVuc2lnbmVkIGxvbmcgZW5kX21lbSA9IG1lbW9yeV9lbmQgJiBQQUdFX01BU0s7Ci0J
dW5zaWduZWQgbG9uZyB6b25lc19zaXplW01BWF9OUl9aT05FU10gPSB7IDAsIH07CisJdW5zaWdu
ZWQgbG9uZyBtYXhfem9uZV9wZm5bTUFYX05SX1pPTkVTXSA9IHsgMCwgfTsKIAogCWhpZ2hfbWVt
b3J5ID0gKHZvaWQgKikgZW5kX21lbTsKIApAQCAtOTgsOCArOTgsOCBAQCB2b2lkIF9faW5pdCBw
YWdpbmdfaW5pdCh2b2lkKQogCSAqLwogCXNldF9mcyAoVVNFUl9EUyk7CiAKLQl6b25lc19zaXpl
W1pPTkVfRE1BXSA9IChlbmRfbWVtIC0gUEFHRV9PRkZTRVQpID4+IFBBR0VfU0hJRlQ7Ci0JZnJl
ZV9hcmVhX2luaXQoem9uZXNfc2l6ZSk7CisJbWF4X3pvbmVfcGZuW1pPTkVfRE1BXSA9IGVuZF9t
ZW0gPj4gUEFHRV9TSElGVDsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm4pOwogfQogCiAj
ZW5kaWYgLyogQ09ORklHX01NVSAqLwpkaWZmIC0tZ2l0IGEvYXJjaC9tNjhrL21tL21jZm1tdS5j
IGIvYXJjaC9tNjhrL21tL21jZm1tdS5jCmluZGV4IDBlYTM3NTYwNzc2Ny4uODAwNjRlNmQwNjRm
IDEwMDY0NAotLS0gYS9hcmNoL202OGsvbW0vbWNmbW11LmMKKysrIGIvYXJjaC9tNjhrL21tL21j
Zm1tdS5jCkBAIC0zOSw3ICszOSw3IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJ
cHRlX3QgKnBnX3RhYmxlOwogCXVuc2lnbmVkIGxvbmcgYWRkcmVzcywgc2l6ZTsKIAl1bnNpZ25l
ZCBsb25nIG5leHRfcGd0YWJsZSwgYm9vdG1lbV9lbmQ7Ci0JdW5zaWduZWQgbG9uZyB6b25lc19z
aXplW01BWF9OUl9aT05FU107CisJdW5zaWduZWQgbG9uZyBtYXhfem9uZV9wZm5bTUFYX05SX1pP
TkVTXSA9IHsgMCB9OwogCWVudW0gem9uZV90eXBlIHpvbmU7CiAJaW50IGk7CiAKQEAgLTgwLDEx
ICs4MCw4IEBAIHZvaWQgX19pbml0IHBhZ2luZ19pbml0KHZvaWQpCiAJfQogCiAJY3VycmVudC0+
bW0gPSBOVUxMOwotCi0JZm9yICh6b25lID0gMDsgem9uZSA8IE1BWF9OUl9aT05FUzsgem9uZSsr
KQotCQl6b25lc19zaXplW3pvbmVdID0gMHgwOwotCXpvbmVzX3NpemVbWk9ORV9ETUFdID0gbnVt
X3BhZ2VzOwotCWZyZWVfYXJlYV9pbml0KHpvbmVzX3NpemUpOworCW1heF96b25lX3BmbltaT05F
X0RNQV0gPSBQRk5fRE9XTihfcmFtZW5kKTsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm4p
OwogfQogCiBpbnQgY2ZfdGxiX21pc3Moc3RydWN0IHB0X3JlZ3MgKnJlZ3MsIGludCB3cml0ZSwg
aW50IGR0bGIsIGludCBleHRlbnNpb25fd29yZCkKZGlmZiAtLWdpdCBhL2FyY2gvbmRzMzIvbW0v
aW5pdC5jIGIvYXJjaC9uZHMzMi9tbS9pbml0LmMKaW5kZXggMGJlMzgzM2Y2ODE0Li45MTE0N2Nj
YTRiNjQgMTAwNjQ0Ci0tLSBhL2FyY2gvbmRzMzIvbW0vaW5pdC5jCisrKyBiL2FyY2gvbmRzMzIv
bW0vaW5pdC5jCkBAIC0zMSwxNiArMzEsMTMgQEAgRVhQT1JUX1NZTUJPTChlbXB0eV96ZXJvX3Bh
Z2UpOwogCiBzdGF0aWMgdm9pZCBfX2luaXQgem9uZV9zaXplc19pbml0KHZvaWQpCiB7Ci0JdW5z
aWduZWQgbG9uZyB6b25lc19zaXplW01BWF9OUl9aT05FU107CisJdW5zaWduZWQgbG9uZyBtYXhf
em9uZV9wZm5bTUFYX05SX1pPTkVTXSA9IHsgMCB9OwogCi0JLyogQ2xlYXIgdGhlIHpvbmUgc2l6
ZXMgKi8KLQltZW1zZXQoem9uZXNfc2l6ZSwgMCwgc2l6ZW9mKHpvbmVzX3NpemUpKTsKLQotCXpv
bmVzX3NpemVbWk9ORV9OT1JNQUxdID0gbWF4X2xvd19wZm47CisJbWF4X3pvbmVfcGZuW1pPTkVf
Tk9STUFMXSA9IG1heF9sb3dfcGZuOwogI2lmZGVmIENPTkZJR19ISUdITUVNCi0Jem9uZXNfc2l6
ZVtaT05FX0hJR0hNRU1dID0gbWF4X3BmbjsKKwltYXhfem9uZV9wZm5bWk9ORV9ISUdITUVNXSA9
IG1heF9wZm47CiAjZW5kaWYKLQlmcmVlX2FyZWFfaW5pdCh6b25lc19zaXplKTsKKwlmcmVlX2Fy
ZWFfaW5pdChtYXhfem9uZV9wZm4pOwogCiB9CiAKZGlmZiAtLWdpdCBhL2FyY2gvbmlvczIvbW0v
aW5pdC5jIGIvYXJjaC9uaW9zMi9tbS9pbml0LmMKaW5kZXggMmM2MDljMjUxNmIyLi45YWZjYTc3
ZDEwYjEgMTAwNjQ0Ci0tLSBhL2FyY2gvbmlvczIvbW0vaW5pdC5jCisrKyBiL2FyY2gvbmlvczIv
bW0vaW5pdC5jCkBAIC00NiwxNyArNDYsMTUgQEAgcGdkX3QgKnBnZF9jdXJyZW50OwogICovCiB2
b2lkIF9faW5pdCBwYWdpbmdfaW5pdCh2b2lkKQogewotCXVuc2lnbmVkIGxvbmcgem9uZXNfc2l6
ZVtNQVhfTlJfWk9ORVNdOwotCi0JbWVtc2V0KHpvbmVzX3NpemUsIDAsIHNpemVvZih6b25lc19z
aXplKSk7CisJdW5zaWduZWQgbG9uZyBtYXhfem9uZV9wZm5bTUFYX05SX1pPTkVTXSA9IHsgMCB9
OwogCiAJcGFnZXRhYmxlX2luaXQoKTsKIAlwZ2RfY3VycmVudCA9IHN3YXBwZXJfcGdfZGlyOwog
Ci0Jem9uZXNfc2l6ZVtaT05FX05PUk1BTF0gPSBtYXhfbWFwbnI7CisJbWF4X3pvbmVfcGZuW1pP
TkVfTk9STUFMXSA9IG1heF9tYXBucjsKIAogCS8qIHBhc3MgdGhlIG1lbW9yeSBmcm9tIHRoZSBi
b290bWVtIGFsbG9jYXRvciB0byB0aGUgbWFpbiBhbGxvY2F0b3IgKi8KLQlmcmVlX2FyZWFfaW5p
dCh6b25lc19zaXplKTsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm4pOwogCiAJZmx1c2hf
ZGNhY2hlX3JhbmdlKCh1bnNpZ25lZCBsb25nKWVtcHR5X3plcm9fcGFnZSwKIAkJCSh1bnNpZ25l
ZCBsb25nKWVtcHR5X3plcm9fcGFnZSArIFBBR0VfU0laRSk7CmRpZmYgLS1naXQgYS9hcmNoL29w
ZW5yaXNjL21tL2luaXQuYyBiL2FyY2gvb3BlbnJpc2MvbW0vaW5pdC5jCmluZGV4IDFmODdiNTI0
ZGI3OC4uZjk0ZmU2ZDNmNDk5IDEwMDY0NAotLS0gYS9hcmNoL29wZW5yaXNjL21tL2luaXQuYwor
KysgYi9hcmNoL29wZW5yaXNjL21tL2luaXQuYwpAQCAtNDUsMTcgKzQ1LDE0IEBAIERFRklORV9Q
RVJfQ1BVKHN0cnVjdCBtbXVfZ2F0aGVyLCBtbXVfZ2F0aGVycyk7CiAKIHN0YXRpYyB2b2lkIF9f
aW5pdCB6b25lX3NpemVzX2luaXQodm9pZCkKIHsKLQl1bnNpZ25lZCBsb25nIHpvbmVzX3NpemVb
TUFYX05SX1pPTkVTXTsKLQotCS8qIENsZWFyIHRoZSB6b25lIHNpemVzICovCi0JbWVtc2V0KHpv
bmVzX3NpemUsIDAsIHNpemVvZih6b25lc19zaXplKSk7CisJdW5zaWduZWQgbG9uZyBtYXhfem9u
ZV9wZm5bTUFYX05SX1pPTkVTXSA9IHsgMCB9OwogCiAJLyoKIAkgKiBXZSB1c2Ugb25seSBaT05F
X05PUk1BTAogCSAqLwotCXpvbmVzX3NpemVbWk9ORV9OT1JNQUxdID0gbWF4X2xvd19wZm47CisJ
bWF4X3pvbmVfcGZuW1pPTkVfTk9STUFMXSA9IG1heF9sb3dfcGZuOwogCi0JZnJlZV9hcmVhX2lu
aXQoem9uZXNfc2l6ZSk7CisJZnJlZV9hcmVhX2luaXQobWF4X3pvbmVfcGZuKTsKIH0KIAogZXh0
ZXJuIGNvbnN0IGNoYXIgX3Nfa2VybmVsX3JvW10sIF9lX2tlcm5lbF9yb1tdOwpkaWZmIC0tZ2l0
IGEvYXJjaC91bS9rZXJuZWwvbWVtLmMgYi9hcmNoL3VtL2tlcm5lbC9tZW0uYwppbmRleCAzMDg4
NWQwYjk0YWMuLjQwMWIyMmYxNDc0MyAxMDA2NDQKLS0tIGEvYXJjaC91bS9rZXJuZWwvbWVtLmMK
KysrIGIvYXJjaC91bS9rZXJuZWwvbWVtLmMKQEAgLTE1OCw4ICsxNTgsOCBAQCBzdGF0aWMgdm9p
ZCBfX2luaXQgZml4YWRkcl91c2VyX2luaXQoIHZvaWQpCiAKIHZvaWQgX19pbml0IHBhZ2luZ19p
bml0KHZvaWQpCiB7Ci0JdW5zaWduZWQgbG9uZyB6b25lc19zaXplW01BWF9OUl9aT05FU10sIHZh
ZGRyOwotCWludCBpOworCXVuc2lnbmVkIGxvbmcgbWF4X3pvbmVfcGZuW01BWF9OUl9aT05FU10g
PSB7IDAgfTsKKwl1bnNpZ25lZCBsb25nIHZhZGRyOwogCiAJZW1wdHlfemVyb19wYWdlID0gKHVu
c2lnbmVkIGxvbmcgKikgbWVtYmxvY2tfYWxsb2NfbG93KFBBR0VfU0laRSwKIAkJCQkJCQkgICAg
ICAgUEFHRV9TSVpFKTsKQEAgLTE2NywxMiArMTY3LDggQEAgdm9pZCBfX2luaXQgcGFnaW5nX2lu
aXQodm9pZCkKIAkJcGFuaWMoIiVzOiBGYWlsZWQgdG8gYWxsb2NhdGUgJWx1IGJ5dGVzIGFsaWdu
PSVseFxuIiwKIAkJICAgICAgX19mdW5jX18sIFBBR0VfU0laRSwgUEFHRV9TSVpFKTsKIAotCWZv
ciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKHpvbmVzX3NpemUpOyBpKyspCi0JCXpvbmVzX3NpemVb
aV0gPSAwOwotCi0Jem9uZXNfc2l6ZVtaT05FX05PUk1BTF0gPSAoZW5kX2lvbWVtID4+IFBBR0Vf
U0hJRlQpIC0KLQkJKHVtbF9waHlzbWVtID4+IFBBR0VfU0hJRlQpOwotCWZyZWVfYXJlYV9pbml0
KHpvbmVzX3NpemUpOworCW1heF96b25lX3BmbltaT05FX05PUk1BTF0gPSBlbmRfaW9tZW0gPj4g
UEFHRV9TSElGVDsKKwlmcmVlX2FyZWFfaW5pdChtYXhfem9uZV9wZm4pOwogCiAJLyoKIAkgKiBG
aXhlZCBtYXBwaW5ncywgb25seSB0aGUgcGFnZSB0YWJsZSBzdHJ1Y3R1cmUgaGFzIHRvIGJlCmRp
ZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L21tLmggYi9pbmNsdWRlL2xpbnV4L21tLmgKaW5kZXgg
NTkwM2JiYmRiMzM2Li5kOWEyNTZhOTdhYzUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvbW0u
aAorKysgYi9pbmNsdWRlL2xpbnV4L21tLmgKQEAgLTIyNzIsNyArMjI3Miw3IEBAIHN0YXRpYyBp
bmxpbmUgc3BpbmxvY2tfdCAqcHVkX2xvY2soc3RydWN0IG1tX3N0cnVjdCAqbW0sIHB1ZF90ICpw
dWQpCiB9CiAKIGV4dGVybiB2b2lkIF9faW5pdCBwYWdlY2FjaGVfaW5pdCh2b2lkKTsKLWV4dGVy
biB2b2lkIGZyZWVfYXJlYV9pbml0KHVuc2lnbmVkIGxvbmcgKiB6b25lc19zaXplKTsKK2V4dGVy
biB2b2lkIGZyZWVfYXJlYV9pbml0KHVuc2lnbmVkIGxvbmcgKiBtYXhfem9uZV9wZm4pOwogZXh0
ZXJuIHZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0X25vZGUoaW50IG5pZCwgdW5zaWduZWQgbG9u
ZyAqIHpvbmVzX3NpemUsCiAJCXVuc2lnbmVkIGxvbmcgem9uZV9zdGFydF9wZm4sIHVuc2lnbmVk
IGxvbmcgKnpob2xlc19zaXplKTsKIGV4dGVybiB2b2lkIGZyZWVfaW5pdG1lbSh2b2lkKTsKZGlm
ZiAtLWdpdCBhL21tL3BhZ2VfYWxsb2MuYyBiL21tL3BhZ2VfYWxsb2MuYwppbmRleCA0NTMwZTlj
ZmQ5ZjcuLjUzMDcwMWIzOGJjNyAxMDA2NDQKLS0tIGEvbW0vcGFnZV9hbGxvYy5jCisrKyBiL21t
L3BhZ2VfYWxsb2MuYwpAQCAtNzcwMCwxMSArNzcwMCwxMCBAQCB2b2lkIF9faW5pdCBzZXRfZG1h
X3Jlc2VydmUodW5zaWduZWQgbG9uZyBuZXdfZG1hX3Jlc2VydmUpCiAJZG1hX3Jlc2VydmUgPSBu
ZXdfZG1hX3Jlc2VydmU7CiB9CiAKLXZvaWQgX19pbml0IGZyZWVfYXJlYV9pbml0KHVuc2lnbmVk
IGxvbmcgKnpvbmVzX3NpemUpCit2b2lkIF9faW5pdCBmcmVlX2FyZWFfaW5pdCh1bnNpZ25lZCBs
b25nICptYXhfem9uZV9wZm4pCiB7CiAJaW5pdF91bmF2YWlsYWJsZV9tZW0oKTsKLQlmcmVlX2Fy
ZWFfaW5pdF9ub2RlKDAsIHpvbmVzX3NpemUsCi0JCQlfX3BhKFBBR0VfT0ZGU0VUKSA+PiBQQUdF
X1NISUZULCBOVUxMKTsKKwlmcmVlX2FyZWFfaW5pdF9ub2RlcyhtYXhfem9uZV9wZm4pOwogfQog
CiBzdGF0aWMgaW50IHBhZ2VfYWxsb2NfY3B1X2RlYWQodW5zaWduZWQgaW50IGNwdSkKLS0gCjIu
MjYuMQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KT3Bl
blJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3JnCmh0dHBzOi8v
bGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
