Return-Path: <openrisc-bounces@lists.librecores.org>
X-Original-To: lists+openrisc@lfdr.de
Delivered-To: lists+openrisc@lfdr.de
Received: from mail.librecores.org (lists.librecores.org [88.198.125.70])
	by mail.lfdr.de (Postfix) with ESMTP id B3D1E4B56AE
	for <lists+openrisc@lfdr.de>; Mon, 14 Feb 2022 17:38:21 +0100 (CET)
Received: from [172.31.1.100] (localhost.localdomain [127.0.0.1])
	by mail.librecores.org (Postfix) with ESMTP id 9DA2324817;
	Mon, 14 Feb 2022 17:38:21 +0100 (CET)
Received: from sin.source.kernel.org (sin.source.kernel.org [145.40.73.55])
 by mail.librecores.org (Postfix) with ESMTPS id A509A24809
 for <openrisc@lists.librecores.org>; Mon, 14 Feb 2022 17:38:19 +0100 (CET)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by sin.source.kernel.org (Postfix) with ESMTPS id D7930CE19D3;
 Mon, 14 Feb 2022 16:38:17 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 8C689C340F1;
 Mon, 14 Feb 2022 16:38:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
 s=k20201202; t=1644856695;
 bh=/kKTMMBRz92UJDg2siwhTka/klTYwXBQSyhpE5zcpAY=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=d6iGqrb4uihekO2J29RlsPjWSIirVefXmDJ88V61I2FZj8NHe6/A5hTSRNv9H4enQ
 GpEYgqwBL+KNTdSHBGmNqO5Ca3Fck3bhH14uS6wLfT37UBHyRfDvT3yFSib1sCW5QF
 eAhsrZrSBQaMDCsEYQwWOsmyUtEDJVqdFCPBuFmnfxL6+e3v/Wn3BwgEgEMaWUfUtg
 mthZufLStsec1t9lai6wgSu0ifX/lj9v+LQIBhG3i5SHSvKmR7YS38hzd+JLAMvu4B
 9ri3nXMl8RNML8xS+WpAQYY7OrdC+8aYdXd2ODrskXQV1GSIenfVH9itu0Tl79sAMa
 qWh7rcKCE0QFA==
From: Arnd Bergmann <arnd@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>,
 Christoph Hellwig <hch@lst.de>, linux-arch@vger.kernel.org,
 linux-mm@kvack.org, linux-api@vger.kernel.org, arnd@arndb.de,
 linux-kernel@vger.kernel.org
Date: Mon, 14 Feb 2022 17:34:52 +0100
Message-Id: <20220214163452.1568807-15-arnd@kernel.org>
X-Mailer: git-send-email 2.29.2
In-Reply-To: <20220214163452.1568807-1-arnd@kernel.org>
References: <20220214163452.1568807-1-arnd@kernel.org>
MIME-Version: 1.0
Subject: [OpenRISC] [PATCH 14/14] uaccess: drop set_fs leftovers
X-BeenThere: openrisc@lists.librecores.org
X-Mailman-Version: 2.1.26
Precedence: list
List-Id: Discussion around the OpenRISC processor
 <openrisc.lists.librecores.org>
List-Unsubscribe: <https://lists.librecores.org/options/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=unsubscribe>
List-Archive: <http://lists.librecores.org/pipermail/openrisc/>
List-Post: <mailto:openrisc@lists.librecores.org>
List-Help: <mailto:openrisc-request@lists.librecores.org?subject=help>
List-Subscribe: <https://lists.librecores.org/listinfo/openrisc>,
 <mailto:openrisc-request@lists.librecores.org?subject=subscribe>
Cc: mark.rutland@arm.com, dalias@libc.org, linux-ia64@vger.kernel.org,
 linux-sh@vger.kernel.org, peterz@infradead.org, jcmvbkbc@gmail.com,
 guoren@kernel.org, sparclinux@vger.kernel.org, linux-hexagon@vger.kernel.org,
 linux-riscv@lists.infradead.org, will@kernel.org, ardb@kernel.org,
 linux-s390@vger.kernel.org, bcain@codeaurora.org, mpe@ellerman.id.au,
 deller@gmx.de, x86@kernel.org, linux@armlinux.org.uk,
 linux-csky@vger.kernel.org, mingo@redhat.com,
 linux-snps-arc@lists.infradead.org, linux-xtensa@linux-xtensa.org,
 hca@linux.ibm.com, linux-alpha@vger.kernel.org, linux-um@lists.infradead.org,
 linux-m68k@lists.linux-m68k.org, openrisc@lists.librecores.org,
 green.hu@gmail.com, linux-arm-kernel@lists.infradead.org, monstr@monstr.eu,
 tsbogend@alpha.franken.de, linux-parisc@vger.kernel.org, nickhu@andestech.com,
 linux-mips@vger.kernel.org, dinguyen@kernel.org, ebiederm@xmission.com,
 richard@nod.at, akpm@linux-foundation.org, linuxppc-dev@lists.ozlabs.org,
 davem@davemloft.net
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: openrisc-bounces@lists.librecores.org
Sender: "OpenRISC" <openrisc-bounces@lists.librecores.org>

RnJvbTogQXJuZCBCZXJnbWFubiA8YXJuZEBhcm5kYi5kZT4KClRoZXJlIGFyZSBubyBtb3JlIHVz
ZXJzIG9mIENPTkZJR19TRVRfRlMgbGVmdCwgc28gZHJvcCBhbGwKcmVtYWluaW5nIHJlZmVyZW5j
ZXMgdG8gc2V0X2ZzKCkvZ2V0X2ZzKCksIG1tX3NlZ21lbnRfdAphbmQgdWFjY2Vzc19rZXJuZWwo
KS4KClNpZ25lZC1vZmYtYnk6IEFybmQgQmVyZ21hbm4gPGFybmRAYXJuZGIuZGU+Ci0tLQogYXJj
aC9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICB8ICAzIC0tLQogYXJjaC9hcm0vbGliL3Vh
Y2Nlc3Nfd2l0aF9tZW1jcHkuYyB8IDEwIC0tLS0tLS0tLQogYXJjaC9uZHMzMi9rZXJuZWwvcHJv
Y2Vzcy5jICAgICAgICB8ICA1ICsrLS0tCiBhcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9mdXRleC5o
ICAgIHwgIDIgKy0KIGFyY2gvcGFyaXNjL2xpYi9tZW1jcHkuYyAgICAgICAgICAgfCAgMiArLQog
ZHJpdmVycy9oaWQvdWhpZC5jICAgICAgICAgICAgICAgICB8ICAyICstCiBkcml2ZXJzL3Njc2kv
c2cuYyAgICAgICAgICAgICAgICAgIHwgIDUgLS0tLS0KIGZzL2V4ZWMuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgfCAgNiAtLS0tLS0KIGluY2x1ZGUvYXNtLWdlbmVyaWMvYWNjZXNzX29rLmgg
ICAgfCAxMCArLS0tLS0tLS0KIGluY2x1ZGUvbGludXgvc3lzY2FsbHMuaCAgICAgICAgICAgfCAg
NCAtLS0tCiBpbmNsdWRlL2xpbnV4L3VhY2Nlc3MuaCAgICAgICAgICAgIHwgMzMgLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tCiBpbmNsdWRlL3JkbWEvaWIuaCAgICAgICAgICAgICAgICAg
IHwgIDIgKy0KIGtlcm5lbC9ldmVudHMvY2FsbGNoYWluLmMgICAgICAgICAgfCAgNCAtLS0tCiBr
ZXJuZWwvZXZlbnRzL2NvcmUuYyAgICAgICAgICAgICAgIHwgIDMgLS0tCiBrZXJuZWwvZXhpdC5j
ICAgICAgICAgICAgICAgICAgICAgIHwgMTQgLS0tLS0tLS0tLS0tLQoga2VybmVsL2t0aHJlYWQu
YyAgICAgICAgICAgICAgICAgICB8ICA1IC0tLS0tCiBrZXJuZWwvc3RhY2t0cmFjZS5jICAgICAg
ICAgICAgICAgIHwgIDMgLS0tCiBrZXJuZWwvdHJhY2UvYnBmX3RyYWNlLmMgICAgICAgICAgIHwg
IDQgLS0tLQogbW0vbWFjY2Vzcy5jICAgICAgICAgICAgICAgICAgICAgICB8IDExIC0tLS0tLS0t
LS0KIG1tL21lbW9yeS5jICAgICAgICAgICAgICAgICAgICAgICAgfCAgOCAtLS0tLS0tLQogbmV0
L2JwZmlsdGVyL2JwZmlsdGVyX2tlcm4uYyAgICAgICB8ICAyICstCiAyMSBmaWxlcyBjaGFuZ2Vk
LCA4IGluc2VydGlvbnMoKyksIDEzMCBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQgYS9hcmNoL0tj
b25maWcgYi9hcmNoL0tjb25maWcKaW5kZXggNjc4YTgwNzEzYjIxLi45NjA3NWExMmM3MjAgMTAw
NjQ0Ci0tLSBhL2FyY2gvS2NvbmZpZworKysgYi9hcmNoL0tjb25maWcKQEAgLTI0LDkgKzI0LDYg
QEAgY29uZmlnIEtFWEVDX0VMRgogY29uZmlnIEhBVkVfSU1BX0tFWEVDCiAJYm9vbAogCi1jb25m
aWcgU0VUX0ZTCi0JYm9vbAotCiBjb25maWcgSE9UUExVR19TTVQKIAlib29sCiAKZGlmZiAtLWdp
dCBhL2FyY2gvYXJtL2xpYi91YWNjZXNzX3dpdGhfbWVtY3B5LmMgYi9hcmNoL2FybS9saWIvdWFj
Y2Vzc193aXRoX21lbWNweS5jCmluZGV4IDEwNmY4M2E1ZWE2ZC4uYzMwYjY4OWJlYzJlIDEwMDY0
NAotLS0gYS9hcmNoL2FybS9saWIvdWFjY2Vzc193aXRoX21lbWNweS5jCisrKyBiL2FyY2gvYXJt
L2xpYi91YWNjZXNzX3dpdGhfbWVtY3B5LmMKQEAgLTkyLDExICs5Miw2IEBAIF9fY29weV90b191
c2VyX21lbWNweSh2b2lkIF9fdXNlciAqdG8sIGNvbnN0IHZvaWQgKmZyb20sIHVuc2lnbmVkIGxv
bmcgbikKIAl1bnNpZ25lZCBsb25nIHVhX2ZsYWdzOwogCWludCBhdG9taWM7CiAKLQlpZiAodWFj
Y2Vzc19rZXJuZWwoKSkgewotCQltZW1jcHkoKHZvaWQgKil0bywgZnJvbSwgbik7Ci0JCXJldHVy
biAwOwotCX0KLQogCS8qIHRoZSBtbWFwIHNlbWFwaG9yZSBpcyB0YWtlbiBvbmx5IGlmIG5vdCBp
biBhbiBhdG9taWMgY29udGV4dCAqLwogCWF0b21pYyA9IGZhdWx0aGFuZGxlcl9kaXNhYmxlZCgp
OwogCkBAIC0xNjUsMTEgKzE2MCw2IEBAIF9fY2xlYXJfdXNlcl9tZW1zZXQodm9pZCBfX3VzZXIg
KmFkZHIsIHVuc2lnbmVkIGxvbmcgbikKIHsKIAl1bnNpZ25lZCBsb25nIHVhX2ZsYWdzOwogCi0J
aWYgKHVhY2Nlc3Nfa2VybmVsKCkpIHsKLQkJbWVtc2V0KCh2b2lkICopYWRkciwgMCwgbik7Ci0J
CXJldHVybiAwOwotCX0KLQogCW1tYXBfcmVhZF9sb2NrKGN1cnJlbnQtPm1tKTsKIAl3aGlsZSAo
bikgewogCQlwdGVfdCAqcHRlOwpkaWZmIC0tZ2l0IGEvYXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vz
cy5jIGIvYXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vzcy5jCmluZGV4IDQ5ZmFiOWUzOWNiZi4uZDM1
YzFmNjNmYTExIDEwMDY0NAotLS0gYS9hcmNoL25kczMyL2tlcm5lbC9wcm9jZXNzLmMKKysrIGIv
YXJjaC9uZHMzMi9rZXJuZWwvcHJvY2Vzcy5jCkBAIC0xMTksOSArMTE5LDggQEAgdm9pZCBzaG93
X3JlZ3Moc3RydWN0IHB0X3JlZ3MgKnJlZ3MpCiAJCXJlZ3MtPnVyZWdzWzddLCByZWdzLT51cmVn
c1s2XSwgcmVncy0+dXJlZ3NbNV0sIHJlZ3MtPnVyZWdzWzRdKTsKIAlwcl9pbmZvKCJyMyA6ICUw
OGx4ICByMiA6ICUwOGx4ICByMSA6ICUwOGx4ICByMCA6ICUwOGx4XG4iLAogCQlyZWdzLT51cmVn
c1szXSwgcmVncy0+dXJlZ3NbMl0sIHJlZ3MtPnVyZWdzWzFdLCByZWdzLT51cmVnc1swXSk7Ci0J
cHJfaW5mbygiICBJUlFzIG8lcyAgU2VnbWVudCAlc1xuIiwKLQkJaW50ZXJydXB0c19lbmFibGVk
KHJlZ3MpID8gIm4iIDogImZmIiwKLQkJdWFjY2Vzc19rZXJuZWwoKSA/ICJrZXJuZWwiIDogInVz
ZXIiKTsKKwlwcl9pbmZvKCIgIElSUXMgbyVzICBTZWdtZW50IHVzZXJcbiIsCisJCWludGVycnVw
dHNfZW5hYmxlZChyZWdzKSA/ICJuIiA6ICJmZiIpOwogfQogCiBFWFBPUlRfU1lNQk9MKHNob3df
cmVncyk7CmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9mdXRleC5oIGIvYXJj
aC9wYXJpc2MvaW5jbHVkZS9hc20vZnV0ZXguaAppbmRleCBiNTgzNTMyNWQ0NGIuLjJmNGExYjFl
ZjM4NyAxMDA2NDQKLS0tIGEvYXJjaC9wYXJpc2MvaW5jbHVkZS9hc20vZnV0ZXguaAorKysgYi9h
cmNoL3BhcmlzYy9pbmNsdWRlL2FzbS9mdXRleC5oCkBAIC05OSw3ICs5OSw3IEBAIGZ1dGV4X2F0
b21pY19jbXB4Y2hnX2luYXRvbWljKHUzMiAqdXZhbCwgdTMyIF9fdXNlciAqdWFkZHIsCiAJLyog
ZnV0ZXguYyB3YW50cyB0byBkbyBhIGNtcHhjaGdfaW5hdG9taWMgb24ga2VybmVsIE5VTEwsIHdo
aWNoIGlzCiAJICogb3VyIGdhdGV3YXkgcGFnZSwgYW5kIGNhdXNlcyBubyBlbmQgb2YgdHJvdWJs
ZS4uLgogCSAqLwotCWlmICh1YWNjZXNzX2tlcm5lbCgpICYmICF1YWRkcikKKwlpZiAoIXVhZGRy
KQogCQlyZXR1cm4gLUVGQVVMVDsKIAogCWlmICghYWNjZXNzX29rKHVhZGRyLCBzaXplb2YodTMy
KSkpCmRpZmYgLS1naXQgYS9hcmNoL3BhcmlzYy9saWIvbWVtY3B5LmMgYi9hcmNoL3BhcmlzYy9s
aWIvbWVtY3B5LmMKaW5kZXggZWE3MGEwZTA4MzIxLi40Njg3MDRjZThhMWMgMTAwNjQ0Ci0tLSBh
L2FyY2gvcGFyaXNjL2xpYi9tZW1jcHkuYworKysgYi9hcmNoL3BhcmlzYy9saWIvbWVtY3B5LmMK
QEAgLTEzLDcgKzEzLDcgQEAKICNpbmNsdWRlIDxsaW51eC9jb21waWxlci5oPgogI2luY2x1ZGUg
PGxpbnV4L3VhY2Nlc3MuaD4KIAotI2RlZmluZSBnZXRfdXNlcl9zcGFjZSgpICh1YWNjZXNzX2tl
cm5lbCgpID8gMCA6IG1mc3AoMykpCisjZGVmaW5lIGdldF91c2VyX3NwYWNlKCkgKG1mc3AoMykp
CiAjZGVmaW5lIGdldF9rZXJuZWxfc3BhY2UoKSAoMCkKIAogLyogUmV0dXJucyAwIGZvciBzdWNj
ZXNzLCBvdGhlcndpc2UsIHJldHVybnMgbnVtYmVyIG9mIGJ5dGVzIG5vdCB0cmFuc2ZlcnJlZC4g
Ki8KZGlmZiAtLWdpdCBhL2RyaXZlcnMvaGlkL3VoaWQuYyBiL2RyaXZlcnMvaGlkL3VoaWQuYwpp
bmRleCA2MTRhZGI1MTBkYmQuLjJhOTE4YWViMGFmMSAxMDA2NDQKLS0tIGEvZHJpdmVycy9oaWQv
dWhpZC5jCisrKyBiL2RyaXZlcnMvaGlkL3VoaWQuYwpAQCAtNzQ3LDcgKzc0Nyw3IEBAIHN0YXRp
YyBzc2l6ZV90IHVoaWRfY2hhcl93cml0ZShzdHJ1Y3QgZmlsZSAqZmlsZSwgY29uc3QgY2hhciBf
X3VzZXIgKmJ1ZmZlciwKIAkJICogY29waWVkIGZyb20sIHNvIGl0J3MgdW5zYWZlIHRvIGFsbG93
IHRoaXMgd2l0aCBlbGV2YXRlZAogCQkgKiBwcml2aWxlZ2VzIChlLmcuIGZyb20gYSBzZXR1aWQg
YmluYXJ5KSBvciB2aWEga2VybmVsX3dyaXRlKCkuCiAJCSAqLwotCQlpZiAoZmlsZS0+Zl9jcmVk
ICE9IGN1cnJlbnRfY3JlZCgpIHx8IHVhY2Nlc3Nfa2VybmVsKCkpIHsKKwkJaWYgKGZpbGUtPmZf
Y3JlZCAhPSBjdXJyZW50X2NyZWQoKSkgewogCQkJcHJfZXJyX29uY2UoIlVISURfQ1JFQVRFIGZy
b20gZGlmZmVyZW50IHNlY3VyaXR5IGNvbnRleHQgYnkgcHJvY2VzcyAlZCAoJXMpLCB0aGlzIGlz
IG5vdCBhbGxvd2VkLlxuIiwKIAkJCQkgICAgdGFza190Z2lkX3ZucihjdXJyZW50KSwgY3VycmVu
dC0+Y29tbSk7CiAJCQlyZXQgPSAtRUFDQ0VTOwpkaWZmIC0tZ2l0IGEvZHJpdmVycy9zY3NpL3Nn
LmMgYi9kcml2ZXJzL3Njc2kvc2cuYwppbmRleCA2YjQzZTk3YmQ0MTcuLmFhYTIzNzZiOWQzNCAx
MDA2NDQKLS0tIGEvZHJpdmVycy9zY3NpL3NnLmMKKysrIGIvZHJpdmVycy9zY3NpL3NnLmMKQEAg
LTIyNCwxMSArMjI0LDYgQEAgc3RhdGljIGludCBzZ19jaGVja19maWxlX2FjY2VzcyhzdHJ1Y3Qg
ZmlsZSAqZmlscCwgY29uc3QgY2hhciAqY2FsbGVyKQogCQkJY2FsbGVyLCB0YXNrX3RnaWRfdm5y
KGN1cnJlbnQpLCBjdXJyZW50LT5jb21tKTsKIAkJcmV0dXJuIC1FUEVSTTsKIAl9Ci0JaWYgKHVh
Y2Nlc3Nfa2VybmVsKCkpIHsKLQkJcHJfZXJyX29uY2UoIiVzOiBwcm9jZXNzICVkICglcykgY2Fs
bGVkIGZyb20ga2VybmVsIGNvbnRleHQsIHRoaXMgaXMgbm90IGFsbG93ZWQuXG4iLAotCQkJY2Fs
bGVyLCB0YXNrX3RnaWRfdm5yKGN1cnJlbnQpLCBjdXJyZW50LT5jb21tKTsKLQkJcmV0dXJuIC1F
QUNDRVM7Ci0JfQogCXJldHVybiAwOwogfQogCmRpZmYgLS1naXQgYS9mcy9leGVjLmMgYi9mcy9l
eGVjLmMKaW5kZXggNzlmMmM5NDgzMzAyLi5iYzY4YTBjMDg5YWMgMTAwNjQ0Ci0tLSBhL2ZzL2V4
ZWMuYworKysgYi9mcy9leGVjLmMKQEAgLTEzMDMsMTIgKzEzMDMsNiBAQCBpbnQgYmVnaW5fbmV3
X2V4ZWMoc3RydWN0IGxpbnV4X2JpbnBybSAqIGJwcm0pCiAJaWYgKHJldHZhbCkKIAkJZ290byBv
dXRfdW5sb2NrOwogCi0JLyoKLQkgKiBFbnN1cmUgdGhhdCB0aGUgdWFjY2VzcyByb3V0aW5lcyBj
YW4gYWN0dWFsbHkgb3BlcmF0ZSBvbiB1c2Vyc3BhY2UKLQkgKiBwb2ludGVyczoKLQkgKi8KLQlm
b3JjZV91YWNjZXNzX2JlZ2luKCk7Ci0KIAlpZiAobWUtPmZsYWdzICYgUEZfS1RIUkVBRCkKIAkJ
ZnJlZV9rdGhyZWFkX3N0cnVjdChtZSk7CiAJbWUtPmZsYWdzICY9IH4oUEZfUkFORE9NSVpFIHwg
UEZfRk9SS05PRVhFQyB8IFBGX0tUSFJFQUQgfApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9hc20tZ2Vu
ZXJpYy9hY2Nlc3Nfb2suaCBiL2luY2x1ZGUvYXNtLWdlbmVyaWMvYWNjZXNzX29rLmgKaW5kZXgg
ODgzYjU3M2FmNWZlLi43MjU2NDdiYThlYTkgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvYXNtLWdlbmVy
aWMvYWNjZXNzX29rLmgKKysrIGIvaW5jbHVkZS9hc20tZ2VuZXJpYy9hY2Nlc3Nfb2suaApAQCAt
MTYsMTYgKzE2LDggQEAKICNkZWZpbmUgVEFTS19TSVpFX01BWAkJCVRBU0tfU0laRQogI2VuZGlm
CiAKLSNpZm5kZWYgdWFjY2Vzc19rZXJuZWwKLSNpZmRlZiBDT05GSUdfU0VUX0ZTCi0jZGVmaW5l
IHVhY2Nlc3Nfa2VybmVsKCkJCShnZXRfZnMoKS5zZWcgPT0gS0VSTkVMX0RTLnNlZykKLSNlbHNl
Ci0jZGVmaW5lIHVhY2Nlc3Nfa2VybmVsKCkJCSgwKQotI2VuZGlmCi0jZW5kaWYKLQogI2lmbmRl
ZiB1c2VyX2FkZHJfbWF4Ci0jZGVmaW5lIHVzZXJfYWRkcl9tYXgoKQkJCSh1YWNjZXNzX2tlcm5l
bCgpID8gfjBVTCA6IFRBU0tfU0laRV9NQVgpCisjZGVmaW5lIHVzZXJfYWRkcl9tYXgoKQkJCVRB
U0tfU0laRV9NQVgKICNlbmRpZgogCiAjaWZuZGVmIF9fYWNjZXNzX29rCmRpZmYgLS1naXQgYS9p
bmNsdWRlL2xpbnV4L3N5c2NhbGxzLmggYi9pbmNsdWRlL2xpbnV4L3N5c2NhbGxzLmgKaW5kZXgg
ODE5YzBjYjAwYjZkLi5hMzRiMGY5YTk5NzIgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvc3lz
Y2FsbHMuaAorKysgYi9pbmNsdWRlL2xpbnV4L3N5c2NhbGxzLmgKQEAgLTI5MCwxMCArMjkwLDYg
QEAgc3RhdGljIGlubGluZSB2b2lkIGFkZHJfbGltaXRfdXNlcl9jaGVjayh2b2lkKQogCQlyZXR1
cm47CiAjZW5kaWYKIAotCWlmIChDSEVDS19EQVRBX0NPUlJVUFRJT04odWFjY2Vzc19rZXJuZWwo
KSwKLQkJCQkgICJJbnZhbGlkIGFkZHJlc3MgbGltaXQgb24gdXNlci1tb2RlIHJldHVybiIpKQot
CQlmb3JjZV9zaWcoU0lHS0lMTCk7Ci0KICNpZmRlZiBUSUZfRlNDSEVDSwogCWNsZWFyX3RocmVh
ZF9mbGFnKFRJRl9GU0NIRUNLKTsKICNlbmRpZgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC91
YWNjZXNzLmggYi9pbmNsdWRlL2xpbnV4L3VhY2Nlc3MuaAppbmRleCAyYzMxNjY3ZTYyZTAuLjI0
MjFhNDFmM2E4ZSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC91YWNjZXNzLmgKKysrIGIvaW5j
bHVkZS9saW51eC91YWNjZXNzLmgKQEAgLTEwLDM5ICsxMCw2IEBACiAKICNpbmNsdWRlIDxhc20v
dWFjY2Vzcy5oPgogCi0jaWZkZWYgQ09ORklHX1NFVF9GUwotLyoKLSAqIEZvcmNlIHRoZSB1YWNj
ZXNzIHJvdXRpbmVzIHRvIGJlIHdpcmVkIHVwIGZvciBhY3R1YWwgdXNlcnNwYWNlIGFjY2VzcywK
LSAqIG92ZXJyaWRpbmcgYW55IHBvc3NpYmxlIHNldF9mcyhLRVJORUxfRFMpIHN0aWxsIGxpbmdl
cmluZyBhcm91bmQuICBVbmRvbmUKLSAqIHVzaW5nIGZvcmNlX3VhY2Nlc3NfZW5kIGJlbG93Lgot
ICovCi1zdGF0aWMgaW5saW5lIG1tX3NlZ21lbnRfdCBmb3JjZV91YWNjZXNzX2JlZ2luKHZvaWQp
Ci17Ci0JbW1fc2VnbWVudF90IGZzID0gZ2V0X2ZzKCk7Ci0KLQlzZXRfZnMoVVNFUl9EUyk7Ci0J
cmV0dXJuIGZzOwotfQotCi1zdGF0aWMgaW5saW5lIHZvaWQgZm9yY2VfdWFjY2Vzc19lbmQobW1f
c2VnbWVudF90IG9sZGZzKQotewotCXNldF9mcyhvbGRmcyk7Ci19Ci0jZWxzZSAvKiBDT05GSUdf
U0VUX0ZTICovCi10eXBlZGVmIHN0cnVjdCB7Ci0JLyogZW1wdHkgZHVtbXkgKi8KLX0gbW1fc2Vn
bWVudF90OwotCi1zdGF0aWMgaW5saW5lIG1tX3NlZ21lbnRfdCBmb3JjZV91YWNjZXNzX2JlZ2lu
KHZvaWQpCi17Ci0JcmV0dXJuIChtbV9zZWdtZW50X3QpIHsgfTsKLX0KLQotc3RhdGljIGlubGlu
ZSB2b2lkIGZvcmNlX3VhY2Nlc3NfZW5kKG1tX3NlZ21lbnRfdCBvbGRmcykKLXsKLX0KLSNlbmRp
ZiAvKiBDT05GSUdfU0VUX0ZTICovCi0KIC8qCiAgKiBBcmNoaXRlY3R1cmVzIHNob3VsZCBwcm92
aWRlIHR3byBwcmltaXRpdmVzIChyYXdfY29weV97dG8sZnJvbX1fdXNlcigpKQogICogYW5kIGdl
dCByaWQgb2YgdGhlaXIgcHJpdmF0ZSBpbnN0YW5jZXMgb2YgY29weV97dG8sZnJvbX1fdXNlcigp
IGFuZApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9yZG1hL2liLmggYi9pbmNsdWRlL3JkbWEvaWIuaApp
bmRleCA4MzEzOWI5Y2U0MDkuLmY3YzE4NWZmN2ExMSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9yZG1h
L2liLmgKKysrIGIvaW5jbHVkZS9yZG1hL2liLmgKQEAgLTc1LDcgKzc1LDcgQEAgc3RydWN0IHNv
Y2thZGRyX2liIHsKICAqLwogc3RhdGljIGlubGluZSBib29sIGliX3NhZmVfZmlsZV9hY2Nlc3Mo
c3RydWN0IGZpbGUgKmZpbHApCiB7Ci0JcmV0dXJuIGZpbHAtPmZfY3JlZCA9PSBjdXJyZW50X2Ny
ZWQoKSAmJiAhdWFjY2Vzc19rZXJuZWwoKTsKKwlyZXR1cm4gZmlscC0+Zl9jcmVkID09IGN1cnJl
bnRfY3JlZCgpOwogfQogCiAjZW5kaWYgLyogX1JETUFfSUJfSCAqLwpkaWZmIC0tZ2l0IGEva2Vy
bmVsL2V2ZW50cy9jYWxsY2hhaW4uYyBiL2tlcm5lbC9ldmVudHMvY2FsbGNoYWluLmMKaW5kZXgg
NThjYmUzNTdmYjJiLi4xMjczYmU4NDM5MmMgMTAwNjQ0Ci0tLSBhL2tlcm5lbC9ldmVudHMvY2Fs
bGNoYWluLmMKKysrIGIva2VybmVsL2V2ZW50cy9jYWxsY2hhaW4uYwpAQCAtMjA5LDE3ICsyMDks
MTMgQEAgZ2V0X3BlcmZfY2FsbGNoYWluKHN0cnVjdCBwdF9yZWdzICpyZWdzLCB1MzIgaW5pdF9u
ciwgYm9vbCBrZXJuZWwsIGJvb2wgdXNlciwKIAkJfQogCiAJCWlmIChyZWdzKSB7Ci0JCQltbV9z
ZWdtZW50X3QgZnM7Ci0KIAkJCWlmIChjcm9zc3Rhc2spCiAJCQkJZ290byBleGl0X3B1dDsKIAog
CQkJaWYgKGFkZF9tYXJrKQogCQkJCXBlcmZfY2FsbGNoYWluX3N0b3JlX2NvbnRleHQoJmN0eCwg
UEVSRl9DT05URVhUX1VTRVIpOwogCi0JCQlmcyA9IGZvcmNlX3VhY2Nlc3NfYmVnaW4oKTsKIAkJ
CXBlcmZfY2FsbGNoYWluX3VzZXIoJmN0eCwgcmVncyk7Ci0JCQlmb3JjZV91YWNjZXNzX2VuZChm
cyk7CiAJCX0KIAl9CiAKZGlmZiAtLWdpdCBhL2tlcm5lbC9ldmVudHMvY29yZS5jIGIva2VybmVs
L2V2ZW50cy9jb3JlLmMKaW5kZXggNTdjNzE5NzgzOGRiLi4xMWNhNzMwM2Q2ZGYgMTAwNjQ0Ci0t
LSBhL2tlcm5lbC9ldmVudHMvY29yZS5jCisrKyBiL2tlcm5lbC9ldmVudHMvY29yZS5jCkBAIC02
NzQ2LDcgKzY3NDYsNiBAQCBwZXJmX291dHB1dF9zYW1wbGVfdXN0YWNrKHN0cnVjdCBwZXJmX291
dHB1dF9oYW5kbGUgKmhhbmRsZSwgdTY0IGR1bXBfc2l6ZSwKIAkJdW5zaWduZWQgbG9uZyBzcDsK
IAkJdW5zaWduZWQgaW50IHJlbTsKIAkJdTY0IGR5bl9zaXplOwotCQltbV9zZWdtZW50X3QgZnM7
CiAKIAkJLyoKIAkJICogV2UgZHVtcDoKQEAgLTY3NjQsOSArNjc2Myw3IEBAIHBlcmZfb3V0cHV0
X3NhbXBsZV91c3RhY2soc3RydWN0IHBlcmZfb3V0cHV0X2hhbmRsZSAqaGFuZGxlLCB1NjQgZHVt
cF9zaXplLAogCiAJCS8qIERhdGEuICovCiAJCXNwID0gcGVyZl91c2VyX3N0YWNrX3BvaW50ZXIo
cmVncyk7Ci0JCWZzID0gZm9yY2VfdWFjY2Vzc19iZWdpbigpOwogCQlyZW0gPSBfX291dHB1dF9j
b3B5X3VzZXIoaGFuZGxlLCAodm9pZCAqKSBzcCwgZHVtcF9zaXplKTsKLQkJZm9yY2VfdWFjY2Vz
c19lbmQoZnMpOwogCQlkeW5fc2l6ZSA9IGR1bXBfc2l6ZSAtIHJlbTsKIAogCQlwZXJmX291dHB1
dF9za2lwKGhhbmRsZSwgcmVtKTsKZGlmZiAtLWdpdCBhL2tlcm5lbC9leGl0LmMgYi9rZXJuZWwv
ZXhpdC5jCmluZGV4IGIwMGEyNWJiNGFiOS4uMDg4NGE3NWJjMmY4IDEwMDY0NAotLS0gYS9rZXJu
ZWwvZXhpdC5jCisrKyBiL2tlcm5lbC9leGl0LmMKQEAgLTczNywyMCArNzM3LDYgQEAgdm9pZCBf
X25vcmV0dXJuIGRvX2V4aXQobG9uZyBjb2RlKQogCiAJV0FSTl9PTihibGtfbmVlZHNfZmx1c2hf
cGx1Zyh0c2spKTsKIAotCS8qCi0JICogSWYgZG9fZGVhZCBpcyBjYWxsZWQgYmVjYXVzZSB0aGlz
IHByb2Nlc3NlcyBvb3BzZWQsIGl0J3MgcG9zc2libGUKLQkgKiB0aGF0IGdldF9mcygpIHdhcyBs
ZWZ0IGFzIEtFUk5FTF9EUywgc28gcmVzZXQgaXQgdG8gVVNFUl9EUyBiZWZvcmUKLQkgKiBjb250
aW51aW5nLiBBbW9uZ3N0IG90aGVyIHBvc3NpYmxlIHJlYXNvbnMsIHRoaXMgaXMgdG8gcHJldmVu
dAotCSAqIG1tX3JlbGVhc2UoKS0+Y2xlYXJfY2hpbGRfdGlkKCkgZnJvbSB3cml0aW5nIHRvIGEg
dXNlci1jb250cm9sbGVkCi0JICoga2VybmVsIGFkZHJlc3MuCi0JICoKLQkgKiBPbiB1cHRvZGF0
ZSBhcmNoaXRlY3R1cmVzIGZvcmNlX3VhY2Nlc3NfYmVnaW4gaXMgYSBub29wLiAgT24KLQkgKiBh
cmNoaXRlY3R1cmVzIHRoYXQgc3RpbGwgaGF2ZSBzZXRfZnMvZ2V0X2ZzIGluIGFkZGl0aW9uIHRv
IGhhbmRsaW5nCi0JICogb29wc2VzIGhhbmRsZXMga2VybmVsIHRocmVhZHMgdGhhdCBydW4gYXMg
c2V0X2ZzKEtFUk5FTF9EUykgYnkKLQkgKiBkZWZhdWx0LgotCSAqLwotCWZvcmNlX3VhY2Nlc3Nf
YmVnaW4oKTsKLQogCWtjb3ZfdGFza19leGl0KHRzayk7CiAKIAljb3JlZHVtcF90YXNrX2V4aXQo
dHNrKTsKZGlmZiAtLWdpdCBhL2tlcm5lbC9rdGhyZWFkLmMgYi9rZXJuZWwva3RocmVhZC5jCmlu
ZGV4IDM4YzZkZDgyMmRhOC4uMTZjMjI3NWQ0YjUwIDEwMDY0NAotLS0gYS9rZXJuZWwva3RocmVh
ZC5jCisrKyBiL2tlcm5lbC9rdGhyZWFkLmMKQEAgLTU1LDcgKzU1LDYgQEAgc3RydWN0IGt0aHJl
YWQgewogCWludCByZXN1bHQ7CiAJaW50ICgqdGhyZWFkZm4pKHZvaWQgKik7CiAJdm9pZCAqZGF0
YTsKLQltbV9zZWdtZW50X3Qgb2xkZnM7CiAJc3RydWN0IGNvbXBsZXRpb24gcGFya2VkOwogCXN0
cnVjdCBjb21wbGV0aW9uIGV4aXRlZDsKICNpZmRlZiBDT05GSUdfQkxLX0NHUk9VUApAQCAtMTQ0
MSw4ICsxNDQwLDYgQEAgdm9pZCBrdGhyZWFkX3VzZV9tbShzdHJ1Y3QgbW1fc3RydWN0ICptbSkK
IAkJbW1kcm9wKGFjdGl2ZV9tbSk7CiAJZWxzZQogCQlzbXBfbWIoKTsKLQotCXRvX2t0aHJlYWQo
dHNrKS0+b2xkZnMgPSBmb3JjZV91YWNjZXNzX2JlZ2luKCk7CiB9CiBFWFBPUlRfU1lNQk9MX0dQ
TChrdGhyZWFkX3VzZV9tbSk7CiAKQEAgLTE0NTcsOCArMTQ1NCw2IEBAIHZvaWQga3RocmVhZF91
bnVzZV9tbShzdHJ1Y3QgbW1fc3RydWN0ICptbSkKIAlXQVJOX09OX09OQ0UoISh0c2stPmZsYWdz
ICYgUEZfS1RIUkVBRCkpOwogCVdBUk5fT05fT05DRSghdHNrLT5tbSk7CiAKLQlmb3JjZV91YWNj
ZXNzX2VuZCh0b19rdGhyZWFkKHRzayktPm9sZGZzKTsKLQogCXRhc2tfbG9jayh0c2spOwogCS8q
CiAJICogV2hlbiBhIGt0aHJlYWQgc3RvcHMgb3BlcmF0aW5nIG9uIGFuIGFkZHJlc3Mgc3BhY2Us
IHRoZSBsb29wCmRpZmYgLS1naXQgYS9rZXJuZWwvc3RhY2t0cmFjZS5jIGIva2VybmVsL3N0YWNr
dHJhY2UuYwppbmRleCA5YzYyNTI1NzAyM2QuLjllZDVjZTk4OTQxNSAxMDA2NDQKLS0tIGEva2Vy
bmVsL3N0YWNrdHJhY2UuYworKysgYi9rZXJuZWwvc3RhY2t0cmFjZS5jCkBAIC0yMjYsMTUgKzIy
NiwxMiBAQCB1bnNpZ25lZCBpbnQgc3RhY2tfdHJhY2Vfc2F2ZV91c2VyKHVuc2lnbmVkIGxvbmcg
KnN0b3JlLCB1bnNpZ25lZCBpbnQgc2l6ZSkKIAkJLnN0b3JlCT0gc3RvcmUsCiAJCS5zaXplCT0g
c2l6ZSwKIAl9OwotCW1tX3NlZ21lbnRfdCBmczsKIAogCS8qIFRyYWNlIHVzZXIgc3RhY2sgaWYg
bm90IGEga2VybmVsIHRocmVhZCAqLwogCWlmIChjdXJyZW50LT5mbGFncyAmIFBGX0tUSFJFQUQp
CiAJCXJldHVybiAwOwogCi0JZnMgPSBmb3JjZV91YWNjZXNzX2JlZ2luKCk7CiAJYXJjaF9zdGFj
a193YWxrX3VzZXIoY29uc3VtZV9lbnRyeSwgJmMsIHRhc2tfcHRfcmVncyhjdXJyZW50KSk7Ci0J
Zm9yY2VfdWFjY2Vzc19lbmQoZnMpOwogCiAJcmV0dXJuIGMubGVuOwogfQpkaWZmIC0tZ2l0IGEv
a2VybmVsL3RyYWNlL2JwZl90cmFjZS5jIGIva2VybmVsL3RyYWNlL2JwZl90cmFjZS5jCmluZGV4
IDIxYWEzMDY0NDIxOS4uODExNWZmZjE3MDE4IDEwMDY0NAotLS0gYS9rZXJuZWwvdHJhY2UvYnBm
X3RyYWNlLmMKKysrIGIva2VybmVsL3RyYWNlL2JwZl90cmFjZS5jCkBAIC0zMzIsOCArMzMyLDYg
QEAgQlBGX0NBTExfMyhicGZfcHJvYmVfd3JpdGVfdXNlciwgdm9pZCBfX3VzZXIgKiwgdW5zYWZl
X3B0ciwgY29uc3Qgdm9pZCAqLCBzcmMsCiAJaWYgKHVubGlrZWx5KGluX2ludGVycnVwdCgpIHx8
CiAJCSAgICAgY3VycmVudC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0VYSVRJTkcpKSkKIAkJ
cmV0dXJuIC1FUEVSTTsKLQlpZiAodW5saWtlbHkodWFjY2Vzc19rZXJuZWwoKSkpCi0JCXJldHVy
biAtRVBFUk07CiAJaWYgKHVubGlrZWx5KCFubWlfdWFjY2Vzc19va2F5KCkpKQogCQlyZXR1cm4g
LUVQRVJNOwogCkBAIC04MzUsOCArODMzLDYgQEAgc3RhdGljIGludCBicGZfc2VuZF9zaWduYWxf
Y29tbW9uKHUzMiBzaWcsIGVudW0gcGlkX3R5cGUgdHlwZSkKIAkgKi8KIAlpZiAodW5saWtlbHko
Y3VycmVudC0+ZmxhZ3MgJiAoUEZfS1RIUkVBRCB8IFBGX0VYSVRJTkcpKSkKIAkJcmV0dXJuIC1F
UEVSTTsKLQlpZiAodW5saWtlbHkodWFjY2Vzc19rZXJuZWwoKSkpCi0JCXJldHVybiAtRVBFUk07
CiAJaWYgKHVubGlrZWx5KCFubWlfdWFjY2Vzc19va2F5KCkpKQogCQlyZXR1cm4gLUVQRVJNOwog
CmRpZmYgLS1naXQgYS9tbS9tYWNjZXNzLmMgYi9tbS9tYWNjZXNzLmMKaW5kZXggY2JkMWIzOTU5
YWYyLi4xMDY4MjBiMzNhMmIgMTAwNjQ0Ci0tLSBhL21tL21hY2Nlc3MuYworKysgYi9tbS9tYWNj
ZXNzLmMKQEAgLTExMywxNCArMTEzLDExIEBAIGxvbmcgc3RybmNweV9mcm9tX2tlcm5lbF9ub2Zh
dWx0KGNoYXIgKmRzdCwgY29uc3Qgdm9pZCAqdW5zYWZlX2FkZHIsIGxvbmcgY291bnQpCiBsb25n
IGNvcHlfZnJvbV91c2VyX25vZmF1bHQodm9pZCAqZHN0LCBjb25zdCB2b2lkIF9fdXNlciAqc3Jj
LCBzaXplX3Qgc2l6ZSkKIHsKIAlsb25nIHJldCA9IC1FRkFVTFQ7Ci0JbW1fc2VnbWVudF90IG9s
ZF9mcyA9IGZvcmNlX3VhY2Nlc3NfYmVnaW4oKTsKLQogCWlmIChhY2Nlc3Nfb2soc3JjLCBzaXpl
KSkgewogCQlwYWdlZmF1bHRfZGlzYWJsZSgpOwogCQlyZXQgPSBfX2NvcHlfZnJvbV91c2VyX2lu
YXRvbWljKGRzdCwgc3JjLCBzaXplKTsKIAkJcGFnZWZhdWx0X2VuYWJsZSgpOwogCX0KLQlmb3Jj
ZV91YWNjZXNzX2VuZChvbGRfZnMpOwogCiAJaWYgKHJldCkKIAkJcmV0dXJuIC1FRkFVTFQ7CkBA
IC0xNDAsMTQgKzEzNywxMiBAQCBFWFBPUlRfU1lNQk9MX0dQTChjb3B5X2Zyb21fdXNlcl9ub2Zh
dWx0KTsKIGxvbmcgY29weV90b191c2VyX25vZmF1bHQodm9pZCBfX3VzZXIgKmRzdCwgY29uc3Qg
dm9pZCAqc3JjLCBzaXplX3Qgc2l6ZSkKIHsKIAlsb25nIHJldCA9IC1FRkFVTFQ7Ci0JbW1fc2Vn
bWVudF90IG9sZF9mcyA9IGZvcmNlX3VhY2Nlc3NfYmVnaW4oKTsKIAogCWlmIChhY2Nlc3Nfb2so
ZHN0LCBzaXplKSkgewogCQlwYWdlZmF1bHRfZGlzYWJsZSgpOwogCQlyZXQgPSBfX2NvcHlfdG9f
dXNlcl9pbmF0b21pYyhkc3QsIHNyYywgc2l6ZSk7CiAJCXBhZ2VmYXVsdF9lbmFibGUoKTsKIAl9
Ci0JZm9yY2VfdWFjY2Vzc19lbmQob2xkX2ZzKTsKIAogCWlmIChyZXQpCiAJCXJldHVybiAtRUZB
VUxUOwpAQCAtMTc2LDE3ICsxNzEsMTQgQEAgRVhQT1JUX1NZTUJPTF9HUEwoY29weV90b191c2Vy
X25vZmF1bHQpOwogbG9uZyBzdHJuY3B5X2Zyb21fdXNlcl9ub2ZhdWx0KGNoYXIgKmRzdCwgY29u
c3Qgdm9pZCBfX3VzZXIgKnVuc2FmZV9hZGRyLAogCQkJICAgICAgbG9uZyBjb3VudCkKIHsKLQlt
bV9zZWdtZW50X3Qgb2xkX2ZzOwogCWxvbmcgcmV0OwogCiAJaWYgKHVubGlrZWx5KGNvdW50IDw9
IDApKQogCQlyZXR1cm4gMDsKIAotCW9sZF9mcyA9IGZvcmNlX3VhY2Nlc3NfYmVnaW4oKTsKIAlw
YWdlZmF1bHRfZGlzYWJsZSgpOwogCXJldCA9IHN0cm5jcHlfZnJvbV91c2VyKGRzdCwgdW5zYWZl
X2FkZHIsIGNvdW50KTsKIAlwYWdlZmF1bHRfZW5hYmxlKCk7Ci0JZm9yY2VfdWFjY2Vzc19lbmQo
b2xkX2ZzKTsKIAogCWlmIChyZXQgPj0gY291bnQpIHsKIAkJcmV0ID0gY291bnQ7CkBAIC0yMTYs
MTQgKzIwOCwxMSBAQCBsb25nIHN0cm5jcHlfZnJvbV91c2VyX25vZmF1bHQoY2hhciAqZHN0LCBj
b25zdCB2b2lkIF9fdXNlciAqdW5zYWZlX2FkZHIsCiAgKi8KIGxvbmcgc3Rybmxlbl91c2VyX25v
ZmF1bHQoY29uc3Qgdm9pZCBfX3VzZXIgKnVuc2FmZV9hZGRyLCBsb25nIGNvdW50KQogewotCW1t
X3NlZ21lbnRfdCBvbGRfZnM7CiAJaW50IHJldDsKIAotCW9sZF9mcyA9IGZvcmNlX3VhY2Nlc3Nf
YmVnaW4oKTsKIAlwYWdlZmF1bHRfZGlzYWJsZSgpOwogCXJldCA9IHN0cm5sZW5fdXNlcih1bnNh
ZmVfYWRkciwgY291bnQpOwogCXBhZ2VmYXVsdF9lbmFibGUoKTsKLQlmb3JjZV91YWNjZXNzX2Vu
ZChvbGRfZnMpOwogCiAJcmV0dXJuIHJldDsKIH0KZGlmZiAtLWdpdCBhL21tL21lbW9yeS5jIGIv
bW0vbWVtb3J5LmMKaW5kZXggYzEyNWM0OTY5OTEzLi45YTZlYmY2OGE4NDYgMTAwNjQ0Ci0tLSBh
L21tL21lbW9yeS5jCisrKyBiL21tL21lbW9yeS5jCkBAIC01MjU2LDE0ICs1MjU2LDYgQEAgdm9p
ZCBwcmludF92bWFfYWRkcihjaGFyICpwcmVmaXgsIHVuc2lnbmVkIGxvbmcgaXApCiAjaWYgZGVm
aW5lZChDT05GSUdfUFJPVkVfTE9DS0lORykgfHwgZGVmaW5lZChDT05GSUdfREVCVUdfQVRPTUlD
X1NMRUVQKQogdm9pZCBfX21pZ2h0X2ZhdWx0KGNvbnN0IGNoYXIgKmZpbGUsIGludCBsaW5lKQog
ewotCS8qCi0JICogU29tZSBjb2RlIChuZnMvc3VucnBjKSB1c2VzIHNvY2tldCBvcHMgb24ga2Vy
bmVsIG1lbW9yeSB3aGlsZQotCSAqIGhvbGRpbmcgdGhlIG1tYXBfbG9jaywgdGhpcyBpcyBzYWZl
IGJlY2F1c2Uga2VybmVsIG1lbW9yeSBkb2Vzbid0Ci0JICogZ2V0IHBhZ2VkIG91dCwgdGhlcmVm
b3JlIHdlJ2xsIG5ldmVyIGFjdHVhbGx5IGZhdWx0LCBhbmQgdGhlCi0JICogYmVsb3cgYW5ub3Rh
dGlvbnMgd2lsbCBnZW5lcmF0ZSBmYWxzZSBwb3NpdGl2ZXMuCi0JICovCi0JaWYgKHVhY2Nlc3Nf
a2VybmVsKCkpCi0JCXJldHVybjsKIAlpZiAocGFnZWZhdWx0X2Rpc2FibGVkKCkpCiAJCXJldHVy
bjsKIAlfX21pZ2h0X3NsZWVwKGZpbGUsIGxpbmUpOwpkaWZmIC0tZ2l0IGEvbmV0L2JwZmlsdGVy
L2JwZmlsdGVyX2tlcm4uYyBiL25ldC9icGZpbHRlci9icGZpbHRlcl9rZXJuLmMKaW5kZXggNTFh
OTQxYjU2ZWMzLi40MjJlYzZlN2NjZmYgMTAwNjQ0Ci0tLSBhL25ldC9icGZpbHRlci9icGZpbHRl
cl9rZXJuLmMKKysrIGIvbmV0L2JwZmlsdGVyL2JwZmlsdGVyX2tlcm4uYwpAQCAtNzAsNyArNzAs
NyBAQCBzdGF0aWMgaW50IGJwZmlsdGVyX3Byb2Nlc3Nfc29ja29wdChzdHJ1Y3Qgc29jayAqc2ss
IGludCBvcHRuYW1lLAogCQkuYWRkcgkJPSAodWludHB0cl90KW9wdHZhbC51c2VyLAogCQkubGVu
CQk9IG9wdGxlbiwKIAl9OwotCWlmICh1YWNjZXNzX2tlcm5lbCgpIHx8IHNvY2twdHJfaXNfa2Vy
bmVsKG9wdHZhbCkpIHsKKwlpZiAoc29ja3B0cl9pc19rZXJuZWwob3B0dmFsKSkgewogCQlwcl9l
cnIoImtlcm5lbCBhY2Nlc3Mgbm90IHN1cHBvcnRlZFxuIik7CiAJCXJldHVybiAtRUZBVUxUOwog
CX0KLS0gCjIuMjkuMgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX18KT3BlblJJU0MgbWFpbGluZyBsaXN0Ck9wZW5SSVNDQGxpc3RzLmxpYnJlY29yZXMub3Jn
Cmh0dHBzOi8vbGlzdHMubGlicmVjb3Jlcy5vcmcvbGlzdGluZm8vb3BlbnJpc2MK
